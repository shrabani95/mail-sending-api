[{"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\index.js":"1","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\swDev.js":"2","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\reportWebVitals.js":"3","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\App.js":"4","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\profile\\Sudipta.js":"5","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\profile\\facebook.js":"6","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\Explore.js":"7","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\MyStatus.js":"8","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\DragableList.js":"9","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\HomePage.js":"10","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\AboutUs.js":"11","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\FAQs.js":"12","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\TermsAndCondition.js":"13","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\DragDropMulti.js":"14","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\Cards.js":"15","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\Settings.js":"16","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\HowItWork.js":"17","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\Contest_All.js":"18","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\NotificationRequest.js":"19","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\PrivacyPolicy.js":"20","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\PremiumFeature.js":"21","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\NotificationView.js":"22","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\ImageCarousel.js":"23","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\Payout.js":"24","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\NewsLetter.js":"25","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\MyAppearance.js":"26","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\EditImageCarousel.js":"27","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\CropImage.js":"28","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\SignInPage.js":"29","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\StackedLink.js":"30","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\JoinPage.js":"31","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\EditLiveVideoSessionPage.js":"32","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\MyProfile2_copy.js":"33","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\profile\\Me.js":"34","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\BrowsePage.js":"35","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\MyProfile2.js":"36","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\Gifts.js":"37","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\RND\\Eventcalender.js":"38","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\LiveVideoSessionPage.js":"39","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\ProfileNav.js":"40","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\Loader.js":"41","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\Graph.js":"42","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\SearchItemNextPrev.js":"43","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\SignInModal.js":"44","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\Items.js":"45","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\EditContestGiveAway.js":"46","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\LineChart.js":"47","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\EditLiveVideoSession.js":"48","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\JoinModal.js":"49","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\EditDigitalEcommerce.js":"50","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\ContestReport.js":"51","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\EmbedContent2.js":"52","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\EditEmbedContent2.js":"53","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\EditPopGift2.js":"54","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\EditUnlockContent2.js":"55","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\EditStackedLink2.js":"56","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\LivePreview2.js":"57","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\EditPremiumFeature2.js":"58","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\SocialWidget2.js":"59","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\SupportMe.js":"60","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\AddNewLink2.js":"61","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\EditSupportMe2.js":"62","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\EditSocialWidget2.js":"63","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\StackedLink2.js":"64","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\services\\API.js":"65","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\header_footer\\ProfileHeader.js":"66","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\header_footer\\MainHeader.js":"67","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\header_footer\\FooterClass.js":"68","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\header_footer\\HeaderClass.js":"69","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\LiveVideoSessionLatest.js":"70","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\DigitalEcommerce.js":"71","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\LiveVideoSession.js":"72","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\header_footer\\Header_Updation.js":"73","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\ContactUs.js":"74","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\Browse.js":"75","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\ToastAlert.js":"76","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\LoaderMobile.js":"77","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\DonationAndGift.js":"78","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\UnlockContent.js":"79","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\EditLinks2.js":"80","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\VideoAudioMessage.js":"81","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\EditPopGift.js":"82","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\PopGift.js":"83","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\EditUnlockContent.js":"84","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\EditEmbedContent.js":"85","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\EmbedContent.js":"86","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\EditPremiumFeature.js":"87","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\EditStackedLink.js":"88","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\LivePreview.js":"89","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\SocialWidget.js":"90","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\EditSocialWidget.js":"91","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\EditLinks.js":"92","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\DirectAccess.js":"93","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\AddNewLink.js":"94","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\profile\\FourZeroFour.js":"95","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\Tipping.js":"96","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\profile\\Profile_Gift.js":"97","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\BuyContestGiveAways.js":"98","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\Buy.js":"99","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\ReferalRequest.js":"100","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\ProfilePage.js":"101","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\AccessPopup.js":"102","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\Preview.js":"103","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\ContestGiveAway.js":"104","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\Checkout_videoSession.js":"105","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\Checkout.js":"106","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\config.js":"107","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\SendSupport.js":"108","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\SendGift.js":"109","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\HomeExplore.js":"110","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\GraphMonthly.js":"111","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\RND\\pexel.js":"112","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\index.js":"113","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\reportWebVitals.js":"114","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\App.js":"115","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\swDev.js":"116","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\HomePage.js":"117","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\SignInPage.js":"118","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\DragDropMulti.js":"119","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\Explore.js":"120","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\Settings.js":"121","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\JoinPage.js":"122","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\StackedLink.js":"123","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\MyStatus.js":"124","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\FAQs.js":"125","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\Cards.js":"126","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\MyAppearance.js":"127","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\HowItWork.js":"128","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\TermsAndCondition.js":"129","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\PremiumFeature.js":"130","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\NotificationView.js":"131","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\BrowsePage.js":"132","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\AboutUs.js":"133","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\ImageCarousel.js":"134","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\DragableList.js":"135","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\EditImageCarousel.js":"136","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\profile\\facebook.js":"137","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\NotificationRequest.js":"138","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\CropImage.js":"139","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\NewsLetter.js":"140","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\profile\\Me.js":"141","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\Contest_All.js":"142","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\MyProfile2.js":"143","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\RND\\Eventcalender.js":"144","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\MyProfile2_copy.js":"145","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\PrivacyPolicy.js":"146","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\profile\\Sudipta.js":"147","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\Payout.js":"148","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\LiveVideoSessionPage.js":"149","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\Gifts.js":"150","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\EditLiveVideoSessionPage.js":"151","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\RND\\pexel.js":"152","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\Loader.js":"153","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\ProfileNav.js":"154","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\HomeExplore.js":"155","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\ContactUs.js":"156","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\SearchItemNextPrev.js":"157","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\Items.js":"158","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\SignInModal.js":"159","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\JoinModal.js":"160","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\SupportMe.js":"161","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\EditPopGift2.js":"162","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\ToastAlert.js":"163","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\EditUnlockContent2.js":"164","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\PopGift.js":"165","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\header_footer\\ProfileHeader.js":"166","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\header_footer\\FooterClass.js":"167","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\header_footer\\MainHeader.js":"168","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\services\\API.js":"169","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\EditPremiumFeature2.js":"170","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\EditEmbedContent2.js":"171","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\EmbedContent2.js":"172","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\EditStackedLink2.js":"173","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\SocialWidget2.js":"174","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\StackedLink2.js":"175","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\AddNewLink2.js":"176","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\EditSocialWidget2.js":"177","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\LivePreview2.js":"178","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\EditLinks2.js":"179","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\header_footer\\Header_Updation.js":"180","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\LoaderMobile.js":"181","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\EditPopGift.js":"182","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\EditUnlockContent.js":"183","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\EditEmbedContent.js":"184","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\EditStackedLink.js":"185","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\EmbedContent.js":"186","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\EditPremiumFeature.js":"187","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\LivePreview.js":"188","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\EditSocialWidget.js":"189","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\SocialWidget.js":"190","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\DirectAccess.js":"191","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\AddNewLink.js":"192","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\EditLinks.js":"193","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\ContestReport.js":"194","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\EditContestGiveAway.js":"195","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\EditDigitalEcommerce.js":"196","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\EditSupportMe2.js":"197","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\profile\\FourZeroFour.js":"198","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\Tipping.js":"199","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\Buy.js":"200","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\BuyContestGiveAways.js":"201","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\profile\\Profile_Gift.js":"202","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\ContestGiveAway.js":"203","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\DigitalEcommerce.js":"204","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\AccessPopup.js":"205","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\DonationAndGift.js":"206","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\UnlockContent.js":"207","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\GraphMonthly.js":"208","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\LineChart.js":"209","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\VideoAudioMessage.js":"210","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\Checkout_videoSession.js":"211","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\Checkout.js":"212","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\SendGift.js":"213","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\SendSupport.js":"214","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\config.js":"215","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\header_footer\\FooterClass_Home.js":"216","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\RND\\Pagination.js":"217","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\CreatorCommunity.js":"218","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\testCommunity.js":"219","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\TestCommunity.js":"220","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\header_footer\\ProfileHeader_MS2_B1.js":"221"},{"size":806,"mtime":1631689193893,"results":"222","hashOfConfig":"223"},{"size":325,"mtime":1627471696103,"results":"224","hashOfConfig":"223"},{"size":362,"mtime":499162500000,"results":"225","hashOfConfig":"223"},{"size":6995,"mtime":1633424529483,"results":"226","hashOfConfig":"223"},{"size":4520,"mtime":1611312357108,"results":"227","hashOfConfig":"223"},{"size":455,"mtime":1621158901109,"results":"228","hashOfConfig":"223"},{"size":7276,"mtime":1633525163561,"results":"229","hashOfConfig":"223"},{"size":35679,"mtime":1633526047612,"results":"230","hashOfConfig":"223"},{"size":3447,"mtime":1633523157975,"results":"231","hashOfConfig":"223"},{"size":6102,"mtime":1633525264169,"results":"232","hashOfConfig":"223"},{"size":3622,"mtime":1617254887930,"results":"233","hashOfConfig":"223"},{"size":7260,"mtime":1633525188040,"results":"234","hashOfConfig":"223"},{"size":27704,"mtime":1633526563301,"results":"235","hashOfConfig":"223"},{"size":6439,"mtime":1633523162946,"results":"236","hashOfConfig":"223"},{"size":2469,"mtime":1617455080455,"results":"237","hashOfConfig":"223"},{"size":48678,"mtime":1633526378978,"results":"238","hashOfConfig":"223"},{"size":9005,"mtime":1633525283468,"results":"239","hashOfConfig":"223"},{"size":4618,"mtime":1633523128314,"results":"240","hashOfConfig":"223"},{"size":69415,"mtime":1633526092642,"results":"241","hashOfConfig":"223"},{"size":16057,"mtime":1633526264709,"results":"242","hashOfConfig":"223"},{"size":5155,"mtime":1633526226338,"results":"243","hashOfConfig":"223"},{"size":12438,"mtime":1633526196733,"results":"244","hashOfConfig":"223"},{"size":31484,"mtime":1633525354869,"results":"245","hashOfConfig":"223"},{"size":12893,"mtime":1633527160089,"results":"246","hashOfConfig":"223"},{"size":10242,"mtime":1633526055061,"results":"247","hashOfConfig":"223"},{"size":102116,"mtime":1633525647962,"results":"248","hashOfConfig":"223"},{"size":31942,"mtime":1633523207432,"results":"249","hashOfConfig":"223"},{"size":3639,"mtime":1633523130696,"results":"250","hashOfConfig":"223"},{"size":24937,"mtime":1633519941481,"results":"251","hashOfConfig":"223"},{"size":15167,"mtime":1633526534392,"results":"252","hashOfConfig":"223"},{"size":49846,"mtime":1633522756468,"results":"253","hashOfConfig":"223"},{"size":88225,"mtime":1633346530627,"results":"254","hashOfConfig":"223"},{"size":117033,"mtime":1625820609973,"results":"255","hashOfConfig":"223"},{"size":68149,"mtime":1633591605255,"results":"256","hashOfConfig":"223"},{"size":6851,"mtime":1633523101196,"results":"257","hashOfConfig":"223"},{"size":169863,"mtime":1633525980211,"results":"258","hashOfConfig":"223"},{"size":8227,"mtime":1633527015805,"results":"259","hashOfConfig":"223"},{"size":26092,"mtime":1632214872578,"results":"260","hashOfConfig":"223"},{"size":86485,"mtime":1633527139147,"results":"261","hashOfConfig":"223"},{"size":3106,"mtime":1633526286051,"results":"262","hashOfConfig":"223"},{"size":513,"mtime":1621158655867,"results":"263","hashOfConfig":"223"},{"size":1268,"mtime":1633525204466,"results":"264","hashOfConfig":"265"},{"size":8295,"mtime":1633526306964,"results":"266","hashOfConfig":"223"},{"size":3718,"mtime":1610517386000,"results":"267","hashOfConfig":"223"},{"size":3801,"mtime":1633525362594,"results":"268","hashOfConfig":"223"},{"size":44130,"mtime":1633348569987,"results":"269","hashOfConfig":"223"},{"size":5441,"mtime":1632214107999,"results":"270","hashOfConfig":"223"},{"size":26675,"mtime":1633526852420,"results":"271","hashOfConfig":"265"},{"size":4853,"mtime":1610517304000,"results":"272","hashOfConfig":"223"},{"size":50999,"mtime":1633526843785,"results":"273","hashOfConfig":"223"},{"size":15799,"mtime":1633526669215,"results":"274","hashOfConfig":"223"},{"size":10242,"mtime":1633525139745,"results":"275","hashOfConfig":"223"},{"size":10815,"mtime":1633523198359,"results":"276","hashOfConfig":"223"},{"size":14268,"mtime":1633526887270,"results":"277","hashOfConfig":"223"},{"size":46947,"mtime":1633526986718,"results":"278","hashOfConfig":"223"},{"size":20724,"mtime":1633525045796,"results":"279","hashOfConfig":"223"},{"size":67737,"mtime":1633525528913,"results":"280","hashOfConfig":"223"},{"size":33165,"mtime":1633524430224,"results":"281","hashOfConfig":"223"},{"size":12433,"mtime":1633526519431,"results":"282","hashOfConfig":"223"},{"size":10297,"mtime":1633527254310,"results":"283","hashOfConfig":"223"},{"size":18587,"mtime":1633523067803,"results":"284","hashOfConfig":"223"},{"size":11403,"mtime":1633526941498,"results":"285","hashOfConfig":"223"},{"size":12067,"mtime":1633525006440,"results":"286","hashOfConfig":"223"},{"size":20085,"mtime":1633526549788,"results":"287","hashOfConfig":"223"},{"size":34803,"mtime":1633959258768,"results":"288","hashOfConfig":"223"},{"size":20171,"mtime":1633345571955,"results":"289","hashOfConfig":"223"},{"size":4011,"mtime":1633951507094,"results":"290","hashOfConfig":"223"},{"size":5045,"mtime":1633522712443,"results":"291","hashOfConfig":"223"},{"size":1334,"mtime":1633522793264,"results":"292","hashOfConfig":"265"},{"size":7007,"mtime":1633527080155,"results":"293","hashOfConfig":"265"},{"size":40611,"mtime":1633526719572,"results":"294","hashOfConfig":"223"},{"size":28458,"mtime":1633527042007,"results":"295","hashOfConfig":"265"},{"size":943,"mtime":1630665590913,"results":"296","hashOfConfig":"223"},{"size":4405,"mtime":1633523116667,"results":"297","hashOfConfig":"223"},{"size":6238,"mtime":1612946951833,"results":"298","hashOfConfig":"265"},{"size":1184,"mtime":1633526577021,"results":"299","hashOfConfig":"223"},{"size":536,"mtime":1633525542370,"results":"300","hashOfConfig":"223"},{"size":1656,"mtime":1633526822220,"results":"301","hashOfConfig":"223"},{"size":40998,"mtime":1633527296274,"results":"302","hashOfConfig":"223"},{"size":21223,"mtime":1633523332030,"results":"303","hashOfConfig":"223"},{"size":35999,"mtime":1633527346439,"results":"304","hashOfConfig":"223"},{"size":8720,"mtime":1633526872867,"results":"305","hashOfConfig":"223"},{"size":12582,"mtime":1633527187721,"results":"306","hashOfConfig":"223"},{"size":41669,"mtime":1633526968136,"results":"307","hashOfConfig":"223"},{"size":8101,"mtime":1633523179811,"results":"308","hashOfConfig":"223"},{"size":6783,"mtime":1633525076521,"results":"309","hashOfConfig":"223"},{"size":26750,"mtime":1633524400952,"results":"310","hashOfConfig":"223"},{"size":16012,"mtime":1633525023642,"results":"311","hashOfConfig":"223"},{"size":25961,"mtime":1633525473494,"results":"312","hashOfConfig":"223"},{"size":8997,"mtime":1633526462659,"results":"313","hashOfConfig":"223"},{"size":12064,"mtime":1633524459544,"results":"314","hashOfConfig":"223"},{"size":13535,"mtime":1633523263442,"results":"315","hashOfConfig":"223"},{"size":2308,"mtime":1633523152383,"results":"316","hashOfConfig":"223"},{"size":13258,"mtime":1633522991441,"results":"317","hashOfConfig":"223"},{"size":561,"mtime":1628345971449,"results":"318","hashOfConfig":"223"},{"size":14783,"mtime":1633959465529,"results":"319","hashOfConfig":"223"},{"size":18086,"mtime":1632925795829,"results":"320","hashOfConfig":"223"},{"size":76035,"mtime":1633520175790,"results":"321","hashOfConfig":"223"},{"size":68735,"mtime":1633520053272,"results":"322","hashOfConfig":"223"},{"size":4349,"mtime":1621829011638,"results":"323","hashOfConfig":"265"},{"size":195,"mtime":1610542581745,"results":"324","hashOfConfig":"265"},{"size":19136,"mtime":1633522946332,"results":"325","hashOfConfig":"223"},{"size":5785,"mtime":1633526250024,"results":"326","hashOfConfig":"265"},{"size":40465,"mtime":1633526662725,"results":"327","hashOfConfig":"223"},{"size":16749,"mtime":1633526611390,"results":"328","hashOfConfig":"223"},{"size":27939,"mtime":1633959452514,"results":"329","hashOfConfig":"223"},{"size":748,"mtime":1620306293755,"results":"330","hashOfConfig":"223"},{"size":13536,"mtime":1633527225760,"results":"331","hashOfConfig":"223"},{"size":24411,"mtime":1633527201829,"results":"332","hashOfConfig":"223"},{"size":7600,"mtime":1633525234775,"results":"333","hashOfConfig":"223"},{"size":4227,"mtime":1633525215984,"results":"334","hashOfConfig":"223"},{"size":421,"mtime":1633424568096,"results":"335","hashOfConfig":"223"},{"size":806,"mtime":1631689193893,"results":"336","hashOfConfig":"337"},{"size":362,"mtime":499162500000,"results":"338","hashOfConfig":"337"},{"size":7381,"mtime":1635295938963,"results":"339","hashOfConfig":"337"},{"size":325,"mtime":1627471696103,"results":"340","hashOfConfig":"337"},{"size":8047,"mtime":1635297041581,"results":"341","hashOfConfig":"337"},{"size":25890,"mtime":1634989738618,"results":"342","hashOfConfig":"337"},{"size":6439,"mtime":1633523162946,"results":"343","hashOfConfig":"337"},{"size":7276,"mtime":1633525163561,"results":"344","hashOfConfig":"337"},{"size":57791,"mtime":1634916816487,"results":"345","hashOfConfig":"337"},{"size":51556,"mtime":1634989668419,"results":"346","hashOfConfig":"337"},{"size":15167,"mtime":1633526534392,"results":"347","hashOfConfig":"337"},{"size":35679,"mtime":1633526047612,"results":"348","hashOfConfig":"337"},{"size":7652,"mtime":1634969917016,"results":"349","hashOfConfig":"337"},{"size":2469,"mtime":1617455080455,"results":"350","hashOfConfig":"337"},{"size":102149,"mtime":1634800479980,"results":"351","hashOfConfig":"337"},{"size":9409,"mtime":1634878410090,"results":"352","hashOfConfig":"337"},{"size":27704,"mtime":1633526563301,"results":"353","hashOfConfig":"337"},{"size":5155,"mtime":1633526226338,"results":"354","hashOfConfig":"337"},{"size":12689,"mtime":1635741634070,"results":"355","hashOfConfig":"337"},{"size":6851,"mtime":1633523101196,"results":"356","hashOfConfig":"337"},{"size":3536,"mtime":1634793576154,"results":"357","hashOfConfig":"337"},{"size":31484,"mtime":1633525354869,"results":"358","hashOfConfig":"337"},{"size":3447,"mtime":1633523157975,"results":"359","hashOfConfig":"337"},{"size":31942,"mtime":1633523207432,"results":"360","hashOfConfig":"337"},{"size":461,"mtime":1634445787715,"results":"361","hashOfConfig":"337"},{"size":51695,"mtime":1636113381694,"results":"362","hashOfConfig":"337"},{"size":3639,"mtime":1633523130696,"results":"363","hashOfConfig":"337"},{"size":10242,"mtime":1633526055061,"results":"364","hashOfConfig":"337"},{"size":68149,"mtime":1633591605255,"results":"365","hashOfConfig":"337"},{"size":4618,"mtime":1633523128314,"results":"366","hashOfConfig":"337"},{"size":169875,"mtime":1634800175081,"results":"367","hashOfConfig":"337"},{"size":26092,"mtime":1632214872578,"results":"368","hashOfConfig":"337"},{"size":117033,"mtime":1625820609973,"results":"369","hashOfConfig":"337"},{"size":16264,"mtime":1635490432040,"results":"370","hashOfConfig":"337"},{"size":4520,"mtime":1611312357108,"results":"371","hashOfConfig":"337"},{"size":12893,"mtime":1633527160089,"results":"372","hashOfConfig":"337"},{"size":87078,"mtime":1635143488334,"results":"373","hashOfConfig":"337"},{"size":8227,"mtime":1633527015805,"results":"374","hashOfConfig":"337"},{"size":88767,"mtime":1635143501289,"results":"375","hashOfConfig":"337"},{"size":421,"mtime":1633424568096,"results":"376","hashOfConfig":"337"},{"size":513,"mtime":1621158655867,"results":"377","hashOfConfig":"337"},{"size":3106,"mtime":1633526286051,"results":"378","hashOfConfig":"337"},{"size":9323,"mtime":1635249444441,"results":"379","hashOfConfig":"337"},{"size":4405,"mtime":1633523116667,"results":"380","hashOfConfig":"337"},{"size":8295,"mtime":1633526306964,"results":"381","hashOfConfig":"337"},{"size":3801,"mtime":1633525362594,"results":"382","hashOfConfig":"337"},{"size":3718,"mtime":1610517386000,"results":"383","hashOfConfig":"337"},{"size":4853,"mtime":1610517304000,"results":"384","hashOfConfig":"337"},{"size":10297,"mtime":1633527254310,"results":"385","hashOfConfig":"337"},{"size":14268,"mtime":1633526887270,"results":"386","hashOfConfig":"337"},{"size":1184,"mtime":1633526577021,"results":"387","hashOfConfig":"337"},{"size":46947,"mtime":1633526986718,"results":"388","hashOfConfig":"337"},{"size":12582,"mtime":1633527187721,"results":"389","hashOfConfig":"337"},{"size":20815,"mtime":1635741588048,"results":"390","hashOfConfig":"337"},{"size":5377,"mtime":1635222151096,"results":"391","hashOfConfig":"337"},{"size":4001,"mtime":1634990411806,"results":"392","hashOfConfig":"337"},{"size":35450,"mtime":1635591546277,"results":"393","hashOfConfig":"337"},{"size":33165,"mtime":1633524430224,"results":"394","hashOfConfig":"337"},{"size":10815,"mtime":1633523198359,"results":"395","hashOfConfig":"337"},{"size":10242,"mtime":1633525139745,"results":"396","hashOfConfig":"337"},{"size":20724,"mtime":1633525045796,"results":"397","hashOfConfig":"337"},{"size":12433,"mtime":1633526519431,"results":"398","hashOfConfig":"337"},{"size":20085,"mtime":1633526549788,"results":"399","hashOfConfig":"337"},{"size":18587,"mtime":1633523067803,"results":"400","hashOfConfig":"337"},{"size":12067,"mtime":1633525006440,"results":"401","hashOfConfig":"337"},{"size":61487,"mtime":1635744262852,"results":"402","hashOfConfig":"337"},{"size":21223,"mtime":1633523332030,"results":"403","hashOfConfig":"337"},{"size":943,"mtime":1630665590913,"results":"404","hashOfConfig":"337"},{"size":536,"mtime":1633525542370,"results":"405","hashOfConfig":"337"},{"size":8720,"mtime":1633526872867,"results":"406","hashOfConfig":"337"},{"size":41669,"mtime":1633526968136,"results":"407","hashOfConfig":"337"},{"size":8101,"mtime":1633523179811,"results":"408","hashOfConfig":"337"},{"size":16012,"mtime":1633525023642,"results":"409","hashOfConfig":"337"},{"size":6783,"mtime":1633525076521,"results":"410","hashOfConfig":"337"},{"size":26750,"mtime":1633524400952,"results":"411","hashOfConfig":"337"},{"size":25961,"mtime":1633525473494,"results":"412","hashOfConfig":"337"},{"size":12064,"mtime":1633524459544,"results":"413","hashOfConfig":"337"},{"size":8997,"mtime":1633526462659,"results":"414","hashOfConfig":"337"},{"size":2308,"mtime":1633523152383,"results":"415","hashOfConfig":"337"},{"size":13258,"mtime":1633522991441,"results":"416","hashOfConfig":"337"},{"size":13535,"mtime":1633523263442,"results":"417","hashOfConfig":"337"},{"size":15813,"mtime":1635234516910,"results":"418","hashOfConfig":"337"},{"size":44130,"mtime":1633348569987,"results":"419","hashOfConfig":"337"},{"size":50999,"mtime":1633526843785,"results":"420","hashOfConfig":"337"},{"size":11403,"mtime":1633526941498,"results":"421","hashOfConfig":"337"},{"size":561,"mtime":1628345971449,"results":"422","hashOfConfig":"337"},{"size":14783,"mtime":1633959465529,"results":"423","hashOfConfig":"337"},{"size":68735,"mtime":1633520053272,"results":"424","hashOfConfig":"337"},{"size":76035,"mtime":1633520175790,"results":"425","hashOfConfig":"337"},{"size":18086,"mtime":1632925795829,"results":"426","hashOfConfig":"337"},{"size":40465,"mtime":1633526662725,"results":"427","hashOfConfig":"337"},{"size":40611,"mtime":1633526719572,"results":"428","hashOfConfig":"337"},{"size":19136,"mtime":1633522946332,"results":"429","hashOfConfig":"337"},{"size":1656,"mtime":1633526822220,"results":"430","hashOfConfig":"337"},{"size":40998,"mtime":1633527296274,"results":"431","hashOfConfig":"337"},{"size":4227,"mtime":1633525215984,"results":"432","hashOfConfig":"337"},{"size":5441,"mtime":1632214107999,"results":"433","hashOfConfig":"337"},{"size":35999,"mtime":1633527346439,"results":"434","hashOfConfig":"337"},{"size":16749,"mtime":1633526611390,"results":"435","hashOfConfig":"337"},{"size":27939,"mtime":1634453252814,"results":"436","hashOfConfig":"337"},{"size":24411,"mtime":1633527201829,"results":"437","hashOfConfig":"337"},{"size":13536,"mtime":1633527225760,"results":"438","hashOfConfig":"337"},{"size":748,"mtime":1620306293755,"results":"439","hashOfConfig":"337"},{"size":5395,"mtime":1635222171275,"results":"440","hashOfConfig":"337"},{"size":1363,"mtime":1634880743758,"results":"441","hashOfConfig":"337"},{"size":9542,"mtime":1635297296425,"results":"442","hashOfConfig":"337"},{"size":10303,"mtime":1635162779852,"results":"443","hashOfConfig":"337"},{"size":10281,"mtime":1635296650801,"results":"444","hashOfConfig":"337"},{"size":20536,"mtime":1635577454823,"results":"445","hashOfConfig":"337"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"9d8q6j",{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"452","messages":"453","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"454","messages":"455","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"456","messages":"457","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"458","messages":"459","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"460","messages":"461","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"464","messages":"465","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"466","messages":"467","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"474","messages":"475","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"476","messages":"477","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"478","messages":"479","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"482","messages":"483","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"488","messages":"489","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"490","messages":"491","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"492","messages":"493","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"496","messages":"497","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"498","messages":"499","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"502","messages":"503","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"504","messages":"505","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"506","messages":"507","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"510","messages":"511","errorCount":0,"warningCount":133,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"512","messages":"513","errorCount":0,"warningCount":47,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"514","messages":"515","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"516","messages":"517","errorCount":0,"warningCount":51,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"518","messages":"519","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"520","messages":"521","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"522","messages":"523","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"524","messages":"525","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zfjr38",{"filePath":"530","messages":"531","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":6,"source":null},{"filePath":"532","messages":"533","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"534","messages":"535","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"538","messages":"539","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"542"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"545","messages":"546","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"547","messages":"548","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"549","messages":"550","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"551","messages":"552","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"553","messages":"554","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"555","messages":"556","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"557","messages":"558","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"559","messages":"560","errorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"561","messages":"562","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"563","messages":"564","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"565","messages":"566","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"567","messages":"568","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"569","messages":"570","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"571","messages":"572","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"573","messages":"574","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"575","messages":"576","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"579","messages":"580","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"542"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"587","messages":"588","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"589","messages":"590","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"591","messages":"592","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"593","messages":"594","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"595","messages":"596","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"599","messages":"600","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"603","messages":"604","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"605","messages":"606","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"607","messages":"608","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"609","messages":"610","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"611","messages":"612","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"613","messages":"614","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"615","messages":"616","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"617","messages":"618","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"619","messages":"620","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"621","messages":"622","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"623","messages":"624","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"625","messages":"626","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"627","messages":"628","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"629","messages":"630","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"633","messages":"634","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"637","messages":"638","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"639","messages":"640","errorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"641","messages":"642","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"643","messages":"644","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"645","messages":"646","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"647","messages":"648","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"649","messages":"650","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"651","messages":"652","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"653","usedDeprecatedRules":"542"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"656","messages":"657","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"658","messages":"659","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"662","messages":"663","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"664","messages":"665","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"666","messages":"667","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"668","messages":"669","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"670","messages":"671","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"672","messages":"673","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"674","usedDeprecatedRules":"675"},"1sirvk",{"filePath":"676","messages":"677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"675"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"680","usedDeprecatedRules":"675"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"675"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"675"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"687","usedDeprecatedRules":"675"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"675"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"692","usedDeprecatedRules":"675"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"695","usedDeprecatedRules":"675"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"698","usedDeprecatedRules":"675"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"701","usedDeprecatedRules":"675"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"704","usedDeprecatedRules":"675"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"675"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"709","usedDeprecatedRules":"675"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"712","usedDeprecatedRules":"675"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"715","usedDeprecatedRules":"675"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"675"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"675"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"722","usedDeprecatedRules":"675"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"725","usedDeprecatedRules":"675"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"675"},{"filePath":"728","messages":"729","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"730","usedDeprecatedRules":"675"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"675"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"735","usedDeprecatedRules":"675"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"675"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"740"},{"filePath":"741","messages":"742","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"675"},{"filePath":"743","messages":"744","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"675"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":47,"fixableErrorCount":0,"fixableWarningCount":0,"source":"747","usedDeprecatedRules":"675"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"675"},{"filePath":"750","messages":"751","errorCount":0,"warningCount":50,"fixableErrorCount":0,"fixableWarningCount":0,"source":"752","usedDeprecatedRules":"675"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"755","usedDeprecatedRules":"675"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":133,"fixableErrorCount":0,"fixableWarningCount":0,"source":"758","usedDeprecatedRules":"675"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"675"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"763","usedDeprecatedRules":"675"},{"filePath":"764","messages":"765","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"766","usedDeprecatedRules":"675"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"769","usedDeprecatedRules":"675"},{"filePath":"770","messages":"771","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"772","usedDeprecatedRules":"675"},{"filePath":"773","messages":"774","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"675"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"777","usedDeprecatedRules":"675"},{"filePath":"778","messages":"779","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"675"},{"filePath":"780","messages":"781","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"782","usedDeprecatedRules":"675"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"785","usedDeprecatedRules":"675"},{"filePath":"786","messages":"787","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"788","usedDeprecatedRules":"675"},{"filePath":"789","messages":"790","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":6,"source":"791","usedDeprecatedRules":"675"},{"filePath":"792","messages":"793","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"794","usedDeprecatedRules":"675"},{"filePath":"795","messages":"796","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"797","usedDeprecatedRules":"675"},{"filePath":"798","messages":"799","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"800","usedDeprecatedRules":"675"},{"filePath":"801","messages":"802","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"803","usedDeprecatedRules":"675"},{"filePath":"804","messages":"805","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"806","usedDeprecatedRules":"675"},{"filePath":"807","messages":"808","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"675"},{"filePath":"809","messages":"810","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"811","usedDeprecatedRules":"675"},{"filePath":"812","messages":"813","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"814","usedDeprecatedRules":"675"},{"filePath":"815","messages":"816","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"675"},{"filePath":"817","messages":"818","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"675"},{"filePath":"819","messages":"820","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"821","usedDeprecatedRules":"675"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"824","usedDeprecatedRules":"675"},{"filePath":"825","messages":"826","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"827","usedDeprecatedRules":"675"},{"filePath":"828","messages":"829","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"830","usedDeprecatedRules":"675"},{"filePath":"831","messages":"832","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"833","usedDeprecatedRules":"675"},{"filePath":"834","messages":"835","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"836","usedDeprecatedRules":"675"},{"filePath":"837","messages":"838","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"839","usedDeprecatedRules":"675"},{"filePath":"840","messages":"841","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"842","usedDeprecatedRules":"675"},{"filePath":"843","messages":"844","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"845","usedDeprecatedRules":"675"},{"filePath":"846","messages":"847","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"848","usedDeprecatedRules":"675"},{"filePath":"849","messages":"850","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"851","usedDeprecatedRules":"675"},{"filePath":"852","messages":"853","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"854","usedDeprecatedRules":"675"},{"filePath":"855","messages":"856","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"857","usedDeprecatedRules":"675"},{"filePath":"858","messages":"859","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"860","usedDeprecatedRules":"675"},{"filePath":"861","messages":"862","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"863","usedDeprecatedRules":"675"},{"filePath":"864","messages":"865","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"866","usedDeprecatedRules":"675"},{"filePath":"867","messages":"868","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"869","usedDeprecatedRules":"675"},{"filePath":"870","messages":"871","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"872","usedDeprecatedRules":"675"},{"filePath":"873","messages":"874","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"875","usedDeprecatedRules":"675"},{"filePath":"876","messages":"877","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"878","usedDeprecatedRules":"675"},{"filePath":"879","messages":"880","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"881","usedDeprecatedRules":"675"},{"filePath":"882","messages":"883","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"884","usedDeprecatedRules":"675"},{"filePath":"885","messages":"886","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"887","usedDeprecatedRules":"675"},{"filePath":"888","messages":"889","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"675"},{"filePath":"890","messages":"891","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"892","usedDeprecatedRules":"675"},{"filePath":"893","messages":"894","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"895","usedDeprecatedRules":"675"},{"filePath":"896","messages":"897","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"898","usedDeprecatedRules":"675"},{"filePath":"899","messages":"900","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"675"},{"filePath":"901","messages":"902","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"903","usedDeprecatedRules":"675"},{"filePath":"904","messages":"905","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"906","usedDeprecatedRules":"675"},{"filePath":"907","messages":"908","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"675"},{"filePath":"909","messages":"910","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"911","usedDeprecatedRules":"675"},{"filePath":"912","messages":"913","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"914","usedDeprecatedRules":"675"},{"filePath":"915","messages":"916","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"917","usedDeprecatedRules":"675"},{"filePath":"918","messages":"919","errorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":"920","usedDeprecatedRules":"675"},{"filePath":"921","messages":"922","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"923","usedDeprecatedRules":"675"},{"filePath":"924","messages":"925","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"926","usedDeprecatedRules":"675"},{"filePath":"927","messages":"928","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"929","usedDeprecatedRules":"675"},{"filePath":"930","messages":"931","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"675"},{"filePath":"932","messages":"933","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"934","usedDeprecatedRules":"675"},{"filePath":"935","messages":"936","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"937","usedDeprecatedRules":"675"},{"filePath":"938","messages":"939","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"940","usedDeprecatedRules":"675"},{"filePath":"941","messages":"942","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"943","usedDeprecatedRules":"675"},{"filePath":"944","messages":"945","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"946","usedDeprecatedRules":"675"},{"filePath":"947","messages":"948","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"949","usedDeprecatedRules":"675"},{"filePath":"950","messages":"951","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"952","usedDeprecatedRules":"675"},{"filePath":"953","messages":"954","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"955","usedDeprecatedRules":"675"},{"filePath":"956","messages":"957","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"675"},{"filePath":"958","messages":"959","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"675"},{"filePath":"960","messages":"961","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"675"},{"filePath":"962","messages":"963","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"964","usedDeprecatedRules":"675"},{"filePath":"965","messages":"966","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"967","messages":"968","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"969","usedDeprecatedRules":"675"},{"filePath":"970","messages":"971","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"675"},"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\index.js",["972","973"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\swDev.js",[],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\reportWebVitals.js",[],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\App.js",["974"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\profile\\Sudipta.js",["975","976","977","978","979","980","981","982","983","984","985","986","987","988"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\profile\\facebook.js",["989","990"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\Explore.js",["991","992","993","994","995"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\MyStatus.js",["996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\DragableList.js",[],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\HomePage.js",["1009","1010","1011","1012","1013","1014","1015","1016","1017","1018","1019","1020"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\AboutUs.js",["1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\FAQs.js",[],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\TermsAndCondition.js",[],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\DragDropMulti.js",[],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\Cards.js",["1033","1034"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\Settings.js",["1035","1036","1037","1038"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\HowItWork.js",["1039","1040","1041","1042","1043","1044"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\Contest_All.js",[],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\NotificationRequest.js",["1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1060","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1074","1075"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\PrivacyPolicy.js",[],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\PremiumFeature.js",[],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\NotificationView.js",["1076"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\ImageCarousel.js",["1077","1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\Payout.js",["1090","1091","1092"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\NewsLetter.js",[],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\MyAppearance.js",["1093","1094","1095","1096","1097","1098","1099","1100","1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120","1121"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\EditImageCarousel.js",["1122","1123","1124","1125","1126","1127","1128","1129","1130","1131","1132","1133","1134","1135","1136"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\CropImage.js",[],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\SignInPage.js",["1137","1138","1139","1140","1141","1142","1143"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\StackedLink.js",["1144","1145","1146","1147","1148","1149","1150","1151","1152","1153","1154","1155","1156","1157","1158"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\JoinPage.js",["1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169","1170","1171","1172"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\EditLiveVideoSessionPage.js",[],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\MyProfile2_copy.js",["1173","1174","1175","1176","1177","1178","1179","1180","1181","1182","1183","1184","1185","1186","1187","1188","1189","1190","1191","1192","1193","1194","1195","1196","1197","1198","1199","1200","1201","1202","1203","1204","1205","1206","1207","1208","1209","1210","1211","1212","1213","1214","1215","1216","1217","1218","1219","1220","1221","1222","1223","1224","1225","1226","1227","1228","1229","1230","1231","1232","1233","1234","1235","1236","1237","1238","1239","1240","1241","1242","1243","1244","1245","1246","1247","1248","1249","1250","1251","1252","1253","1254","1255","1256","1257","1258","1259","1260","1261","1262","1263","1264","1265","1266","1267","1268","1269","1270","1271","1272","1273","1274","1275","1276","1277","1278","1279","1280","1281","1282","1283","1284","1285","1286","1287","1288","1289","1290","1291","1292","1293","1294","1295","1296","1297","1298","1299","1300","1301","1302","1303","1304","1305"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\profile\\Me.js",["1306","1307","1308","1309","1310","1311","1312","1313","1314","1315","1316","1317","1318","1319","1320","1321","1322","1323","1324","1325","1326","1327","1328","1329","1330","1331","1332","1333","1334","1335","1336","1337","1338","1339","1340","1341","1342","1343","1344","1345","1346","1347","1348","1349","1350","1351","1352"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\BrowsePage.js",["1353","1354","1355","1356","1357"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\MyProfile2.js",["1358","1359","1360","1361","1362","1363","1364","1365","1366","1367","1368","1369","1370","1371","1372","1373","1374","1375","1376","1377","1378","1379","1380","1381","1382","1383","1384","1385","1386","1387","1388","1389","1390","1391","1392","1393","1394","1395","1396","1397","1398","1399","1400","1401","1402","1403","1404","1405","1406","1407","1408"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\Gifts.js",["1409","1410","1411","1412","1413","1414","1415","1416","1417","1418","1419","1420"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\RND\\Eventcalender.js",["1421","1422","1423","1424","1425","1426","1427","1428","1429","1430","1431","1432","1433","1434","1435","1436"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\LiveVideoSessionPage.js",["1437","1438","1439","1440","1441","1442","1443","1444","1445","1446"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\ProfileNav.js",["1447","1448"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\Loader.js",[],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\Graph.js",[],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\SearchItemNextPrev.js",["1449","1450","1451","1452","1453","1454","1455","1456","1457","1458","1459","1460","1461","1462","1463","1464","1465","1466","1467","1468","1469","1470","1471","1472","1473","1474","1475"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\SignInModal.js",["1476","1477"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\Items.js",["1478","1479","1480","1481","1482","1483","1484"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\EditContestGiveAway.js",[],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\LineChart.js",["1485","1486"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\EditLiveVideoSession.js",[],["1487","1488"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\JoinModal.js",["1489","1490","1491","1492"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\EditDigitalEcommerce.js",["1493","1494","1495","1496","1497","1498","1499","1500","1501","1502","1503","1504","1505","1506","1507","1508","1509","1510","1511","1512","1513","1514","1515","1516","1517"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\ContestReport.js",["1518","1519"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\EmbedContent2.js",["1520","1521"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\EditEmbedContent2.js",["1522","1523","1524"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\EditPopGift2.js",["1525","1526","1527","1528"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\EditUnlockContent2.js",["1529","1530","1531","1532","1533","1534","1535","1536","1537","1538","1539","1540","1541","1542","1543","1544","1545","1546","1547","1548","1549","1550"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\EditStackedLink2.js",["1551","1552","1553","1554","1555","1556","1557","1558","1559","1560","1561","1562","1563","1564","1565","1566","1567","1568","1569","1570","1571","1572","1573","1574"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\LivePreview2.js",["1575","1576","1577","1578","1579","1580","1581","1582","1583","1584","1585","1586","1587","1588","1589","1590","1591","1592","1593","1594","1595","1596","1597","1598","1599","1600","1601","1602","1603","1604","1605","1606","1607","1608","1609","1610","1611","1612","1613"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\EditPremiumFeature2.js",["1614","1615","1616","1617","1618","1619","1620"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\SocialWidget2.js",["1621","1622"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\SupportMe.js",["1623","1624","1625","1626"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\AddNewLink2.js",["1627"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\EditSupportMe2.js",["1628","1629","1630","1631"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\EditSocialWidget2.js",["1632","1633"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\StackedLink2.js",["1634","1635","1636","1637","1638","1639","1640","1641","1642","1643","1644","1645","1646","1647","1648","1649","1650","1651","1652","1653","1654","1655","1656","1657","1658"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\services\\API.js",["1659","1660","1661","1662","1663","1664","1665","1666","1667","1668","1669","1670","1671","1672","1673","1674","1675","1676","1677","1678"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\header_footer\\ProfileHeader.js",[],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\header_footer\\MainHeader.js",["1679","1680"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\header_footer\\FooterClass.js",[],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\header_footer\\HeaderClass.js",[],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\LiveVideoSessionLatest.js",[],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\DigitalEcommerce.js",["1681","1682","1683","1684","1685","1686","1687","1688","1689","1690","1691","1692","1693"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\LiveVideoSession.js",["1694","1695","1696","1697","1698","1699"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\header_footer\\Header_Updation.js",["1700","1701"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\ContactUs.js",["1702"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\Browse.js",["1703","1704","1705","1706","1707","1708","1709","1710","1711","1712"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\ToastAlert.js",[],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\LoaderMobile.js",["1713"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\DonationAndGift.js",[],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\UnlockContent.js",["1714","1715","1716","1717","1718","1719","1720","1721","1722","1723","1724","1725","1726","1727","1728","1729"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\EditLinks2.js",["1730","1731","1732","1733","1734","1735","1736","1737","1738","1739","1740","1741","1742","1743","1744","1745","1746","1747","1748","1749","1750","1751","1752"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\VideoAudioMessage.js",["1753","1754","1755","1756","1757"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\EditPopGift.js",["1758","1759","1760","1761"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\PopGift.js",["1762","1763","1764","1765"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\EditUnlockContent.js",["1766","1767","1768","1769","1770","1771","1772","1773","1774","1775","1776","1777","1778","1779","1780","1781","1782"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\EditEmbedContent.js",["1783","1784","1785"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\EmbedContent.js",["1786","1787"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\EditPremiumFeature.js",["1788","1789","1790","1791","1792","1793","1794"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\EditStackedLink.js",["1795","1796","1797","1798","1799","1800","1801","1802","1803","1804","1805","1806","1807","1808"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\LivePreview.js",["1809","1810","1811","1812","1813","1814","1815","1816","1817","1818","1819","1820","1821","1822","1823","1824","1825","1826","1827","1828","1829"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\SocialWidget.js",["1830","1831"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\EditSocialWidget.js",["1832","1833"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\EditLinks.js",["1834","1835","1836","1837","1838","1839","1840","1841","1842","1843","1844","1845","1846"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\DirectAccess.js",[],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\AddNewLink.js",["1847","1848"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\profile\\FourZeroFour.js",[],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\Tipping.js",["1849","1850","1851","1852"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\profile\\Profile_Gift.js",["1853","1854","1855","1856","1857","1858","1859","1860","1861","1862","1863","1864","1865","1866","1867","1868","1869","1870","1871","1872","1873","1874","1875","1876","1877","1878","1879","1880","1881","1882","1883","1884","1885","1886","1887","1888","1889","1890","1891"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\BuyContestGiveAways.js",["1892","1893","1894","1895","1896","1897","1898","1899","1900","1901","1902","1903","1904","1905"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\Buy.js",["1906","1907","1908","1909","1910","1911","1912","1913","1914"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\ReferalRequest.js",["1915","1916","1917","1918","1919"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\ProfilePage.js",["1920"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\AccessPopup.js",["1921","1922","1923","1924","1925","1926","1927"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\Preview.js",["1928","1929","1930","1931","1932","1933","1934","1935","1936","1937","1938","1939","1940","1941","1942","1943","1944","1945"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {Link,Route,BrowserRouter as Router,Switch} from 'react-router-dom'\r\nimport {Nav,Navbar} from 'react-bootstrap';\r\nimport JoinModal from '../JoinModal';\r\nimport SignInModal from '../SignInModal';\r\nimport ChatOutlinedIcon from '@material-ui/icons/ChatOutlined';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faYoutube,\r\n    faFacebook,\r\n    faTwitter,\r\n    faInstagram\r\n  } from \"@fortawesome/free-brands-svg-icons\";\r\nclass Preview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            show:false ,\r\n            base_url: process.env.REACT_APP_API_URL,\r\n            root_url: process.env.REACT_APP_ROOT_URL, \r\n       \r\n        }\r\n    \r\n    }\r\n    showModal = e =>{\r\n        this.setState({show:true,linkMaster:this.props.linkMaster});  \r\n        console.log(this.props.userDetails[0].JM_Profile_Pic);\r\n\r\n        \r\n    }\r\n    closeModal = e =>{\r\n        this.setState({show:false});\r\n      \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                  <Button className=\"btun\" onClick={this.showModal}>Preview</Button>\r\n            \r\n                    <Modal     \r\n                    show={this.state.show} onHide={this.closeModal}               \r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                    >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Live Preview\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                    <div className=\"per-prop\" style={{backgroundImage:'url('+this.props.bgImage+')'}}>\r\n                        <div className={this.props.data.TM_Class_Name}>\r\n                            <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-10 offset-md-1\">\r\n                            \r\n                                <div className=\"per-prop-body\">\r\n                                    <div className=\"dtail-part\">\r\n                                    <div className=\"prop-pic\">\r\n                                        <img src={this.state.base_url + this.props.userDetails[0].JM_Profile_Pic} alt=\"no image\"/>\r\n                                    </div>\r\n                                    <div className=\"name\">\r\n                                        <h3>{this.props.userDetails[0].JM_Name}</h3>\r\n                                        <p>{this.props.userDetails[0].JM_Email}</p>\r\n                                    </div>\r\n                                    <div className=\"button-part\">\r\n\r\n                                        {/* <div className=\"btun-box\">\r\n                                            <button className=\"big-btun\">Follow me on Instagram </button>\r\n                                            <div className=\"icon\"><img src={\"images/insta.png\"} /></div>\r\n                                        </div> */}\r\n\r\n                                        {\r\n                                        \r\n                                        this.state.linkMaster &&  this.state.linkMaster.map((link,i) =>(                   \r\n                                            link.LM_Url !== \"\" ?\r\n                                            <div className=\"btun-box\">\r\n                                                <button className=\"big-btun\">Follow me on  {link.LM_Title}</button>\r\n                                                <div className=\"icon\">\r\n                                                    <img src={this.state.base_url + link.LM_Image} />\r\n                                                </div>\r\n                                            </div>\r\n                                            :\r\n                                            null\r\n                                        ))\r\n                                        }\r\n                                        {/* <div className=\"btun-box\">\r\n                                            <button className=\"big-btun\">I'll send you a video message</button>\r\n                                            <div className=\"icon\"><PlayCircleOutlineIcon style={{ fontSize: 35 }}/></div>\r\n                                            <button className=\"buy\">Buy</button>\r\n                                        </div>\r\n\r\n                                        <div className=\"btun-box\">\r\n                                            <button className=\"big-btun\">Follow me on Youtube </button>\r\n                                            <div className=\"icon\"><img src={\"images/youtube.png\"} /></div>\r\n                                        </div>                       */}\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"per-prop-footer\">\r\n                                    <ul className=\"Social-links\">\r\n                                        {/* <li><Link href=\"#\"> <FontAwesomeIcon icon={faYoutube}/></Link></li>\r\n                                        <li><Link href=\"#\"><FontAwesomeIcon icon={faFacebook}/></Link></li>\r\n                                        <li><Link href=\"#\"> <FontAwesomeIcon icon={faInstagram}/></Link></li>   */}\r\n                                    </ul>\r\n                                </div>\r\n                                </div>\r\n                            </div>                        \r\n                            </div>\r\n                        </div>\r\n                    </div> \r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button onClick={this.closeModal}>Close</Button>\r\n                    </Modal.Footer>\r\n                    </Modal>\r\n           \r\n}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPreview.propTypes = {\r\n\r\n};\r\n\r\nexport default Preview;","E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\ContestGiveAway.js",["1946","1947","1948","1949","1950"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\Checkout_videoSession.js",["1951","1952"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\Checkout.js",["1953","1954","1955","1956","1957","1958","1959","1960","1961","1962","1963","1964","1965","1966","1967","1968","1969","1970","1971","1972","1973","1974"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\config.js",[],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\SendSupport.js",["1975","1976"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\premium\\SendGift.js",["1977","1978","1979"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\HomeExplore.js",["1980","1981","1982","1983","1984","1985","1986"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\pages\\GraphMonthly.js",["1987"],"E:\\ReactProject\\Gold backup\\MS2\\pwa-expy\\src\\components\\RND\\pexel.js",["1988"],"E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\index.js",["1989","1990"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport swDev from './swDev'\n\nimport { hydrate, render } from \"react-dom\";\n \nconst rootElement = document.getElementById(\"root\");\nif (rootElement.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n reportWebVitals();\n",["1991","1992"],"E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\reportWebVitals.js",[],"E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\App.js",["1993"],"\n\nimport React,{Component} from 'react';\nimport './App.css';\nimport {Route,BrowserRouter as Router,Switch,} from 'react-router-dom';\n\nimport Sudipta from './components/profile/Sudipta';\nimport BrowsePage from './components/pages/BrowsePage';\nimport JoinPage from './components/pages/JoinPage';\nimport SignInPage from './components/pages/SignInPage';\nimport HomePage from './components/pages/HomePage';\nimport MyAppearance from './components/pages/MyAppearance';\nimport MyStatus from './components/pages/MyStatus';\nimport Me from './components/profile/Me';\nimport Explore from './components/pages/Explore';\nimport Settings from './components/pages/Settings';\nimport StackedLink from './components/pages/StackedLink';\nimport DragableList from './components/pages/DragableList';\nimport DragDropMulti from './components/pages/DragDropMulti';\nimport PremiumFeature from './components/pages/PremiumFeature';\nimport AboutUs from './components/pages/AboutUs';\nimport FAQs from './components/pages/FAQs';\nimport HowItWork from './components/pages/HowItWork';\nimport TermsAndCondition from './components/pages/TermsAndCondition';\nimport PrivacyPolicy from './components/pages/PrivacyPolicy';\nimport Gifts from './components/premium/Gifts';\nimport Cards from './components/pages/Cards';\n\nimport './css/MyStyle.css';\nimport './css/resonsive.css';\nimport NotificationRequest from './components/pages/NotificationRequest';\nimport facebook from './components/profile/facebook';\nimport MyProfile2 from './components/pages/MyProfile2';\nimport CropImage from './components/pages/CropImage';\n\n// import PaymentCashFree from './components/RND/PaymentCashFree';\n\nimport NewsLetter from './components/pages/NewsLetter';\nimport NotificationView from './components/pages/NotificationView';\nimport ImageCarousel from './components/pages/ImageCarousel';\nimport EditImageCarousel from './components/pages/EditImageCarousel';\nimport MyProfile2_copy from './components/pages/MyProfile2_copy';\nimport LiveVideoSessionPage from './components/premium/LiveVideoSessionPage';\nimport EditLiveVideoSessionPage from './components/premium/EditLiveVideoSessionPage';\nimport Payout from './components/premium/Payout';\n\nimport Eventcalender from './components/RND/Eventcalender';\nimport Contest_All from './components/pages/Contest_All';\nimport CreatorCommunity from './components/pages/CreatorCommunity';\nimport pexel from './components/RND/pexel'\n// import GoogleAnalysis from './components/RND/GoogleAnalysis';\nimport Page from './components/RND/Pagination'\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      userDetails: [],\n      directAccess: [],\n      isLoggin:false     \n    }\n  }\n  componentDidMount()\n  {\n    \n  }\n  setBaseUrl() \n  {\n    //localStorage.setItem('api_url',\"http://localhost:9000/\");\n  }\n\n  \n  validateSession=()=>{\n    var email=localStorage.getItem('JM_Email');\n    var JM_ID = parseInt(localStorage.getItem('JM_ID'));\n    if (isNaN(JM_ID) || JM_ID === 0 || JM_ID===null) \n    {      \n        localStorage.setItem('JM_Email',\"\");\n        localStorage.setItem('JM_ID',0);\n        this.setState({isLoggin:false});        \n    }\n    else\n    {      \n\n      this.setState({isLoggin:true});   \n    }\n}\n\n\n  render(){\n\n  return (\n    <Router>\n          <div className=\"App\">\n            {/* <Helmet>\n                <title>Expy: The Only Page You Need to Monetize & Grow as a Creator</title>\n                <meta name=\"description\" content=\"description\" content=\"Use Expy to SHARE all your important links, content and OFFER paid, personalized, premium features under one beautiful Bio-Link page. FREE and FAST to set up.\" />\n             </Helmet> */}\n                <Switch>\n                  \n                      <Route exact path=\"/sudipta\" component={Sudipta}/>\n\n                      <Route exact path=\"/browse\" component={BrowsePage}/>\n                  \n                      <Route exact path=\"/join\" component={JoinPage}/> \n                      <Route exact path=\"/signin\" component={SignInPage}/>       \n                      <Route exact path=\"/statis\" component={MyStatus}/> \n                      <Route exact path=\"/appear\" component={MyAppearance}/>  \n                      <Route exact path=\"/premium-feature\" component={PremiumFeature}/>  \n                      <Route exact path=\"/gifts\" component={Gifts}/>  \n                      <Route exact path=\"/stacked-link\" component={StackedLink}/>  \n                      <Route exact path=\"/me\" component={MyProfile2}   /> \n                      <Route exact path=\"/me2\" component={MyProfile2_copy}   /> \n                      <Route exact path=\"/crop\" component={CropImage}   />                   \n                      <Route exact path=\"/\" component={HomePage}/>                      \n                      <Route exact path=\"/notify\" render={(props) => <NotificationRequest {...props} updateNotify={this.props.updateNotify}/>}/>\n                   \n                      <Route exact path=\"/newsletter\" render={(props) => <NewsLetter/>}/>                    \n                      <Route exact path=\"/explore\" component={Explore}/>\n                      <Route exact path=\"/settings\" component={Settings}/>\n                      <Route exact path=\"/drag\" component={DragableList}/>\n                      <Route exact path=\"/dragMul\" component={DragDropMulti}/>\n                      <Route exact path=\"/embed\" component={PremiumFeature}/>                  \n                      <Route exact path=\"/about-us\" component={AboutUs}/>\n                      <Route exact path=\"/faqs\" component={FAQs}/>\n                      <Route exact path=\"/how-it-work\" component={HowItWork}/>\n                      <Route exact path=\"/terms-and-condition\" component={TermsAndCondition}/>\n                      <Route exact path=\"/privacy-policy\" component={PrivacyPolicy}/>\n                      <Route exact path=\"/card\" component={Cards}/>\n                      <Route exact path=\"/face\" component={facebook}/>    \n                      <Route exact path=\"/view-notification\" component={NotificationView}/> \n                      {/* 23-jun-2021 */}\n                      <Route exact path=\"/create-carousel\" component={ImageCarousel}/>    \n                      <Route exact path=\"/create-carousel-edit\" component={EditImageCarousel}/> \n\n                      <Route exact path=\"/live-video-session\" component={LiveVideoSessionPage}/> \n                      <Route exact path=\"/live-video-session-edit\" component={EditLiveVideoSessionPage}/> \n                      <Route exact path=\"/payout\" component={Payout}/> \n                      {/* <Route exact path=\"/scheduleView\" component={ViewCalender}/>  */}\n                      <Route exact path=\"/view-calendar\" component={Eventcalender}/> \n                      <Route exact path=\"/contest\" component={Contest_All}/> \n                      <Route path=\"/pexel\" component={pexel}/>\n                      <Route path=\"/page\" component={Page}/>\n                      {/* <Route path=\"/testCommunity\" component={testCommunity}/> */}\n                      <Route path=\"/community\" component={CreatorCommunity}/>\n                     \n                      \n                      <Route  path=\"/:Url\" component={Me} />\n     \n            \n               </Switch> \n              \n          </div> \n\n        </Router>\n  );\n}\n}\n\nexport default App;\n","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\swDev.js",[],"E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\HomePage.js",[],"E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\SignInPage.js",["1994","1995","1996","1997","1998","1999","2000"],"\r\n\r\nimport React, { Component } from 'react'\r\n\r\nimport {  NavLink,  } from 'react-router-dom'\r\nimport { Button } from 'react-bootstrap';\r\nimport FooterClass from '../header_footer/FooterClass';\r\nimport MainHeader from '../header_footer/MainHeader';\r\n\r\n//facebook login\r\nimport * as queryString from 'query-string';\r\n\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport GoogleLogin from 'react-google-login';\r\n\r\nimport API  from '../services/API';\r\nimport { Helmet } from \"react-helmet\";\r\nclass SignInPage extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      base_url: process.env.REACT_APP_API_URL,\r\n      root_url: process.env.REACT_APP_ROOT_URL,\r\n      JM_Email: localStorage.getItem('JM_Email'),\r\n      JM_ID: localStorage.getItem('JM_ID'),\r\n      JM_Password: '',\r\n      bgColor: 'red',\r\n      Validation: true,\r\n      keepMeLogin: localStorage.getItem('keepLogin'),\r\n      isKeep:false,\r\n      facebookResponse:[],\r\n      showEmailModal:false,\r\n      showForgotModal:false,\r\n      forgot_email:'',\r\n      sendBtnDisabled:false,\r\n      sendBtnText:'Send',\r\n      \r\n    }\r\n    if (typeof this.state.JM_Email !== 'undefined') {\r\n      if (this.state.JM_Email !== \"\" && parseInt(this.state.JM_ID) > 0) {\r\n        window.location.href = '/me';\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n  componentDidMount() \r\n  {\r\n   // this.add_minutes();\r\n   // //console.log(this.state.keepMeLogin)\r\n      if(this.state.keepMeLogin===\"1\")\r\n      {        \r\n        document.getElementById(\"keepme\").checked=true;    \r\n      }\r\n      else\r\n      {\r\n        document.getElementById(\"keepme\").checked=false;  \r\n      }\r\n    \r\n  }\r\n  add_minutes = (e)=>\r\n  {\r\n      var minutes=60;\r\n      var dt=new Date();\r\n      var FromNewTime=new Date();\r\n      var ToNewTime=new Date(dt.getTime() + minutes*60000);\r\n          \r\n      //console.log(FromNewTime)    \r\n      //console.log(ToNewTime)\r\n\r\n      localStorage.setItem('FromNewTime',FromNewTime);\r\n      localStorage.setItem('ToNewTime',ToNewTime);\r\n      if(this.state.keepMeLogin===1)\r\n         localStorage.setItem('keepLogin',this.state.keepMeLogin);\r\n      else\r\n          localStorage.setItem('keepLogin',0);\r\n    // var milli = new Date().getTime()\r\n      //var timeWithoutMilli = Math.floor(milli/1000);\r\n    // //console.log(new Date(timeWithoutMilli))\r\n    // return new Date(dt.getTime() + minutes*60000);\r\n  }\r\n\r\n\r\n  performValidation = () => {\r\n    return this.state.JM_Email.length > 0 && this.state.JM_Password.length > 0;\r\n  }\r\n\r\n  onChangeHandle = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    //this.performValidation();\r\n  }\r\n\r\n  doLogin = () => {\r\n    try {\r\n\r\n      document.getElementById(\"msg\").innerHTML='';\r\n\r\n      if(this.state.JM_Email.length===0)\r\n      {\r\n        document.getElementById(\"msg\").innerHTML='* Enter username or email';\r\n        return false;\r\n      }\r\n      if(this.state.JM_Password.length===0)\r\n      {\r\n        document.getElementById(\"msg\").innerHTML='* Enter Password';\r\n        return false;\r\n      }\r\n\r\n      if (this.state.JM_Email.length > 0 && this.state.JM_Password.length > 0) \r\n      {\r\n  \r\n        let API_url = this.state.base_url + \"admin/signin\";\r\n\r\n\r\n        const password=API.encryptData(this.state.JM_Password);\r\n       // console.log(password)\r\n        // var JSONdata = {\r\n        //   JM_Email: this.state.JM_Email,\r\n        //   JM_Password: password,\r\n        //   Keep:this.state.keepMeLogin\r\n        // };\r\n\r\n        \r\n        var flagData = {\r\n          JM_Email: this.state.JM_Email,\r\n          JM_Password: password,\r\n          Keep:this.state.keepMeLogin\r\n        };\r\n  \r\n        const flag=API.encryptData(flagData);\r\n        var JSONdata = {\r\n          flag: flag\r\n        };\r\n  \r\n\r\n        \r\n        fetch(API_url, {\r\n          method: 'post',\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(JSONdata)\r\n        }).then(function (response) {\r\n          return response.json();\r\n        }).then(async data1 => {\r\n\r\n          if (data1.status === 1) \r\n          {\r\n\r\n            const data=await API.decryptJson(data1.flag);\r\n            var userDetails = data.userDetails;\r\n            if (userDetails != null && userDetails.length > 0) {\r\n              //console.log(data.msg);\r\n              localStorage.setItem('JM_ID', data.JM_ID);\r\n              localStorage.setItem('JM_User_Profile_Url', data.userDetails[0].JM_User_Profile_Url);\r\n              localStorage.setItem('JM_Name', data.userDetails[0].JM_Name);\r\n              localStorage.setItem('JM_Email', this.state.JM_Email);\r\n              localStorage.setItem('userDetails', JSON.stringify(userDetails));\r\n              localStorage.setItem('directAccess', JSON.stringify(data.directAccess));\r\n              localStorage.setItem('linkMaster', JSON.stringify(data.linkMaster));\r\n              this.setState({ userDetails: userDetails });\r\n              localStorage.setItem('auth', data.token);  \r\n\r\n              // window.location='/me'; \r\n              this.add_minutes();\r\n              //window.token = data.token;\r\n              this.props.history.push({\r\n                pathname:\"/me\",\r\n                state: {\r\n                 token:data.token\r\n                }\r\n              })\r\n    \r\n         \r\n      \r\n              //this.props.history.push(\"/me\");\r\n            }\r\n          }\r\n          else \r\n          {\r\n            document.getElementById(\"msg\").innerHTML = data1.msg;\r\n            return false;\r\n          }\r\n\r\n        });\r\n\r\n      }\r\n\r\n    } catch (e) {\r\n      alert(\"connection error\");\r\n    }\r\n  }\r\n  //04-may-2021\r\n  forgotPassword = (e) => {\r\n    var email = this.state.forgot_email;\r\n    try {\r\n      if (email.length > 0 && email.includes('@') && email.includes('.')) {\r\n\r\n        let API_url = process.env.REACT_APP_API_URL + \"admin/forgotPassword\";\r\n        // var JSONdata = {\r\n        //   JM_Email: this.state.forgot_email,\r\n        //   JM_Password: this.state.JM_Password\r\n        // };\r\n\r\n        var flagData = {\r\n          JM_Email: this.state.forgot_email,\r\n          JM_Password: this.state.JM_Password\r\n        };\r\n  \r\n        const flag=API.encryptData(flagData);\r\n        let  JSONdata = {\r\n            flag: flag\r\n          };\r\n\r\n        this.setState({sendBtnDisabled:true,sendBtnText:'Wait...'})\r\n        fetch(API_url, {\r\n          method: 'post',\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(JSONdata)\r\n        }).then(function (response) {\r\n          return response.json();\r\n        }).then(data => {\r\n          if (data.status === 1) \r\n          {\r\n            //alert(\"Password has been sent to above email id\");\r\n            document.getElementById(\"forgot_msg\").innerText='Password has been sent to entered email id';\r\n            this.setState({\r\n              forgot_email:'', sendBtnDisabled:false,sendBtnText:'Send'\r\n            })\r\n\r\n          }\r\n          else \r\n          {\r\n            document.getElementById(\"forgot_msg\").innerText=data.msg;\r\n            this.setState({\r\n              forgot_email:'', sendBtnDisabled:false,sendBtnText:'Send'\r\n            })\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        document.getElementById(\"forgot_msg\").innerText=\"Enter email ID to receive new password\";\r\n      }\r\n    } catch (e) {\r\n      //alert(\"enter email id\");\r\n      document.getElementById(\"forgot_msg\").innerText=\"Enter a valid email id\";\r\n      ////console.log(\"exception in forgot password\")\r\n    }\r\n\r\n  }\r\n  keepMeLogin=(e)=>{\r\n    if(e.target.checked)\r\n    {\r\n      ////console.log('working')\r\n      this.setState({\r\n        keepMeLogin:1\r\n      })\r\n    }\r\n    else\r\n    {\r\n      this.setState({\r\n        keepMeLogin:2\r\n      })\r\n    }\r\n  }\r\n\r\n  \r\nresponseFacebook(response) {\r\n  ////console.log(response);\r\n\r\n \r\n  if(typeof response !== \"undefined\")\r\n  {\r\n      if(response.status==='unknown')\r\n      {\r\n        return false;\r\n      }\r\n\r\n\r\n      if(response != null && response.email.length ===0) \r\n      {\r\n        this.setState({facebookResponse:response,showEmailModal:true})  \r\n        return false;\r\n      }\r\n      var id = new Date().getTime(); \r\n     var name= response.name.replace(/\\s+/g, '')+id;\r\n      if (response != null && response.email.length > 0 && response.id.length > 0) \r\n      {\r\n          var data  = {\r\n            first_name: response.name.replace(/\\s+/g, ''),\r\n            email: response.email, \r\n            id:response.id,\r\n        };\t\r\n        let API_url = process.env.REACT_APP_API_URL + \"admin/socialLogin\";\r\n     \r\n        fetch(API_url, {\r\n          method: 'post',\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(data)\r\n        }).then(function (response) {\r\n          return response.json();\r\n        }).then(result => {\r\n          if (result.status === 1) \r\n          {\r\n            var name=response.name.replace(/\\s+/g, '')+id;\r\n            ////console.log(data.msg);\r\n            localStorage.setItem('JM_ID', result.JM_ID);\r\n            localStorage.setItem('JM_Email', result.JM_Email);\r\n            localStorage.setItem('JM_User_Profile_Url',result.JM_User_Profile_Url);             \r\n            localStorage.getItem('JM_Profile_Pic',null);\r\n            localStorage.setItem('auth', data.token);  \r\n            var minutes=60;\r\n            var dt=new Date();\r\n            var FromNewTime=new Date();\r\n            var ToNewTime=new Date(dt.getTime() + minutes*60000);\r\n                \r\n            ////console.log(FromNewTime)    \r\n            ////console.log(ToNewTime)  \r\n      \r\n            localStorage.setItem('FromNewTime',FromNewTime);\r\n            localStorage.setItem('ToNewTime',ToNewTime);\r\n            if(this.state.keepMeLogin===1)\r\n               localStorage.setItem('keepLogin',this.state.keepMeLogin);\r\n            else\r\n                localStorage.setItem('keepLogin',0);\r\n\r\n                window.location.href = '/me';\r\n            //this.props.history.push(\"/me\");\r\n          }\r\n          else {\r\n            ////console.log(\"failed to insert or fetch\")\r\n            localStorage.setItem('JM_Email', \"\");\r\n            localStorage.setItem('JM_ID', 0);\r\n            window.location.href = '/';\r\n          }\r\n        });\r\n  \r\n      }   \r\n      else\r\n      {\r\n        ////console.log(\"failed to insert or fetch\")\r\n        localStorage.setItem('JM_Email', \"\");\r\n        localStorage.setItem('JM_ID', 0);\r\n        //window.location.href = '/';\r\n      }\r\n    }\r\n}\r\nfacebollbtnClick=()=>{\r\n  ////console.log(\"clicked\")\r\n // alert();\r\n}\r\n\r\nresponseInstagram = (response) => {\r\n  ////console.log(response);\r\n  \r\n}\r\n\r\nsetFace=e=>{\r\n  ////console.log(process.env.REACT_APP_FACEBOOK_APP_ID)\r\n    const stringifiedParams = queryString.stringify({\r\n      client_id: 507049633635811,\r\n      redirect_uri: process.env.REACT_APP_API_URL + 'me',\r\n      scope: ['email', 'user_friends'].join(','), // comma seperated string\r\n      response_type: 'code',\r\n      auth_type: 'rerequest',\r\n      display: 'popup',\r\n    });\r\n    const facebookLoginUrl = `https://www.facebook.com/v4.0/dialog/oauth?${stringifiedParams}`;\r\n  localStorage.setItem('FB_IG',\"FB\");\r\n  window.location=facebookLoginUrl;\r\n}\r\nsetIG=e=>{\r\n  const stringified= queryString.stringify({\r\n    client_id:371501700778779,\r\n    redirect_uri: process.env.REACT_APP_API_URL+ 'me',\r\n    //redirect_uri: 'https://expy.bio/',\r\n    scope: ['user_profile', 'user_media'].join(','), // comma seperated string\r\n   // scope:'instagram_graph_user_media',\r\n    response_type: 'code'     \r\n  });\r\n\r\n  const instagramLoginUrl = `https://api.instagram.com/oauth/authorize?${stringified}`;\r\n  localStorage.setItem('FB_IG',\"IG\");\r\n  window.location=instagramLoginUrl;\r\n}\r\n\r\ndoSocialSignIn=()=>{\r\n  ////console.log(\"clicked doSocialSignIn\")\r\n}\r\nresponseGoogle = (response) => {\r\n  ////console.log(\"success\");  \r\n  ////console.log(response.profileObj);  \r\n  var GoogleResponse;\r\n  if(typeof response !== \"undefined\")\r\n  {\r\n      if(typeof response.profileObj==='undefined')\r\n      {\r\n        return false;\r\n      }\r\n      GoogleResponse=response.profileObj;\r\n\r\n      if(GoogleResponse.googleId.length > 0  && GoogleResponse.email.length > 0) \r\n      {\r\n        \r\n        var id = GoogleResponse.googleId;\r\n        var name= GoogleResponse.name.replace(/\\s+/g, '')+id;\r\n        if (GoogleResponse != null && GoogleResponse.email.length > 0 && GoogleResponse.googleId.length > 0) \r\n        {\r\n          //   var JSONdata  = {          \r\n          //     JM_Email:GoogleResponse.email, \r\n          //     JM_Google_ID:GoogleResponse.googleId,\r\n          // };\t\r\n\r\n          var flagData = {\r\n            JM_Email:GoogleResponse.email, \r\n            JM_Google_ID:GoogleResponse.googleId,\r\n          };\r\n    \r\n          const flag=API.encryptData(flagData);\r\n          var JSONdata = {\r\n            flag: flag\r\n          };\r\n    \r\n          let API_url = process.env.REACT_APP_API_URL + \"admin/socialSignIn\";\r\n                    \r\n          fetch(API_url, {\r\n            method: 'post',\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(JSONdata)\r\n          }).then(function (response) {\r\n            return response.json();\r\n          }).then(async data1 => {\r\n            if (data1.status === 1) \r\n            {\r\n\r\n              const data=API.decryptJson(data1.flag);\r\n\r\n              var userDetails = data.userDetails;\r\n              if (userDetails != null && userDetails.length > 0) \r\n              {\r\n                ////console.log(data.msg);\r\n                localStorage.setItem('JM_ID', data.JM_ID);\r\n                localStorage.setItem('JM_User_Profile_Url', data.userDetails[0].JM_User_Profile_Url);\r\n                localStorage.setItem('JM_Name', data.userDetails[0].JM_Name);\r\n                localStorage.setItem('JM_Email', this.state.JM_Email);\r\n                localStorage.setItem('userDetails', JSON.stringify(userDetails));\r\n                localStorage.setItem('directAccess', JSON.stringify(data.directAccess));\r\n                localStorage.setItem('linkMaster', JSON.stringify(data.linkMaster));\r\n                localStorage.setItem('auth', data.token);  \r\n                this.setState({ userDetails: userDetails });    \r\n\r\n                this.add_minutes();\r\n                this.props.history.push(\"/me\");\r\n              }\r\n            }\r\n            else \r\n            {\r\n              document.getElementById(\"google_msg\").innerHTML=\"Email does not exist, please sign up with gmail\";         \r\n              return false;\r\n            }\r\n\r\n          }).catch((error) => \r\n          {\r\n            ////console.log(error)\r\n            document.getElementById(\"google_msg\").innerHTML='Network error, Try again later';       \r\n            return false;\r\n          });\r\n        }\r\n      }\r\n      else\r\n      {\r\n        document.getElementById(\"google_msg\").innerHTML=\"No response from Google, Try again Later\";         \r\n        return false;\r\n      }\r\n    }\r\n\r\n}\r\nresponseGoogleFaild=(response)=>{\r\n  //console.log(\"Failed\");  \r\n  //console.log(response);  \r\n}\r\nhandleKeyPress = (event) => {\r\n  if(event.key === 'Enter')\r\n  {\r\n    //console.log('enter press here! ')\r\n    this.doLogin();\r\n  }\r\n}\r\n\r\n  render() {\r\n\r\n   \r\n    let redirect_uri=process.env.REACT_APP_API_URL + 'me';\r\n    //console.log(process.env.REACT_APP_FACEBOOK_APP_ID)\r\n    const stringifiedParams = queryString.stringify({\r\n      client_id: 507049633635811,\r\n      redirect_uri: process.env.REACT_APP_API_URL + 'me',\r\n      scope: ['email', 'user_friends'].join(','), // comma seperated string\r\n      response_type: 'code',\r\n      auth_type: 'rerequest',\r\n      display: 'popup',\r\n    });\r\n\r\n\r\n    const stringified= queryString.stringify({\r\n      client_id:371501700778779,\r\n      redirect_uri: process.env.REACT_APP_API_URL+ 'me',\r\n      //redirect_uri: 'https://expy.bio/',\r\n      scope: ['user_profile', 'user_media'].join(','), // comma seperated string\r\n      response_type: 'code'     \r\n    });\r\n    const facebookLoginUrl = `https://www.facebook.com/v4.0/dialog/oauth?${stringifiedParams}`;\r\n    const instagramLoginUrl = `https://api.instagram.com/oauth/authorize?${stringified}`;\r\n    //client_id={138441281583659}&redirect_uri={redirect_uri}&scope=user_profile,user_media&response_type=code`;\r\n    let checked='';\r\n    return (\r\n \r\n          \r\n      <>\r\n        \r\n         <Helmet>\r\n            <title>Signin | Expy </title>\r\n            {/* <meta name=\"description\" content=\"Use Expy to SHARE all your important links, content and OFFER paid, personalized, premium features under one beautiful Bio-Link page. FREE and FAST to set up.\"></meta> */}\r\n          </Helmet>\r\n        <MainHeader />\r\n        <div>\r\n          <div className=\"join-sec logged\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3\">\r\n                  <div className=\"join-box\">\r\n                    <div className=\"title login\">\r\n                      <h3>LOGIN</h3>\r\n                    </div>\r\n                    <div className=\"form-box\">\r\n\r\n                      <input type=\"text\" name=\"JM_Email\" value={this.state.JM_Email} className=\"form-control\" placeholder=\"Enter your username or email\" onChange={this.onChangeHandle} />\r\n\r\n                      <input type=\"password\" name=\"JM_Password\" value={this.state.JM_Password} className=\"form-control\" placeholder=\"Enter your password\" \r\n                      onChange={this.onChangeHandle} onKeyPress={this.handleKeyPress} />\r\n\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                          <div className=\"remember\">\r\n                            <input type=\"checkbox\" id=\"keepme\"  onClick={this.keepMeLogin}/> Keep me logged in\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                          <div className=\"forgot\">\r\n                            <span onClick={()=>this.setState({showForgotModal:true})}>Forgot your password?</span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <button className=\"butn\" onClick={this.doLogin}>Log In!</button>\r\n\r\n                      <p id=\"msg\" style={{ color: 'red' }}></p>\r\n                    </div>\r\n                \r\n                    <div className=\"title login\" style={{display:'block'}}>\r\n                      <h3>OR</h3>\r\n                    </div>\r\n                    <div className=\"form-box\" style={{display:'block'}}>\r\n\r\n                      {/* <a type=\"button\" href=\"#\" className=\"loginBtn\" onClick={this.setFace}>\r\n                        <i class=\"fa fa-facebook\"></i> Sign in with Facebook  </a> */}\r\n                        <GoogleLogin className=\"loginBtn\" style={{color:'red',cursor:'pointer'}}\r\n                            //live\r\n                             //clientId=\"1024467688151-4se3v8kdntbirunv4s79rnq3t95qtt37.apps.googleusercontent.com\"  \r\n                            clientId={process.env.REACT_APP_Google_Client_Id} \r\n                           //UAT\r\n                            //clientId=\"361176624533-it476osbsr8qe361gc8aao80fqkr1bg8.apps.googleusercontent.com\"\r\n                            buttonText=\"Sign in with Google\"\r\n                            onSuccess={this.responseGoogle}\r\n                            onFailure={this.responseGoogleFaild}\r\n                            cookiePolicy={'single_host_origin'}\r\n                          />\r\n                     <p id=\"google_msg\" style={{color:'red',fontSsize: '12px'}}></p>\r\n                     \r\n                        {/* <FacebookLogin   cssClass=\"loginBtn\"\r\n                            appId={\"507049633635811\"}    \r\n                            autoLoad={false}\r\n                            fields=\"name,email,picture\"\r\n                            onClick={this.facebollbtnClick}\r\n                            callback={this.responseFacebook}\r\n                            icon=\"fa-facebook mr5\"\r\n                            isMobile={false}\r\n                          />  */}\r\n\r\n                        \r\n{/* \r\n\r\n\r\n <GoogleLogin\r\n    clientId=\"1024467688151-4se3v8kdntbirunv4s79rnq3t95qtt37.apps.googleusercontent.com\"\r\n    buttonText=\"Sign in\"\r\n    onSuccess={this.responseGoogle}\r\n    onFailure={this.responseGoogle}\r\n    cookiePolicy={'single_host_origin'}\r\n  />\r\n                        <a   onClick={this.setIG} className=\"text-decoration-none setCursor\"><button className=\"loginBtn insta\">\r\n                        <i class=\"fa fa-instagram\"></i> Log in with Instagram  </button></a> */}\r\n\r\n{/*                       \r\n\r\n                          <div style={{display:'none'}}>\r\n                                <InstagramLogin \r\n                                  clientId=\"371501700778779\"\r\n                                  buttonText=\"Login\"\r\n                                  onSuccess={this.responseInstagram}\r\n                                  onFailure={this.responseInstagram}\r\n                                  />\r\n\r\n                          </div> */}\r\n                        \r\n                                  {/* <InstagramLogin\r\n                                   \r\n                                    clientId=\"8208035d75f168409c41a05a1d81fe77\"\r\n                                    redirectUrl=\"https://www.velectico.net.in/me\"\r\n                                    scopes={['basic']}        \r\n                                    onSuccess={this.responseInstagram}\r\n                                    onFailure={this.responseInstagram}\r\n                                  /> */}\r\n\r\n                      <p>Don’t have an account yet?  <NavLink to=\"/join\">Sign Up</NavLink></p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n                             <Modal\r\n                              size=\"sm\"\r\n                              show={this.state.showEmailModal}\r\n                              onHide={() => this.setState({ showEmailModal: false })}\r\n                              aria-labelledby=\"example-modal-sizes-title-sm\"\r\n                              backdrop=\"static\"\r\n                              keyboard={false}\r\n                              centered\r\n                            >\r\n                              <Modal.Header closeButton>\r\n                                <Modal.Title id=\"example-modal-sizes-title-sm\" style={{ fontSize: '15px' }}>\r\n                                  Sign in\r\n                                </Modal.Title>\r\n                              </Modal.Header>\r\n                              <Modal.Body>\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Enter Email Id\" name=\"fb_email\" value={this.state.fb_email} onChange={this.fb_emailChange} />\r\n                              </Modal.Body>\r\n                              <Modal.Footer>\r\n                                <p id=\"msg\" style={{ color: 'red' }}></p>\r\n                                <div className=\"btun-box\">                            \r\n                                   <Button onClick={this.doSocialSignIn} className=\"btun btun_1\">Sign in</Button>                                \r\n                                  <p id='fb_msg' style={{fontSize: '12px'}}></p>\r\n                                  {/* <p style={{color:' #ea9515',fontWweight: 'bold',fontSsize: '12px'}}>\r\n                                      Note: if you update this current username you will not able to see any data of earlier username. \r\n                                  </p> */}\r\n                                </div>\r\n                              </Modal.Footer>\r\n                            </Modal>\r\n\r\n\r\n                            <Modal\r\n                              size=\"sm\"\r\n                              show={this.state.showForgotModal}\r\n                              onHide={() => this.setState({ showForgotModal: false })}\r\n                              aria-labelledby=\"example-modal-sizes-title-sm\"\r\n                              backdrop=\"static\"\r\n                              keyboard={false}\r\n                              centered\r\n                            >\r\n                              <Modal.Header closeButton>\r\n                                <Modal.Title id=\"example-modal-sizes-title-sm\" style={{ fontSize: '15px' }}>\r\n                                Please enter your email\r\n                                          </Modal.Title>\r\n                              </Modal.Header>\r\n                              <Modal.Body>\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Enter Email Id\" name=\"forgot_email\" value={this.state.forgot_email} onChange={this.onChangeHandle} />\r\n                              </Modal.Body>\r\n                              <Modal.Footer>     \r\n                              <p id='forgot_msg' style={{fontSize: '12px'}}></p>                          \r\n                                <div className=\"btun-box\">                            \r\n                                   <Button  onClick={this.forgotPassword}className=\"btun btun_1\" disabled={this.state.sendBtnDisabled}>{this.state.sendBtnText}</Button>                                \r\n                                \r\n                                  {/* <p style={{color:' #ea9515',fontWweight: 'bold',fontSsize: '12px'}}>\r\n                                      Note: if you update this current username you will not able to see any data of earlier username. \r\n                                  </p> */}\r\n                                </div>\r\n                              </Modal.Footer>\r\n                            </Modal>\r\n        </div>\r\n        <FooterClass />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SignInPage\r\n","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\DragDropMulti.js",[],"E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\Explore.js",["2001","2002","2003","2004","2005"],"import React, { Component } from 'react'\r\nimport FooterClass from '../header_footer/FooterClass';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport ProfileHeader from '../header_footer/ProfileHeader';\r\nimport Loader from './Loader';\r\nimport Items from './Items';\r\nimport SearchItemNextPrev from './SearchItemNextPrev';\r\n class Explore extends Component {\r\n     constructor(props) {\r\n       super(props)\r\n     \r\n       this.state = {\r\n          tab:0,\r\n          tab_item:false,\r\n          tab_people:true,\r\n          exploreData:[],\r\n          JM_ID:parseInt(localStorage.getItem('JM_ID')),\r\n          JM_Name: '',\r\n          JM_Email: '',\r\n          JM_Url: '',\r\n          JM_Profile_Pic: '',\r\n          JM_User_Profile_Url: '',\r\n          base_url: process.env.REACT_APP_API_URL,\r\n          root_url: process.env.REACT_APP_ROOT_URL,\r\n          ProfilePath: 'Profile/',\r\n          linkPath: '',\r\n          ProfileimagePath: '',\r\n          limitData:2,\r\n          isLoading:true\r\n       }\r\n     }\r\n     handleChange =tab=>e=> {\r\n      this.setState({tab});\r\n        if(tab===0)\r\n        {\r\n          this.setState({tab_people:true,tab_item:false});\r\n           // alert(1);           \r\n        }\r\n        if(tab===1)\r\n        {\r\n          this.setState({tab_people:false,tab_item:true});\r\n            //alert(2);\r\n        }\r\n      };\r\n      componentDidMount() {\r\n        this.validateSession();\r\n        this.Get_All_Users();  \r\n           \r\n      }\r\n      validateSession()\r\n      {\r\n        var JM_ID =this.state.JM_ID;\r\n        if (isNaN(JM_ID) || JM_ID === 0 || JM_ID===null)  {\r\n          localStorage.setItem('JM_Email', \"\");\r\n          localStorage.setItem('JM_ID', 0);\r\n          window.location.href = '/';\r\n        }\r\n      \r\n      }\r\n      Get_All_Users=()=>{\r\n        this.setState({isLoading: true})  \r\n        const API_url = this.state.base_url + \"admin/Get_All_Users\";\r\n        let JSONdata = {\r\n            JM_ID: this.state.JM_ID,\r\n            limit:this.state.limitData        \r\n          };\r\n        fetch(API_url,\r\n            {\r\n                method: 'post',\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(JSONdata)\r\n            })\r\n        .then((response) => response.json())\r\n        .then(data => {\r\n            if(data.status===1)\r\n            {\r\n                    this.setState({exploreData:data.exploreData})\r\n                    this.setState({isLoading: false})  \r\n            }\r\n            else\r\n                alert(data.msg);\r\n        });\r\n\r\n      }\r\n      seeMore=(prevState)=>{\r\n          let limitData=this.state.limitData;\r\n          limitData=limitData+2;\r\n\r\n          //this.Get_All_Users();\r\n         \r\n          this.setState({\r\n            limitData:limitData\r\n            },() => {\r\n                //console.log(this.state.limitData);\r\n               this.Get_All_Users();\r\n            });\r\n         \r\n      }\r\n      gotoProfile=()=>{\r\n        this.props.history.push(\"/direct-access\");\r\n      }\r\n  render() {\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          flexGrow: 1,\r\n          maxWidth: 500,\r\n        },\r\n      });\r\n\r\n      let tabView=(\r\n        <Paper square className={useStyles.root}>\r\n        <Tabs\r\n            value={this.state.tab}       \r\n            variant=\"fullWidth\"\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            aria-label=\"icon label tabs example\"\r\n            centered\r\n        >\r\n           <Tab  aria-label=\"phone\" label=\"People\" onClick={this.handleChange(0)}/>\r\n            <Tab  aria-label=\"favorite\" label=\"Items\" onClick={this.handleChange(1)}/>\r\n           \r\n        </Tabs>\r\n        </Paper>\r\n      );\r\n        let base_url=this.state.base_url;\r\n        let root_url=this.state.root_url;\r\n     let profileCard;\r\n     profileCard=this.state.exploreData.map((user,i) =>{\r\n          return (\r\n                <div className=\"item\">\r\n                    <div className=\"cards\">\r\n                        <div className=\"prop-pic\">\r\n                        <a href={root_url+user.JM_User_Profile_Url} target=\"_blank\">   <img src={process.env.REACT_APP_UPLOAD_URL + user.JM_Profile_Pic} /></a>\r\n                        </div>\r\n                        <div className=\"name\">\r\n                         {\r\n                            user.JM_Verified===1 ?\r\n                            <span className=\"verify-tick\"><img  src=\"/images/verifyIcon.png\"/></span>\r\n                            :\r\n                            null\r\n                          }\r\n                        <a href={root_url+user.JM_User_Profile_Url} target=\"_blank\"> <h4>{user.JM_Name}</h4></a> \r\n                            <p>{user.JM_Email}</p>\r\n                        </div>\r\n                        {/* <a href={root_url+user.JM_User_Profile_Url} target=\"_blank\">Follow</a> */}\r\n                    </div>\r\n                </div>\r\n              ) \r\n        })\r\nlet exploreContent=(\r\n        <div className=\"profile-sec pd-top1\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 offset-md-4\">                  \r\n                            {tabView}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"container\"> \r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 offset-md-2\">\r\n                        <div className=\"title\">\r\n                            {/* <h2>Explore</h2>\r\n                            <p>Find your favourite people</p> */}\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"profile-box\">                 \r\n                            {profileCard}                 \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <button className=\"btun\" onClick={this.seeMore}>See More</button>                   \r\n                    </div>\r\n                    </div>\r\n                </div>\r\n        )\r\n  let exploreItems=(\r\n            <div className=\"profile-sec pd-top1\">\r\n              <div className=\"row\">\r\n                  <div className=\"col-md-4 offset-md-4\">                  \r\n                      {tabView}\r\n                  </div>\r\n              </div>\r\n              <div className=\"container\"> \r\n                        <SearchItemNextPrev/>                            \r\n\r\n                        <Items/>\r\n               </div>\r\n            </div>\r\n\r\n        \r\n);\r\n    return (\r\n      <>     \r\n        {\r\n            this.state.isLoading ?           \r\n            <Loader/>\r\n            : \r\n            <>\r\n                <ProfileHeader/>\r\n                {\r\n                 this.state.tab_people ? \r\n                    exploreContent \r\n                 :                  \r\n                    exploreItems  \r\n                }\r\n                \r\n                <FooterClass/>    \r\n            </>  \r\n             \r\n        }        \r\n     \r\n    \r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default Explore;\r\n","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\Settings.js",["2006","2007","2008","2009","2010"],"import React, { Component }from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport FooterClass from '../header_footer/FooterClass';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\n\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport ProfileNav from './ProfileNav';\r\nimport ProfileHeader from '../header_footer/ProfileHeader';\r\nimport {Helmet} from 'react-helmet';\r\nimport API from '../services/API';\r\nimport PhoneAndroidIcon from '@material-ui/icons/PhoneAndroid';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport GoogleLogin from 'react-google-login';\r\nimport GoogleLogout from 'react-google-login';\r\n \r\nimport Modal from 'react-bootstrap/Modal'\r\nclass Settings extends Component\r\n{\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {     \r\n       JM_ID: parseInt(localStorage.getItem('JM_ID')), \r\n       Current_Password:'',\r\n       New_Password:'',\r\n       Confirm_Password:'',\r\n       JM_Acc_No:'',\r\n       JM_Acc_Code:'',\r\n       JM_SWIFT_Code:'',\r\n       JM_Beneficiary_Name:'',\r\n       Social_Widget_Position:'',\r\n       userDetails:[],\r\n       JM_Name:'',\r\n       JM_Description:'',\r\n       JM_Social_Widget_Position:'',\r\n       base_url: process.env.REACT_APP_API_URL,\r\n       root_url: process.env.REACT_APP_ROOT_URL,\r\n       defaultActiveKey:'',\r\n       JM_Email:'',\r\n       JM_Notify_Pref:'',\r\n       Validation:false,\r\n       JM_SMS_Pref:'',\r\n       JM_Email_Pref:'',\r\n       JM_Phone:'',\r\n       isValidPhone:false,\r\n       notific_pref:[],\r\n       Vid_Aud_Msg_Email:'Y',\r\n       Vid_Aud_Msg_SMS:'Y',\r\n\r\n       Req_Reminder_Email:'Y',\r\n       Req_Reminder_SMS:'N',\r\n\r\n       Goods_Purchased_Email:'Y',\r\n       Goods_Purchased_SMS:'N',\r\n\r\n       Gift_Donation_Email:'Y',\r\n       Gift_Donation_SMS:'N',\r\n       JM_Phone_Bank:'',\r\n       JM_Profile_Name:'',\r\n       JM_Contact_Id:'',\r\n       JM_Fund_Id:'',\r\n       JM_Password:'',\r\n       showPaypal:false,\r\n\r\n       isNormalUser:false,\r\n       old_email:'',\r\n       JM_Google_ID:'NA',\r\n       GoogleResponse: [], \r\n       showGoogleModal: false,\r\n       expy_email:''\r\n    }\r\n   \r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    ////console.log(this.props.location.userDetails)  \r\n    //const userDetails=this.props.location.userDetails;\r\n    //API.isActive();\r\n    this.Get_User_Details();\r\n  }\r\n\r\n  async Get_User_Details() {\r\n    var id = parseInt(localStorage.getItem('JM_ID'));\r\n    var JSONdata = {\r\n      JM_ID: id\r\n    };\r\n    const API_url = this.state.base_url + \"admin/userDetailsAllSettings\";\r\n    const response = await fetch(API_url, {\r\n      method: 'post',\r\n      headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n      body: JSON.stringify(JSONdata)\r\n    });\r\n    const data1 = await response.json();\r\n\r\n    if (data1 != null && data1.status > 0) \r\n    {\r\n      const data=API.decryptJson(data1.flag);\r\n      let userDetails=data.userDetails;\r\n      if(userDetails!=null && userDetails.length > 0)\r\n      {\r\n        let JM_Name=userDetails[0].JM_Name;\r\n        let JM_Description=userDetails[0].JM_Description;\r\n        let JM_Social_Widget_Position=userDetails[0].JM_Social_Widget_Position;\r\n        this.setState({userDetails,JM_Name,JM_Description,JM_Social_Widget_Position});\r\n        this.setState({       \r\n          JM_Acc_No:userDetails[0].JM_Acc_No,\r\n          JM_Acc_Code:userDetails[0].JM_Acc_Code,\r\n          JM_SWIFT_Code:userDetails[0].JM_SWIFT_Code,\r\n          JM_Beneficiary_Name:userDetails[0].JM_Beneficiary_Name,\r\n          JM_Email:userDetails[0].JM_Email,\r\n          JM_Notify_Pref:userDetails[0].JM_Notify_Pref,\r\n          JM_PayPal_Name:userDetails[0].JM_PayPal_Name==='NA'?'':userDetails[0].JM_PayPal_Name,\r\n          JM_PayPal_Phone:userDetails[0].JM_PayPal_Phone==='NA' ? '' : userDetails[0].JM_PayPal_Phone,\r\n          JM_PayPal_Email:userDetails[0].JM_PayPal_Email==='NA' || userDetails[0].JM_PayPal_Email==='Na'? '' : userDetails[0].JM_PayPal_Email,\r\n          JM_PayPal_UserName:userDetails[0].JM_PayPal_UserName,\r\n          JM_SMS_Pref:userDetails[0].JM_SMS_Pref,\r\n          JM_Email_Pref:userDetails[0].JM_Email_Pref,\r\n          JM_Phone:userDetails[0].JM_Phone,\r\n          JM_Phone_Bank:userDetails[0].JM_Phone_Bank,\r\n          JM_Profile_Name_ID:userDetails[0].JM_User_Profile_Url + userDetails[0].JM_ID,\r\n          JM_Contact_Id:userDetails[0].JM_Contact_Id,\r\n          JM_Fund_Id:userDetails[0].JM_Fund_Id,\r\n          old_email:userDetails[0].JM_Email,\r\n          isNormalUser: userDetails[0].JM_Google_ID!=='' && userDetails[0].JM_Google_ID!=='NA' && userDetails[0].JM_Google_ID.length > 10 ? false : true,\r\n        });\r\n        //110280980867140553009\r\n      }\r\n\r\n      if(data.notific_pref!=null && data.notific_pref.length > 0)\r\n      {\r\n        this.setState({\r\n          Vid_Aud_Msg_Email:data.notific_pref[0].Vid_Aud_Msg_Email,\r\n          Vid_Aud_Msg_SMS:data.notific_pref[0].Vid_Aud_Msg_SMS,\r\n          Req_Reminder_Email:data.notific_pref[0].Req_Reminder_Email,\r\n          Req_Reminder_SMS:data.notific_pref[0].Req_Reminder_SMS,\r\n          Goods_Purchased_Email:data.notific_pref[0].Goods_Purchased_Email,\r\n          Goods_Purchased_SMS:data.notific_pref[0].Goods_Purchased_SMS,\r\n          Gift_Donation_Email:data.notific_pref[0].Gift_Donation_Email,\r\n          Gift_Donation_SMS:data.notific_pref[0].Gift_Donation_SMS,\r\n        })\r\n      }\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  onChangeHandle=(e)=>{\r\n    var value= e.target.value.replace(/'/g, \"\\\\'\");  \r\n    this.setState({[e.target.name]:e.target.value});\r\n  }\r\n  updatePayout=async (e)=>{\r\n      document.getElementById(\"msg\").innerHTML='';\r\n      document.getElementById(\"msg\").style.color='red';\r\n     // if(this.state.JM_PayPal_Phone.length > 0)\r\n     // { document.getElementById(\"msg\").innerHTML='* Paypal details already exist' ;return false}\r\n\r\n\r\n\r\n    if(this.state.JM_Beneficiary_Name.length===0)\r\n       { document.getElementById(\"msg\").innerHTML='* Beneficiary Name'; return false}\r\n\r\n    if(this.state.JM_Acc_No.length===0)\r\n       { document.getElementById(\"msg\").innerHTML='* Enter A/C No'; return false}\r\n       if(this.state.JM_Acc_No.length > 18)\r\n       { document.getElementById(\"msg\").innerHTML='* A/C No must be within 18 digits'; return false}\r\n        \r\n        \r\n    if(this.state.JM_Acc_Code.length===0)\r\n     { document.getElementById(\"msg\").innerHTML='* Enter 11 Characters IFSC' ;return false}\r\n     if(this.state.JM_Acc_Code.length!==11)\r\n     { document.getElementById(\"msg\").innerHTML='* The ifsc must be 11 characters.' ;return false}\r\n     //The ifsc must be 11 characters.\r\n\r\n     if(this.state.JM_Phone_Bank.length!==10)\r\n     { document.getElementById(\"msg\").innerHTML='* Enter Phone Number' ;return false}\r\n\r\n     if(this.state.JM_Phone_Bank.length === 10)\r\n     {\r\n \r\n       let resp=await API.validatePhoneBank(this.state.JM_Phone_Bank);\r\n       //console.log(resp)\r\n       var msg=resp? '' : 'Use another phone number';   \r\n       if(resp)\r\n       {\r\n           document.getElementById(\"msg_prof_other\").style.color='green';\r\n          document.getElementById(\"msg\").innerHTML=msg; \r\n        }\r\n       else\r\n       {\r\n        document.getElementById(\"msg\").innerHTML=msg; \r\n        return false;    \r\n       }\r\n           \r\n      \r\n     }\r\n\r\n\r\n    if(this.state.JM_Acc_No.length > 0 && this.state.JM_Acc_Code.length > 0 && this.state.JM_Phone_Bank.length ===10)\r\n    {\r\n       let API_url=process.env.REACT_APP_API_URL+\"admin/UpdatePayoutDetails\";\r\n      fetch(API_url, {\r\n        method: 'post',\r\n        headers: {\"Content-Type\": \"application/json\",\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify({\r\n          JM_Acc_No:this.state.JM_Acc_No,\r\n          JM_Acc_Code:this.state.JM_Acc_Code,\r\n          JM_ID:this.state.JM_ID,\r\n          JM_SWIFT_Code:this.state.JM_SWIFT_Code,\r\n          JM_Beneficiary_Name:this.state.JM_Beneficiary_Name,\r\n          JM_Social_Widget_Position:'',\r\n          JM_Phone_Bank:this.state.JM_Phone_Bank\r\n        })\r\n          })\r\n          .then(response => response.json())\r\n          .then(async data => \r\n          {  \r\n              if(data.status===1 || data.status===2)\r\n              {\r\n                      var JSONdata={        \r\n                        JM_ID:this.state.JM_ID,\r\n                        acc_name:this.state.JM_Beneficiary_Name,\r\n                        acc_num:this.state.JM_Acc_No,\r\n                        acc_ifsc:this.state.JM_Acc_Code,\r\n                        reference_id:this.state.JM_Profile_Name_ID,          \r\n                        email:this.state.JM_Email,       \r\n                        contact:this.state.JM_Phone_Bank,\r\n                        swift_code:this.state.JM_SWIFT_Code,\r\n                        contact_id:this.state.JM_Contact_Id,\r\n                        fund_id:this.state.JM_Fund_Id,\r\n                      }\r\n                      document.getElementById(\"msg\").style.color='red';\r\n                      document.getElementById(\"msg\").innerHTML='Please, wait....'    \r\n                      var response=await API.razorpay_x(JSONdata);\r\n                      ////console.log(response);  \r\n                      if(response.status===1)           \r\n                      {\r\n                         console.log(response.fund_id);\r\n                        this.setState({\r\n                          JM_Fund_Id:response.fund_id\r\n                        })\r\n                        document.getElementById(\"msg\").style.color='green';\r\n                        document.getElementById(\"msg\").innerHTML=data.msg;    \r\n                        //this.hideMessage('payout');  \r\n                       // window.location.href='/me'; \r\n                        setTimeout(function() {  \r\n                          window.location.href='/me';   \r\n                         }, 3000); \r\n                      }\r\n                      else\r\n                      {\r\n                        document.getElementById(\"msg\").style.color='red';\r\n                        document.getElementById(\"msg\").innerHTML=data.msg;   \r\n                        return false;                      \r\n                      }\r\n              \r\n              }\r\n              else\r\n              {\r\n                document.getElementById(\"msg\").innerHTML=data.msg; \r\n                this.hideMessage('payout');     \r\n              }                 \r\n           \r\n      });\r\n \r\n    }\r\n    else\r\n    {\r\n      alert('unable to update');\r\n    }\r\n  }\r\n\r\n  //12-aug-2021\r\n  removeBankDetails=async (type)=>{\r\n    document.getElementById(\"msg_payPal\").style.color='red';\r\n    document.getElementById(\"msg\").style.color='red';\r\n    document.getElementById(\"msg\").innerHTML='';\r\n    document.getElementById(\"msg_payPal\").innerHTML='';\r\n      var JSONData={\r\n        type:type\r\n      }\r\n      const data=await API.postData(JSONData,'removeBankPayPal')\r\n      if(data.status===1)\r\n      {\r\n        if(type==='B')\r\n        {\r\n          document.getElementById(\"msg\").style.color='green';\r\n          document.getElementById(\"msg\").innerHTML='Details has been removed';    \r\n\r\n          this.setState({\r\n            JM_Acc_No:'',\r\n            JM_Acc_Code:'',JM_Beneficiary_Name:'',JM_SWIFT_Code:'',JM_Phone_Bank:''\r\n          })\r\n\r\n\r\n          setTimeout(function() {       \r\n            document.getElementById(\"msg\").innerHTML='';            \r\n           }, 2000); \r\n        }\r\n        else if(type==='P')\r\n        {          \r\n          document.getElementById(\"msg_payPal\").style.color='green';\r\n          document.getElementById(\"msg_payPal\").innerHTML='Details has been removed'; \r\n          this.setState({\r\n            JM_PayPal_Name:'',\r\n            JM_PayPal_Phone:'',JM_PayPal_Email:''\r\n          })\r\n          setTimeout(function() {       \r\n            document.getElementById(\"msg_payPal\").innerHTML='';            \r\n           }, 2000); \r\n        }\r\n      }\r\n      else\r\n      {\r\n        if(type==='B')\r\n        {\r\n          document.getElementById(\"msg\").style.color='red';\r\n          document.getElementById(\"msg\").innerHTML='Failed to remove'; \r\n          setTimeout(function() {       \r\n            document.getElementById(\"msg\").innerHTML='';            \r\n           }, 2000);     \r\n        }\r\n        else if(type==='P')\r\n        {\r\n          document.getElementById(\"msg_payPal\").style.color='red';\r\n          document.getElementById(\"msg_payPal\").innerHTML='Failed to remove';  \r\n          setTimeout(function() {       \r\n            document.getElementById(\"msg_payPal\").innerHTML='';            \r\n           }, 2000);   \r\n        }\r\n      }\r\n\r\n  }\r\n\r\n  isConfirm=(id)=>e=>\r\n  {\r\n    confirmAlert({\r\n      title: 'Confirm Remove',\r\n      message: 'Are you sure you want to remove the bank deatils?',\r\n      buttons: [\r\n          {\r\n          label: 'Yes',\r\n          onClick: () => this.removeBankDetails(id)\r\n          },\r\n          {\r\n          label: 'No',\r\n          onClick: () => console.log(\"cancel\")\r\n          }\r\n      ],\r\n      closeOnEscape: false,\r\n      closeOnClickOutside: false,\r\n      });\r\n  }\r\n\r\n\r\n  updatePayPal=()=>{\r\n\r\n    document.getElementById(\"msg_payPal\").style.color='red';\r\n    document.getElementById(\"msg_payPal\").innerHTML='';\r\n   // if(this.state.JM_Acc_Code.length > 0)\r\n   // { document.getElementById(\"msg_payPal\").innerHTML='* Bank Details already exist' ;return false}\r\n    \r\n    if(this.state.JM_PayPal_Name.length===0 || this.state.JM_PayPal_Name.length==='NA')\r\n    { document.getElementById(\"msg_payPal\").innerHTML='* Enter Name'; return false}\r\n        \r\n    if(this.state.JM_PayPal_Phone.length===0)\r\n      { document.getElementById(\"msg_payPal\").innerHTML='* Enter Phone Number' ;return false}\r\n\r\n      if(this.state.JM_PayPal_Email.length===0)\r\n      { document.getElementById(\"msg_payPal\").innerHTML='* Enter Username or Email' ;return false}\r\n\r\n   \r\n      \r\n\r\n    if(this.state.JM_PayPal_Name.length > 0 && this.state.JM_PayPal_Phone.length > 0 && this.state.JM_PayPal_Email.length > 0)\r\n    {\r\n        let API_url=process.env.REACT_APP_API_URL+\"admin/UpdatePayoutDetailsPayPal\";\r\n      fetch(API_url, {\r\n        method: 'post',\r\n        headers: {\"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify({\r\n          JM_PayPal_Name:this.state.JM_PayPal_Name,\r\n          JM_PayPal_Phone:this.state.JM_PayPal_Phone,\r\n          JM_PayPal_Email:this.state.JM_PayPal_Email,\r\n          JM_ID:this.state.JM_ID,            \r\n        })\r\n          })\r\n          .then(response => response.json())\r\n          .then(data => \r\n          {  \r\n              if(data.status===1 || data.status===2)\r\n              {\r\n                ////console.log(data.msg);             \r\n                document.getElementById(\"msg_payPal\").style.color='green';\r\n                document.getElementById(\"msg_payPal\").innerHTML=data.msg;    \r\n                this.hideMessage('payout');  \r\n                setTimeout(function() {\r\n       \r\n                  document.getElementById(\"msg_payPal\").innerHTML='';   \r\n                  window.location.href='/me';   \r\n                 }, 3000); \r\n               \r\n              }\r\n              else\r\n              {\r\n                document.getElementById(\"msg_payPal\").style.color='red';\r\n                document.getElementById(\"msg\").innerHTML='unable to update'; \r\n                this.hideMessage('payout');     \r\n              }                 \r\n            \r\n      });\r\n\r\n    }\r\n    else\r\n    {\r\n      alert('unable to update');\r\n    }\r\n  }\r\n  hideMessage=(id)=>{\r\n    setTimeout(function() {\r\n     // document.getElementById(id).innerHTML='';  \r\n          var element = document.getElementById(id);\r\n          element.classList.remove(\"show\");\r\n     }, 2000);    \r\n     \r\n  }\r\n\r\n  updatePassword=(e)=>{\r\n\r\n    document.getElementById(\"msg_security\").innerHTML='';\r\n    document.getElementById(\"msg_security\").style.color='red';\r\n    if(this.state.Current_Password.length===0)\r\n    { document.getElementById(\"msg_security\").innerHTML='Enter Current Password'; return false}\r\n     \r\n  if(this.state.New_Password.length===0)\r\n    { document.getElementById(\"msg_security\").innerHTML='Enter New Password' ;return false}\r\n\r\n          \r\n    if(this.state.Confirm_Password.length===0)\r\n    { document.getElementById(\"msg_security\").innerHTML='Enter Confirm Password' ;return false}\r\n\r\n    if(this.state.Confirm_Password!==this.state.New_Password)\r\n    { document.getElementById(\"msg_security\").innerHTML=\"New Password and Confirm password does't Matched \";return false;}\r\n\r\n    if(this.state.Current_Password.length > 0 && this.state.New_Password.length > 0 && this.state.Confirm_Password.length > 0) \r\n    {\r\n       let API_url=process.env.REACT_APP_API_URL+\"admin/updatePassword\";\r\n      fetch(API_url, {\r\n        method: 'post',\r\n        headers: {\"Content-Type\": \"application/json\",\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify({Current_Password:this.state.Current_Password,New_Password:this.state.New_Password,Confirm_Password:this.state.Confirm_Password,JM_ID:this.state.JM_ID})\r\n          })\r\n          .then(response => response.json())\r\n          .then(data => \r\n          {  \r\n              if(data.status===1 || data.status===2)\r\n              {\r\n                ////console.log(data.msg);             \r\n                document.getElementById(\"msg_security\").style.color='green';\r\n                document.getElementById(\"msg_security\").innerHTML=data.msg;    \r\n               // this.hideMessage(\"msg_security\");    \r\n                setTimeout(function() {\r\n       \r\n                  document.getElementById(\"msg_security\").innerHTML='';   \r\n                  window.location.reload();         \r\n                 }, 2000); \r\n                \r\n              }\r\n              else\r\n              {\r\n                document.getElementById(\"msg_security\").style.color='red';\r\n                document.getElementById(\"msg_security\").innerHTML=data.msg; \r\n                this.hideMessage(\"msg_security\");     \r\n              }                 \r\n           \r\n      });\r\n \r\n    }\r\n    else\r\n    {\r\n      alert('unable to update');\r\n    }\r\n  }\r\n\r\n  updateProfileSettings=()=>{\r\n\r\n    document.getElementById(\"msg_prof_set\").style.color='red';\r\n    document.getElementById(\"msg_prof_set\").innerHTML='';\r\n      if(this.state.JM_Name.length===0 )\r\n        { document.getElementById(\"msg_prof_set\").innerHTML='* Enter Profile Name'; return false}\r\n\r\n      if(this.state.JM_Name.length > 0 )\r\n      {\r\n        var JM_Description= this.state.JM_Description.replace(/'/g, \"\\\\'\");  \r\n        var JM_Name= this.state.JM_Name.replace(/'/g, \"\\\\'\");  \r\n        let API_url=process.env.REACT_APP_API_URL+\"admin/updateProfileSettings\";\r\n        fetch(API_url, {\r\n          method: 'post',\r\n          headers: {\"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n          body: JSON.stringify({\r\n                JM_Name:JM_Name,\r\n                JM_Description:JM_Description,\r\n                JM_Social_Widget_Position:this.state.JM_Social_Widget_Position,\r\n                JM_ID:this.state.JM_ID             \r\n              })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => \r\n            {  \r\n                if(data.status===1 || data.status===2)\r\n                {\r\n                  document.getElementById(\"msg_prof_set\").style.color='green';        \r\n                  document.getElementById(\"msg_prof_set\").innerHTML=data.msg;    \r\n                  this.hideMessage('msg_prof_set');                             \r\n                }\r\n                else\r\n                {\r\n                  document.getElementById(\"msg_prof_set\").style.color='red';\r\n                  document.getElementById(\"msg_prof_set\").innerHTML=data.msg; \r\n                  this.hideMessage('msg_prof_set');     \r\n                }                 \r\n              \r\n        });\r\n      }\r\n  }\r\n\r\n  availableEmail = (e) =>{\r\n    // this.onChangeHandle(e);\r\n    // let email=e.target.value;\r\n    // let valid=true;\r\n    // document.getElementById(\"email_msg\").innerHTML='';\r\n    // if(email.length > 0 && email.includes('@') && email.includes('.'))\r\n    // {\r\n    //           let API_url=this.state.base_url+\"admin/ValidateEmail\";\r\n    //           fetch(API_url, {\r\n    //           method: 'post',\r\n    //           headers: {\"Content-Type\": \"application/json\"},\r\n    //           body: JSON.stringify({JM_Email:email})\r\n    //             }).then(function(response) {\r\n    //               return response.json();\r\n    //             }).then(function(data) {\r\n               \r\n    //           if(data.status===1 || data.status===2)\r\n    //           {\r\n    //             //console.log(data.msg);             \r\n    //             document.getElementById(\"email_msg\").innerHTML=data.msg;\r\n    //             valid=true;           \r\n    //           }\r\n    //           else\r\n    //           {\r\n    //             document.getElementById(\"email_msg\").innerHTML='';            \r\n    //             valid=false;\r\n                \r\n    //           }                 \r\n\r\n    //         });\r\n\r\n    //   }        \r\n    //   else\r\n    //   {\r\n    //   document.getElementById(\"email_msg\").innerHTML='Not a valid email';\r\n    //   valid=false;\r\n    //   }  \r\n    //   this.setState({Validation:valid});\r\n  }\r\n  updateEmail=(e)=>{\r\n\r\n          if(API.isValidEmail(this.state.JM_Email)===false)\r\n          {\r\n            document.getElementById(\"msg_email\").style.color='red';\r\n            document.getElementById(\"msg_email\").innerHTML=\"Invalid email\";   \r\n              return false;\r\n          }\r\n          if(this.state.JM_Password.length===0)\r\n          {\r\n            document.getElementById(\"msg_email\").style.color='red';\r\n            document.getElementById(\"msg_email\").innerHTML=\"Enter password\";   \r\n            return false;\r\n          }\r\n\r\n   \r\n          var flagData = {\r\n            JM_Email:this.state.JM_Email,\r\n            JM_ID:this.state.JM_ID,\r\n            JM_Password:this.state.JM_Password\r\n          };\r\n    \r\n          const flag=API.encryptData(flagData);\r\n          var JSONdata = {\r\n            flag: flag\r\n          };\r\n    \r\n\r\n        let API_url=process.env.REACT_APP_API_URL+\"admin/updateEmail\";\r\n        document.getElementById(\"msg_email\").style.color='red';\r\n        fetch(API_url, {\r\n          method: 'post',\r\n          headers: {\"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n          body: JSON.stringify(JSONdata)\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => \r\n            {  \r\n                if(data.status===1)\r\n                {\r\n                  //console.log(data.msg);       \r\n                  document.getElementById(\"msg_email\").style.color='green';\r\n                  document.getElementById(\"msg_email\").innerHTML=data.msg;    \r\n                  this.hideMessage(\"msg_email\");                             \r\n                }\r\n                else\r\n                {\r\n\r\n                  document.getElementById(\"msg_email\").innerHTML=data.msg; \r\n                  this.hideMessage(\"msg_email\");     \r\n                }                 \r\n            \r\n        });\r\n\r\n     \r\n  }\r\n\r\n\r\n  responseGoogle = (response) => {\r\n\r\n    let GoogleResponse;\r\n    if (typeof response !== \"undefined\") {\r\n      if (typeof response.profileObj === 'undefined') {\r\n        return false;\r\n      }\r\n      document.getElementById(\"msg_email\").innerHTML ='';\r\n      GoogleResponse = response.profileObj;\r\n\r\n      if(GoogleResponse.email!==this.state.old_email)\r\n      {\r\n         document.getElementById(\"msg_email\").innerHTML = \"Select your current email id\";\r\n          return false;\r\n      }\r\n    \r\n      if (GoogleResponse.googleId.length > 0 && GoogleResponse.email.length > 0) \r\n      {\r\n        this.setState({ GoogleResponse: GoogleResponse, showGoogleModal: true });\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n  GoogleLogout=(response)=>{\r\n    console.log(response);\r\n    //idpiframe_initialization_failed : //client doesn't have third party cookies enabled\r\n    //popup_closed_by_user :The user closed the popup before finishing the sign in flow.\r\n  }\r\n  updateEmailviaGoogle=(response)=>{\r\n    let GoogleResponse;\r\n    if (typeof response !== \"undefined\") \r\n    {\r\n        if (typeof response.profileObj === 'undefined') {\r\n          return false;\r\n        }\r\n        document.getElementById(\"msg_email_google\").innerHTML ='';\r\n        GoogleResponse = response.profileObj;\r\n\r\n      if(GoogleResponse.email===this.state.old_email)\r\n      {\r\n        document.getElementById(\"msg_email_google\").innerHTML ='Select another email id to update';\r\n        return false;\r\n      }\r\n\r\n  \r\n      let flagData = {\r\n        JM_Email: GoogleResponse.email,\r\n        JM_ID:this.state.JM_ID,       \r\n        JM_Google_ID: GoogleResponse.googleId\r\n      };\r\n\r\n      const flag=API.encryptData(flagData);\r\n      let JSONdata = {\r\n        flag: flag\r\n      };\r\n\r\n\r\n      let API_url = this.state.base_url + \"admin/ValidateEmail_after_login\";\r\n      fetch(API_url, {\r\n        method: 'post',\r\n        headers: {\"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      }).then(function (response) {\r\n        return response.json();\r\n      }).then(data => { \r\n        if (data.status === 1) \r\n        {\r\n          document.getElementById(\"msg_email_google\").style.color='green';\r\n          document.getElementById(\"msg_email_google\").innerHTML = data.msg;\r\n          window.location.reload();\r\n      \r\n        }\r\n        else if(data.status === -1 )\r\n        {\r\n          document.getElementById(\"msg_email_google\").innerHTML = data.msg;      \r\n          return false;\r\n        }\r\n        else \r\n        {\r\n          document.getElementById(\"msg_email_google\").innerHTML = data.msg;      \r\n          return false;\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n  \r\n \r\n\r\n\r\n  updateNotiPref2=async (e)=>{\r\n    try {\r\n\r\n\r\n\r\n\r\n      var JSONdata = {\r\n        JM_ID: this.state.JM_ID,\r\n        JM_Email_Pref: this.state.JM_Email_Pref,\r\n        JM_SMS_Pref: this.state.JM_SMS_Pref\r\n      };\r\n      document.getElementById(\"msg_prof_other\").style.color='red';\r\n      let data=await API.postData(JSONdata,'updateNofityPref');\r\n      if(data.status===1)\r\n      {\r\n        document.getElementById(\"msg_prof_other\").style.color='green';\r\n        document.getElementById(\"msg_prof_other\").innerHTML=data.msg; \r\n        setTimeout(function() {\r\n          document.getElementById(\"msg_prof_other\").innerHTML='';            \r\n         }, 2000);   \r\n      }\r\n      else\r\n      {\r\n        document.getElementById(\"msg_prof_other\").innerHTML=data.msg; \r\n        return false;\r\n      }\r\n    } catch (error) \r\n    {\r\n      document.getElementById(\"msg_prof_other\").innerHTML='Network error, try later'; \r\n    }\r\n  \r\n  }\r\n  onChangePhoneNumber= async(e)=>{\r\n    var JM_Phone=e.target.value;\r\n    this.setState({\r\n      JM_Phone\r\n    })\r\n    let isNumber=API.matchNumberPattern(JM_Phone);\r\n   \r\n    if(!isNumber || JM_Phone.length > 10)\r\n    {\r\n      document.getElementById(\"msg_phone\").innerHTML='Please enter a valid phone number';    \r\n   \r\n      return false;\r\n    }\r\n  \r\n    if(JM_Phone.length === 10)\r\n    {\r\n\r\n      let resp=await API.validatePhone(JM_Phone);\r\n      //console.log(resp)\r\n      var msg=resp? '':'Use another number';      \r\n      document.getElementById(\"msg_phone\").innerHTML=msg;\r\n \r\n      this.setState({\r\n        isValidPhone:resp\r\n      })\r\n    }\r\n    else\r\n    {\r\n      document.getElementById(\"msg_phone\").innerHTML='Please enter a valid phone number';\r\n\r\n    }\r\n  }\r\n\r\n  onChangePhoneNumberBank=async (e)=>{\r\n    var JM_Phone_Bank=e.target.value;\r\n    this.setState({\r\n      JM_Phone_Bank\r\n    })\r\n    let isNumber=API.matchNumberPattern(JM_Phone_Bank);\r\n    document.getElementById(\"msg\").innerHTML='';\r\n    if(!isNumber || JM_Phone_Bank.length !==10 )\r\n    {\r\n      document.getElementById(\"msg\").innerHTML='Please enter a valid phone number of 10 digits'; \r\n      return false;\r\n    }\r\n    \r\n  \r\n  }\r\n\r\n  updatePhone=async (e)=>\r\n  {\r\n    if(this.state.isValidPhone)\r\n    {\r\n      var JSONdata={\r\n        JM_ID:this.state.JM_ID,\r\n        JM_Phone:this.state.JM_Phone\r\n      }\r\n      document.getElementById(\"msg_phone\").innerHTML='';\r\n      document.getElementById(\"msg_phone\").style.color='red';  \r\n      let updateResp=await API.postData(JSONdata,'updatePhone');\r\n      var msg=updateResp ? 'Update Successfully':'Use another number'; \r\n      document.getElementById(\"msg_phone\").style.color=updateResp?'green':'red';  \r\n      document.getElementById(\"msg_phone\").innerHTML=msg;\r\n      setTimeout(function() {\r\n       \r\n         document.getElementById(\"msg_phone\").innerHTML='';            \r\n        }, 2000); \r\n    }\r\n    else\r\n    {\r\n      document.getElementById(\"msg_phone\").innerHTML='Please enter a valid phone number';\r\n    }\r\n  }\r\n  isPhoneNumberExist=(e)=>{\r\n  \r\n    if(this.state.JM_Phone && this.state.JM_Phone.length > 0)\r\n    { \r\n      this.setState({ JM_SMS_Pref : 'Y'})\r\n    }\r\n    else\r\n    {\r\n      e.target.checked=false;\r\n      document.getElementById(\"JM_Phone\").focus();\r\n    }\r\n  }\r\n  updateNotiPref= async(e)=>{\r\n        var checked='N';\r\n        var id=e.target.id;\r\n        //console.log(id)\r\n        if(e.target.checked)\r\n        {\r\n          if(id==='Vid_Aud_Msg_Email')\r\n            this.setState({ Vid_Aud_Msg_Email:'Y'})\r\n          if(id==='Vid_Aud_Msg_SMS')\r\n            this.setState({ Vid_Aud_Msg_SMS:'Y'})\r\n\r\n          if(id==='Req_Reminder_Email')\r\n            this.setState({ Req_Reminder_Email:'Y'})\r\n          if(id==='Req_Reminder_SMS')\r\n            this.setState({ Req_Reminder_SMS:'Y'}) \r\n\r\n            if(id==='Goods_Purchased_Email')\r\n            this.setState({ Goods_Purchased_Email:'Y'})\r\n          if(id==='Goods_Purchased_SMS')\r\n            this.setState({ Goods_Purchased_SMS:'Y'}) \r\n            \r\n          if(id==='Gift_Donation_Email')\r\n            this.setState({ Gift_Donation_Email:'Y'})\r\n          if(id==='Gift_Donation_SMS')\r\n            this.setState({ Gift_Donation_SMS:'Y'}) \r\n\r\n            checked='Y';\r\n        }\r\n        else\r\n        {\r\n          if(id==='Vid_Aud_Msg_Email')\r\n            this.setState({ Vid_Aud_Msg_Email:'N'})\r\n          if(id==='Vid_Aud_Msg_SMS')\r\n            this.setState({ Vid_Aud_Msg_SMS:'N'})\r\n\r\n          if(id==='Req_Reminder_Email')\r\n            this.setState({ Req_Reminder_Email:'N'})\r\n          if(id==='Req_Reminder_SMS')\r\n            this.setState({ Req_Reminder_SMS:'N'}) \r\n\r\n            if(id==='Goods_Purchased_Email')\r\n            this.setState({ Goods_Purchased_Email:'N'})\r\n          if(id==='Goods_Purchased_SMS')\r\n            this.setState({ Goods_Purchased_SMS:'N'}) \r\n            \r\n          if(id==='Gift_Donation_Email')\r\n            this.setState({ Gift_Donation_Email:'N'})\r\n          if(id==='Gift_Donation_SMS')\r\n            this.setState({ Gift_Donation_SMS:'N'}) \r\n          checked='N';\r\n        }\r\n        //console.log(this.state.Vid_Aud_Msg_SMS)\r\n        var JSONdata={\r\n          JM_ID:this.state.JM_ID,\r\n          id:id,\r\n          checked:checked\r\n        }\r\n        let data=await API.postData(JSONdata,'updateNofityPref');\r\n        //console.log(data)\r\n  }\r\n  render(){\r\n  return (\r\n    <>\r\n         <Helmet>\r\n            <title>Settings | Expy </title>\r\n            <meta name=\"description\" content=\"Use Expy to SHARE all your important links, content and OFFER paid, personalized, premium features under one beautiful Bio-Link page. FREE and FAST to set up.\"></meta>\r\n        </Helmet>\r\n            \r\n    <ProfileHeader/>\r\n      <div className=\"profile-tab\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 text-center\">\r\n              <ProfileNav/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"setting-sec\">\r\n        \t<div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 offset-md-2\">\r\n                <div className=\"setting\">\r\n                  <div className=\"heading\">\r\n                    <h3>Account Settings</h3>\r\n                  </div>\r\n                  <Accordion defaultActiveKey={this.state.defaultActiveKey ===''? \"0\" : this.state.defaultActiveKey }>\r\n                    {/* Profile details */}\r\n                    <div className=\"crd\">\r\n                      <div className=\"head\">\r\n                        <Accordion.Toggle  as={Link} variant=\"link\" eventKey=\"0\">\r\n                          <h3>Profile Settings <AddCircleOutlineIcon/></h3>\r\n                          <p>General profile settings such as name and bio.</p>\r\n                        </Accordion.Toggle>\r\n                      </div>\r\n                      <Accordion.Collapse eventKey=\"0\"  id=\"profile\">\r\n                       <div className=\"crdbody\"> \r\n                        <label>Name</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"JM_Name\" placeholder=\"Name\" \r\n                        value={this.state.JM_Name} onChange={this.onChangeHandle}/>\r\n\r\n                         \r\n\r\n                        <label>Tagline (Default is your handle)</label>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Tagline\"\r\n                         name=\"JM_Description\"  value={this.state.JM_Description} onChange={this.onChangeHandle} />\r\n                        <label> Social Widget Position </label>\r\n                        <select className=\"form-control\" name=\"JM_Social_Widget_Position\" value={this.state.JM_Social_Widget_Position} onChange={this.onChangeHandle}>                         \r\n                          <option value=\"bottom\"> Bottom </option>\r\n                          <option value=\"top\"> Top </option>\r\n                        </select> \r\n                        <button className=\"btun\" onClick={this.updateProfileSettings}> Save Setting </button>\r\n                        <p id=\"msg_prof_set\" style={{color:'red'}}></p>\r\n                       </div>\r\n                      </Accordion.Collapse>\r\n                    </div>\r\n                    {/* payout details */}                \r\n\r\n                    \r\n                     <div className=\"crd\">\r\n                      <div className=\"head\">\r\n                        <Accordion.Toggle as={Link} variant=\"link\" eventKey=\"1\">\r\n                          <h3>Payout Details <AddCircleOutlineIcon/></h3>\r\n                          <p>Control your Payout Details with expy</p>\r\n                        </Accordion.Toggle>\r\n                      </div>\r\n                      <Accordion.Collapse eventKey=\"1\" id=\"payout\">\r\n                       <div className=\"crdbody\">    \r\n                         <h5>Bank Account Details</h5>  \r\n\r\n                         <label>Beneficiary Name </label>\r\n                          <input type=\"text\"name=\"JM_Beneficiary_Name\"  className=\"form-control\" placeholder=\"Beneficiary Name\" \r\n                          value={this.state.JM_Beneficiary_Name} onChange={this.onChangeHandle}/>  \r\n\r\n                         <label>Account No.</label>\r\n                          <input type=\"number\" min=\"0\" name=\"JM_Acc_No\"  className=\"form-control\" placeholder=\"A/C No.\" \r\n                          value={this.state.JM_Acc_No} onChange={this.onChangeHandle}/>\r\n\r\n                          <label>IFSC Code</label>\r\n                          <input type=\"text\" className=\"form-control\" placeholder=\"IFSC CODE\"  \r\n                          name=\"JM_Acc_Code\"  value={this.state.JM_Acc_Code} onChange={this.onChangeHandle}/>\r\n\r\n                         \r\n\r\n                          <label>SWIFT Code</label>\r\n                          <input type=\"text\" className=\"form-control\" placeholder=\"SWIFT CODE (Optional)\"  \r\n                          name=\"JM_SWIFT_Code\"  value={this.state.JM_SWIFT_Code} onChange={this.onChangeHandle}/>\r\n\r\n                           <label>Phone Number </label>\r\n                          <input type=\"number\"name=\"JM_Phone_Bank\" id=\"JM_Phone_Bank\" min=\"0\" max={\"10\"} \r\n                          className=\"form-control\" placeholder=\"Enter Phone Number\"  title=''\r\n                          value={this.state.JM_Phone_Bank} onChange={this.onChangePhoneNumberBank}/> \r\n                         <button className=\"btun\" onClick={this.updatePayout}>Save Setting</button>\r\n                        \r\n                           {/* <DeleteForeverIcon onClick={this.isConfirm('B')} style={{float:'right',cursor:'pointer',fontSize:'30px',color:'#ff4975'}}/> */}\r\n                         \r\n                         <p id=\"msg\" style={{color:'red'}}></p>\r\n\r\n                          <div className=\"title login\" style={{display:'none'}}>\r\n                            <h3>OR</h3>\r\n                          </div>\r\n                          {\r\n                            this.state.showPaypal===true?                          \r\n                          <div style={{display:'none'}}>\r\n                             <h5>PayPal Details</h5>\r\n                             <label>Name </label>\r\n                              <input type=\"text\"name=\"JM_PayPal_Name\"  className=\"form-control\" placeholder=\"Name\" \r\n                              value={this.state.JM_PayPal_Name} onChange={this.onChangeHandle}/>    \r\n                             <label>Phone No.</label>\r\n                              <input type=\"number\" min=\"0\" name=\"JM_PayPal_Phone\"  className=\"form-control\" placeholder=\"Phone No\" \r\n                              value={this.state.JM_PayPal_Phone} onChange={this.onChangeHandle}/>\r\n                              <label>Associated Username or Email</label>\r\n                              <input type=\"text\"name=\"JM_PayPal_Email\"  className=\"form-control\" placeholder=\"Associated Username or Email\" \r\n                              value={this.state.JM_PayPal_Email} onChange={this.onChangeHandle}/> \r\n\r\n                            <button className=\"btun\" onClick={this.updatePayPal}>Save Setting</button>\r\n                            \r\n                              {/* <DeleteForeverIcon onClick={this.isConfirm('P')} style={{float:'right',cursor:'pointer',fontSize:'30px',color:'#ff4975'}}/> */}\r\n                         \r\n                            <p id=\"msg_payPal\" style={{color:'red'}}></p>\r\n                            </div>\r\n                          :\r\n                          null\r\n                        }\r\n\r\n                       </div>\r\n                      \r\n                      </Accordion.Collapse>\r\n                    </div>\r\n               \r\n\r\n\r\n\r\n                    {/*change  password  */}\r\n                    <div className=\"crd\">\r\n                      <div className=\"head\">\r\n                        <Accordion.Toggle as={Link} variant=\"link\" eventKey=\"2\" >\r\n                          <h3>Security <AddCircleOutlineIcon/></h3>\r\n                          <p>Change your password and other security settings.</p>\r\n                        </Accordion.Toggle>\r\n                      </div>\r\n                          <Accordion.Collapse eventKey=\"2\" id=\"security\">\r\n                              <div className=\"crdbody\"> \r\n                                  <label>Email</label>\r\n                                  <input type=\"email\" className=\"form-control\" name=\"JM_Email\" placeholder=\"Enter Email\" \r\n                                  value={this.state.JM_Email} onChange={this.onChangeHandle} disabled={this.state.isNormalUser===true ? false:true}/>  \r\n                                    {\r\n                                    \r\n                                      this.state.isNormalUser===true ?    \r\n                                       <>                         \r\n                                          <input type=\"password\" className=\"form-control\" placeholder=\"Enter Password\"\r\n                                          name=\"JM_Password\" onChange={this.onChangeHandle} value={this.state.JM_Password} />                                                               \r\n                                          <button className=\"btun\" disabled={this.state.Validation} onClick={this.updateEmail}> Update Email</button>\r\n                                       </>\r\n                                      :\r\n                                \r\n                                        <>\r\n                                          {/* <GoogleLogin className=\"btun\" style={{color:'red',cursor:'pointer'}} id=\"google_btn\"\r\n                              \r\n                                          clientId={process.env.REACT_APP_Google_Client_Id} \r\n                                    \r\n                                          render={renderProps => (\r\n                                            <button onClick={renderProps.onClick} className=\"btun\"  disabled={renderProps.disabled}>Verify and update email</button>\r\n                                          )}\r\n                                          buttonText=\"Validate and update email\"\r\n                                          onSuccess={this.responseGoogle}\r\n                                          onFailure={this.responseGoogleFaild}\r\n                                          cookiePolicy={'single_host_origin'}\r\n                                    \r\n                                        /> */}\r\n                                              <Modal\r\n                                                size=\"sm\"\r\n                                                show={this.state.showGoogleModal}\r\n                                                onHide={() => this.setState({ showGoogleModal: false, expy_email: '' })}\r\n                                                aria-labelledby=\"example-modal-sizes-title-sm\"\r\n                                                backdrop=\"static\"\r\n                                                keyboard={false}\r\n                                                centered\r\n                                              >\r\n                                                <Modal.Header closeButton>\r\n                                                  <Modal.Title id=\"example-modal-sizes-title-sm\" style={{ fontSize: '15px' }}>\r\n                                                    Update email\r\n                                                  </Modal.Title>\r\n                                                </Modal.Header>\r\n                                                <Modal.Body>\r\n                                                  {/* <input type=\"text\" className=\"form-control\" placeholder=\"Enter new email\" name=\"expy_email\" \r\n                                                  value={this.state.expy_email}\r\n                                                  onChange={this.onChangeHandle}\r\n                                                  /> */}\r\n                                                                                               \r\n                                                      <GoogleLogin className=\"loginBtn\" style={{color:'red',cursor:'pointer'}}                                                      \r\n                                                          clientId={process.env.REACT_APP_Google_Client_Id}  \r\n                                                          buttonText=\"Update a new email id\"\r\n                                                          onSuccess={this.updateEmailviaGoogle}\r\n                                                          onFailure={this.responseGoogleFaild}\r\n                                                          isSignedIn={false}\r\n                                                          // cookiePolicy={'single_host_origin'}\r\n                                                        />\r\n\r\n                                                       {/* <GoogleLogout\r\n                                                         clientId={process.env.REACT_APP_Google_Client_Id}  \r\n                                                          buttonText=\"Logout\"\r\n                                                          onLogoutSuccess={this.GoogleLogout}                                                          \r\n                                                        >\r\n                                                        </GoogleLogout> \r\n                                          */}\r\n                                                  <p id='msg_email_google' style={{ fontSize: '15px', color: 'red', width: '100%' }}></p>\r\n                                                </Modal.Body>\r\n                                                <Modal.Footer>                                                  \r\n                                                    \r\n                                                </Modal.Footer>\r\n                                              </Modal>\r\n                                      </>\r\n                                    }\r\n                                 \r\n\r\n                                  <p id=\"msg_email\" style={{color:'red'}}></p>\r\n\r\n                                  <hr></hr>\r\n                                  \r\n                                   <label>Phone Number </label>\r\n                                    <input type=\"number\"name=\"JM_Phone\" id=\"JM_Phone\" min=\"0\" max={\"10\"} className=\"form-control\" placeholder=\"Enter Phone Number\" \r\n                                    value={this.state.JM_Phone} onChange={this.onChangePhoneNumber}/> \r\n                                  <button className=\"btun\" onClick={this.updatePhone}>Update Phone</button>\r\n                                  <p id=\"msg_phone\" style={{color:'red'}}></p>\r\n                                  \r\n                                  <hr></hr>\r\n                                  <label>Current Password</label>\r\n                                  <input type=\"password\" className=\"form-control\" placeholder=\"Current Password\" \r\n                                  name=\"Current_Password\" onChange={this.onChangeHandle} value={this.state.Current_Password} />\r\n                                  <label>New Password</label>\r\n                                  <input type=\"password\" className=\"form-control\" placeholder=\"New Password\"\r\n                                  name=\"New_Password\" onChange={this.onChangeHandle} value={this.state.New_Password} />\r\n                                  <label>Confirm Password</label>\r\n                                  <input type=\"password\" className=\"form-control\" placeholder=\"Confirm Password\"\r\n                                    name=\"Confirm_Password\" onChange={this.onChangeHandle} value={this.state.Confirm_Password} />\r\n                                  <button className=\"btun\" onClick={this.updatePassword}>Update Password</button>\r\n                                  <p id=\"msg_security\" style={{color:'red'}}></p>\r\n                          </div>\r\n                          </Accordion.Collapse>\r\n                       </div>\r\n                     {/*change  others  */}\r\n                    <div className=\"crd\" style={{display:'block'}}>\r\n                      <div className=\"head\">\r\n                        <Accordion.Toggle  as={Link} variant=\"link\" eventKey=\"3\">\r\n                          <h3>Notification Preferences <AddCircleOutlineIcon/></h3>\r\n                          <p></p>\r\n                        </Accordion.Toggle>\r\n                      </div>\r\n                      <Accordion.Collapse eventKey=\"3\"  id=\"others\">\r\n\r\n                      \r\n                          \r\n\r\n                       <div className=\"crdbody\">  \r\n                        \r\n                          <div className=\"row\" style={{display:'none'}}>\r\n                              <div className=\"col-md-6\">                                        \r\n                                <h5>Email </h5>                              \r\n                              </div>\r\n                              <div className=\"col-md-6\">     \r\n                                  <input type=\"radio\" className=\"globalradio\"  id=\"chooseType_1\"   onClick={()=> this.setState({ JM_Email_Pref : 'Y'})} \r\n                                  name=\"email_pref\" checked={this.state.JM_Email_Pref==='Y' ? true : false}/>\r\n                                          <label for=\"chooseType_1\">Yes</label>\r\n                            \r\n                                  <input type=\"radio\" className=\"globalradio\"   onClick={()=> this.setState({ JM_Email_Pref : 'N'})} \r\n                                  name=\"email_pref\" id=\"chooseType_2\"  checked={this.state.JM_Email_Pref==='N' ? true : false}/>\r\n                                    <label for=\"chooseType_2\">No</label> \r\n                              \r\n                              </div>\r\n                          </div>\r\n                          <div className=\"row\" style={{display:'none'}}>\r\n                              <div className=\"col-md-6\">                                        \r\n                                <h5>SMS </h5>                              \r\n                              </div>\r\n                              <div className=\"col-md-6\">                         \r\n                                  <input type=\"radio\" className=\"globalradio\"   onClick={this.isPhoneNumberExist} \r\n                                  name=\"sms_pref\"  id=\"chooseType_3\"  checked={this.state.JM_SMS_Pref==='Y' ? true : false}/>\r\n                                    <label for=\"chooseType_3\">Yes</label> \r\n                            \r\n                                  <input type=\"radio\" className=\"globalradio\"    onClick={()=> this.setState({ JM_SMS_Pref : 'N'})} \r\n                                  name=\"sms_pref\" id=\"chooseType_4\" checked={this.state.JM_SMS_Pref==='N' ? true : false}/>\r\n                                      <label for=\"chooseType_4\">No</label> \r\n                          \r\n                              </div>\r\n                          </div>\r\n                          <button className=\"btun\" onClick={this.updateNotiPref} style={{display:'none'}}>> Save</button> \r\n                            <p id=\"msg_prof_other\" style={{color:'red'}}></p>\r\n                      \r\n                 \r\n                        <div className=\"item\">\r\n                            <div className=\"item-heading\">\r\n                              <div className=\"row\">\r\n                                <div className=\"col-md-2 order-md-last justify-content-end d-flex flex-wrap align-content-center\">\r\n                                    <a><PhoneAndroidIcon style={{fontSize:\"22px\"}}/></a>\r\n                                    <a><EmailIcon style={{fontSize:\"22px\"}}/></a>\r\n                                  </div>\r\n                                  <div className=\"col-md-10\">\r\n                                      <p>Activity</p>\r\n                                  </div>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"item-list\">\r\n                                <div className=\"row\">\r\n                                  <div className=\"col-md-2 order-md-last justify-content-end d-flex flex-wrap align-content-center\">\r\n                                      <label className=\"checklabel\">                              \r\n                                        <input type=\"checkbox\"  className=\"checkinput\"  id=\"Vid_Aud_Msg_SMS\"   \r\n                                           checked={this.state.Vid_Aud_Msg_SMS==='Y'?true:false} \r\n                                           onClick={this.updateNotiPref}/>\r\n                                            <span className=\"checkmark\"></span>\r\n                                      </label>\r\n                                      <label className=\"checklabel\">\r\n                                          <input type=\"checkbox\" className=\"checkinput\"  id=\"Vid_Aud_Msg_Email\" \r\n                                            checked={this.state.Vid_Aud_Msg_Email==='Y'?true:false} \r\n                                            onClick={this.updateNotiPref}/>\r\n                                           <span className=\"checkmark\"></span>\r\n                                      </label>                                      \r\n                                    </div>\r\n                                    <div className=\"col-md-10\">\r\n                                        <p>New video or audio message request </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"item-list\">\r\n                                <div className=\"row\">\r\n                                  <div className=\"col-md-2 order-md-last justify-content-end d-flex flex-wrap align-content-center\">\r\n                                      <label className=\"checklabel\">                                   \r\n                                        <input type=\"checkbox\" className=\"checkinput\" id=\"Req_Reminder_SMS\" \r\n                                        checked={this.state.Req_Reminder_SMS==='Y'?true:false}\r\n                                        onClick={this.updateNotiPref}/>\r\n                                        <span className=\"checkmark\"></span>\r\n                                      </label>\r\n                                      <label className=\"checklabel\">                                   \r\n                                      <input type=\"checkbox\" id=\"Req_Reminder_Email\"  className=\"checkinput\"\r\n                                         checked={this.state.Req_Reminder_Email==='Y'?true:false}\r\n                                         onClick={this.updateNotiPref}/>\r\n                                        <span className=\"checkmark\"></span>\r\n                                      </label>\r\n                                    </div>\r\n                                    <div className=\"col-md-10\">\r\n                                        <p>Pending/accepted video or audio message request reminder </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-list\">\r\n                                <div className=\"row\">\r\n                                  <div className=\"col-md-2 order-md-last justify-content-end d-flex flex-wrap align-content-center\">\r\n                                        <label className=\"checklabel\">                                   \r\n                                          <input type=\"checkbox\" id=\"Goods_Purchased_SMS\"  className=\"checkinput\"\r\n                                          checked={this.state.Goods_Purchased_SMS==='Y'?true:false}\r\n                                            onClick={this.updateNotiPref}/>\r\n                                          <span className=\"checkmark\"></span>\r\n                                        </label>\r\n                                      <label className=\"checklabel\">\r\n                                        <input type=\"checkbox\"  className=\"checkinput\" id=\"Goods_Purchased_Email\"\r\n                                        checked={this.state.Goods_Purchased_Email==='Y'?true:false}\r\n                                            onClick={this.updateNotiPref}/>\r\n                                        <span className=\"checkmark\"></span>\r\n                                      </label>\r\n                                    </div>\r\n                                    <div className=\"col-md-10\">\r\n                                        <p>New unlock content or digital e-commerce good purchased </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-list\">\r\n                                <div className=\"row\">\r\n                                  <div className=\"col-md-2 order-md-last justify-content-end d-flex flex-wrap align-content-center\">\r\n                                        <label className=\"checklabel\">                                   \r\n                                            <input type=\"checkbox\" id=\"Gift_Donation_SMS\" className=\"checkinput\"\r\n                                            checked={this.state.Gift_Donation_SMS==='Y'?true:false}\r\n                                              onClick={this.updateNotiPref}/>\r\n                                          <span className=\"checkmark\"></span>\r\n                                        </label>\r\n                                      <label className=\"checklabel\">\r\n                                          <input type=\"checkbox\" id=\"Gift_Donation_Email\"  className=\"checkinput\"\r\n                                            checked={this.state.Gift_Donation_Email==='Y'?true:false}\r\n                                          onClick={this.updateNotiPref}/>\r\n                                        <span className=\"checkmark\"></span>\r\n                                      </label>\r\n                                    </div>\r\n                                    <div className=\"col-md-10\">\r\n                                        <p>New gift or donation  </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                          </div>\r\n                       </div>\r\n\r\n                       \r\n\r\n\r\n                      </Accordion.Collapse>\r\n                    </div>\r\n                  </Accordion>\r\n                </div>\r\n                \r\n\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </div>\r\n\r\n                             \r\n    <FooterClass/>\r\n    </>\r\n  )\r\n}\r\n}\r\nexport default Settings","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\JoinPage.js",["2011","2012","2013","2014","2015","2016","2017","2018","2019","2020","2021","2022","2023","2024"],"import React, { Component } from 'react'\r\n\r\nimport {  NavLink,  } from 'react-router-dom'\r\nimport {  Button } from 'react-bootstrap';\r\nimport FooterClass from '../header_footer/FooterClass';\r\nimport MainHeader from '../header_footer/MainHeader';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faYoutube,\r\n  faTwitter,\r\n  faInstagram\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport * as queryString from 'query-string';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport GoogleLogin from 'react-google-login';\r\nimport API from '../services/API';\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nclass JoinPage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      base_url: process.env.REACT_APP_API_URL,\r\n      root_url: process.env.REACT_APP_ROOT_URL,\r\n      JM_Referral: 'NA',\r\n      JM_Name: '',\r\n      JM_Phone: '',\r\n      JM_Email: localStorage.getItem('JM_Email'),\r\n      JM_ID: localStorage.getItem('JM_ID'),\r\n      JM_Password: '',\r\n      JM_User_Profile_Url: '',\r\n      JM_Insta_Url: '',\r\n      JM_Utube_Url: '',\r\n      JM_Twiter_Url: '',\r\n      JM_Profie_Pic: 'images/prop_pic.png',\r\n      Validation: true,\r\n      EmailValidation: true,\r\n      inserted_id: 0,\r\n      tab_Reff_show: false,\r\n      tabTerms_show: false,\r\n      tab1_show: true,\r\n      tab2_show: false,\r\n      tab3_show: false,\r\n      data: null,\r\n      selectedFile: null,\r\n      facebookResponse: [],\r\n      showEmailModal: false,\r\n      fb_email: '',\r\n      fb_emailValid: false,\r\n      showGoogleModal: false,\r\n      GoogleResponse: [],\r\n      validUserName: false,\r\n    \r\n      termCondi: false\r\n\r\n    }\r\n    if (typeof this.state.JM_Email !== 'undefined') {\r\n      if (this.state.JM_Email !== \"\" && parseInt(this.state.JM_ID) > 0) {\r\n        window.location.href = '/me';\r\n      }\r\n    }\r\n  }\r\n  onChangeHandle = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    this.performValidation();\r\n    if (e.target.name === 'JM_Password') \r\n    {\r\n      document.getElementById(\"msg_pass\").innerText = '';\r\n      if (e.target.value.length < 6)\r\n      {\r\n        document.getElementById(\"msg_pass\").innerText = 'Min. 6 characters required for password';\r\n        return false;\r\n      }\r\n\r\n    }\r\n    if(e.target.name === 'JM_Referral') \r\n    {\r\n      localStorage.setItem('JM_Referral', e.target.value);\r\n    }\r\n  }\r\n  onChangeHandleURL = (e) => {\r\n\r\n    // let value = e.target.value\r\n    //value = value.replace(/[^A-Za-z]/ig, '')\r\n    this.setState({ JM_User_Profile_Url: e.target.value.replace(/[^\\w\\s]/gi, \"\") });\r\n\r\n  }\r\n  doNext = async() => {\r\n    document.getElementById(\"msg\").innerHTML='';\r\n    document.getElementById(\"msg_terms\").innerHTML = \"\";\r\n    document.getElementById(\"msg_pass\").innerText ='';\r\n    document.getElementById(\"msg_ref\").innerHTML='';   \r\n\r\n    if(this.state.JM_Name.length===0)\r\n    {\r\n      document.getElementById(\"msg_terms\").innerHTML='* Enter Name';    return false;\r\n    }\r\n\r\n   if(this.state.JM_Email.length === 0)\r\n   {\r\n    document.getElementById(\"msg_terms\").innerHTML='* Enter Email-Id';    return false;\r\n   } \r\n   if( this.state.JM_User_Profile_Url.length === 0)\r\n   {\r\n       document.getElementById(\"msg_terms\").innerHTML='* Enter Expy username';\r\n       return false;\r\n   }\r\n   if(this.state.JM_Password.length ===0)\r\n   {\r\n    document.getElementById(\"msg_terms\").innerHTML='* Enter Passowrd';    return false;\r\n   } \r\n \r\n\r\n\r\n     \r\n      var data=await API.EmailValidation(this.state.JM_Email);\r\n      document.getElementById(\"email_msg\").innerHTML='';\r\n      if(data.status===1)\r\n      {\r\n        document.getElementById(\"email_msg\").innerHTML = \"Email address already exists. Please try a different email address\";\r\n        return false;\r\n      }\r\n      if(data.status===2)\r\n      {\r\n        document.getElementById(\"email_msg\").innerHTML = \"Not a valid email\";\r\n        return false;\r\n      }\r\n      if (this.state.JM_Password.length < 6)\r\n      {\r\n        document.getElementById(\"msg_pass\").innerText = 'Min. 6 characters required for password';\r\n        \r\n        return false;\r\n      }\r\n      if(this.state.JM_Phone.length > 0 && this.state.JM_Phone.length < 10)\r\n      {\r\n          \r\n        document.getElementById(\"msg_phone\").innerHTML=\"Invalid phone number\";  \r\n        return false;   \r\n      }   \r\n\r\n      if(this.state.JM_Phone.length === 10)\r\n      {\r\n        document.getElementById(\"msg_phone\").innerHTML='';\r\n        let resp=await API.isAvailablePhone_by_phone(this.state.JM_Phone);\r\n        var msg=\"\";\r\n        if(resp===false)\r\n        {\r\n          msg=\"Phone number is exist,try another phone number\";\r\n          document.getElementById(\"msg_phone\").innerHTML=msg;     \r\n          return false;   \r\n        }       \r\n       \r\n      }      \r\n\r\n      //refcode validation\r\n      if(this.state.JM_Referral.length > 0 && this.state.JM_Referral!=='NA')      \r\n      {\r\n        data=await API.validReferralCode(this.state.JM_Referral);\r\n        ////console.log(data)\r\n        document.getElementById(\"msg_ref\").innerHTML='';   \r\n        if(data.status===0)\r\n        {\r\n          document.getElementById(\"msg_ref\").innerHTML='Invalid invite code.';   \r\n          return false;\r\n        }\r\n      }\r\n\r\n      document.getElementById(\"msg_terms\").innerHTML='';\r\n      if(this.state.termCondi===false)\r\n      {\r\n        document.getElementById(\"msg_terms\").innerHTML = 'Please accept terms & conditions to proceed';\r\n        return false;\r\n      }\r\n      let inserted_id = 0;\r\n\r\n      let API_url = this.state.base_url + \"admin/join\";\r\n      var flagData = {\r\n        JM_Name: this.state.JM_Name,\r\n        JM_Email: this.state.JM_Email,\r\n        JM_Password: this.state.JM_Password,\r\n        JM_User_Profile_Url: this.state.JM_User_Profile_Url,\r\n        JM_Referral: this.state.JM_Referral,\r\n        JM_Phone: this.state.JM_Phone\r\n      };\r\n\r\n      const flag=API.encryptData(flagData);\r\n      let  JSONdata = {\r\n          flag: flag\r\n        };\r\n\r\n\r\n      fetch(API_url, {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(JSONdata)\r\n      }).then(function (response) {\r\n        return response.json();\r\n      }).then(data => {\r\n\r\n        if (data.status === 1) \r\n        {\r\n          ////console.log(data.msg);\r\n          const dataRep=API.decryptJson(data.flag);\r\n          inserted_id = dataRep.lastId;\r\n          this.setState({\r\n            JM_ID: inserted_id,         \r\n          });\r\n          //document.getElementById(\"msg\").innerHTML=data.msg;\r\n        }\r\n        else if(data.status === -1)\r\n        {\r\n          document.getElementById(\"email_msg\").innerHTML = data.msg;\r\n          return false;\r\n        }\r\n        else {\r\n          document.getElementById(\"msg\").innerHTML = data.msg;\r\n          return false;\r\n        }\r\n\r\n        if (inserted_id > 0)\r\n          this.setState({ tab_Reff_show: false, tab1_show: false, tab2_show: true });\r\n        else\r\n          this.setState({ tab_Reff_show: false, tab1_show: true, tab2_show: false });\r\n\r\n\r\n      });\r\n  \r\n   \r\n  }\r\n\r\n  //11-apr-2021\r\n  validReferralCode = (e) => {\r\n\r\n    if (this.state.JM_Referral.length > 0) {\r\n      let API_url = this.state.base_url + \"admin/validReferralCode\";\r\n      var JSONdata = {\r\n        code: this.state.JM_Referral,\r\n      };\r\n      fetch(API_url, {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(JSONdata)\r\n      }).then(function (response) {\r\n        return response.json();\r\n      }).then(data => {\r\n\r\n        if (data.status === 1) {\r\n          this.setState({\r\n            tab_Reff_show: false,\r\n            tabTerms_show: true,\r\n            tab1_show: false,\r\n            tab2_show: false,\r\n            tab3_show: false,\r\n          });\r\n        }\r\n        else {\r\n          this.setState({\r\n            tab_Reff_show: true,\r\n            tabTerms_show: false,\r\n            tab1_show: false,\r\n            tab2_show: false,\r\n            tab3_show: false,\r\n          });\r\n          document.getElementById(\"msg_ref\").innerHTML = \"Not a valid invite Code\";\r\n\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      document.getElementById(\"msg_ref\").innerHTML = \"Enter Invite Code\";\r\n      return false;\r\n    }\r\n  }\r\n\r\n  //update the social urls\r\n  doNextUrl = () => \r\n  {\r\n    let inserted_id = 0;\r\n    let API_url = this.state.base_url + \"admin/update_url\";\r\n    \r\n    const flag_id=API.encryptData(this.state.JM_ID);\r\n    var flagData = {\r\n      JM_ID: this.state.JM_ID,\r\n      flag_id:flag_id,\r\n      JM_Insta_Url: this.state.JM_Insta_Url,\r\n      JM_Utube_Url: this.state.JM_Utube_Url,\r\n      JM_Twiter_Url: this.state.JM_Twiter_Url,\r\n      JM_User_Profile_Url_plus_JM_ID: this.state.JM_User_Profile_Url + \"_\" + this.state.JM_ID\r\n    };\r\n\r\n    const flag=API.encryptData(flagData);\r\n    var JSONdata = {\r\n      flag: flag\r\n    };\r\n\r\n    fetch(API_url, {\r\n      method: 'post',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(JSONdata)\r\n    }).then(function (response) {\r\n      return response.json();\r\n    }).then(data => {\r\n      if (data.status === 1) \r\n      {\r\n        this.setState({ tab_Reff_show: false, tab1_show: false, tab2_show: false, tab3_show: true });\r\n      }\r\n      else {\r\n        document.getElementById(\"msg\").innerHTML = data.msg;\r\n        this.setState({ tab1_show: false, tab2_show: true });\r\n        return false;\r\n      }\r\n\r\n    });\r\n  }\r\n  performValidation = () => {\r\n    if (this.state.JM_Name.length > 0 && this.state.JM_Password.length >=6 && this.state.JM_Email.length > 0 && this.state.JM_Email.length > 5 && this.state.JM_User_Profile_Url.length > 0 && this.state.JM_Referral.length > 0) {\r\n      this.setState({ Validation: false });\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n  URLkeyup = () => {\r\n    var evnt = document.getElementsByClassName(\"no-special-chars\");\r\n    var value = document.getElementsByClassName(\"no-special-chars\").value;\r\n    var start = evnt.selectionStart;\r\n    var end = evnt.selectionEnd;\r\n    var newValue = value.replace(/[^a-z0-9\\-\\_]/gi, \"\");\r\n    var difference = value.length - newValue.length;\r\n    ////console.log(newValue);\r\n    evnt.setSelectionRange(start - difference, end - difference);\r\n    this.setState({ JM_User_Profile_Url: newValue });\r\n  }\r\n  availableURl = (e) => \r\n  {\r\n    let Url = e.target.value.replace(/[^a-z0-9\\-\\_]/gi, \"\");\r\n    this.setState({ [e.target.name]: Url });\r\n    let valid = true;\r\n    if (Url.length > 0) {\r\n      let API_url = this.state.base_url + \"admin/ValidateURL\";\r\n      fetch(API_url, {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ JM_User_Profile_Url: Url })\r\n      }).then(function (response) {\r\n        return response.json();\r\n      }).then(function (data) {\r\n        if (data.status === 1 || data.status === 2) {\r\n          ////console.log(data.msg);\r\n          document.getElementById(\"msg\").innerHTML = data.msg;\r\n          valid = true;\r\n\r\n        }\r\n        else {\r\n          document.getElementById(\"msg\").innerHTML = '';\r\n          valid = false;\r\n\r\n        }\r\n\r\n      });\r\n\r\n      this.setState({ Validation: valid });\r\n    }\r\n    else {\r\n      document.getElementById(\"msg\").innerHTML = 'enter url';\r\n      return false;\r\n    }\r\n\r\n  }\r\n\r\n  // email validation\r\n  availableEmail = (e) => {\r\n    this.onChangeHandle(e);\r\n    let email = e.target.value;\r\n    let valid = true;\r\n    document.getElementById(\"email_msg\").innerHTML = '';\r\n    if (email.length > 0 && email.includes('@') && email.includes('.')) \r\n    {\r\n      let API_url = this.state.base_url + \"admin/ValidateEmail\";\r\n      fetch(API_url, {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ JM_Email: email })\r\n      }).then(function (response) {\r\n        return response.json();\r\n      }).then(function (data) \r\n      {\r\n      \r\n        if (data.status === 1) \r\n        {     \r\n          document.getElementById(\"email_msg\").innerHTML = \"Email address already exists. Please try a different email address\";\r\n          valid = true;\r\n        }\r\n        else if(data.status === -1)\r\n        {\r\n          document.getElementById(\"email_msg\").innerHTML = data.msg;\r\n          valid = false;\r\n        }\r\n        else \r\n        {\r\n          document.getElementById(\"email_msg\").innerHTML = '';\r\n          valid = false;\r\n\r\n        }\r\n\r\n      });\r\n\r\n    }\r\n    else {\r\n      document.getElementById(\"email_msg\").innerHTML = 'Not a valid email';\r\n      valid = false;\r\n    }\r\n    this.setState({ Validation: valid });\r\n  }\r\n\r\n  displayImage = (e) => {\r\n    const file = e.target.files[0];    \r\n    var filePath = e.target.value;      \r\n    \r\n    if(typeof file==='undefined' || file===null )\r\n    {\r\n      this.setState({ selectedFile:null,JM_Profie_Pic:'' });\r\n      return false;\r\n    }\r\n\r\n    // Allowing file type\r\n    var allowedExtensions = /(\\.png|\\.jpeg|\\.jpg)$/i;                \r\n    if (!allowedExtensions.exec(filePath)) \r\n    {\r\n        alert('File type must be png or jpg or jpeg');\r\n        e.target.value = '';\r\n        this.setState({ selectedFile:null,JM_Profie_Pic:'' });\r\n        return false;\r\n    } \r\n\r\n    this.setState({ selectedFile: e.target.files[0] });\r\n    this.setState({\r\n      JM_Profie_Pic: URL.createObjectURL(file)\r\n    });\r\n  }\r\n\r\n  handleImageUpload = event => {\r\n    event.preventDefault();\r\n    const formData = new FormData();\r\n    const files = event.target.files\r\n    ////console.log(this.state.JM_User_Profile_Url)\r\n    if (this.state.selectedFile !== null) \r\n    {\r\n      let Api_url = this.state.base_url + 'admin/profileImage';\r\n      formData.append('sampleFile', this.state.selectedFile)\r\n\r\n      const flagData={\r\n        JM_ID:this.state.JM_ID,\r\n        JM_User_Profile_Url:this.state.JM_User_Profile_Url,\r\n        JM_Email: this.state.JM_Email,\r\n        JM_Name: this.state.JM_Name\r\n      }\r\n\r\n      const flag=API.encryptData(flagData);   \r\n      formData.append('flag',flag)\r\n      // formData.append('JM_ID', this.state.JM_ID)\r\n      // formData.append('JM_User_Profile_Url', this.state.JM_User_Profile_Url)\r\n      // formData.append('JM_Email', this.state.JM_Email)\r\n      // formData.append('JM_Name', this.state.JM_Name)\r\n\r\n\r\n      document.getElementById('btn_lnch').innerText = 'Wait....';\r\n      fetch(Api_url, {\r\n        method: 'POST',\r\n        body: formData\r\n      })\r\n        .then(response => response.json())\r\n        .then(async data1 => {\r\n          ////console.log(data);\r\n    \r\n          if (data1.status === 1) \r\n          {\r\n\r\n            const data=await API.decryptJson(data1.flag);\r\n            var userDetails = data.userDetails;\r\n            if (userDetails != null && userDetails.length > 0) {\r\n              ////console.log(data.msg);\r\n              localStorage.setItem('JM_ID', data.JM_ID);\r\n              localStorage.setItem('JM_Email', this.state.JM_Email);\r\n              localStorage.setItem('userDetails', JSON.stringify(userDetails));\r\n              localStorage.setItem('directAccess', JSON.stringify(data.directAccess));\r\n              localStorage.setItem('linkMaster', JSON.stringify(data.linkMaster));\r\n              localStorage.setItem('JM_User_Profile_Url', userDetails[0].JM_User_Profile_Url);\r\n              localStorage.setItem('JM_Name', this.state.JM_Name);\r\n              localStorage.setItem('auth', data.token);  \r\n              this.add_minutes();\r\n              this.props.history.push(\"/me\");\r\n            }\r\n            //this.doSignIn();               \r\n\r\n          }\r\n          else \r\n          {\r\n            document.getElementById('btn_lnch').innerText = 'Launch!';\r\n            alert(data1.msg);       \r\n\r\n          }\r\n          ////console.log(data)\r\n        })\r\n        .catch(error => {\r\n          //console.error(error)\r\n        })\r\n    }\r\n    else \r\n    {\r\n\r\n      let Api_url = this.state.base_url + 'admin/noprofileImage';\r\n\r\n      // formData.append('JM_ID', this.state.JM_ID)\r\n      // formData.append('JM_Email', this.state.JM_Email)\r\n      // formData.append('JM_Name', this.state.JM_Name)\r\n\r\n      const flagData={\r\n        JM_ID:this.state.JM_ID,   \r\n        JM_Email: this.state.JM_Email,\r\n        JM_Name: this.state.JM_Name\r\n      }\r\n\r\n      const flag=API.encryptData(flagData);   \r\n      formData.append('flag',flag)\r\n\r\n      document.getElementById('btn_lnch').innerText = 'Wait....';\r\n      fetch(Api_url, {\r\n        method: 'POST',\r\n        body: formData\r\n      })\r\n        .then(response => response.json())\r\n        .then(async data1 => {\r\n          if (data1.status === 1) \r\n          {\r\n\r\n            const data=await API.decryptJson(data1.flag);\r\n            var userDetails = data.userDetails;\r\n            if (userDetails != null && userDetails.length > 0) \r\n            {\r\n              ////console.log(data.msg);\r\n              localStorage.setItem('JM_ID', data.JM_ID);\r\n              localStorage.setItem('JM_Email', this.state.JM_Email);\r\n              localStorage.setItem('userDetails', JSON.stringify(userDetails));\r\n              localStorage.setItem('directAccess', JSON.stringify(data.directAccess));\r\n              localStorage.setItem('linkMaster', JSON.stringify(data.linkMaster));\r\n              localStorage.setItem('JM_User_Profile_Url', userDetails[0].JM_User_Profile_Url);\r\n              localStorage.setItem('JM_Name', this.state.JM_Name);\r\n              localStorage.setItem('auth', data.token);  \r\n              \r\n              \r\n              // window.location='//consol'; \r\n              this.add_minutes();\r\n              this.props.history.push(\"/me\");\r\n            }\r\n            //this.doSignIn();               \r\n\r\n          }\r\n          else {\r\n            alert(\"internal error occered\");\r\n          }\r\n          ////console.log(data)\r\n        })\r\n        .catch(error => {\r\n          //console.error(error)\r\n        })\r\n    }\r\n  }\r\n  lettersValidate = (key) => {\r\n    var keycode = (key.which) ? key.which : key.keyCode;\r\n\r\n    if ((keycode > 64 && keycode < 91) || (keycode > 96 && keycode < 123)) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n\r\n  }\r\n\r\n  doSkip = () => {\r\n    this.setState({ tab_Reff_show: false, tab1_show: false, tab2_show: false, tab3_show: true });\r\n  }\r\n\r\n  add_minutes = (e) => {\r\n    var minutes = 25;\r\n    var dt = new Date();\r\n    var FromNewTime = new Date();\r\n    var ToNewTime = new Date(dt.getTime() + minutes * 60000);\r\n\r\n    localStorage.setItem('FromNewTime', FromNewTime);\r\n    localStorage.setItem('ToNewTime', ToNewTime);\r\n    localStorage.setItem('keepLogin', 0);\r\n  }\r\n\r\n  setFace = e => {\r\n    ////console.log(process.env.REACT_APP_FACEBOOK_APP_ID)\r\n    const stringifiedParams = queryString.stringify({\r\n      client_id: 507049633635811,\r\n      redirect_uri: process.env.REACT_APP_API_URL + 'me',\r\n      scope: ['email', 'username'].join(','), // comma seperated string\r\n      response_type: 'code',\r\n      auth_type: 'rerequest',\r\n      display: 'popup',\r\n    });\r\n    const facebookLoginUrl = `https://www.facebook.com/v4.0/dialog/oauth?${stringifiedParams}`;\r\n    localStorage.setItem('FB_IG', \"FB\");\r\n    window.location = facebookLoginUrl;\r\n  }\r\n  setIG = e => {\r\n    const stringified = queryString.stringify({\r\n      client_id: 371501700778779,\r\n      redirect_uri: process.env.REACT_APP_API_URL + 'me',\r\n      //redirect_uri: 'https://expy.bio/',\r\n      scope: ['user_profile', 'user_media'].join(','), // comma seperated string\r\n      response_type: 'code'\r\n    });\r\n\r\n    const instagramLoginUrl = `https://api.instagram.com/oauth/authorize?${stringified}`;\r\n    localStorage.setItem('FB_IG', \"IG\");\r\n    window.location = instagramLoginUrl;\r\n  }\r\n  //faceboook\r\n  responseFacebook = (response) => {\r\n    ////console.log(response);\r\n\r\n\r\n    if (typeof response !== \"undefined\") {\r\n      if (response.status === 'unknown') {\r\n        //this.setState({facebookResponse:response,showEmailModal:true})\r\n        return false;\r\n      }\r\n      if (response != null && response.email.length === 0) {\r\n        this.setState({ facebookResponse: response, showEmailModal: true })\r\n        return false;\r\n      }\r\n\r\n      if (response != null && response.email.length > 0 && response.id.length > 0) {\r\n        var id = new Date().getTime();\r\n        var data = {\r\n          first_name: response.name.replace(/\\s+/g, ''),\r\n          email: response.email,\r\n          id: response.id,\r\n          JM_Referral: localStorage.getItem('JM_Referral'),\r\n        };\r\n        let API_url = process.env.REACT_APP_API_URL + \"admin/socialLogin\";\r\n\r\n        fetch(API_url, {\r\n          method: 'post',\r\n          headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n          body: JSON.stringify(data)\r\n        }).then(function (response) {\r\n          return response.json();\r\n        }).then(result => {\r\n          if (result.status === 1) {\r\n            var name = response.name.replace(/\\s+/g, '') + id;\r\n            //////console.log(data.msg);\r\n            localStorage.setItem('JM_ID', result.JM_ID);\r\n            localStorage.setItem('JM_Email', response.JM_Email);\r\n            localStorage.setItem('JM_User_Profile_Url', result.JM_User_Profile_Url);\r\n            localStorage.setItem('auth', result.token);  \r\n\r\n            var minutes = 60;\r\n            var dt = new Date();\r\n            var FromNewTime = new Date();\r\n            var ToNewTime = new Date(dt.getTime() + minutes * 60000);\r\n\r\n            //////console.log(FromNewTime)\r\n            //////console.log(ToNewTime)\r\n\r\n            localStorage.setItem('FromNewTime', FromNewTime);\r\n            localStorage.setItem('ToNewTime', ToNewTime);\r\n            if (this.state.keepMeLogin === 1)\r\n              localStorage.setItem('keepLogin', this.state.keepMeLogin);\r\n            else\r\n              localStorage.setItem('keepLogin', 0);\r\n\r\n            window.location.href = '/me';\r\n            //this.props.history.push(\"/me\");\r\n          }\r\n          else \r\n          {\r\n            //////console.log(\"failed to insert or fetch\")\r\n            localStorage.setItem('JM_Email', \"\");\r\n            localStorage.setItem('JM_ID', 0);\r\n            window.location.href = '/';\r\n          }\r\n        });\r\n\r\n      }\r\n      else {\r\n        //////console.log(\"failed to insert or fetch\")\r\n        localStorage.setItem('JM_Email', \"\");\r\n        localStorage.setItem('JM_ID', 0);\r\n        //window.location.href = '/';\r\n      }\r\n    }\r\n  }\r\n  facebollbtnClick = () => {\r\n    //////console.log(\"clicked\")\r\n    // alert();\r\n  }\r\n  fb_emailChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  doSocialSignUp = () => {\r\n\r\n    this.checkEmail(this.state.fb_email);\r\n  }\r\n  nowSave = () => {\r\n\r\n    let response = this.state.facebookResponse;\r\n    var id = new Date().getTime();\r\n    //////console.log(id.toString())\r\n    //response.id=id;\r\n    //response.name=\"sam11212\";\r\n    if (response != null && this.state.fb_email.length > 0 && response.id.toString().length > 0 && this.state.fb_emailValid === false) {\r\n      var data = {\r\n        first_name: response.name.replace(/\\s+/g, ''),\r\n        email: this.state.fb_email,\r\n        id: response.id,\r\n        JM_Referral: localStorage.getItem('JM_Referral')\r\n      };\r\n      let API_url = process.env.REACT_APP_API_URL + \"admin/socialLogin\";\r\n\r\n      fetch(API_url, {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(data)\r\n      }).then(function (response) {\r\n        return response.json();\r\n      }).then(result => {\r\n        if (result.status === 1) {\r\n          var name = response.name.replace(/\\s+/g, '') + id;\r\n          ////console.log(data.msg);\r\n          localStorage.setItem('JM_ID', result.JM_ID);\r\n          localStorage.setItem('JM_Email', result.JM_Email);\r\n          localStorage.setItem('JM_User_Profile_Url', result.JM_User_Profile_Url);\r\n          localStorage.setItem('auth', result.token);  \r\n\r\n          var minutes = 60;\r\n          var dt = new Date();\r\n          var FromNewTime = new Date();\r\n          var ToNewTime = new Date(dt.getTime() + minutes * 60000);\r\n\r\n          ////console.log(FromNewTime)\r\n          ////console.log(ToNewTime)\r\n\r\n          localStorage.setItem('FromNewTime', FromNewTime);\r\n          localStorage.setItem('ToNewTime', ToNewTime);\r\n          if (this.state.keepMeLogin === 1)\r\n            localStorage.setItem('keepLogin', this.state.keepMeLogin);\r\n          else\r\n            localStorage.setItem('keepLogin', 0);\r\n\r\n          window.location.href = '/me';\r\n          //this.props.history.push(\"/me\");\r\n        }\r\n        else {\r\n          ////console.log(\"failed to insert or fetch\")\r\n          localStorage.setItem('JM_Email', \"\");\r\n          localStorage.setItem('JM_ID', 0);\r\n          window.location.href = '/';\r\n        }\r\n      });\r\n\r\n    }\r\n    else {\r\n      ////console.log(\"failed to insert or fetch\")\r\n      localStorage.setItem('JM_Email', \"\");\r\n      localStorage.setItem('JM_ID', 0);\r\n      //window.location.href = '/';\r\n    }\r\n  }\r\n  \r\n\r\n  checkEmail = (email) => {\r\n\r\n\r\n    let valid = true;\r\n    document.getElementById(\"fb_msg\").innerHTML = '';\r\n    if (email.length > 0 && email.includes('@') && email.includes('.')) {\r\n      let API_url = this.state.base_url + \"admin/ValidateEmail\";\r\n      fetch(API_url, {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ JM_Email: email })\r\n      }).then(function (response) {\r\n        return response.json();\r\n      }).then(data => {       \r\n        if (data.status === 1 || data.status === 2) \r\n        { \r\n          document.getElementById(\"fb_msg\").innerHTML = \"Email address already exists. Please try a different email address\";\r\n          this.setState({\r\n            fb_emailValid: true\r\n          })\r\n\r\n        }\r\n        else if(data.status === -1)\r\n        {\r\n          document.getElementById(\"fb_msg\").innerHTML = data.msg;\r\n          this.setState({\r\n            fb_emailValid: true\r\n          })\r\n        }\r\n        else \r\n        {\r\n          document.getElementById(\"fb_msg\").innerHTML = '';\r\n          this.setState({\r\n            fb_emailValid: false\r\n          })\r\n          this.nowSave();\r\n        }\r\n\r\n      });\r\n\r\n    }\r\n    else {\r\n      document.getElementById(\"fb_msg\").innerHTML = 'Not a valid email';\r\n      return false\r\n    }\r\n  }\r\n\r\n  //========================== google sign in\r\n  responseGoogle = (response) => {\r\n    ////console.log(\"success\");\r\n    ////console.log(response.profileObj);\r\n    var GoogleResponse;\r\n    if (typeof response !== \"undefined\") {\r\n      if (typeof response.profileObj === 'undefined') {\r\n        return false;\r\n      }\r\n      GoogleResponse = response.profileObj;\r\n\r\n      if (GoogleResponse.googleId.length > 0 && GoogleResponse.email.length > 0) {\r\n\r\n        let API_url = this.state.base_url + \"admin/ValidateEmail\";\r\n        fetch(API_url, {\r\n          method: 'post',\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ JM_Email: GoogleResponse.email })\r\n        }).then(function (response) {\r\n          return response.json();\r\n        }).then(data => { \r\n          if (data.status === 1 || data.status === 2) \r\n          {\r\n            document.getElementById(\"google_msg\").innerHTML = \"Email address already exists. Please try a different email address\";\r\n            return false;\r\n          }\r\n          else if(data.status === -1 )\r\n          {\r\n            document.getElementById(\"google_msg\").innerHTML = data.msg;\r\n            this.setState({ GoogleResponse: GoogleResponse, showGoogleModal: true })\r\n          }\r\n          else \r\n          {\r\n            document.getElementById(\"google_msg\").innerHTML = '';\r\n            this.setState({ GoogleResponse: GoogleResponse, showGoogleModal: true })\r\n          }\r\n\r\n        });\r\n\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  signUpwithGoogle = (e) => {\r\n\r\n    let GoogleResponse = this.state.GoogleResponse;\r\n    if (GoogleResponse != null && GoogleResponse.email.length > 0 && GoogleResponse.googleId.length > 0) {\r\n      var id = new Date().getTime();\r\n      var flagData = {\r\n        first_name: GoogleResponse.name.replace(/\\s+/g, ''),\r\n        JM_User_Profile_Url: this.state.expy_username,\r\n        email: GoogleResponse.email,\r\n        id: GoogleResponse.googleId,\r\n        JM_Referral: localStorage.getItem('JM_Referral'),\r\n        JM_FB_ID: '',\r\n        JM_Google_ID: GoogleResponse.googleId\r\n      };\r\n\r\n      const flag=API.encryptData(flagData);\r\n      var JSONdata = {\r\n        flag: flag\r\n      };\r\n\r\n\r\n\r\n      let API_url = process.env.REACT_APP_API_URL + \"admin/socialLogin\";\r\n      document.getElementById(\"btn_userhandle\").innerText = \"Wait..\";\r\n      fetch(API_url, {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      }).then(function (response) {\r\n        return response.json();\r\n      }).then(result1 => {\r\n\r\n        if (result1.status === 1) \r\n        {\r\n\r\n          const result=API.decryptJson(result1.flag);\r\n          ////console.log(data.msg);\r\n          localStorage.setItem('JM_ID', result.JM_ID);\r\n          localStorage.setItem('JM_Email', GoogleResponse.email);\r\n          localStorage.setItem('JM_User_Profile_Url', result.JM_User_Profile_Url);\r\n          localStorage.setItem('auth', result.token);  \r\n\r\n          var minutes = 60;\r\n          var dt = new Date();\r\n          var FromNewTime = new Date();\r\n          var ToNewTime = new Date(dt.getTime() + minutes * 60000);\r\n\r\n          ////console.log(FromNewTime)\r\n          ////console.log(ToNewTime)\r\n\r\n          localStorage.setItem('FromNewTime', FromNewTime);\r\n          localStorage.setItem('ToNewTime', ToNewTime);\r\n          if (this.state.keepMeLogin === 1)\r\n            localStorage.setItem('keepLogin', this.state.keepMeLogin);\r\n          else\r\n            localStorage.setItem('keepLogin', 0);\r\n\r\n          window.location.href = '/me';\r\n          //this.props.history.push(\"/me\");\r\n        }\r\n        else \r\n        {\r\n          document.getElementById(\"btn_userhandle\").innerText = \"Launch\";\r\n          document.getElementById('google_msg').innerText = \"try again later\";\r\n          ////console.log(\"failed to insert or fetch\")\r\n          localStorage.setItem('JM_Email', \"\");\r\n          localStorage.setItem('JM_ID', 0);\r\n          //window.location.href = '/';\r\n        }\r\n      });\r\n\r\n    }\r\n    else {\r\n      //console.log(\"failed to insert or fetch\")\r\n      document.getElementById('google_msg').innerText = \"Network issue, Try again later..\";\r\n      localStorage.setItem('JM_Email', \"\");\r\n      localStorage.setItem('JM_ID', 0);\r\n      //window.location.href = '/';\r\n    }\r\n  }\r\n  responseGoogleFaild = (response) => {\r\n   // //console.log(\"Failed\");\r\n    console.log(response);\r\n  }\r\n\r\n  ExpyUserName = (e) => {\r\n\r\n    let Url = e.target.value.replace(/[^a-z0-9\\-\\_]/gi, \"\");\r\n    this.setState({ [e.target.name]: Url });\r\n    let valid = true;\r\n    if (Url.length > 0) {\r\n      let API_url = this.state.base_url + \"admin/ValidateURL\";\r\n      fetch(API_url, {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ JM_User_Profile_Url: Url })\r\n      }).then(function (response) {\r\n        return response.json();\r\n      }).then(data => {\r\n        if (data.status === 1 || data.status === 2) {\r\n          ////console.log(data.msg);\r\n          document.getElementById(\"google_err_msg\").innerHTML = data.msg;\r\n          this.setState({ validUserName: false });\r\n\r\n        }\r\n        else {\r\n          document.getElementById(\"google_err_msg\").innerHTML = '';\r\n          this.setState({ validUserName: true });\r\n        }\r\n\r\n      });\r\n\r\n\r\n    }\r\n    else {\r\n      this.setState({ validUserName: false });\r\n      document.getElementById(\"google_err_msg\").innerHTML = 'Enter Expy Username';\r\n\r\n      return false;\r\n    }\r\n\r\n  }\r\n\r\n  //07-jul-2021\r\n  checkTermsCondi = (e) => {\r\n    if (this.state.termCondi) {\r\n      this.setState({\r\n        tab_Reff_show: false,\r\n        tabTerms_show: false,\r\n        tab1_show: true,\r\n        tab2_show: false,\r\n        tab3_show: false,\r\n      });\r\n    }\r\n  }\r\n  isTermsCondi = (e) => {\r\n    if (e.target.checked) {\r\n      ////console.log('working')\r\n      this.setState({\r\n        termCondi: true\r\n      })\r\n    }\r\n    else {\r\n      this.setState({\r\n        termCondi: false\r\n      })\r\n    }\r\n  }\r\n\r\n  SkipRef=()=>{\r\n    this.setState({\r\n      JM_Referral:'NA',\r\n      tab_Reff_show: false,\r\n      tabTerms_show: true,\r\n      tab1_show: false,\r\n      tab2_show: false,\r\n      tab3_show: false,\r\n    });\r\n  }\r\n\r\n  onChangePhoneNumber= async(e)=>{\r\n    var JM_Phone=e.target.value;\r\n    this.setState({\r\n      JM_Phone\r\n    })\r\n    let isNumber=API.matchNumberPattern(JM_Phone);\r\n    document.getElementById(\"msg_phone\").innerHTML='';\r\n    if(JM_Phone.length > 0 && JM_Phone.length !== 10)\r\n    {\r\n      document.getElementById(\"msg_phone\").innerHTML='Please enter a valid phone number';     \r\n      return false;\r\n    }\r\n  }\r\n  render() {\r\n\r\n    ////console.log(process.env.REACT_APP_FACEBOOK_APP_ID)\r\n    const stringifiedParams = queryString.stringify({\r\n      client_id: 507049633635811,\r\n      redirect_uri: process.env.REACT_APP_API_URL + 'me',\r\n      scope: ['email', 'user_friends'].join(','), // comma seperated string\r\n      response_type: 'code',\r\n      auth_type: 'rerequest',\r\n      display: 'popup',\r\n    });\r\n\r\n\r\n    const stringified = queryString.stringify({\r\n      client_id: 371501700778779,\r\n      redirect_uri: process.env.REACT_APP_API_URL + 'me',\r\n      //redirect_uri: 'https://expy.bio/',\r\n      scope: ['user_profile', 'user_media'].join(','), // comma seperated string\r\n      response_type: 'code'\r\n    });\r\n    const facebookLoginUrl = `https://www.facebook.com/v4.0/dialog/oauth?${stringifiedParams}`;\r\n    const instagramLoginUrl = `https://api.instagram.com/oauth/authorize?${stringified}`;\r\n    let Validation = this.state;\r\n    return (\r\n    <>\r\n        <Helmet>\r\n          <title>Join | Expy </title>\r\n          {/* <meta name=\"description\" content=\"Use Expy to SHARE all your important links, content and OFFER paid, personalized, premium features under one beautiful Bio-Link page. FREE and FAST to set up.\"></meta> */}\r\n        </Helmet>\r\n        <MainHeader />\r\n        <div>\r\n          <div className=\"join-sec\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3\">\r\n\r\n                  {\r\n                    this.state.tab_Reff_show ?\r\n                      <div className=\"join-box\" id=\"tab_3\">\r\n\r\n                        <div className=\"form-box\">\r\n                          <label>Invite or Referral Code</label>\r\n                          <input type=\"text\" name=\"JM_Referral\" vaule={this.state.JM_Referral}\r\n                            className=\"form-control\" placeholder=\"Enter Invite or Referral Code\" onChange={this.onChangeHandle} />\r\n                          <p id=\"msg_ref\" style={{ color: 'red' }}></p>\r\n                          <div className=\"row\">\r\n                              <div className=\"col-md-6\">\r\n                                 <button className=\"butn\" onClick={this.SkipRef}>Skip</button>\r\n                              </div>\r\n                              <div className=\"col-md-6\">\r\n                                 <button className=\"butn\" onClick={this.validReferralCode}>Next</button>\r\n                              </div>\r\n                          </div>\r\n                          {/* <ReferalRequest /> */}\r\n                        </div>\r\n                      </div>\r\n                      : null\r\n                  }\r\n                  {\r\n                    this.state.tabTerms_show ?\r\n                      <div className=\"join-box\" id=\"tab_terms\">\r\n                          <div className=\"form-box\">\r\n                            <div class=\"row\">                            \r\n                              <div class=\"col-md-12\">\r\n                                   \r\n                                <h5> \r\n                                   <input type=\"checkbox\" name=\"JM_Term_Cond\" onClick={this.isTermsCondi}\r\n                                      style={{transform:'scale(1.5)',marginRight: '10px'}} />  \r\n                                  I agree to the <a href=\"/terms-and-condition\">Terms and Conditions</a></h5>\r\n\r\n                              </div>\r\n                            </div>  \r\n                            <button className=\"butn\" onClick={this.checkTermsCondi}>Next</button>\r\n                          </div>\r\n                        </div>\r\n                    :\r\n                    null\r\n                  }\r\n\r\n                  {\r\n                          this.state.tab1_show ?\r\n                            <div className=\"join-box\" id=\"tab_1\">\r\n                              <div className=\"title\">\r\n                                <h3>Create Your Page</h3>\r\n                                <p>Get set up in minutes, it’s free!</p>\r\n                              </div>\r\n                              <div className=\"form-box\">\r\n\r\n                                <GoogleLogin className=\"loginBtn\" style={{ color: 'red' }}\r\n                                 \r\n                                  clientId={process.env.REACT_APP_Google_Client_Id}     \r\n                                  buttonText=\"Sign up with Google\"\r\n                                  onSuccess={this.responseGoogle}\r\n                                  onFailure={this.responseGoogleFaild}\r\n                                 // cookiePolicy={'single_host_origin'}\r\n                                />\r\n                                {/* <a type=\"button\" href=\"#\" className=\"loginBtn\" onClick={this.setFace}>\r\n                        <i class=\"fa fa-facebook\"></i> Sign up with Facebook  </a> */}\r\n                                <div style={{ display: 'none' }}>\r\n                                  <FacebookLogin cssClass=\"loginBtn\"\r\n                                    appId={\"507049633635811\"}\r\n                                    autoLoad={false}\r\n                                    fields=\"name,email,picture\"\r\n                                    onClick={this.facebollbtnClick}\r\n                                    callback={this.responseFacebook}\r\n                                    icon=\"fa-facebook mr5\"\r\n                                    textButton=\"Sign Up With Facebook\"\r\n                                    isMobile={false}\r\n                                  />\r\n\r\n                                  {/* <a  href={instagramLoginUrl} onClick={this.setIG} className=\"text-decoration-none setCursor\"><button className=\"loginBtn insta\">\r\n                        <i class=\"fa fa-instagram\"></i> Sign up with Instagram  </button></a> */}\r\n\r\n\r\n                                </div>\r\n\r\n                                <p id=\"google_msg\" style={{ color: 'red', fontSsize: '12px' }}></p>\r\n                               \r\n                                <div class=\"row\">                            \r\n                                    <div class=\"col-md-12\">\r\n                                        \r\n                                      <span style={{fontSsize: '10px' }}>                                          \r\n                                       By signing up with Google, you agree to the <a href=\"/terms-and-condition\">terms and conditions.</a>\r\n                                      </span>\r\n\r\n                                    </div>\r\n                                  </div>  \r\n                            \r\n                                <div class=\"title login\" >\r\n                                  <h3>OR</h3>\r\n                                </div>\r\n                                <input type=\"text\" name=\"JM_Name\" vaule={this.state.JM_Name} className=\"form-control\" placeholder=\"Enter your name\" onChange={this.onChangeHandle} />\r\n\r\n\r\n                                <input type=\"text\" className=\"form-control\" vaule={this.state.JM_Email} name=\"JM_Email\" placeholder=\"user@email.com\"\r\n                                  onChange={this.availableEmail} />\r\n                                <p id=\"email_msg\" style={{ color: 'red' }} ></p>\r\n\r\n                                <div className=\"pick\">\r\n                                  <span>expy.bio/</span><input type=\"text\" className=\"form-control no-special-chars\" style={{ marginLeft: '25%', width: '75%' }}\r\n                                    value={this.state.JM_User_Profile_Url} name=\"JM_User_Profile_Url\" placeholder=\"username\"\r\n                                    onChange={this.availableURl} />\r\n                                  <p id=\"msg\" style={{ color: 'red' }}></p>\r\n                                </div>\r\n\r\n                                <input type=\"password\" className=\"form-control\" vaule={this.state.JM_Password} name=\"JM_Password\" placeholder=\"Enter your password\" onChange={this.onChangeHandle} />\r\n                                <p id=\"msg_pass\" style={{ color: 'red' }}></p>\r\n                 \r\n                                <input type=\"number\"name=\"JM_Phone\" id=\"JM_Phone\" min=\"0\" max={\"10\"} className=\"form-control\" placeholder=\"Enter phone number (optional)\" \r\n                                    value={this.state.JM_Phone} onChange={this.onChangePhoneNumber}/> \r\n                                <p id=\"msg_phone\" style={{ color: 'red' }} ></p>\r\n\r\n                                <input type=\"text\" name=\"JM_Referral\" vaule={this.state.JM_Referral}\r\n                                  className=\"form-control\" placeholder=\"Enter invite code (optional)\" onChange={this.onChangeHandle} />\r\n                                 <p id=\"msg_ref\" style={{ color: 'red' }}></p>\r\n\r\n                                <div class=\"row\">                            \r\n                                    <div class=\"col-md-12\">\r\n                                        \r\n                                      <span> \r\n                                        <input type=\"checkbox\" name=\"JM_Term_Cond\" onClick={this.isTermsCondi}\r\n                                            style={{transform:'scale(1.5)',marginRight: '10px'}} />  \r\n                                        I agree to the <a href=\"/terms-and-condition\">Terms and Conditions</a>\r\n                                     </span>\r\n                                   \r\n                                      <p id=\"msg_terms\" style={{ color: 'red' }}></p>\r\n                                    </div>\r\n                                  </div>  \r\n                                <button className=\"butn\" onClick={this.doNext}>Next!</button>\r\n                                <p>Already have a page ?<NavLink to=\"/signin\"> Log in here</NavLink></p>\r\n                              </div>\r\n\r\n                              <Modal\r\n                                size=\"sm\"\r\n                                show={this.state.showEmailModal}\r\n                                onHide={() => this.setState({ showEmailModal: false })}\r\n                                aria-labelledby=\"example-modal-sizes-title-sm\"\r\n                                backdrop=\"static\"\r\n                                keyboard={false}\r\n                                centered\r\n                              >\r\n                                <Modal.Header closeButton>\r\n                                  <Modal.Title id=\"example-modal-sizes-title-sm\" style={{ fontSize: '15px' }}>\r\n                                    Last Step to Launch!\r\n                                          </Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body>\r\n                                  <input type=\"text\" className=\"form-control\" placeholder=\"Enter Email Id\" name=\"fb_email\" value={this.state.fb_email} onChange={this.fb_emailChange} />\r\n                                </Modal.Body>\r\n                                <Modal.Footer>\r\n                                  <p id=\"msg\" style={{ color: 'red' }}></p>\r\n                                  <div className=\"btun-box\">\r\n                                    <Button onClick={this.doSocialSignUp} className=\"btun btun_1\">Launch</Button>\r\n                                    <p id='fb_msg' style={{ fontSize: '12px' }}></p>\r\n                                    {/* <p style={{color:' #ea9515',fontWweight: 'bold',fontSsize: '12px'}}>\r\n                                      Note: if you update this current username you will not able to see any data of earlier username. \r\n                                  </p> */}\r\n                                  </div>\r\n                                </Modal.Footer>\r\n                              </Modal>\r\n\r\n                              {/* google userhanlde message */}\r\n\r\n                              <Modal\r\n                                size=\"sm\"\r\n                                show={this.state.showGoogleModal}\r\n                                onHide={() => this.setState({ showGoogleModal: false, validUserName: false, expy_username: '' })}\r\n                                aria-labelledby=\"example-modal-sizes-title-sm\"\r\n                                backdrop=\"static\"\r\n                                keyboard={false}\r\n                                centered\r\n                              >\r\n                                <Modal.Header closeButton>\r\n                                  <Modal.Title id=\"example-modal-sizes-title-sm\" style={{ fontSize: '15px' }}>\r\n                                    Last Step to Launch!\r\n                                                    </Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body>\r\n                                  <input type=\"text\" className=\"form-control\" placeholder=\"Enter Expy username\" name=\"expy_username\" value={this.state.expy_username} onChange={this.ExpyUserName} />\r\n                                </Modal.Body>\r\n                                <Modal.Footer>\r\n                                  <p id=\"msg\" style={{ color: 'red' }}></p>\r\n                                  <div className=\"btun-box\">\r\n                                    {\r\n                                      this.state.validUserName ?\r\n                                        <button onClick={this.signUpwithGoogle} className=\"btnCropSave\" id=\"btn_userhandle\">Launch</button>\r\n                                        :\r\n                                        null\r\n                                    }\r\n\r\n\r\n                                    {/* <p style={{color:' #ea9515',fontWweight: 'bold',fontSsize: '12px'}}>\r\n                                                Note: if you update this current username you will not able to see any data of earlier username. \r\n                                            </p> */}\r\n                                  </div>\r\n                                  <p id='google_err_msg' style={{ fontSize: '12px', color: 'red', width: '100%' }}></p>\r\n                                </Modal.Footer>\r\n                              </Modal>\r\n                              {/* end */}\r\n\r\n                            </div>\r\n                            :\r\n                            null\r\n                        }\r\n                        {\r\n                          this.state.tab2_show ?\r\n                            <div className=\"join-box\" id=\"tab_2\">\r\n                              <div className=\"title\">\r\n                                <h3>Put Your Social Media URL</h3>\r\n                                <p>It will take you less than 2 minutes, and it's free.</p>\r\n                              </div>\r\n                              <div className=\"form-box\">\r\n                                <div className=\"social-link\">\r\n                                  <span><FontAwesomeIcon icon={faInstagram} /></span>\r\n                                  <input type=\"text\" name=\"JM_Insta_Url\" className=\"form-control\" placeholder=\"https://www.instagram.com/Bob\"\r\n                                    value={this.state.JM_Insta_Url} onChange={this.onChangeHandle} />\r\n                                </div>\r\n                                <div className=\"social-link\">\r\n                                  <span><FontAwesomeIcon icon={faTwitter} /></span>\r\n                                  <input type=\"text\" name=\"JM_Twiter_Url\" className=\"form-control\" placeholder=\"https://www.twitter.com/Bob\"\r\n                                    value={this.state.JM_Twiter_Url} onChange={this.onChangeHandle} />\r\n                                </div>\r\n                                <div className=\"social-link\">\r\n                                  <span><FontAwesomeIcon icon={faYoutube} /></span>\r\n                                  <input type=\"text\" name=\"JM_Utube_Url\" className=\"form-control\" placeholder=\"https://www.youtube.com/Bob\"\r\n                                    value={this.state.JM_Utube_Url} onChange={this.onChangeHandle} />\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                  <div className=\"col-md-6\">\r\n                                    <button className=\"skip-butn\" onClick={this.doSkip}>Skip</button>\r\n                                  </div>\r\n                                  <div className=\"col-md-6\">\r\n                                    <button className=\"butn\" onClick={this.doNextUrl}>Next!</button>\r\n                                  </div>\r\n                                </div>\r\n                                {/* <p><NavLink to=\"/signin\"> Log in here</NavLink></p> */}\r\n                              </div>\r\n                            </div>\r\n                            : null\r\n                        }\r\n\r\n                        {this.state.tab3_show ?\r\n                          <div className=\"join-box\" id=\"tab_3\">\r\n                            <div className=\"title\">\r\n                              <h3>Put a Face to the Name</h3>\r\n                              <p>Upload a profile picture (optional)</p>\r\n                            </div>\r\n                            <div className=\"form-box\">\r\n                              <form onSubmit={this.handleImageUpload}>\r\n                                <div className=\"prop-pic\">\r\n                                  <label htmlFor=\"prop_up\" className=\"up_pic\">Click for Upload</label>\r\n                                  <img src={this.state.JM_Profie_Pic}  alt=\"\"/>\r\n                                  <input type=\"file\" id=\"prop_up\" accept=\"image/*\" name=\"photo\" style={{ display: \"none\" }}\r\n                                    onChange={this.displayImage} />\r\n                                </div>\r\n\r\n                                <button className=\"butn\" id=\"btn_lnch\">Launch!</button>\r\n                              </form>\r\n                              {/* <p><NavLink to=\"/signin\"> Log in here</NavLink></p> */}\r\n                            </div>\r\n                          </div>\r\n                          : null\r\n                        }\r\n                      </div>\r\n              </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <FooterClass />\r\n    </>\r\n  )\r\n}\r\n\r\n}\r\nexport default JoinPage\r\n","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\StackedLink.js",["2025","2026","2027","2028","2029","2030","2031","2032","2033","2034","2035","2036","2037","2038","2039"],"import React, { Component } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\n\r\nimport { MDBIcon } from 'mdbreact';\r\nclass StackedLink extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n      \r\n        this.state = {\r\n           openModel:false,\r\n           base_url: process.env.REACT_APP_API_URL,\r\n           root_url: process.env.REACT_APP_ROOT_URL,\r\n           show:false,\r\n           open:false,\r\n           JM_ID: this.props.JM_ID,  \r\n           SWM_Title:'',\r\n           SWM_Url:'',\r\n           SWM_Icon:'',\r\n           LM_Who_Will_See:1,\r\n           selectedFile: null,\r\n           linkMaster:[],\r\n          userDetails:[],\r\n          socialWidget:[],\r\n          isClose:'none',\r\n          CM_Folder_Sub_Title:'',\r\n          CM_Folder_Back_Image:'',\r\n          CM_Folder_Title:'',\r\n          category_links:[],\r\n          activeIcon:'',\r\n          isDisplayIcon:'block',\r\n          isDisplayImage:'none',\r\n          iconCheked:true,\r\n          imageCheked:false\r\n          \r\n    \r\n        }\r\n        ////console.log(this.props.JM_User_Profile_Url_plus_JM_ID);\r\n      }\r\n      ModalClose=()=>{\r\n        this.setState({openModel:false,show:false});\r\n      }\r\n      ModalOpen=()=>{\r\n        this.setState({openModel:true,show:true,selectedFile:null,\r\n          CM_Folder_Back_Image:'',\r\n          CM_Folder_Title:'',\r\n          CM_Folder_Sub_Title:''\r\n        });\r\n      }\r\n     \r\n    \r\n      onChangeHandle=(e)=>{\r\n          let titleVal=e.target.value;\r\n        this.setState({[e.target.name]:e.target.value});  \r\n        let index = e.nativeEvent.target.selectedIndex;\r\n    }\r\n    onChangeHandleURL=(e)=>\r\n    {\r\n      this.setState({[e.target.name]:e.target.value});     \r\n    }\r\n    onChangeFolderImage=(e)=>{     \r\n      const file = e.target.files[0];\r\n      this.setState({ selectedFile: e.target.files[0] }); \r\n      this.setState({\r\n        CM_Folder_Back_Image: URL.createObjectURL(file),\r\n        //isClose:'block'\r\n      });\r\n\r\n    }\r\n    addFolder=(event)=>{  \r\n          event.preventDefault();\r\n          if(this.validate())\r\n          {\r\n              const formData = new FormData(); \r\n              const files = event.target.files\r\n              let Api_url=this.state.base_url+'admin/AddCategory';\r\n              formData.append('sampleFile', this.state.selectedFile)\r\n              formData.append('JM_ID', this.state.JM_ID) \r\n              formData.append('CM_Folder_Title', this.state.CM_Folder_Title) \r\n              formData.append('CM_Folder_Sub_Title', this.state.CM_Folder_Sub_Title)\r\n              formData.append('JM_User_Profile_Url_plus_JM_ID', this.props.JM_User_Profile_Url_plus_JM_ID)\r\n              formData.append('LM_Icon', this.state.activeIcon)\r\n                  fetch(Api_url, {\r\n                    method: 'POST',         \r\n                    body: formData\r\n                  })\r\n                  .then(response => response.json())\r\n                  .then(data => \r\n                    {                   \r\n                      //console.log(data);   \r\n                      this.ModalClose();\r\n                      this.Get_User_Details();              \r\n                  })\r\n                  .catch(error => {\r\n                    ////console.error(error)\r\n                  })\r\n            }\r\n            else\r\n            {\r\n              document.getElementById('msg').innerHTML='Enter Title';\r\n              this.hideMessage('msg');    \r\n            }\r\n    }\r\n    hideMessage=(id)=>{\r\n      setTimeout(function() {\r\n        document.getElementById(id).innerHTML='';  \r\n       }, 2000);\r\n             \r\n    }\r\n  \r\n    Get_User_Details = () => {\r\n        var JSONdata = {\r\n          JM_ID: this.state.JM_ID\r\n        };\r\n        const API_url = this.state.base_url + \"admin/userDetails\";\r\n      fetch(API_url,\r\n        {\r\n          method: 'post',\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(JSONdata)\r\n        })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if(data.status===1)\r\n        {\r\n          this.setState({\r\n            userDetails:data.userDetails,\r\n            linkMaster:data.linkMaster,\r\n            LM_Title:'',\r\n            LM_Url:'',\r\n            LM_Image:'',\r\n            LM_Who_Will_See:1,\r\n            selectedFile: null,\r\n            title:'Success!!!',\r\n            msg:'Profile is updated',\r\n            socialWidget:data.socialWidget,\r\n            category_master:data.category_master,\r\n            category_links:data.category_links,\r\n            productList:data.productList,\r\n            embed_content:data.embed_content,\r\n            gifts: data.gifts,\r\n\r\n          });\r\n          this.props.setStateAfterInsert(this.state);\r\n        }   \r\n          else\r\n            alert('not fetch');\r\n      });\r\n      \r\n    \r\n    }\r\n    \r\n    fileSelectHandler=()=> {\r\n      ////console.log(\"changed\")\r\n    }\r\n    \r\n    clickhandler = () => {\r\n    ////console.log(\"clicked\")\r\n    }\r\n    validate=(e)=>{\r\n      let valid=true;\r\n        if(this.state.CM_Folder_Title === \"\")\r\n        {\r\n          valid=false;\r\n        }\r\n            return valid;    \r\n    }\r\n\r\n    setActive=(e)=>{\r\n      e.preventDefault();\r\n    \r\n      var icon = e.currentTarget.attributes['data-id'].value;\r\n      this.setState({\r\n        activeIcon:icon\r\n      })\r\n    }\r\n    showHideDiv=(e)=>{\r\n    \r\n      if(e.target.value==='icon')\r\n      {\r\n        this.setState({\r\n          isDisplayIcon:\"block\", isDisplayImage:\"none\",\r\n          iconCheked:true,imageCheked:false\r\n        })\r\n      }\r\n    \r\n      if(e.target.value==='image')\r\n      {\r\n        this.setState({\r\n          isDisplayIcon:\"none\", isDisplayImage:\"block\",\r\n          iconCheked:false,imageCheked:true\r\n        })\r\n      }\r\n    }\r\n      render(){\r\n      return (\r\n        <>\r\n          <div className=\"card-btun\" onClick={this.ModalOpen}><AddCircleOutlineOutlinedIcon />\r\n            <h4>Link Folder </h4>  \r\n            <p> Organize your links </p>\r\n          </div>\r\n          <Modal\r\n            show={this.state.show}\r\n            onHide={this.ModalClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            centered\r\n    \r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>\r\n                <p className=\"addnew-title\">Link Folder</p>\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n             <form  onSubmit={this.addFolder}>\r\n              <div className=\"addnew-box\">\r\n                   <label>Title </label>                    \r\n                   <input type=\"text\" className=\"form-control\" placeholder=\"Category Title\"\r\n                        name=\"CM_Folder_Title\" value={this.state.CM_Folder_Title} onChange={this.onChangeHandleURL}/>\r\n                  <label> Subtitle </label>                    \r\n                   <input type=\"text\" className=\"form-control\" placeholder=\"Sub Title\"\r\n                        name=\"CM_Folder_Sub_Title\" value={this.state.CM_Folder_Sub_Title} onChange={this.onChangeHandleURL}/>\r\n                  \r\n                    <input type=\"file\" id=\"foldr_img\"  style={{display:'none'}}\r\n                         value=\"\" onChange={this.onChangeFolderImage}/>\r\n                         <div>\r\n                           {\r\n                           \r\n                           this.state.isClose==='block' ? \r\n                               <>\r\n                              <i className=\"fa fa-close\" style={{color:'red',fontSize:'20px',display:this.state.isClose}} onClick={()=> this.setState({CM_Folder_Back_Image:'',isClose:'none'})}></i>\r\n                              <img style={{width:'100%',height:'100%',borderRadius: '5%',margin:'5px'}} src={this.state.CM_Folder_Back_Image}></img>\r\n                              </>\r\n                            :\r\n                            null\r\n                            }\r\n                           \r\n                         </div>\r\n         \r\n         \r\n                             <div className=\"image-btun-box text-center\">\r\n                                <input type=\"radio\" checked={this.state.iconCheked} className=\"setCursor\" name=\"selection\" id=\"icon_chk\" value=\"icon\" onClick={this.showHideDiv}/>\r\n                                <label for=\"icon_chk\" className=\"setCursor\"> &nbsp;Icon&nbsp; </label>\r\n                                <input type=\"radio\"  checked={this.state.imageCheked} className=\"setCursor\"  name=\"selection\"  id=\"image_chk\" value=\"image\" onClick={this.showHideDiv}/>\r\n                                <label for=\"image_chk\" className=\"setCursor\"> \r\n                                      &nbsp;Image&nbsp;\r\n                                </label>\r\n                              </div>\r\n                              {/* icon */}\r\n                              <div style={{display:this.state.isDisplayIcon}}>\r\n                                <label>What would you like the icon to be?</label> \r\n                                <div className=\"image-btun-box\" >\r\n                                  <div className=\"iconbox\">\r\n                                      <div className=\"icon\"  \r\n                                          className={this.state.activeIcon === \"external-link-alt\" ? 'icon active' : 'icon'}  data-id=\"external-link-alt\"  onClick={this.setActive}>\r\n                                          <MDBIcon icon=\"external-link-alt\" size=\"2x\"/>                   \r\n                                        \r\n                                  \r\n                                      </div>\r\n                                      <div className=\"icon\"\r\n                                      className={this.state.activeIcon === \"lightbulb\" ? 'icon active' : 'icon'} data-id=\"lightbulb\"   onClick={this.setActive}>\r\n                                      \r\n                                        <MDBIcon icon=\"lightbulb\" size=\"2x\"/>\r\n                                      </div>\r\n                                      <div className=\"icon\"\r\n                                      className={this.state.activeIcon === \"anchor\" ? 'icon active' : 'icon'} data-id=\"anchor\"    onClick={this.setActive}>\r\n                                          <MDBIcon icon=\"anchor\" size=\"2x\"/>\r\n                                          \r\n                                      </div>\r\n                                      <div className=\"icon\"\r\n                                        className={this.state.activeIcon === \"link\" ? 'icon active' : 'icon'}  data-id=\"link\"  onClick={this.setActive}>\r\n                                          <MDBIcon icon=\"link\" size=\"2x\"/>\r\n                                      </div>\r\n                                      <div className=\"icon\"\r\n                                        className={this.state.activeIcon === \"external-link-square-alt\" ? 'icon active' : 'icon'} data-id=\"external-link-square-alt\"    onClick={this.setActive}>\r\n                                          <MDBIcon icon=\"external-link-square-alt\" size=\"2x\"/>\r\n                                      </div>\r\n\r\n                                      <div className=\"icon\"\r\n                                        className={this.state.activeIcon === \"archway\" ? 'icon active' : 'icon'} data-id=\"archway\" onClick={this.setActive}>\r\n                                          <MDBIcon icon=\"archway\" size=\"2x\"/>                   \r\n                                      </div>\r\n\r\n\r\n                                      <div className=\"icon\"  \r\n                                        className={this.state.activeIcon === \"ankh\" ? 'icon active' : 'icon'} data-id=\"ankh\" onClick={this.setActive}>\r\n                                          <MDBIcon icon=\"ankh\" size=\"2x\" />\r\n                                      </div>\r\n                                      <div className=\"icon\" \r\n                                      className={this.state.activeIcon === \"angle-double-right\" ? 'icon active' : 'icon'} data-id=\"angle-double-right\"  onClick={this.setActive}>\r\n                                        <MDBIcon icon=\"angle-double-right\" size=\"2x\" />                   \r\n                                      </div>\r\n                                      <div className=\"icon\"\r\n                                        className={this.state.activeIcon === \"cannabis\" ? 'icon active' : 'icon'} data-id=\"cannabis\"  onClick={this.setActive}>\r\n                                            <MDBIcon icon=\"cannabis\" data-id=\"cannabis\" size=\"2x\" />  \r\n                                      </div>\r\n                                      <div className=\"icon\"\r\n                                        className={this.state.activeIcon === \"chess-queen\" ? 'icon active' : 'icon'} data-id=\"chess-queen\" onClick={this.setActive}>\r\n                                            <MDBIcon icon=\"chess-queen\" data-id=\"chess-queen\"  size=\"2x\" />   \r\n                                      </div>\r\n                                    \r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                              {/* image */}\r\n                                <div style={{display:this.state.isDisplayImage}}>\r\n                                    <label>What would you like the Image to be? </label>\r\n                                  <div className=\"image-btun-box\">\r\n                                    <div className=\"row\">\r\n                                      <div className=\"col-md-12\">\r\n                                          <div className=\"view-image\">\r\n                                            <img  src={this.state.CM_Folder_Back_Image}/>\r\n                                          </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">                   \r\n                                            <label className=\"up-ico\" htmlFor=\"foldr_img\">\r\n                                              Upload an Icon               </label>        \r\n                                              <input type=\"file\" id=\"prop_up\" accept=\"image/*\" name=\"photo\" style={{ display:\"none\"}} \r\n                                                    onChange={this.onChangeFolderImage}/>         \r\n                                              <input id='selectImage' type=\"file\" style={{ display:\"none\"}}  onClick={this.clickhandler} onChange={this.imageonChange} />\r\n                                          </div>                 \r\n                                      </div>\r\n                                  </div>\r\n                                </div>\r\n\r\n                <div className=\"btun-box\">\r\n                  <button className=\"btun btun_1\">Add Folder</button>\r\n                  <button className=\"btun\" onClick={this.ModalClose}>Cancel</button>\r\n                  <p id=\"msg\" style={{color:'red'}}></p>\r\n                </div>\r\n              </div>\r\n              </form>\r\n            </Modal.Body>\r\n    \r\n          </Modal>\r\n        </>\r\n      );\r\n    }\r\n    \r\n    }\r\nexport default StackedLink;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\MyStatus.js",["2040","2041","2042","2043","2044","2045","2046","2047","2048","2049","2050","2051","2052"],"import React, { Component } from 'react';\r\nimport FooterClass from '../header_footer/FooterClass';\r\nimport ProfileHeader from '../header_footer/ProfileHeader';\r\nimport ProfileNav from './ProfileNav';\r\nimport LineChart from './LineChart';\r\nimport * as queryString from 'query-string';\r\nimport { Helmet } from \"react-helmet\";\r\nimport API from '../services/API'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Popover from 'react-bootstrap/Popover'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport GraphMonthly from './GraphMonthly';\r\nclass MyStatus extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      viewsDetails: [],\r\n      clickDetails: [],\r\n      graphDetails: [],\r\n      graphViewDetails: [],\r\n      graphType: 365,\r\n      totalActivePeople: [],\r\n      InAppPurchase: [],\r\n      tranDetails:[],\r\n      uniqueViews:[],\r\n      monitization:[],\r\n      statType: 'All Time Stat',\r\n      allTimeStat:'active',\r\n      Daily:'',\r\n      Wallet:0,uniqueClicks:0,\r\n      openModal:false,\r\n      this_year:'',\r\n      prev_year:'',\r\n      which_year:'',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    //API.isActive();\r\n\r\n    var d = new Date();\r\n    var this_year = d.getFullYear();\r\n    var month = d.getMonth();\r\n    var day = d.getDate();\r\n    var fulldate = new Date(this_year - 1, month, day);\r\n    var prev_year = fulldate.getFullYear();\r\n    console.log(prev_year)\r\n    this.setState({\r\n      this_year,\r\n      prev_year,\r\n      which_year:this_year\r\n    })\r\n\r\n    this.validateSession();\r\n    this.Get_Stats_Details();\r\n  }\r\n  validateSession() {\r\n\r\n    const urlParams = queryString.parse(window.location.search);\r\n    const code = urlParams.code;\r\n    var JM_ID = parseInt(localStorage.getItem('JM_ID'));\r\n    if (isNaN(JM_ID) || JM_ID === 0 || JM_ID === null) {\r\n      if (typeof code === \"undefined\") {\r\n        localStorage.setItem('JM_Email', \"\");\r\n        localStorage.setItem('JM_ID', 0);\r\n        window.location.href = '/';\r\n      }\r\n      else {\r\n        let token = this.getAccessTokenFromCode(code);\r\n        //this.getFacebookUserData(token);\r\n\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n  async Get_Stats_Details() {\r\n    var id = parseInt(localStorage.getItem('JM_ID'));\r\n    var d = new Date();\r\n    var year = d.getFullYear();\r\n    var JSONdata = {\r\n      JM_ID: id,\r\n      param: 365,\r\n      year:year\r\n    };\r\n    const API_url = process.env.REACT_APP_API_URL + \"admin/statsDetails\";\r\n    const response = await fetch(API_url, {\r\n      method: 'post',\r\n      headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n      body: JSON.stringify(JSONdata)\r\n    });\r\n    const data1 = await response.json();\r\n    if (data1.status > 0) \r\n    {\r\n      const data=API.decryptJson(data1.flag);\r\n      \r\n      this.setState({\r\n        graphDetails: data.graphDetails,\r\n        viewsDetails: data.viewsDetails,\r\n        clickDetails: data.clickDetails,\r\n        graphViewDetails: data.graphViewDetails,\r\n        totalActivePeople: data.totalActivePeople,\r\n        InAppPurchase: data.InAppPurchase,\r\n        uniqueViews:data.uniqueViews,\r\n        monitization:data.monitization,\r\n        Wallet:data.currentBalance,\r\n        uniqueClicks:data.uniqueClicks && data.uniqueClicks.length > 0 ? data.uniqueClicks[0].uniqueClicks : 0,\r\n        which_year:year,\r\n        tranDetails:data.tranDetails,\r\n      \r\n\r\n      });\r\n    }\r\n    //console.log(\"stats-->\");\r\n    //console.log(data);\r\n\r\n  }\r\n\r\n  // for getting ddl change\r\n  onChange_Stat = (e) => {\r\n    const API_url = process.env.REACT_APP_API_URL + \"admin/statsDetails\";\r\n    let param = e.target.value;\r\n    let statType = e.target.options[e.target.selectedIndex].text;\r\n    //console.log(statType)\r\n    this.setState({\r\n      statType,\r\n      //which_year:year\r\n    })\r\n    var JSONdata = {};\r\n    var id = parseInt(localStorage.getItem('JM_ID'));\r\n    var d = new Date();\r\n    var year = d.getFullYear();\r\n    var JSONdata = {\r\n      JM_ID: id,\r\n      param: param,\r\n      year:year\r\n    };\r\n\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(async data1 => {\r\n        if (data1.status > 0) {\r\n          const data=API.decryptJson(data1.flag);\r\n          this.setState({\r\n            graphDetails: data.graphDetails,\r\n            viewsDetails: data.viewsDetails,\r\n            clickDetails: data.clickDetails,\r\n            graphViewDetails: data.graphViewDetails,\r\n            totalActivePeople: data.totalActivePeople,\r\n            InAppPurchase: data.InAppPurchase,\r\n            graphType: param,\r\n            uniqueViews:data.uniqueViews ,\r\n            monitization:data.monitization, \r\n            Wallet:data.currentBalance,\r\n            uniqueClicks:data.uniqueClicks && data.uniqueClicks.length > 0 ? data.uniqueClicks[0].uniqueClicks : 0,\r\n          });\r\n        }\r\n      });\r\n  }\r\n  onClick_Stat = (days,year='')=> e => {\r\n    const API_url = process.env.REACT_APP_API_URL + \"admin/statsDetails\";\r\n    let param = days\r\n    let statType = days===365? 'All time stats' : days===30? '30 days' : days===7? '7 days': 'Daily' ;\r\n    //console.log(statType)\r\n    this.setState({\r\n      statType,\r\n      which_year:year\r\n    })\r\n    var JSONdata = {};\r\n    var id = parseInt(localStorage.getItem('JM_ID'));\r\n    var JSONdata = {\r\n      JM_ID: id,\r\n      param: param,\r\n      year:year\r\n    };\r\n\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data1 => {\r\n        if (data1.status > 0) \r\n        {\r\n          const data=API.decryptJson(data1.flag);\r\n          this.setState({\r\n\r\n            graphDetails: data.graphDetails,\r\n            viewsDetails: data.viewsDetails,\r\n            clickDetails: data.clickDetails,\r\n            graphViewDetails: data.graphViewDetails,\r\n            totalActivePeople: data.totalActivePeople,\r\n            InAppPurchase: data.InAppPurchase,\r\n            graphType: param,   \r\n            tranDetails:data.tranDetails,\r\n            uniqueViews:data.uniqueViews,\r\n            monitization:data.monitization,  \r\n            Wallet:data.currentBalance,\r\n            uniqueClicks:data.uniqueClicks && data.uniqueClicks.length > 0 ? data.uniqueClicks[0].uniqueClicks : 0,\r\n         \r\n          });\r\n\r\n          if(param===365)\r\n            this.setState({\r\n              allTimeStat:'active',\r\n              ThirtyStat:'',\r\n              SevenStat:'',\r\n              Daily:'',  \r\n            })\r\n          else if(param===30)\r\n            this.setState({\r\n              allTimeStat:'',\r\n              ThirtyStat:'active',\r\n              SevenStat:'',     \r\n              Daily:'',        \r\n\r\n            })\r\n          else if(param===7)        \r\n              this.setState({\r\n                allTimeStat:'',\r\n                ThirtyStat:'',\r\n                SevenStat:'active',   \r\n                Daily:'',   \r\n              })      \r\n          else // daily       \r\n            this.setState({\r\n              allTimeStat:'',\r\n              ThirtyStat:'',\r\n              SevenStat:'',           \r\n              Daily:'active',    \r\n            })\r\n          }\r\n      });\r\n  }\r\n  \r\n  gotoPayout=bal=>(e)=>{\r\n    this.props.history.push(\"/payout\");\r\n    this.props.history.push({\r\n      state: {\r\n        InAppPurchase: this.state.InAppPurchase,      \r\n        bal:bal  \r\n      }\r\n    })\r\n  }\r\n\r\n  openGraph=(graphTitle,id)=>async e=>{\r\n\r\n    var flagData={\r\n      id:id,\r\n      year:this.state.which_year\r\n    }\r\n      const flag=API.encryptData(flagData);\r\n      var JSONdata = {\r\n        flag: flag\r\n      };\r\n\r\n  \r\n    const responseData=await API.postData(JSONdata,'graphMonthy');\r\n    if(responseData.status===1)\r\n    {\r\n      const data=API.decryptJson(responseData.flag);\r\n\r\n      if(id!==3)\r\n      {\r\n        this.setState({openModal:true,\r\n          graphTitle:graphTitle,\r\n          id:id,\r\n          graphMonthy:data.graphMonthy,\r\n          msg:''\r\n        })\r\n      }\r\n      else\r\n      {\r\n        this.setState({openModal:true,\r\n          graphTitle:graphTitle,\r\n          id:id,\r\n          graphMonthy:data.totalViews,\r\n          graphMonthyView:data.totalViews,\r\n          graphMonthyClick:data.totalClicks,\r\n          msg:''\r\n        })\r\n      }\r\n    }   \r\n    else\r\n    {\r\n      this.setState({openModal:true,\r\n        graphTitle:graphTitle,\r\n        id:id,\r\n        graphMonthy:[],\r\n        msg:'No data found'\r\n      })\r\n    }\r\n\r\n\r\n  }\r\n\r\n  getPrevCurrGraph=(year)=>async e=>{\r\n\r\n    var flagData={\r\n      id:this.state.id,\r\n      year:year\r\n    }\r\n      const flag=API.encryptData(flagData);\r\n      var JSONdata = {\r\n        flag: flag\r\n      };\r\n\r\n  \r\n    const responseData=await API.postData(JSONdata,'graphMonthy');\r\n    if(responseData.status===1)\r\n    {\r\n      const data=API.decryptJson(responseData.flag);\r\n\r\n      if(this.state.id!==3)\r\n      {\r\n        this.setState({  \r\n          graphMonthy:data.graphMonthy,\r\n          msg:'',\r\n          which_year:year\r\n        })\r\n      }\r\n      else\r\n      {\r\n        this.setState({openModal:true,        \r\n          graphMonthy:data.totalViews,\r\n          graphMonthyView:data.totalViews,\r\n          graphMonthyClick:data.totalClicks,\r\n          msg:'',\r\n          which_year:year\r\n        })\r\n      }\r\n    }   \r\n    else\r\n    {\r\n      this.setState({openModal:true,       \r\n        graphMonthy:[],\r\n        msg:'No data found',\r\n        which_year:year\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  //25-sep-2021\r\n  sortTable_Monitization=(tableName,n)=>e=> \r\n  {\r\n    var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;\r\n    table = document.getElementById(tableName);\r\n    switching = true;\r\n    //Set the sorting direction to ascending:\r\n    dir = \"asc\"; \r\n    /*Make a loop that will continue until\r\n    no switching has been done:*/\r\n    while (switching) {\r\n      //start by saying: no switching is done:\r\n      switching = false;\r\n      rows = table.rows;\r\n      /*Loop through all table rows (except the\r\n      first, which contains table headers):*/\r\n      for (i = 1; i < (rows.length - 1); i++) {\r\n        //start by saying there should be no switching:\r\n        shouldSwitch = false;\r\n        /*Get the two elements you want to compare,\r\n        one from current row and one from the next:*/\r\n        x = rows[i].getElementsByTagName(\"TD\")[n];\r\n        y = rows[i + 1].getElementsByTagName(\"TD\")[n];\r\n        /*check if the two rows should switch place,\r\n        based on the direction, asc or desc:*/\r\n        if (dir === \"asc\") \r\n        {\r\n\r\n          if(tableName==='monitization')\r\n          {\r\n            if(n===1) //title\r\n            {\r\n                if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\r\n                    //if so, mark as a switch and break the loop:\r\n                    shouldSwitch= true;\r\n                    break;\r\n                  }\r\n            }\r\n            else\r\n            {\r\n              var xValue=parseFloat(x.innerHTML)\r\n              var yValue=parseFloat(y.innerHTML)\r\n          \r\n              if (xValue > yValue ) {\r\n                  //if so, mark as a switch and break the loop:\r\n                  shouldSwitch = true;\r\n                  break;\r\n                }\r\n\r\n            }          \r\n            \r\n          }\r\n          else if(tableName==='tbl_link')\r\n          {\r\n\r\n            if(n===0) //title\r\n            {\r\n                if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\r\n                    //if so, mark as a switch and break the loop:\r\n                    shouldSwitch= true;\r\n                    break;\r\n                  }\r\n            }\r\n            else\r\n            {\r\n              var xValue=parseFloat(x.innerHTML)\r\n              var yValue=parseFloat(y.innerHTML)\r\n          \r\n              if (xValue > yValue ) {\r\n                  //if so, mark as a switch and break the loop:\r\n                  shouldSwitch = true;\r\n                  break;\r\n                }\r\n\r\n            }        \r\n          }\r\n          \r\n        } \r\n        else if (dir === \"desc\")\r\n        {\r\n          if(tableName==='monitization')\r\n          {\r\n            if(n===1)\r\n            {\r\n                if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\r\n                    //if so, mark as a switch and break the loop:\r\n                    shouldSwitch = true;\r\n                    break;\r\n                  }\r\n            }\r\n          else\r\n            {\r\n                var xValue=parseFloat(x.innerHTML)\r\n                var yValue=parseFloat(y.innerHTML)\r\n            \r\n                if (xValue < yValue ) {\r\n                    //if so, mark as a switch and break the loop:\r\n                    shouldSwitch = true;\r\n                    break;\r\n                  }\r\n            }\r\n          }\r\n          else if(tableName==='tbl_link')\r\n          {\r\n            if(n===0)\r\n            {\r\n                if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\r\n                    //if so, mark as a switch and break the loop:\r\n                    shouldSwitch = true;\r\n                    break;\r\n                  }\r\n            }\r\n          else\r\n            {\r\n                var xValue=parseFloat(x.innerHTML)\r\n                var yValue=parseFloat(y.innerHTML)\r\n            \r\n                if (xValue < yValue ) {\r\n                    //if so, mark as a switch and break the loop:\r\n                    shouldSwitch = true;\r\n                    break;\r\n                  }\r\n            }\r\n          }\r\n\r\n        }\r\n      }\r\n      if (shouldSwitch) {\r\n        /*If a switch has been marked, make the switch\r\n        and mark that a switch has been done:*/\r\n        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\r\n        switching = true;\r\n        //Each time a switch is done, increase this count by 1:\r\n        switchcount ++;      \r\n      } else {\r\n        /*If no switching has been done AND the direction is \"asc\",\r\n        set the direction to \"desc\" and run the while loop again.*/\r\n        if (switchcount === 0 && dir === \"asc\") {\r\n          dir = \"desc\";\r\n          switching = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n\r\n    const themePopOver = (\r\n      <Popover id=\"popover-basic-themePopOver\"  style={{zIndex:'99999',color:'black'}}>      \r\n      <Popover.Title as=\"h6\" style={{backgroundColor:'#fff'}}>\r\n        View transactions\r\n        </Popover.Title>\r\n        {/* <Popover.Content>         \r\n        </Popover.Content>     */}       \r\n      </Popover>\r\n    );\r\n    const ViewWallet = (\r\n      <Popover id=\"popover-basic-ViewWallet\"  style={{zIndex:'99999',color:'black'}}>      \r\n        <Popover.Title as=\"h6\" style={{backgroundColor:'#fff'}}>\r\n         View wallet\r\n        </Popover.Title>\r\n        {/* <Popover.Content>         \r\n        </Popover.Content>     */}       \r\n      </Popover>\r\n    );\r\n    const tool_totalView=(\r\n      <Popover id=\"popover-basic-tool_totalView\"  style={{zIndex:'99999',color:'black'}}>      \r\n      <Popover.Title as=\"h6\" style={{backgroundColor:'#fff'}}>\r\n       View total views\r\n      </Popover.Title>\r\n      {/* <Popover.Content>         \r\n      </Popover.Content>     */}       \r\n    </Popover>\r\n    )\r\n    const tool_totalclicks=(\r\n      <Popover id=\"popover-basic-tool_totalView\"  style={{zIndex:'99999',color:'black'}}>      \r\n      <Popover.Title as=\"h6\" style={{backgroundColor:'#fff'}}>\r\n       View total clicks\r\n      </Popover.Title>\r\n      {/* <Popover.Content>         \r\n      </Popover.Content>     */}       \r\n    </Popover>\r\n    )\r\n    const tool_Click_through_rate=(\r\n      <Popover id=\"popover-basic-tool_totalView\"  style={{zIndex:'99999',color:'black'}}>      \r\n      <Popover.Title as=\"h6\" style={{backgroundColor:'#fff'}}>\r\n       View click through rate\r\n      </Popover.Title>\r\n      {/* <Popover.Content>         \r\n      </Popover.Content>     */}       \r\n    </Popover>\r\n    )\r\n\r\n    const tool_unqiueViews=(\r\n      <Popover id=\"popover-basic-tool_totalView\"  style={{zIndex:'99999',color:'black'}}>      \r\n      <Popover.Title as=\"h6\" style={{backgroundColor:'#fff'}}>\r\n       View total unique views\r\n      </Popover.Title>\r\n      {/* <Popover.Content>         \r\n      </Popover.Content>     */}       \r\n    </Popover>\r\n    )\r\n    const tool_unqiueClicks=(\r\n      <Popover id=\"popover-basic-tool_totalView\"  style={{zIndex:'99999',color:'black'}}>      \r\n      <Popover.Title as=\"h6\" style={{backgroundColor:'#fff'}}>\r\n       View total unique clicks\r\n      </Popover.Title>\r\n      {/* <Popover.Content>         \r\n      </Popover.Content>     */}       \r\n    </Popover>\r\n    )\r\n    const tool_totalSales=(\r\n      <Popover id=\"popover-basic-tool_totalView\"  style={{zIndex:'99999',color:'black'}}>      \r\n      <Popover.Title as=\"h6\" style={{backgroundColor:'#fff'}}>\r\n       View total sales\r\n      </Popover.Title>\r\n      {/* <Popover.Content>         \r\n      </Popover.Content>     */}       \r\n    </Popover>\r\n    )\r\n    const tool_totalRevenue=(\r\n      <Popover id=\"popover-basic-tool_totalView\"  style={{zIndex:'99999',color:'black'}}>      \r\n      <Popover.Title as=\"h6\" style={{backgroundColor:'#fff'}}>\r\n       View total  revenue\r\n      </Popover.Title>\r\n      {/* <Popover.Content>         \r\n      </Popover.Content>     */}       \r\n    </Popover>\r\n    )\r\n    const { viewsDetails, clickDetails, InAppPurchase,uniqueViews,  monitization  } = this.state;\r\n    let totalViews = 0, totalClick = 0,UniqueViews=0;\r\n    if (viewsDetails != null && viewsDetails.length > 0) \r\n    {\r\n      totalViews = parseInt(viewsDetails[0].totViews);\r\n    }\r\n    if (clickDetails != null && clickDetails.length > 0) \r\n    {\r\n      let len = clickDetails.length;\r\n      for (let i = 0; i < len; i++)\r\n       {\r\n        totalClick += parseInt(clickDetails[i].TotClicks);\r\n      }\r\n    }\r\n    if(uniqueViews!=null && uniqueViews.length > 0)\r\n    {\r\n      let len = uniqueViews.length;\r\n      for (let i = 0; i < len; i++) {\r\n        UniqueViews += parseInt(uniqueViews[i].uniqueViews);\r\n      }\r\n    }\r\n\r\n    const CTR = (totalClick > 0 && totalViews) > 0 ? parseFloat(totalClick / totalViews * 100).toFixed(2) + \"%\" : '0%';\r\n    const TopItems = clickDetails && clickDetails.map((click, i) => {\r\n      return (        \r\n        \r\n          \r\n            click.Stat_Type!=='P'?     \r\n            <tr>\r\n              <td>{click.Title}</td>\r\n              <td>{click.TotClicks}</td>\r\n              <td>{parseFloat(click.TotClicks / totalViews * 100).toFixed(2) + \"%\"}</td>\r\n            </tr>           \r\n            :\r\n            null\r\n\r\n          \r\n    \r\n       \r\n      )\r\n    })\r\n    //MS2\r\n    const TopMonitization = monitization && monitization.map((click, i) => {\r\n      return (       \r\n        click.TotClicks > 0 && click.Stat_Type==='P'? \r\n        <tr key={click.Stat_ID}>          \r\n              <td data-value={click.DA_Allow_Cust_Pay > 0 ? click.DA_Min_Amount +\"+\": click.DA_Price}>\r\n                {click.DA_Allow_Cust_Pay > 0 ? click.DA_Min_Amount +\"+\": click.DA_Price}\r\n              \r\n              </td>\r\n              <td>{click.Title}</td>\r\n              <td data-value={click.TotClicks}>{click.TotClicks}</td>\r\n              <td  data-value={parseFloat(click.TotClicks / totalViews * 100).toFixed(2)}>{parseFloat(click.TotClicks / totalViews * 100).toFixed(2) + \"%\"}</td>\r\n              <td data-value={click.totalPurchases}>{click.totalPurchases}</td>\r\n              <td data-value={click.revenue}>\r\n                {click.revenue}\r\n                {/* {click.BM_Purchase_Amt} */}\r\n              \r\n              </td> \r\n        </tr>\r\n        :\r\n        null\r\n      )\r\n    })\r\n\r\n\r\n    let Totpeople = 0;\r\n    if (this.state.totalActivePeople !== null && this.state.totalActivePeople.length > 0) {\r\n      Totpeople = this.state.totalActivePeople[0].totalPeopleVisited;\r\n    }\r\n    let TotSales = 0, TotRevenue = 0, TotTransaction = 0;\r\n    if (InAppPurchase != null && InAppPurchase.length > 0) {\r\n      let len = InAppPurchase.length;\r\n      for (let i = 0; i < len; i++) {\r\n        TotSales += parseFloat(InAppPurchase[i].Actual_Price);\r\n        TotRevenue += parseFloat(InAppPurchase[i].BM_Purchase_Amt );//Revenue\r\n        TotTransaction += parseFloat(InAppPurchase[i].purchases);\r\n      }\r\n    }\r\n    let InAppPurchaseTable = InAppPurchase !== null && InAppPurchase.map((item, i) => {\r\n      return (    \r\n        <tr>\r\n          <td>{item.DA_Price}</td>\r\n          <td>{item.DA_Title}</td>      \r\n          <td>{item.purchases}</td>\r\n          <td>{\"CTR\"}</td>\r\n          <td>{0}</td>\r\n          <td>{item.Revenue}</td>     \r\n        </tr>\r\n      )\r\n\r\n    })\r\n\r\n    //console.log(InAppPurchase)\r\n    const columns = [\r\n      { field: 'id', headerName: 'ID', width: 70 },\r\n      { field: 'firstName', headerName: 'First name', width: 130 },\r\n      { field: 'lastName', headerName: 'Last name', width: 130 },\r\n      {\r\n        field: 'age',\r\n        headerName: 'Age',\r\n        type: 'number',\r\n        width: 90,\r\n      },\r\n      {\r\n        field: 'fullName',\r\n        headerName: 'Full name',\r\n        description: 'This column has a value getter and is not sortable.',\r\n        sortable: false,\r\n        width: 160,\r\n        valueGetter: (params) =>\r\n          `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`,\r\n      },\r\n    ];\r\n    let charges=.9;\r\n   let TotRevenue2=TotRevenue;\r\n\r\n   var Wallet=0;\r\n\r\n\r\n   const styleButton={\r\n     \r\n    backgroundColor:this.state.id===1? \r\n                    '#7004fa'\r\n                    : this.state.id===2 ?\r\n                    '#fc347f'\r\n                    : this.state.id===3 ?\r\n                    '#1482cc'\r\n                    : this.state.id===4 ?\r\n                    '#4eb232'\r\n                    : this.state.id===5 ?\r\n                    '#e60dc4'\r\n                    : this.state.id===6 ?\r\n                    '#73300d'\r\n                    : this.state.id===7 ?\r\n                    '#fca542'\r\n                    :\r\n                    '#7004fa'\r\n   }\r\n\r\n\r\n    return (\r\n      <>\r\n          <Helmet>\r\n            <title>Statistics | Expy </title>\r\n            <meta name=\"description\" content=\"Use Expy to SHARE all your important links, content and OFFER paid, personalized, premium features under one beautiful Bio-Link page. FREE and FAST to set up.\"></meta>\r\n        </Helmet>\r\n        <ProfileHeader />\r\n        <div className=\"profile-tab\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                {/* <NavLink to=\"/myprofile\" className=\"btun\"><PersonOutlineIcon/>Profile</NavLink>\r\n                    <NavLink to=\"/myappearance\" className=\"btun\"><ColorLensIcon/>Appearance</NavLink>\r\n                    <NavLink to=\"/mystatus\" className=\"btun active\"><TrendingUpIcon/>Status</NavLink> */}\r\n                <ProfileNav />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n\r\n\r\n          <div className=\"status-sec\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-10 offset-md-1\">\r\n                  <div className=\"status\">\r\n                    <div className=\"follow\">\r\n                      {/* <p>You have <span>0</span> followers</p> */}\r\n\r\n                      <div className=\"Glowbutton\"></div><span style={{ marginLeft: '10px', marginTop: '-5px' }}>{Totpeople} </span> User/Users on your profile right now\r\n\r\n                  </div>\r\n                     <div className=\"title\">\r\n                      {/* <label>View In Depth</label> */}\r\n                   \r\n                      \r\n                                 <button className=\"float-left graphButton\" \r\n                                 onClick={this.onClick_Stat(365,this.state.prev_year)}  \r\n                                 >{\"Prev\"}</button> \r\n                                  <h3>{this.state.statType + \" #\"+this.state.which_year}</h3>\r\n                                 <button className=\"float-right graphButton\"                                   \r\n                                   onClick={this.onClick_Stat(365,this.state.this_year)} \r\n                                 \r\n                                 >{\"Current\"}</button>        \r\n                          \r\n                    </div>\r\n                    <div className=\"graph\">\r\n                      <LineChart Chart={this.state.graphDetails} graphType={this.state.graphType} statType={this.state.statType}\r\n                      graphViewDetails={this.state.graphViewDetails}  tranDetails={this.state.tranDetails}/>\r\n                    </div>\r\n                    <div className=\"slt-int\">\r\n                      <ul>\r\n                        <li><button className={this.state.allTimeStat} onClick={this.onClick_Stat(365,this.state.this_year)}>All Time Stats</button></li>\r\n                        <li><button className={this.state.ThirtyStat} onClick={this.onClick_Stat(30,this.state.this_year)}>30 days</button></li>\r\n                        <li><button className={this.state.SevenStat} onClick={this.onClick_Stat(7,this.state.this_year)}>7 Days</button></li>\r\n                        <li><button className={this.state.Daily} onClick={this.onClick_Stat(1,this.state.this_year)}>Daily</button></li>\r\n                        {/* <li><button>6 Months</button></li>\r\n                            <li><button>1 Year</button></li> */}\r\n                      </ul>\r\n                    \r\n                  </div>\r\n                   \r\n                    <div className=\"sta-box\">\r\n                      <div className=\"part\">\r\n                         <OverlayTrigger  placement={\"bottom\"} overlay={tool_totalView} >\r\n                            <div className=\"item setCursor\" onClick={this.openGraph('Total views',1)}>\r\n                                <p>Views</p>\r\n                                <h4>{totalViews}</h4>\r\n                              </div>\r\n                          </OverlayTrigger>                     \r\n                      </div>\r\n                      <div className=\"part\">\r\n                      <OverlayTrigger  placement={\"bottom\"} overlay={tool_totalclicks} >\r\n                        <div className=\"item back-view setCursor\"  onClick={this.openGraph('Total clicks',2)}>\r\n                          <p>Clicks</p>\r\n                          <h4>{totalClick}</h4>\r\n                        </div>\r\n                        </OverlayTrigger>   \r\n                      </div>\r\n                      <div className=\"part\">\r\n                      <OverlayTrigger  placement={\"bottom\"} overlay={tool_Click_through_rate} >\r\n                        <div className=\"item back-CTR setCursor\" onClick={this.openGraph('Click through rate',3)}>\r\n                          <p>Click through rate</p>\r\n                          <h4>{CTR}</h4>\r\n                        </div>\r\n                        </OverlayTrigger>   \r\n                      </div>\r\n                      <div className=\"part\">\r\n                      <OverlayTrigger  placement={\"bottom\"} overlay={themePopOver} >\r\n                            {/* <a href={process.env.REACT_APP_API_URL+\"notify\"} style={{textDecoration:'none'}}> */}\r\n                                <div className=\"item back-transaction setCursor\" onClick={this.openGraph('Total transactions',4)}>\r\n                                  <p>Transactions</p>                         \r\n                                        <h4>\r\n                                          {TotTransaction}\r\n                                        </h4>           \r\n                                </div>\r\n                              {/* </a> */}\r\n                        </OverlayTrigger > \r\n                        \r\n                      </div>\r\n                      <div className=\"part mr0\">\r\n                      <OverlayTrigger  placement={\"bottom\"} overlay={tool_unqiueViews} >\r\n                        <div className=\"item back-uniqueViews setCursor\" onClick={this.openGraph('Unique views',5)}>\r\n                          <p>Unique Views</p>\r\n                          <h4>{UniqueViews}</h4>\r\n                        </div>\r\n                        </OverlayTrigger > \r\n                      </div>\r\n                      <div className=\"part\">\r\n                      <OverlayTrigger  placement={\"bottom\"} overlay={tool_unqiueClicks} >\r\n                        <div className=\"item back-uniqueClicks setCursor\"  onClick={this.openGraph('Unique clicks',6)}>\r\n                          <p>Unique Clicks</p>\r\n                          <h4>{this.state.uniqueClicks}</h4>\r\n                        </div>\r\n                        </OverlayTrigger > \r\n                      </div>\r\n                      <div className=\"part\">\r\n                      <OverlayTrigger  placement={\"bottom\"} overlay={tool_totalSales} >\r\n                        <div className=\"item back-totalSales setCursor\" onClick={this.openGraph('Total sales',7)}>\r\n                          <p>Total Sales</p>\r\n                          <h4><i class=\"fas fa-rupee-sign\"></i> {TotSales.toFixed(2)}</h4>\r\n                        </div>\r\n                        </OverlayTrigger > \r\n                      </div>\r\n                      <div className=\"part\">\r\n                        <OverlayTrigger  placement={\"bottom\"} overlay={tool_totalRevenue} > \r\n                          <div className=\"item back-revenue setCursor\"  onClick={this.openGraph('Total Revenue',8)}>\r\n                            <p>Total Revenue</p>\r\n                            <h4><i class=\"fas fa-rupee-sign\"></i> {TotRevenue2.toFixed(2)}</h4>\r\n                          </div>\r\n                         </OverlayTrigger >  \r\n                      </div>\r\n                     \r\n                        <div className=\"part\" style={{color:'green'}} onClick={this.gotoPayout(TotRevenue2.toFixed(2))}>\r\n                          <OverlayTrigger  placement={\"bottom\"} overlay={ViewWallet} >\r\n                            <div className=\"item back-wallet setCursor\">\r\n                              <p>Wallet Amount</p>\r\n                              <h4><i class=\"fas fa-rupee-sign\"></i> {this.state.Wallet.toFixed(2)}</h4>\r\n                            </div>\r\n                          </OverlayTrigger>\r\n                        </div>\r\n                       \r\n                    </div>\r\n                    <div className=\"slt-int\">\r\n               \r\n                      {/* <select className=\"form-control\" onChange={this.onChange_Stat}>\r\n                        <option value=\"365\">All Time Stats</option>                      \r\n                        <option value=\"7\">7 Days Stats</option>\r\n                        <option value=\"30\">30 Days Stats</option>\r\n                      </select> */}\r\n                    </div>\r\n                    <div className=\"title\">\r\n                      <h3>Top links and widgets</h3>\r\n                    </div>\r\n                    <div className=\"table-box\">\r\n                      <table className=\"table table-striped table-bordered table-hover\" id=\"tbl_link\">\r\n                        <tr>\r\n                          <th onClick={this.sortTable_Monitization('tbl_link',0)}>Title</th>\r\n                          <th onClick={this.sortTable_Monitization('tbl_link',1)}>Clicks</th>\r\n                          <th onClick={this.sortTable_Monitization('tbl_link',2)}>CTR</th>\r\n                        </tr>\r\n                        {TopItems}\r\n                      </table>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"title\">\r\n                      <h3>Top monetization features</h3>\r\n                    </div>\r\n                    <div className=\"table-box\">\r\n                      <table className=\"table table-striped table-bordered table-hover\" id=\"monitization\">\r\n                        <tr>\r\n                          <th onClick={this.sortTable_Monitization('monitization',0)}>Price</th>\r\n                          <th onClick={this.sortTable_Monitization('monitization',1)}>Title</th>\r\n                          <th onClick={this.sortTable_Monitization('monitization',2)}>Clicks</th>\r\n                          <th onClick={this.sortTable_Monitization('monitization',3)}>CTR</th>\r\n                          <th onClick={this.sortTable_Monitization('monitization',4)}>Total Purchases</th>\r\n                          <th onClick={this.sortTable_Monitization('monitization',5)}>Revenue</th>\r\n                        </tr>\r\n                        {TopMonitization}\r\n                      </table>\r\n                    </div>\r\n\r\n                     \r\n                  </div>\r\n                  <graph />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n            {/* image crop modal */}\r\n            <Modal         \r\n                      show={this.state.openModal}\r\n                      onHide={() => this.setState({ openModal: false })}\r\n                      aria-labelledby=\"example-modal-sizes-title-sm\"\r\n                      backdrop=\"static\"\r\n                      size={\"xl\"}\r\n                      keyboard={false}\r\n                      centered\r\n                    >\r\n                      <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-modal-sizes-title-sm\" style={{ fontSize: '15px' }}>\r\n                            Monthly Chart  {this.state.id===4 ?      \r\n                               <>\r\n                               <br/>\r\n                               <a href={process.env.REACT_APP_API_URL+\"notify\"} style={{textDecoration:'none',cursor:'pointer'}}>View Report </a>\r\n                               </>\r\n                               : ''}   \r\n                        </Modal.Title>\r\n                      </Modal.Header>\r\n                      <Modal.Body>    \r\n                         <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                 <button className=\"float-left graphButton\" \r\n                                 onClick={this.getPrevCurrGraph(this.state.prev_year,this.state.id)}\r\n                                 style={styleButton}\r\n                                 \r\n                                 >{\"Prev\"}</button> \r\n                                 <button className=\"float-right graphButton\" \r\n                                      style={styleButton}\r\n                                 onClick={this.getPrevCurrGraph(this.state.this_year,this.state.id)}>{\"Current\"}</button>        \r\n                            </div>\r\n                        </div>\r\n                      \r\n                      \r\n                        <GraphMonthly  \r\n                            graphMonthyView={this.state.graphMonthyView}\r\n                            graphMonthyClick={this.state.graphMonthyClick}\r\n                            graphTitle={this.state.graphTitle} \r\n                            id={this.state.id} \r\n                            graphMonthy={this.state.graphMonthy}\r\n                            which_year={this.state.which_year}                 \r\n                        />                  \r\n                      </Modal.Body>\r\n                      <Modal.Footer>\r\n\r\n                      </Modal.Footer>\r\n                    </Modal>\r\n\r\n                    <FooterClass />\r\n\r\n\r\n\r\n\r\n\r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default MyStatus\r\n","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\FAQs.js",[],"E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\Cards.js",["2053","2054"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Cards extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div class=\"container\">\r\n                <div class=\"row\">\r\n                     <div class=\"col-md-3\">\r\n                        <div class=\"stati bg-orange \">\r\n                        <i class=\"icon-wrench icons\"></i>\r\n                        <div>\r\n                            <b>62</b>\r\n                            <span>bg-orange</span>\r\n                        </div> \r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-3\">\r\n                        <div class=\"stati concrete \">\r\n                        <i class=\"icon-book-open icons\"></i>\r\n                        <div>\r\n                            <b>56</b>\r\n                            <span>.concrete</span>\r\n                        </div> \r\n                        </div>\r\n                    </div> \r\n                    <div class=\"col-md-3\">\r\n                        <div class=\"stati concrete left\">\r\n                        <i class=\"icon-basket-loaded icons\"></i>\r\n                        <div>\r\n                            <b>57</b>\r\n                            <span>.concrete left</span>\r\n                        </div> \r\n                        </div>\r\n                    </div> \r\n                    <div class=\"col-md-3\">\r\n                            <div class=\"stati bg-concrete \">\r\n                                <i class=\"icon-basket icons\"></i>\r\n                                <div>\r\n                                    <b>58</b>\r\n                                    <span>bg-concrete</span>\r\n                                </div> \r\n                                </div>\r\n                            </div> \r\n                    <div class=\"col-md-3\">\r\n                                    <div class=\"stati bg-concrete left\">\r\n                                    <i class=\"icon-bag icons\"></i>\r\n                                    <div>\r\n                                        <b>59</b>\r\n                                        <span>bg-concrete left</span>\r\n                                    </div> \r\n                                    </div>\r\n                                </div> \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCards.propTypes = {\r\n\r\n};\r\n\r\nexport default Cards;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\MyAppearance.js",["2055","2056","2057","2058","2059","2060","2061","2062","2063","2064","2065","2066","2067","2068","2069","2070","2071","2072","2073","2074","2075","2076","2077","2078","2079","2080","2081","2082","2083"],"import React, { Component } from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport FooterClass from '../header_footer/FooterClass';\r\nimport ProfileNav from './ProfileNav';\r\nimport ButtonMaterial from '@material-ui/core/Button';\r\nimport ProfileHeader from '../header_footer/ProfileHeader';\r\nimport LivePreview2 from './LivePreview2';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport Tab2 from 'react-bootstrap/Tab';\r\nimport BurstModeOutlinedIcon from '@material-ui/icons/BurstModeOutlined';\r\nimport SettingsOverscanOutlinedIcon from '@material-ui/icons/SettingsOverscanOutlined';\r\nimport CategoryOutlinedIcon from '@material-ui/icons/CategoryOutlined';\r\nimport WbIridescentOutlinedIcon from '@material-ui/icons/WbIridescentOutlined';\r\nimport TextFieldsOutlinedIcon from '@material-ui/icons/TextFieldsOutlined';\r\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\r\nimport { Helmet } from \"react-helmet\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport API  from '../services/API';\r\n\r\nclass MyAppearance extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      JM_Email: localStorage.getItem('JM_Email'),\r\n      JM_ID: parseInt(localStorage.getItem('JM_ID')),\r\n      themeMaster: [],\r\n      userThemeDetails: [],\r\n      linkMaster: [],\r\n      userDetails: this.props.location.userDetails,\r\n      isLoggedIn: false,\r\n      JM_Name: '',\r\n      JM_Email: '',\r\n      JM_Url: '',\r\n      JM_Profile_Pic: '',\r\n      JM_User_Profile_Url: '',\r\n      base_url: process.env.REACT_APP_API_URL,\r\n      root_url: process.env.REACT_APP_ROOT_URL,\r\n      ProfilePath: 'Profile/',\r\n      linkPath: '',\r\n      ProfileimagePath: '',\r\n      open: false,\r\n      isChecked: false,\r\n      tab: 1,\r\n      showTab1: true,\r\n      showTab2: false,\r\n      showSuccess: false,\r\n      showError: false,\r\n      message: '',\r\n      templateTab: 1,\r\n      templateTab1: true,\r\n      templateTab2: false,\r\n      activeItemStyle: \"\",\r\n      btnStyle: \"\",\r\n      Custom_template1: 'Custom_template1',\r\n      selectedFile: null,\r\n      JM_Description: '',\r\n      JM_User_Profile_Url: '',\r\n      showBackImage:'none',\r\n      btnUploadVideo:'Upload a video',\r\n      btnUploadVideoDisabled:false,\r\n      activeButtonEffectStyle:''\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n  \r\n    //API.isActive();\r\n    this.validateSession();\r\n    this.Get_User_Theme_Details();\r\n\r\n  }\r\n\r\n\r\n  validateSession() {\r\n\r\n    var JM_ID = parseInt(localStorage.getItem('JM_ID'));\r\n    if (isNaN(JM_ID) || JM_ID === 0 || JM_ID === null) {\r\n      localStorage.setItem('JM_Email', \"\");\r\n      localStorage.setItem('JM_ID', 0);\r\n      window.location.href = '/';\r\n    }\r\n  }\r\n  async Get_User_Theme_Details() {\r\n    try {\r\n      var JM_ID = parseInt(localStorage.getItem('JM_ID'));\r\n      var JSONdata = {\r\n        JM_ID: JM_ID\r\n      };\r\n      const API_url = this.state.base_url + \"admin/userAppear\";\r\n      const response = await fetch(API_url, {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      });\r\n      const data1 = await response.json();\r\n      if (data1.status === 1)\r\n      {\r\n        const data=await API.decryptJson(data1.flag);\r\n        this.setState({\r\n          userThemeDetails: data.userThemeDetails,\r\n          themeMaster: data.themeMaster,\r\n          linkMaster: data.linkMaster,\r\n          userDetails: data.userDetails,\r\n          TM_Bio_Color: data.userThemeDetails[0].TM_Bio_Color\r\n        });\r\n      }      \r\n  \r\n\r\n      //document.getElementById(\"tab_1\").click(); // default click on tab 1\r\n      this.FetchCustomTheme();\r\n      if (this.state.userDetails && this.state.userDetails.length > 0) {\r\n        this.setState({\r\n          JM_Description: this.state.userDetails[0].JM_Description,\r\n          JM_User_Profile_Url: this.state.userDetails[0].JM_User_Profile_Url\r\n\r\n        });\r\n        //console.log(this.state.JM_User_Profile_Url)\r\n      }\r\n    }\r\n    catch (e) {\r\n      //console.log(\"exception Get_User_Theme_Details my appearance\")\r\n    }\r\n\r\n  }\r\n    getApper=()=>{\r\n      var JM_ID = parseInt(localStorage.getItem('JM_ID'));\r\n      var JSONdata = {\r\n        JM_ID: JM_ID\r\n      };\r\n                const API_url = process.env.REACT_APP_API_URL + \"admin/userAppear\";       \r\n                fetch(API_url,\r\n                {\r\n                    method: 'post',\r\n                    headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n                    body: JSON.stringify(JSONdata)\r\n                })\r\n                .then((response) => response.json())\r\n                .then(async data1 => { \r\n                      if (data1.status === 1)\r\n                      {\r\n                        const data=await API.decryptJson(data1.flag);\r\n                      this.setState({\r\n                        userThemeDetails: data.userThemeDetails,\r\n                        themeMaster: data.themeMaster,\r\n                        linkMaster: data.linkMaster,\r\n                        userDetails: data.userDetails\r\n                      });\r\n                    }\r\n                });\r\n    }\r\n\r\n  onChangeInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  handleChange = (event, tab) => {\r\n    this.setState({ tab });\r\n  };\r\n  handleChangeTemplate = (event, templateTab) => {\r\n    this.setState({ templateTab });\r\n  };\r\n\r\n  onTabChange = tabvalue => e => {\r\n    //let tabvalue=e.target.index;\r\n    if (tabvalue === 1) {\r\n      this.setState({\r\n        showTab1: true,\r\n        showTab2: false\r\n\r\n      });\r\n    }\r\n    if (tabvalue === 2) {\r\n      this.setState({\r\n        showTab2: true,\r\n        showTab1: false\r\n      });\r\n    }\r\n  }\r\n  onTabTemplateChange = tabvalue => e => {\r\n    //let tabvalue=e.target.index;\r\n    if (tabvalue === 1) {\r\n      this.setState({\r\n        templateTab1: true,\r\n        templateTab2: false\r\n\r\n      });\r\n    }\r\n    if (tabvalue === 2) {\r\n      this.setState({\r\n        templateTab2: true,\r\n        templateTab1: false\r\n      });\r\n    }\r\n  }\r\n\r\n  //onTabTemplateChange\r\n  useThisTheme = data => e => {\r\n    var flagData = {\r\n      TM_ID: data.TM_ID,\r\n      JM_ID: this.state.JM_ID,\r\n      TM_Back_Color: data.TM_Back_Color,\r\n      TM_Back_Image: data.TM_Back_Image,\r\n      TM_Item_Color: '',\r\n      TM_Item_Style: '',\r\n      TM_Highlight_Color: '',\r\n      TM_Font: '',\r\n      TM_Font_Color: '',\r\n      TM_Bio_Color:this.state.TM_Bio_Color,\r\n      TM_Active: data.TM_Active,\r\n      TM_Class_Name: data.TM_Class_Name\r\n    };\r\n    const API_url = this.state.base_url + \"admin/updateDefaultTheme\";\r\n\r\n     \r\n    const flag=API.encryptData(flagData);\r\n     var JSONdata = {\r\n      flag: flag\r\n    };\r\n\r\n   \r\n\r\n\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.setState({ showSuccess: true, message: 'Profile is Successfully Updated' });\r\n          this.setState({ showError: false });\r\n          this.refreshMobileView();\r\n        }\r\n        else {\r\n          this.setState({ showError: true, message: 'Failed to Update profile, try agian after Sometimes' });\r\n          this.setState({ showSuccess: false });\r\n        }\r\n      });\r\n\r\n    //console.log(data.TM_ID);\r\n    //console.log(JSONdata);\r\n  }\r\n\r\n  changeColor = id => e => {\r\n    var color = document.getElementById('color-picker_' + id).value;\r\n    document.getElementById('custom_color_' + id).style.backgroundColor = color;\r\n    document.getElementById('custom_color_' + id).style.borderColor = color;\r\n\r\n    if (id === \"bg\") {\r\n      this.setState({ activeItemBGcolor: color, dynamicColor: color });\r\n      var JSONdata = {\r\n        colName: 'TM_Back_Color',\r\n        JM_ID: this.state.JM_ID,\r\n        colValue: color,\r\n      }\r\n      this.updateCustomThemeOnclick(JSONdata);\r\n    }\r\n    if (id === \"item\") {\r\n      this.setState({ activeItemcolor: color, dynamicItemColor: color });\r\n      var JSONdata = {\r\n        colName: 'TM_Item_Color',\r\n        JM_ID: this.state.JM_ID,\r\n        colValue: color,\r\n      }\r\n      this.updateCustomThemeOnclick(JSONdata);\r\n    }\r\n    if (id === \"highlight\") {\r\n      this.setState({ activeHighlightcolor: color, dynamicHighlightColor: color });\r\n      var JSONdata = {\r\n        colName: 'TM_Highlight_Color',\r\n        JM_ID: this.state.JM_ID,\r\n        colValue: color,\r\n      }\r\n      this.updateCustomThemeOnclick(JSONdata);\r\n    }\r\n    if (id === \"font\") {\r\n      this.setState({ activeFontcolor: color, dynamicFontColor: color });\r\n      var JSONdata = {\r\n        colName: 'TM_Font_Color',\r\n        JM_ID: this.state.JM_ID,\r\n        colValue: color,\r\n      }\r\n      \r\n      this.updateCustomThemeOnclick(JSONdata);\r\n    }\r\n    if (id === \"border\") \r\n    {\r\n      this.setState({ activeBordercolor: color, dynamicBorderColor: color });\r\n      var JSONdata = {\r\n        colName: 'TM_Border_Color',\r\n        JM_ID: this.state.JM_ID,\r\n        colValue: color,\r\n      }\r\n      this.updateCustomThemeOnclick(JSONdata);\r\n    }\r\n       //thumbIcon\r\n    if (id === \"thumbIcon\") \r\n    {\r\n      this.setState({ activeIconcolor: color,dynamicIconColor: color  });\r\n      JSONdata = {\r\n        colName: 'TM_Thumbnail_Icon_Color',\r\n        JM_ID: this.state.JM_ID,\r\n        colValue: color,\r\n      }\r\n      this.updateCustomThemeOnclick(JSONdata);\r\n    }\r\n    if (id === \"socialWidgetIcon\") {\r\n      this.setState({ activeSocialWidgetcolor: color,dynamicSocialWidgetcolor: color  });\r\n      JSONdata = {\r\n        colName: 'TM_SocialWidget_Icon_Color',\r\n        JM_ID: this.state.JM_ID,\r\n        colValue: color,\r\n      }\r\n      this.updateCustomThemeOnclick(JSONdata);\r\n    }\r\n      \r\n    \r\n  }\r\n\r\n  openColorPicker = id => event => {\r\n    document.getElementById(\"color-picker_\" + id).click();\r\n    var color = document.getElementById(\"color-picker_\" + id).value;\r\n    event.currentTarget.setAttribute(\"data-color\", color);\r\n\r\n    if (id === \"bg\") {\r\n      this.setState({ activeItemBGcolor: color, dynamicColor: color });\r\n    }\r\n    if (id === \"item\") {\r\n      this.setState({ activeItemcolor: color, dynamicItemColor: color });\r\n    }\r\n    if (id === \"highlight\") {\r\n      this.setState({ activeHighlightcolor: color, dynamicHighlightColor: color });\r\n    }\r\n    if (id === \"font\") {\r\n      this.setState({ activeFontcolor: color, dynamicFontColor: color });\r\n    }\r\n    if (id === \"thumbIcon\") {\r\n      this.setState({ activeIconcolor: color, dynamicIconColor: color });\r\n    }\r\n    if (id === \"socialWidgetIcon\") {\r\n      this.setState({ activeSocialWidgetcolor: color,dynamicSocialWidgetcolor: color  });      \r\n    }\r\n  }\r\n\r\n  setActiveClass = id => event => { // bg color\r\n    //console.log(event.currentTarget.attributes['data-color'].value);\r\n    var color = event.currentTarget.attributes['data-color'].value;\r\n    let JSONdata = {};\r\n    if (id === \"bg\")\r\n    {\r\n      this.setState({ activeItemBGcolor: color,selectedFileVideo:null });\r\n      document.getElementById('upVideo').value='';\r\n      JSONdata = {\r\n        colName: 'TM_Back_Color',\r\n        JM_ID: this.state.JM_ID,\r\n        colValue: color,\r\n      }\r\n    }\r\n    if (id === \"item\") {\r\n      this.setState({ activeItemcolor: color });\r\n      JSONdata = {\r\n        colName: 'TM_Item_Color',\r\n        JM_ID: this.state.JM_ID,\r\n        colValue: color,\r\n      }\r\n    }\r\n    if (id === \"highlight\") {\r\n      this.setState({ activeHighlightcolor: color });\r\n      JSONdata = {\r\n        colName: 'TM_Highlight_Color',\r\n        JM_ID: this.state.JM_ID,\r\n        colValue: color,\r\n      }\r\n    }\r\n    if (id === \"font\") {\r\n      this.setState({ activeFontcolor: color });\r\n      JSONdata = {\r\n        colName: 'TM_Font_Color',\r\n        JM_ID: this.state.JM_ID,\r\n        colValue: color,\r\n      }\r\n    }\r\n    if (id === \"border\") {\r\n      this.setState({ activeBordercolor: color });\r\n      JSONdata = {\r\n        colName: 'TM_Border_Color',\r\n        JM_ID: this.state.JM_ID,\r\n        colValue: color,\r\n      }\r\n    }\r\n    //thumbIcon\r\n    if (id === \"thumbIcon\") {\r\n      this.setState({ activeIconcolor: color });\r\n      JSONdata = {\r\n        colName: 'TM_Thumbnail_Icon_Color',\r\n        JM_ID: this.state.JM_ID,\r\n        colValue: color,\r\n      }\r\n    }\r\n    if (id === \"socialWidgetIcon\") {\r\n      this.setState({ activeSocialWidgetcolor: color });\r\n      JSONdata = {\r\n        colName: 'TM_SocialWidget_Icon_Color',\r\n        JM_ID: this.state.JM_ID,\r\n        colValue: color,\r\n      }\r\n    }\r\n\r\n    this.updateCustomThemeOnclick(JSONdata);\r\n\r\n  }\r\n  //05-mar-2021\r\n  updateCustomThemeOnclick = (flagData) => {\r\n\r\n        const flag=API.encryptData(flagData);\r\n      let  JSONdata = {\r\n          flag: flag\r\n        };\r\n\r\n   \r\n    const API_url = process.env.REACT_APP_API_URL + \"admin/updateCustomThemeOnclick\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Profile is updated',\r\n            showBackImage:'none' \r\n          });\r\n          \r\n          this.getApper();\r\n          this.refreshMobileView();        \r\n\r\n        }\r\n        else {\r\n          this.setState({\r\n            show: true,\r\n            title: 'error!!!',\r\n            msg: 'Profile is not updated',\r\n            // isLoading:true   \r\n          });\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n\r\n  //02-mar-2021\r\n  onClickUpdateTheme = () => {\r\n\r\n  }\r\n  //================== set active buton style or item style\r\n  //05-mar-2021\r\n  setButtonStyleActive = id => event => {\r\n    // console.log(event.currentTarget.attributes['data-color'].value);\r\n    var shape = event.currentTarget.attributes['data-shape'].value;\r\n    let JSONdata = {};\r\n    if (id === \"button\") {\r\n      this.setState({ activeButtonStyle: shape });\r\n      JSONdata = {\r\n        colName: 'TM_Item_Style',\r\n        JM_ID: this.state.JM_ID,\r\n        colValue: shape,\r\n      }\r\n    }\r\n    if (id === \"font\") {\r\n      this.setState({ activeFontStyle: shape });\r\n      JSONdata = {\r\n        colName: 'TM_Font',\r\n        JM_ID: this.state.JM_ID,\r\n        colValue: shape,\r\n      }\r\n    }\r\n    if(id==='buttonEffect')\r\n    {\r\n      this.setState({ activeButtonEffectStyle: shape });\r\n      JSONdata = {\r\n        colName: 'TM_Item_Effect',\r\n        JM_ID: this.state.JM_ID,\r\n        colValue: shape,\r\n      }\r\n    }\r\n      //nameSize\r\n    if(id==='nameSize')\r\n    {\r\n      this.setState({ activeNameSize: shape });\r\n      JSONdata = {\r\n        colName: 'TM_Name_Size',\r\n        JM_ID: this.state.JM_ID,\r\n        colValue: shape,\r\n      }\r\n    }\r\n    if(id==='bioSize')\r\n    {\r\n      this.setState({ activeBioSize: shape });\r\n      JSONdata = {\r\n        colName: 'TM_Bio_Size',\r\n        JM_ID: this.state.JM_ID,\r\n        colValue: shape,\r\n      }\r\n    }\r\n    this.updateCustomThemeOnclick(JSONdata);\r\n  }\r\n  //========================================== item color\r\n\r\n  changeColorForItem = id => event => {\r\n    var color = document.getElementById('color-picker_item').value;\r\n    var dynamicItemColor = color;\r\n    document.getElementById('custom_color_item').style.backgroundColor = color;\r\n    document.getElementById('custom_color_item').style.borderColor = color;\r\n    var activeItemcolor = color;\r\n    this.setState({ activeItemcolor });\r\n    this.setState({ dynamicItemColor });\r\n  }\r\n\r\n  // color format convertion\r\n  rgbToHex = (r, g, b) => {\r\n    return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\r\n  }\r\n  //for storing element into one global array\r\n  CreateCustomArray = (key, value) => {\r\n\r\n    this.setState(\r\n      {\r\n        customArray: this.state.customArray.push({ key: key, value: value })\r\n      }\r\n    );\r\n\r\n  }\r\n  uploadBackgroundImage = () => {\r\n\r\n    const formData = new FormData();\r\n    const API_url = process.env.REACT_APP_API_URL + \"admin/uploadBackgroundImage\";\r\n    formData.append('sampleFile', this.state.selectedFile)\r\n    formData.append('TM_ID', 0)\r\n    formData.append('JM_ID', this.state.JM_ID)\r\n    formData.append('TM_Active', 1)\r\n    formData.append('JM_User_Profile_Url_plus_JM_ID', this.state.userDetails[0].JM_User_Profile_Url + \"_\" + this.state.JM_ID)\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: {\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: formData\r\n      })\r\n      .then((response) => response.json())\r\n      .then(async data1 => {\r\n        if (data1.status === 1) \r\n        {\r\n          const data=await API.decryptJson(data1.flag);\r\n          this.setState({ showSuccess: true, message: 'Profile is Successfully Updated', \r\n          showError: false,\r\n          userThemeDetails: data.userThemeDetails,\r\n           selectedFile:null \r\n          });   \r\n          document.getElementById('upImage').value='';\r\n          //userThemeDetails\r\n          this.FetchCustomTheme();\r\n          this.refreshMobileView();\r\n        }\r\n        else {\r\n          this.setState({ showError: true, message: 'Failed to Update profile, try agian after Sometimes' });\r\n          this.setState({ showSuccess: false });\r\n        }\r\n      });\r\n  }\r\n  //MS2\r\n  uploadBackgroundVideo = () => {\r\n\r\n    const formData = new FormData();\r\n    const API_url = process.env.REACT_APP_API_URL + \"admin/uploadBackgroundImage\";\r\n    formData.append('sampleFile', this.state.selectedFileVideo)\r\n    formData.append('TM_ID', 0)\r\n    formData.append('JM_ID', this.state.JM_ID)\r\n    formData.append('TM_Active', 1)\r\n    formData.append('JM_User_Profile_Url_plus_JM_ID', this.state.userDetails[0].JM_User_Profile_Url + \"_\" + this.state.JM_ID)\r\n   \r\n   this.setState({\r\n    btnUploadVideo:'Uploading...',\r\n    btnUploadVideoDisabled:true\r\n   })\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: {\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: formData\r\n      })\r\n      .then((response) => response.json())\r\n      .then(async data1 => {\r\n        if (data1.status === 1) \r\n        {\r\n          const data=await API.decryptJson(data1.flag);\r\n          this.setState({ showSuccess: true, message: 'Profile is Successfully Updated' });\r\n          this.setState({ showError: false });\r\n          this.setState({ userThemeDetails: data.userThemeDetails });\r\n          this.setState({\r\n            btnUploadVideo:'Upload a video',\r\n            btnUploadVideoDisabled:false\r\n           })\r\n          //userThemeDetails\r\n          this.FetchCustomTheme();\r\n          this.refreshMobileView();\r\n        }\r\n        else {\r\n          this.setState({ showError: true, message: 'Failed to Update profile, try agian after Sometimes' });\r\n          this.setState({ showSuccess: false });\r\n        }\r\n      });\r\n  }\r\n  saveCustomTheme = (event) => {\r\n\r\n    event.preventDefault();\r\n    var JSONdata = {\r\n      TM_ID: 0,\r\n      JM_ID: this.state.JM_ID,\r\n      TM_Back_Color: this.state.activeItemBGcolor,\r\n      TM_Item_Color: this.state.activeItemcolor,\r\n      TM_Back_Image: \"\",\r\n      TM_Item_Style: this.state.activeButtonStyle,\r\n      TM_Highlight_Color: this.state.activeHighlightcolor,\r\n      TM_Font: this.state.activeFontStyle,\r\n      TM_Font_Color: this.state.activeFontcolor,\r\n      TM_Active: 1,\r\n      TM_Class_Name: this.state.Custom_template1,\r\n      JM_Description: this.state.JM_Description\r\n    };\r\n\r\n    const formData = new FormData();\r\n\r\n    const API_url = this.state.base_url + \"admin/updateCustomTheme\";\r\n    formData.append('sampleFile', this.state.selectedFile)\r\n    formData.append('TM_ID', 0)\r\n    formData.append('JM_ID', this.state.JM_ID)\r\n    formData.append('TM_Back_Color', this.state.activeItemBGcolor)\r\n    formData.append('TM_Item_Color', this.state.activeItemcolor)\r\n    formData.append('TM_Back_Image', \"\")\r\n    formData.append('TM_Item_Style', this.state.activeButtonStyle)\r\n    formData.append('TM_Highlight_Color', this.state.activeHighlightcolor)\r\n    formData.append('TM_Font', this.state.activeFontStyle)\r\n    formData.append('TM_Font_Color', this.state.activeFontcolor)\r\n    formData.append('TM_Class_Name', this.state.Custom_template1)\r\n    formData.append('TM_Active', 1)\r\n    formData.append('JM_Description', this.state.JM_Description)\r\n    formData.append('JM_User_Profile_Url_plus_JM_ID', this.state.userDetails[0].JM_User_Profile_Url + \"_\" + this.state.JM_ID)\r\n\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        body: formData,\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.setState({ showSuccess: true, message: 'Profile is Successfully Updated' });\r\n          this.setState({ showError: false });\r\n          this.setState({ userThemeDetails: data.userThemeDetails });\r\n\r\n          //userThemeDetails\r\n          this.FetchCustomTheme();\r\n          this.refreshMobileView();\r\n        }\r\n        else {\r\n          this.setState({ showError: true, message: 'Failed to Update profile, try agian after Sometimes' });\r\n          this.setState({ showSuccess: false });\r\n        }\r\n      });\r\n\r\n    //console.log(JSONdata);\r\n  }\r\n\r\n  FetchCustomTheme = () => {\r\n\r\n    //console.log(this.state.userThemeDetails);\r\n\r\n    let activeItemBGcolor = \"\", activeButtonStyle = '', activeItemcolor = '', activeHighlightcolor = '', activeFontStyle = '', activeFontcolor = '';\r\n    let activeBordercolor='',activeButtonEffectStyle='',activeNameSize='',activeBioSize='';\r\n    let activeIconcolor='',activeSocialWidgetcolor='';\r\n    if (this.state.userThemeDetails && this.state.userThemeDetails.length > 0) {\r\n\r\n      let len = this.state.userThemeDetails.length;\r\n      for (var i = 0; i < len; i++) {\r\n        activeItemBGcolor = this.state.userThemeDetails[i].TM_Back_Color;\r\n        activeItemcolor = this.state.userThemeDetails[i].TM_Item_Color;\r\n        activeButtonStyle = this.state.userThemeDetails[i].TM_Item_Style;\r\n        \r\n        activeHighlightcolor = this.state.userThemeDetails[i].TM_Highlight_Color;\r\n        activeFontStyle = this.state.userThemeDetails[i].TM_Font;\r\n        activeFontcolor = this.state.userThemeDetails[i].TM_Font_Color;\r\n        activeBordercolor = this.state.userThemeDetails[i].TM_Border_Color;\r\n        activeButtonEffectStyle = this.state.userThemeDetails[i].TM_Item_Effect;\r\n        activeNameSize = this.state.userThemeDetails[i].TM_Name_Size;\r\n        activeBioSize = this.state.userThemeDetails[i].TM_Bio_Size;\r\n        activeIconcolor= this.state.userThemeDetails[i].TM_Thumbnail_Icon_Color;\r\n        activeSocialWidgetcolor=this.state.userThemeDetails[i].TM_SocialWidget_Icon_Color;\r\n        break;\r\n      }\r\n\r\n    }\r\n    this.setState({\r\n      dynamicColor: activeItemBGcolor,\r\n      dynamicItemColor: activeItemcolor,\r\n      dynamicFontColor: activeFontcolor,\r\n      dynamicHighlightColor: activeHighlightcolor,\r\n      dynamicBorderColor:activeBordercolor,\r\n      dynamicIconColor:activeIconcolor,\r\n      dynamicSocialWidgetcolor:activeSocialWidgetcolor,\r\n      activeItemBGcolor, activeItemcolor, activeButtonStyle, activeHighlightcolor, activeFontStyle, activeFontcolor,\r\n      activeBordercolor,activeButtonEffectStyle,\r\n      activeNameSize,activeBioSize,activeIconcolor,activeSocialWidgetcolor\r\n\r\n    });\r\n\r\n    //document.getElementById('custom_color_bg').style.background= activeItemBGcolor;\r\n    // var labelText='Some Value';\r\n    // document.getElementById(\"custom_color_bg\").setAttribute('data-color', '{' + activeItemBGcolor + '}' ); \r\n  }\r\n\r\n  imageonChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if(typeof file!=='undefined')\r\n    {\r\n      this.setState({ selectedFile: e.target.files[0] });\r\n      this.setState({\r\n        TM_Back_Image: URL.createObjectURL(file)\r\n      });\r\n  \r\n      this.setState({\r\n        selectedFile: file\r\n      }, () => {\r\n        //console.log(this.state.selectedFile);\r\n        this.uploadBackgroundImage();\r\n  \r\n      });\r\n    }\r\n    \r\n\r\n  }\r\n  // MS2\r\n  videoonChange = (e) => {\r\n    const file = e.target.files[0];\r\n    this.setState({ selectedFile: e.target.files[0] });\r\n    this.setState({\r\n      TM_Back_Video: URL.createObjectURL(file)\r\n    });\r\n\r\n    this.setState({\r\n      selectedFileVideo: file\r\n    }, () => {\r\n      //console.log(this.state.selectedFileVideo);\r\n      this.uploadBackgroundVideo();\r\n\r\n    });\r\n\r\n  }\r\n  handleOnBlurDescription = () => {\r\n    //alert();\r\n\r\n    this.reload();\r\n  }\r\n  refreshMobileView = () => {\r\n    this.refs.livepreview.UpdateMobileView();\r\n  }\r\n  updateBackgroundImage = id => e => {\r\n\r\n    const formData = new FormData();\r\n    const API_url = process.env.REACT_APP_API_URL + \"admin/removeBackgroundImage\";\r\n\r\n    formData.append('JM_ID', id)\r\n    formData.append('TM_Active', 1)\r\n    formData.append('JM_User_Profile_Url_plus_JM_ID', this.state.userDetails[0].JM_User_Profile_Url + \"_\" + this.state.JM_ID)\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: {\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: formData,\r\n        \r\n      })\r\n      .then((response) => response.json())\r\n      .then(data1 => {\r\n        if (data1.status === 1) {\r\n          //document.getElementById('bg_image').src=\"\";\r\n          const data=API.decryptJson(data1.flag);\r\n        //  let userThemeDetails=data.userThemeDetails;\r\n          this.setState({ showSuccess: true,\r\n             message: 'Profile is Successfully Updated',\r\n          showError: false ,userThemeDetails:data.userThemeDetails,\r\n          selectedFile:null,\r\n          TM_Back_Video:'',\r\n          TM_Back_Image:''\r\n        \r\n        });\r\n        //upVideo\r\n            document.getElementById('upVideo').value=''\r\n          //userThemeDetails\r\n          this.FetchCustomTheme();\r\n          this.refreshMobileView();\r\n        }\r\n        else {\r\n          this.setState({ showError: true, message: 'Failed to Update profile, try agian after Sometimes' });\r\n          this.setState({ showSuccess: false });\r\n        }\r\n      });\r\n  }\r\n  render() {\r\n\r\n    const useStyles = {\r\n      color: \"white\",\r\n      backgroundColor: \"DodgerBlue\",\r\n      padding: \"10px\",\r\n      fontFamily: \"Arial\",\r\n      root: {\r\n        maxWidth: 345,\r\n      },\r\n      media: {\r\n        height: 140,\r\n      },\r\n\r\n    };\r\n    const CssAlert = {\r\n      success: {\r\n        backgroundColor: '#78e27869',\r\n        color: 'black',\r\n      },\r\n      error: {\r\n        backgroundColor: '#ef276045',\r\n        color: 'black',\r\n      },\r\n      warning: {\r\n        backgroundColor: '#5bdc6240',\r\n        color: 'black',\r\n      },\r\n      info: {\r\n        backgroundColor: '#f1bf1f59',\r\n        color: 'black',\r\n      },\r\n    }\r\n    // var fontStyle=\"'Noto Sans TC', sans-serif \";\r\n    var h=window.screen.height;\r\n    var w=window.screen.width;\r\n    let position='';\r\n    if(w >= 480) \r\n    {\r\n      position='right';\r\n    }\r\n    else\r\n    {\r\n      position='top';\r\n    }\r\n    const themePopOver = (\r\n      <Popover id=\"popover-basic\"  style={{zIndex:'99999',color:'#fff'}}>      \r\n        <Popover.Title as=\"h6\" style={{backgroundColor:'#7504f8'}}>\r\n           Choose a premade theme for your page with one click.\r\n        </Popover.Title>\r\n        {/* <Popover.Content>         \r\n        </Popover.Content>     */}       \r\n      </Popover>\r\n    );\r\n    const backgroundPopOver = (\r\n      <Popover id=\"popover-basic\" style={{zIndex:'99999',color:'#fff'}}>      \r\n        <Popover.Title as=\"h6\" style={{backgroundColor:'#7504f8'}}>\r\n        Choose or upload a custom Background.\r\n        \r\n        </Popover.Title>\r\n        {/* <Popover.Content>         \r\n        </Popover.Content>     */}       \r\n      </Popover>\r\n    );\r\n    const itemPopOver = (\r\n      <Popover id=\"popover-basic\" style={{zIndex:'99999',color:'#fff'}}>      \r\n        <Popover.Title as=\"h6\" style={{backgroundColor:'#7504f8'}}>\r\n        Customize Item shape, colors and more.\r\n        </Popover.Title>\r\n        {/* <Popover.Content>         \r\n        </Popover.Content>     */}       \r\n      </Popover>\r\n    );\r\n    const highlightPopOver = (\r\n      <Popover id=\"popover-basic\" style={{zIndex:'99999',color:'#fff'}}>      \r\n        <Popover.Title as=\"h6\" style={{backgroundColor:'#7504f8'}}>\r\n            Choose color for icons and action buttons.\r\n        </Popover.Title>\r\n        {/* <Popover.Content>         \r\n        </Popover.Content>     */}       \r\n      </Popover>\r\n    );\r\n    const textPopOver = (\r\n      <Popover id=\"popover-basic\" style={{zIndex:'99999',color:'#fff'}}>      \r\n        <Popover.Title as=\"h6\" style={{backgroundColor:'#7504f8'}}>\r\n              Change Text font, color and more.\r\n        </Popover.Title>\r\n        {/* <Popover.Content>         \r\n        </Popover.Content>     */}       \r\n      </Popover>\r\n    );\r\n    \r\n    return (\r\n      <>\r\n       <Helmet>\r\n            <title>Design | Expy </title>\r\n            <meta name=\"description\" content=\"Use Expy to SHARE all your important links, content and OFFER paid, personalized, premium features under one beautiful Bio-Link page. FREE and FAST to set up.\"></meta>\r\n        </Helmet>\r\n        <ProfileHeader />\r\n        <div className=\"profile-tab\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <ProfileNav />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n       \r\n        <div className=\"template1\">\r\n          <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n              <div className=\"col-lg-8 col-md-12\">\r\n                <Tab2.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n                  <div className=\"appar-left\">\r\n                    <Nav variant=\"pills\" className=\"flex-column\">\r\n                      <Nav.Item>                     \r\n                               <OverlayTrigger  placement={position} overlay={themePopOver} >\r\n                                    <Nav.Link eventKey=\"first\"><BurstModeOutlinedIcon /> Theme</Nav.Link>\r\n                              </OverlayTrigger > \r\n                      </Nav.Item>\r\n                      <Nav.Item>                        \r\n                            <OverlayTrigger   placement={position}   overlay={backgroundPopOver} >\r\n                                 <Nav.Link eventKey=\"second\"><SettingsOverscanOutlinedIcon /> Background</Nav.Link>\r\n                              </OverlayTrigger >\r\n                      </Nav.Item>\r\n                      <Nav.Item>\r\n                            <OverlayTrigger  placement={position}   overlay={itemPopOver} >\r\n                               <Nav.Link eventKey=\"third\"><CategoryOutlinedIcon /> Items</Nav.Link>\r\n                              </OverlayTrigger >\r\n                      </Nav.Item>\r\n                      <Nav.Item> \r\n                              <OverlayTrigger  placement={position}  overlay={highlightPopOver} >\r\n                                  <Nav.Link eventKey=\"fourth\"><WbIridescentOutlinedIcon /> Icons</Nav.Link>\r\n                              </OverlayTrigger >\r\n                      </Nav.Item>\r\n                      <Nav.Item>                     \r\n                              <OverlayTrigger  placement={position}  overlay={textPopOver} >\r\n                                 <Nav.Link eventKey=\"fifth\"><TextFieldsOutlinedIcon /> Text</Nav.Link>\r\n                              </OverlayTrigger >\r\n                      </Nav.Item>\r\n                    </Nav>\r\n                  </div>\r\n                  <div className=\"appar-right\">\r\n                    <Tab2.Content>\r\n                      <Tab2.Pane eventKey=\"first\">\r\n                        <div className=\"appear-body\">\r\n                          <div className=\"appear\">\r\n                            <div className=\"theme\">\r\n                              <div className=\"row\">\r\n                                {\r\n                                  this.state.themeMaster && this.state.themeMaster.map((theme, i) => (\r\n                                    <div className=\"col-md-6\">\r\n                                      <div className=\"item\">\r\n                                        <img src={process.env.REACT_APP_UPLOAD_URL + theme.TM_Back_Image} alt=\"background\" />\r\n                                        <div className=\"text\">\r\n                                          <h3 style={{ fontFamily: theme.TM_Font }}>Aa </h3>\r\n                                        </div>\r\n                                        <div className=\"butn-box\">\r\n                                          <ButtonMaterial className=\"btun\" data={theme[i]} onClick={this.useThisTheme(this.state.themeMaster[i])}>Use This Theme</ButtonMaterial>\r\n                                          {/* <Preview data={this.state.themeMaster[i]} linkMaster={this.state.linkMaster} bgImage={this.state.base_url + theme.TM_Back_Image} userDetails={this.state.userDetails} userThemeDetails={this.state.userThemeDetails}/>                                             */}\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  ))\r\n                                }\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Tab2.Pane>\r\n                      <Tab2.Pane eventKey=\"second\">\r\n                        <div className=\"template1_body\">\r\n                          <div className=\"heading\">\r\n                            <h5>Upload your background image</h5>\r\n                            <p>Pick your overall background image <br/>\r\n                            <span style={{fontSize:'12px'}}>\r\n                                (Recommended size 1920px * 1080px)\r\n                              </span>\r\n                              </p>      \r\n                          </div>\r\n                          <div className=\"item\">\r\n                            <div className=\"row\">\r\n                              {\r\n                                this.state.userThemeDetails.length > 0 && this.state.userThemeDetails[0].TM_Back_Image ?\r\n                                  <div className=\"col-md-12\">\r\n                                    <div className=\"color-box\">                                \r\n                                          {\r\n                                          this.state.userThemeDetails[0].TM_Back_Image!='' \r\n                                          && ( this.state.userThemeDetails[0].TM_Back_Image.includes('.jpg') \r\n                                          || this.state.userThemeDetails[0].TM_Back_Image.includes('.png')\r\n                                          || this.state.userThemeDetails[0].TM_Back_Image.includes('.jpeg')\r\n                                          || this.state.userThemeDetails[0].TM_Back_Image.includes('.gif') ) ?\r\n                                            <>\r\n                                              <img id=\"bg_image\" src={process.env.REACT_APP_UPLOAD_URL + this.state.userThemeDetails[0].TM_Back_Image} style={{ border: 'none', width: '100%',position:'absolute' }} /> \r\n                                              <span className=\"closeBackground\" onClick={this.updateBackgroundImage(this.state.userThemeDetails[0].JM_ID)}><HighlightOffIcon /></span>\r\n                                             </>\r\n                                          :\r\n                                             null\r\n                                          }\r\n                                    </div>\r\n                                  </div>\r\n                                  :\r\n                                  null\r\n                              }\r\n                              <div className=\"col-md-12\">\r\n                                <div className=\"color-box\">\r\n                                  <img src={this.state.TM_Back_Image} style={{ border: 'none', width: '100%' }} />\r\n                                  <label className=\"up-ico\" for=\"upImage\">\r\n                                    Upload an Image\r\n                                    <input type=\"file\" id=\"upImage\" accept=\".jpeg,.jpg,.png\" style={{ display: \"none\" }} onChange={this.imageonChange} />\r\n                                  </label>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                         \r\n                          <div className=\"heading\">\r\n                            <h5>Select your background color</h5>\r\n                            <p>Choose your background color</p>\r\n                          </div>\r\n                          <div className=\"item\">                           \r\n                              <div className=\"part\">\r\n                                <div data-color=\"#011627\" data-index=\"1\" data-test={'hiii'}\r\n                                  className={this.state.activeItemBGcolor === \"#011627\" ? 'color-box bg_1 active' : 'color-box bg_1'}\r\n                                  onClick={this.setActiveClass('bg')}>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"part\">\r\n                                <div data-color=\"#2ec4b6\" data-index=\"2\" className={this.state.activeItemBGcolor === \"#2ec4b6\" ? 'color-box bg_2 active' : 'color-box bg_2'}\r\n                                  onClick={this.setActiveClass('bg')}>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"part\">\r\n                                <div data-color=\"#e71d36\" data-index=\"3\" className={this.state.activeItemBGcolor === \"#e71d36\" ? 'color-box bg_3 active' : 'color-box bg_3'}\r\n                                  onClick={this.setActiveClass('bg')}>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"part\">\r\n                                <div data-color=\"#ff9f1c\" data-index=\"4\" className={this.state.activeItemBGcolor === \"#ff9f1c\" ? 'color-box bg_4 active' : 'color-box bg_4'}\r\n                                  onClick={this.setActiveClass('bg')}>\r\n                                </div>\r\n                              </div>\r\n                         \r\n                          {/* gradiend color */}\r\n\r\n                               <div className=\"part mr0\">\r\n                                  <div  data-color=\"#23ab34\" className={this.state.activeItemBGcolor === \"#23ab34\" ? 'color-box bg_5 active' : 'color-box bg_5'}\r\n                                   onClick={this.setActiveClass('bg')}>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"part\">\r\n                                  <div  data-color=\"linear-gradient(180deg,  #9c14fc 0%, #7604f9 100%)\" className={this.state.activeItemBGcolor === \"linear-gradient(180deg,  #9c14fc 0%, #7604f9 100%)\" ? 'color-box bg_6 active' : 'color-box bg_6'}\r\n                                   onClick={this.setActiveClass('bg')}>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"part\">\r\n                                  <div  data-color=\"linear-gradient(180deg,  #2293d7 0%, #1ed2ed 100%)\" className={this.state.activeItemBGcolor === \"linear-gradient(180deg,  #2293d7 0%, #1ed2ed 100%)\" ? 'color-box bg_7 active' : 'color-box bg_7'}\r\n                                   onClick={this.setActiveClass('bg')}>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"part\">\r\n                                  <div  data-color=\"linear-gradient(180deg,  #f66a08 0%, #f50f2c 100%)\" className={this.state.activeItemBGcolor === \" linear-gradient(180deg,  #f66a08 0%, #f50f2c 100%)\" ? 'color-box bg_8 active' : 'color-box bg_8'}\r\n                                   onClick={this.setActiveClass('bg')}>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"part\">\r\n                                  <div  data-color=\"linear-gradient(180deg,  #19c4f2 0%, #7008fb 100%)\" className={this.state.activeItemBGcolor === \"linear-gradient(180deg,  #19c4f2 0%, #7008fb 100%)\" ? 'color-box bg_9 active' : 'color-box bg_9'}\r\n                                   onClick={this.setActiveClass('bg')}>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"part mr0\">\r\n                                  <div  data-color=\"linear-gradient(180deg,  #7c15fa 0%, #f21890 100%)\" className={this.state.activeItemBGcolor === \"linear-gradient(180deg,  #7c15fa 0%, #f21890 100%)\" ? 'color-box bg_10 active' : 'color-box bg_10'}\r\n                                   onClick={this.setActiveClass('bg')}>\r\n                                  </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"part\">\r\n                                  <div  data-color=\"linear-gradient(180deg,  #fb754f 0%, #f39911 100%)\" className={this.state.activeItemBGcolor === \"linear-gradient(180deg,  #fb754f 0%, #f39911 100%)\" ? 'color-box bg_11 active' : 'color-box bg_11'}\r\n                                   onClick={this.setActiveClass('bg')}>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"part\">\r\n                                  <div  data-color=\"linear-gradient(180deg,  #fb6ca2 0%, #fd8877 100%)\" className={this.state.activeItemBGcolor === \"linear-gradient(180deg,  #fb6ca2 0%, #fd8877 100%)\" ? 'color-box bg_12 active' : 'color-box bg_12'}\r\n                                   onClick={this.setActiveClass('bg')}>\r\n                                  </div>\r\n                                </div>\r\n\r\n                                <div className=\"part\">\r\n                                  <div  data-color=\"linear-gradient(180deg,  #ffff00 0%, #54a000 100%)\" className={this.state.activeItemBGcolor === \"linear-gradient(180deg,  #ffff00 0%, #54a000 100%)\" ? 'color-box bg_13 active' : 'color-box bg_13'}\r\n                                   onClick={this.setActiveClass('bg')}>\r\n                                  </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"part\">\r\n                                  <div  data-color=\"linear-gradient(180deg,  #27a2e4 0%, #0a2437 100%)\" className={this.state.activeItemBGcolor === \"linear-gradient(180deg,  #27a2e4 0%, #0a2437 100%)\" ? 'color-box bg_14 active' : 'color-box bg_14'}\r\n                                   onClick={this.setActiveClass('bg')}>\r\n                                  </div>\r\n                                </div>\r\n                                \r\n\r\n\r\n                            {/* gradiend color */}\r\n                              <div className=\"part mr0\">\r\n                                <div className={this.state.activeItemBGcolor === this.state.dynamicColor ? 'color-box color-pick active' : 'color-box color-pick'}\r\n                                  data-color={this.state.dynamicColor} style={{ backgroundColor: this.state.activeItemBGcolor }} data-index=\"6\" id=\"custom_color_bg\" onClick={this.openColorPicker('bg')}>\r\n                                  <label>\r\n                                    <input type=\"color\" id=\"color-picker_bg\" onChange={this.changeColor('bg')} />\r\n                                    <AddBoxOutlinedIcon />\r\n                                  </label>\r\n                                </div>\r\n                          \r\n                              </div>\r\n                           </div>\r\n                      {/* upload video background */}\r\n                      <div className=\"heading\">\r\n                              <h5>Upload your background Video</h5>\r\n                              <p>Pick your overall background Video <br/>\r\n                              <span style={{fontSize:'12px'}}>\r\n                                  (Recommended size 5mb)\r\n                                </span>\r\n                                </p>      \r\n                            </div>\r\n                            <div className=\"item\">\r\n                              <div className=\"row\">\r\n                                {\r\n                                  this.state.userThemeDetails.length > 0 && this.state.userThemeDetails[0].TM_Back_Image ?\r\n                                    <div className=\"col-md-12\">\r\n                                       <div className=\"color-box\" style={{minHeight: '80px',height: 'auto'}}>\r\n                              \r\n                                          {\r\n                                            this.state.userThemeDetails[0].TM_Back_Image!=='' \r\n                                            && ( this.state.userThemeDetails[0].TM_Back_Image.includes('.mp4') \r\n                                            || this.state.userThemeDetails[0].TM_Back_Image.includes('.mov')\r\n                                              ) ?\r\n                                            <>\r\n                                              {/* <video controls src={process.env.REACT_APP_UPLOAD_URL + this.state.userThemeDetails[0].TM_Back_Image} style={{ border: 'none', width: '100%'}} /> */}\r\n                                              <video preload=\"true\" playsinline=\"true\" controls style={{ border: 'none', width: '100%'}}>\r\n                                                <source src={process.env.REACT_APP_UPLOAD_URL + this.state.userThemeDetails[0].TM_Back_Image}  type=\"video/mp4\" />\r\n                                              </video>\r\n                                              <span className=\"closeBackground\" onClick={this.updateBackgroundImage(this.state.userThemeDetails[0].JM_ID)}><HighlightOffIcon /></span>                                          \r\n                                            </>\r\n                                            :\r\n                                            null\r\n                                            }\r\n                                   \r\n                                     \r\n                                      </div>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                                }\r\n                                <div className=\"col-md-12\">\r\n                                  <div className=\"color-box\" style={{minHeight: '80px',height: 'auto'}}>\r\n\r\n                                    <video controls playsinline=\"true\" src={this.state.TM_Back_Video} style={{ border: 'none', width: '100%' }} />\r\n                                  \r\n                                    <label className=\"up-ico\" for=\"upVideo\"    style={{top:'38%'}}>\r\n                                    {this.state.btnUploadVideo}\r\n                                      <input type=\"file\" id=\"upVideo\" accept=\".mp4\" disabled={this.state.btnUploadVideoDisabled} style={{ display: \"none\" }} onChange={this.videoonChange} />\r\n                                    </label>\r\n\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                           {/* end of video background */}\r\n                    \r\n                        </div>\r\n                      </Tab2.Pane>\r\n                      <Tab2.Pane eventKey=\"third\">\r\n                        <div className=\"template1_body\">\r\n                          <div className=\"heading\">\r\n                            <h5>Button Shape</h5>\r\n                            <p>Chose the item button shape</p>\r\n                          </div>\r\n                          <div className=\"item\">\r\n                            <div className=\"row\">\r\n                              <div className=\"col-md-6\">\r\n                                <div data-shape=\"style_sharp\" data-index=\"1\" className={this.state.activeButtonStyle === \"style_sharp\" ? \"button-box active\" : \"button-box\"}\r\n                                  onClick={this.setButtonStyleActive('button')}>\r\n                                  <div className=\"btun style_sharp\">\r\n\r\n                                    Sharp\r\n                                                            </div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"col-md-6\">\r\n                                <div data-shape=\"style_rounded\" data-index=\"2\" className={this.state.activeButtonStyle === \"style_rounded\" ? 'button-box active' : 'button-box'}\r\n                                  onClick={this.setButtonStyleActive('button')}>\r\n                                  <div className=\"btun style_rounded\" >\r\n                                    Round\r\n                                                            </div>\r\n\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"col-md-6\">\r\n                                <div data-shape=\"style_pill\" data-index=\"3\" className={this.state.activeButtonStyle === \"style_pill\" ? 'button-box active' : 'button-box'}\r\n                                  onClick={this.setButtonStyleActive('button')}>\r\n                                  <div className=\"btun style_pill\">\r\n\r\n                                   Cylinder \r\n                                                            </div>\r\n                                </div>\r\n                              </div>\r\n                              {/* <div className=\"col-md-6\">\r\n                                <div data-shape=\"style_push\" data-index=\"1\" className={this.state.activeButtonStyle === \"style_push\" ? \"button-box active\" : \"button-box\"}\r\n                                  onClick={this.setButtonStyleActive('button')}>\r\n                                  <div className=\"btun style_push\">\r\n\r\n                                  Shadow \r\n                                                            </div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"col-md-6\">\r\n                                <div data-shape=\"style_rainbow\" data-index=\"2\" className={this.state.activeButtonStyle === \"style_rainbow\" ? 'button-box active' : 'button-box'}\r\n                                  onClick={this.setButtonStyleActive('button')}>\r\n                                  <div className=\"btun style_rainbow\" >\r\n                                    Colorful \r\n                                    </div>\r\n\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"col-md-6\">\r\n                                <div data-shape=\"style_Shine\" data-index=\"3\" className={this.state.activeButtonStyle === \"style_Shine\" ? 'button-box active' : 'button-box'}\r\n                                  onClick={this.setButtonStyleActive('button')}>\r\n                                  <div className=\"btun style_Shine\">\r\n\r\n                                  Shiny \r\n                                              </div>\r\n                                </div>\r\n                              </div> */}\r\n\r\n                              <div className=\"col-md-6\">\r\n                                <div data-shape=\"style_mixed_corners\" data-index=\"1\" className={this.state.activeButtonStyle === \"style_mixed_corners\" ? \"button-box active\" : \"button-box\"}\r\n                                  onClick={this.setButtonStyleActive('button')}>\r\n                                      <div className=\"btun style_mixed_corners\">\r\n                                      Mixed Corners \r\n                                    </div>\r\n                                </div>\r\n                              </div>\r\n\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"heading\">\r\n                            <h5>Button Effect</h5>\r\n                            <p>Choose the item button effect</p>\r\n                          </div>\r\n                          <div className=\"item\">\r\n                              <div className=\"row\"> \r\n                              <div className=\"col-md-6\">\r\n                                  <div className=\"button-box\"  data-shape=\"effect_push\" className={this.state.activeButtonEffectStyle === \"effect_push\" ? \"button-box active\" : \"button-box\"}\r\n                                     onClick={this.setButtonStyleActive('buttonEffect')}>\r\n                                    <div className=\"btun effect_push\">\r\n                                      Shadow\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                  <div className=\"button-box\"  data-shape=\"effect_rainbow\" className={this.state.activeButtonEffectStyle === \"effect_rainbow\" ? \"button-box active\" : \"button-box\"}\r\n                                    onClick={this.setButtonStyleActive('buttonEffect')}>\r\n                                    <div className=\"btun effect_rainbow\">\r\n                                    Colorful\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                  <div className=\"button-box\" data-shape=\"effect_Shine\" className={this.state.activeButtonEffectStyle === \"effect_Shine\" ? \"button-box active\" : \"button-box\"}\r\n                                    onClick={this.setButtonStyleActive('buttonEffect')}>\r\n                                    <div className=\"btun effect_Shine\">\r\n                                      Shiny\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                  <div className=\"button-box\" data-shape=\"effect_td\" className={this.state.activeButtonEffectStyle === \"effect_td\" ? \"button-box active\" : \"button-box\"}\r\n                                    onClick={this.setButtonStyleActive('buttonEffect')}>\r\n                                    <div className=\"btun effect_td\" >\r\n                                      3D\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                  <div className=\"button-box\" data-shape=\"effect_door\" className={this.state.activeButtonEffectStyle === \"effect_door\" ? \"button-box active\" : \"button-box\"}\r\n                                      onClick={this.setButtonStyleActive('buttonEffect')}>\r\n                                    <div className=\"btun effect_door\" >\r\n                                      Door Open\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                  <div className=\"button-box\" data-shape=\"effect_increase\" className={this.state.activeButtonEffectStyle === \"effect_increase\" ? \"button-box active\" : \"button-box\"}\r\n                                      onClick={this.setButtonStyleActive('buttonEffect')}>\r\n                                    <div className=\"btun effect_increase\" >\r\n                                    Increase\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                  <div className=\"button-box\" data-shape=\"effect_soft_shadow\" className={this.state.activeButtonEffectStyle === \"effect_soft_shadow\" ? \"button-box active\" : \"button-box\"}\r\n                                      onClick={this.setButtonStyleActive('buttonEffect')}>\r\n                                    <div className=\"btun effect_soft_shadow\" >\r\n                                    Soft Shadow\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                  <div className=\"button-box\" data-shape=\"effect_hard_shadow\" className={this.state.activeButtonEffectStyle === \"effect_hard_shadow\" ? \"button-box active\" : \"button-box\"}\r\n                                      onClick={this.setButtonStyleActive('buttonEffect')}>\r\n                                    <div className=\"btun effect_hard_shadow\" >\r\n                                    Hard Shadow\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                  <div className=\"button-box\" data-shape=\"effect_inner_shadow\" className={this.state.activeButtonEffectStyle === \"effect_inner_shadow\" ? \"button-box active\" : \"button-box\"}\r\n                                      onClick={this.setButtonStyleActive('buttonEffect')}>\r\n                                    <div className=\"btun effect_inner_shadow\" >\r\n                                    Inner Shadow\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                  <div className=\"button-box\" data-shape=\"effect_transparent\" className={this.state.activeButtonEffectStyle === \"effect_transparent\" ? \"button-box active\" : \"button-box\"}\r\n                                      onClick={this.setButtonStyleActive('buttonEffect')}>\r\n                                    <div className=\"btun effect_transparent\" >\r\n                                    Transparent\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n\r\n                              </div>\r\n                          </div>\r\n\r\n\r\n                          <div className=\"heading\">\r\n                            <h5>Button Color</h5>\r\n                            <p>Choose the item button color</p>\r\n                          </div>\r\n                          <div className=\"item\">\r\n                                          <div className=\"part\">\r\n                                            <div data-color=\"#011627\" data-index=\"1\" className={this.state.activeItemcolor === \"#011627\" ? 'color-box bg_1 active' : 'color-box bg_1'}\r\n                                              onClick={this.setActiveClass('item')}>\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"part\">\r\n                                            <div data-color=\"#2ec4b6\" data-index=\"2\" className={this.state.activeItemcolor === \"#2ec4b6\" ? 'color-box bg_2 active' : 'color-box bg_2'}\r\n                                              onClick={this.setActiveClass('item')}>\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"part\">\r\n                                            <div data-color=\"#e71d36\" data-index=\"3\" className={this.state.activeItemcolor === \"#e71d36\" ? 'color-box bg_3 active' : 'color-box bg_3'}\r\n                                              onClick={this.setActiveClass('item')}>\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"part\">\r\n                                            <div data-color=\"#ff9f1c\" data-index=\"4\" className={this.state.activeItemcolor === \"#ff9f1c\" ? 'color-box bg_4 active' : 'color-box bg_4'}\r\n                                              onClick={this.setActiveClass('item')}>\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"part mr0\">\r\n                                            <div className={this.state.activeItemcolor === this.state.dynamicItemColor ? 'color-box color-pick active' : 'color-box color-pick'}\r\n                                                data-color={this.state.dynamicItemColor} style={{ backgroundColor: this.state.activeItemcolor }}\r\n                                                data-index=\"6\" id=\"custom_color_item\" onClick={this.openColorPicker('item')}>\r\n                                                <label>\r\n                                                  <input type=\"color\" id=\"color-picker_item\" onChange={this.changeColor('item')} />\r\n                                                  <AddBoxOutlinedIcon/>\r\n                                                </label>\r\n                                              </div>\r\n                                          </div>\r\n\r\n                          </div>\r\n                     \r\n                                                \r\n\r\n                                                   {/* border color */}\r\n                                <div className=\"heading\">\r\n                                  <h5>Border Color</h5>\r\n                                  <p>Choose the item border color</p>\r\n                                </div>\r\n\r\n                                  <div className=\"item\">\r\n                                      <div className=\"part\">\r\n                                        <div data-color=\"#011627\" data-index=\"1\" className={this.state.activeBordercolor === \"#011627\" ? 'color-box bg_1 active' : 'color-box bg_1'}\r\n                                          onClick={this.setActiveClass('border')}>\r\n                                        </div>\r\n                                      </div>\r\n                                      <div className=\"part\">\r\n                                        <div data-color=\"#2ec4b6\" data-index=\"2\" className={this.state.activeBordercolor === \"#2ec4b6\" ? 'color-box bg_2 active' : 'color-box bg_2'}\r\n                                          onClick={this.setActiveClass('border')}>\r\n                                        </div>\r\n                                      </div>\r\n                                      <div className=\"part\">\r\n                                        <div data-color=\"#e71d36\" data-index=\"3\" className={this.state.activeBordercolor === \"#e71d36\" ? 'color-box bg_3 active' : 'color-box bg_3'}\r\n                                          onClick={this.setActiveClass('border')}>\r\n                                        </div>\r\n                                      </div>\r\n                                      <div className=\"part\">\r\n                                        <div data-color=\"#ff9f1c\" data-index=\"4\" className={this.state.activeBordercolor === \"#ff9f1c\" ? 'color-box bg_4 active' : 'color-box bg_4'}\r\n                                          onClick={this.setActiveClass('border')}>\r\n                                        </div>\r\n                                      </div>\r\n                                      <div className=\"part mr0\">\r\n                                      <div className={this.state.activeBordercolor === this.state.dynamicBorderColor ? 'color-box color-pick active' : 'color-box color-pick'}\r\n                                            data-color={this.state.dynamicBorderColor} style={{ backgroundColor: this.state.activeBordercolor }}\r\n                                            data-index=\"6\" id=\"custom_color_border\" onClick={this.openColorPicker('border')}>\r\n                                            <label>\r\n                                                <input type=\"color\" id=\"color-picker_border\" onChange={this.changeColor('border')} />\r\n                                              <AddBoxOutlinedIcon/>\r\n                                            </label>\r\n                                          </div>\r\n                                      </div>\r\n                                </div>\r\n                               {/* end */}\r\n\r\n\r\n                        </div>\r\n                      </Tab2.Pane>\r\n                      <Tab2.Pane eventKey=\"fourth\">\r\n                        <div className=\"template1_body\">\r\n                          <div className=\"heading\">\r\n                            <h5>Action buttons </h5>\r\n                            <p>Choose the color used for action buttons (like \"View\", \"Buy\")</p>\r\n                          </div>\r\n                           <div className=\"item\">                          \r\n                              <div className=\"part\">\r\n                                <div data-color=\"#011627\" data-index=\"1\" className={this.state.activeHighlightcolor === \"#011627\" ? 'color-box bg_1 active' : 'color-box bg_1'}\r\n                                  onClick={this.setActiveClass('highlight')}>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"part\">\r\n                                <div data-color=\"#2ec4b6\" data-index=\"2\" className={this.state.activeHighlightcolor === \"#2ec4b6\" ? 'color-box bg_2 active' : 'color-box bg_2'}\r\n                                  onClick={this.setActiveClass('highlight')}>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"part\">\r\n                                <div data-color=\"#e71d36\" data-index=\"3\" className={this.state.activeHighlightcolor === \"#e71d36\" ? 'color-box bg_3 active' : 'color-box bg_3'}\r\n                                  onClick={this.setActiveClass('highlight')}>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"part\">\r\n                                <div data-color=\"#ff9f1c\" data-index=\"4\" className={this.state.activeHighlightcolor === \"#ff9f1c\" ? 'color-box bg_4 active' : 'color-box bg_4'}\r\n                                  onClick={this.setActiveClass('highlight')}>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"part mr0\">\r\n                                            <div className={this.state.activeHighlightcolor === this.state.dynamicHighlightColor ? 'color-box color-pick active' : 'color-box color-pick' }\r\n                                              data-color={this.state.dynamicHighlightColor} style={{ backgroundColor: this.state.activeHighlightcolor }} data-index=\"6\" id=\"custom_color_highlight\" onClick={this.openColorPicker('highlight')}>\r\n                                                            <label>\r\n                                                  <input type=\"color\" id=\"color-picker_highlight\" onChange={this.changeColor('highlight')} />\r\n                              \r\n                                                  <AddBoxOutlinedIcon/>\r\n                                                </label>\r\n                                              </div>\r\n{/* \r\n                                <div className={this.state.activeHighlightcolor === this.state.dynamicHighlightColor ? 'color-box color-pick active' : 'color-box color-pick' }\r\n                                  data-color={this.state.dynamicHighlightColor} style={{ backgroundColor: this.state.activeHighlightcolor }} data-index=\"6\" id=\"custom_color_highlight\" onClick={this.openColorPicker('highlight')}>\r\n                                  <input type=\"color\" className=\"invisibleCustom\" id=\"color-picker_highlight\" onChange={this.changeColor('highlight')} />\r\n                                </div> */}\r\n                              </div>\r\n                            </div>\r\n                             {/* thumbnail icons */}\r\n                            <div className=\"heading\">\r\n                              <h5>Link thumbnail icons</h5>\r\n                              <p>Choose the color used for thumbnail icons</p>\r\n                            </div>\r\n                            <div className=\"item\">                          \r\n                              <div className=\"part\">\r\n                                <div data-color=\"#011627\" data-index=\"1\" className={this.state.activeIconcolor === \"#011627\" ? 'color-box bg_1 active' : 'color-box bg_1'}\r\n                                  onClick={this.setActiveClass('thumbIcon')}>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"part\">\r\n                                <div data-color=\"#2ec4b6\" data-index=\"2\" className={this.state.activeIconcolor === \"#2ec4b6\" ? 'color-box bg_2 active' : 'color-box bg_2'}\r\n                                  onClick={this.setActiveClass('thumbIcon')}>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"part\">\r\n                                <div data-color=\"#e71d36\" data-index=\"3\" className={this.state.activeIconcolor === \"#e71d36\" ? 'color-box bg_3 active' : 'color-box bg_3'}\r\n                                  onClick={this.setActiveClass('thumbIcon')}>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"part\">\r\n                                <div data-color=\"#ff9f1c\" data-index=\"4\" className={this.state.activeIconcolor === \"#ff9f1c\" ? 'color-box bg_4 active' : 'color-box bg_4'}\r\n                                  onClick={this.setActiveClass('thumbIcon')}>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"part mr0\">\r\n                                  <div className={this.state.activeIconcolor === this.state.dynamicIconColor ? 'color-box color-pick active' : 'color-box color-pick' }\r\n                                    data-color={this.state.dynamicIconColor} style={{ backgroundColor: this.state.activeIconcolor }} data-index=\"6\" id=\"custom_color_thumbIcon\" onClick={this.openColorPicker('thumbIcon')}>\r\n                                                  <label>\r\n                                        <input type=\"color\" id=\"color-picker_thumbIcon\" onChange={this.changeColor('thumbIcon')} />\r\n                    \r\n                                        <AddBoxOutlinedIcon/>\r\n                                      </label>\r\n                                    </div>\r\n                              </div>\r\n                            </div>     \r\n                            {/* end thumbnail icons */}\r\n                              {/* social widget icons color */}\r\n                              <div className=\"heading\">\r\n                              <h5>Social widget icons</h5>\r\n                              <p>Choose the color used for social widget icons</p>\r\n                            </div>\r\n                            <div className=\"item\">                          \r\n                              <div className=\"part\">\r\n                                <div data-color=\"#011627\" data-index=\"1\" className={this.state.activeSocialWidgetcolor === \"#011627\" ? 'color-box bg_1 active' : 'color-box bg_1'}\r\n                                  onClick={this.setActiveClass('socialWidgetIcon')}>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"part\">\r\n                                <div data-color=\"#2ec4b6\" data-index=\"2\" className={this.state.activeSocialWidgetcolor === \"#2ec4b6\" ? 'color-box bg_2 active' : 'color-box bg_2'}\r\n                                  onClick={this.setActiveClass('socialWidgetIcon')}>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"part\">\r\n                                <div data-color=\"#e71d36\" data-index=\"3\" className={this.state.activeSocialWidgetcolor === \"#e71d36\" ? 'color-box bg_3 active' : 'color-box bg_3'}\r\n                                  onClick={this.setActiveClass('socialWidgetIcon')}>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"part\">\r\n                                <div data-color=\"#ff9f1c\" data-index=\"4\" className={this.state.activeSocialWidgetcolor === \"#ff9f1c\" ? 'color-box bg_4 active' : 'color-box bg_4'}\r\n                                  onClick={this.setActiveClass('socialWidgetIcon')}>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"part mr0\">\r\n                                  <div className={this.state.activeSocialWidgetcolor === this.state.dynamicSocialWidgetcolor? 'color-box color-pick active' : 'color-box color-pick' }\r\n                                    data-color={this.state.dynamicSocialWidgetcolor} style={{ backgroundColor: this.state.activeSocialWidgetcolor }} data-index=\"6\" id=\"custom_color_socialWidgetIcon\" onClick={this.openColorPicker('socialWidgetIcon')}>\r\n                                                  <label>\r\n                                        <input type=\"color\" id=\"color-picker_socialWidgetIcon\" onChange={this.changeColor('socialWidgetIcon')} />\r\n                    \r\n                                        <AddBoxOutlinedIcon/>\r\n                                      </label>\r\n                                    </div>\r\n                              </div>\r\n                            </div> \r\n                         </div>\r\n                      </Tab2.Pane>\r\n                      <Tab2.Pane eventKey=\"fifth\">\r\n                        <div className=\"template1_body\">\r\n                          <div className=\"heading\">\r\n                            <h5>Text Style</h5>\r\n                            <p>Choose the font of the text for your page</p>\r\n                          </div>\r\n                          <div className=\"item\">\r\n                                        <div className=\"row\">\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_1\" data-index=\"1\" className={this.state.activeFontStyle === \"font_style_1\" ? 'font-box font_style_1  active' : 'font-box font_style_1'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                                          </div>\r\n                                          </div>\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_2\" data-index=\"2\" className={this.state.activeFontStyle === \"font_style_2\" ? 'font-box font_style_2  active' : 'font-box font_style_2'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                                          </div>\r\n\r\n                                          </div>\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_3\" data-index=\"3\" className={this.state.activeFontStyle === \"font_style_3\" ? 'font-box font_style_3  active' : 'font-box font_style_3'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                                          </div>\r\n                                          </div>\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_4\" data-index=\"4\" className={this.state.activeFontStyle === \"font_style_4\" ? 'font-box font_style_4  active' : 'font-box font_style_4'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                                            </div>\r\n                                          </div>\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_5\" data-index=\"5\" className={this.state.activeFontStyle === \"font_style_5\" ? 'font-box font_style_5  active' : 'font-box font_style_5'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                                            </div>\r\n                                          </div>\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_6\" data-index=\"6\" className={this.state.activeFontStyle === \"font_style_6\" ? 'font-box font_style_6  active' : 'font-box font_style_6'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                                            </div>\r\n                                          </div>\r\n\r\n\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_7\" data-index=\"7\" className={this.state.activeFontStyle === \"font_style_7\" ? 'font-box font_style_7  active' : 'font-box font_style_7'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                                            </div>\r\n                                          </div>\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_8\" data-index=\"8\" className={this.state.activeFontStyle === \"font_style_8\" ? 'font-box font_style_8  active' : 'font-box font_style_8'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                                            </div>\r\n                                          </div>\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_9\" data-index=\"9\" className={this.state.activeFontStyle === \"font_style_9\" ? 'font-box font_style_9  active' : 'font-box font_style_9'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                                            </div>\r\n                                          </div>\r\n\r\n\r\n\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_10\" data-index=\"10\" className={this.state.activeFontStyle === \"font_style_10\" ? 'font-box font_style_10  active' : 'font-box font_style_10'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                                            </div>\r\n                                          </div>\r\n\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_11\" data-index=\"11\" className={this.state.activeFontStyle === \"font_style_11\" ? 'font-box font_style_11  active' : 'font-box font_style_11'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                                            </div>\r\n                                          </div>\r\n\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_12\" data-index=\"12\" className={this.state.activeFontStyle === \"font_style_12\" ? 'font-box font_style_12  active' : 'font-box font_style_12'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                            </div>\r\n                                          </div>\r\n                                          {/* new font style */}\r\n\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_13\" data-index=\"13\" className={this.state.activeFontStyle === \"font_style_13\" ? 'font-box font_style_13  active' : 'font-box font_style_13'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_14\" data-index=\"14\" className={this.state.activeFontStyle === \"font_style_14\" ? 'font-box font_style_14  active' : 'font-box font_style_14'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_15\" data-index=\"15\" className={this.state.activeFontStyle === \"font_style_15\" ? 'font-box font_style_15  active' : 'font-box font_style_15'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_16\" data-index=\"16\" className={this.state.activeFontStyle === \"font_style_16\" ? 'font-box font_style_16  active' : 'font-box font_style_16'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_17\" data-index=\"17\" className={this.state.activeFontStyle === \"font_style_17\" ? 'font-box font_style_17  active' : 'font-box font_style_17'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                            </div>\r\n                                          </div>\r\n\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_18\" data-index=\"18\" className={this.state.activeFontStyle === \"font_style_18\" ? 'font-box font_style_18  active' : 'font-box font_style_18'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_19\" data-index=\"19\" className={this.state.activeFontStyle === \"font_style_19\" ? 'font-box font_style_19  active' : 'font-box font_style_19'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_20\" data-index=\"20\" className={this.state.activeFontStyle === \"font_style_20\" ? 'font-box font_style_20  active' : 'font-box font_style_20'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_21\" data-index=\"21\" className={this.state.activeFontStyle === \"font_style_21\" ? 'font-box font_style_21  active' : 'font-box font_style_21'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_22\" data-index=\"22\" className={this.state.activeFontStyle === \"font_style_22\" ? 'font-box font_style_22  active' : 'font-box font_style_22'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_23\" data-index=\"23\" className={this.state.activeFontStyle === \"font_style_23\" ? 'font-box font_style_23  active' : 'font-box font_style_23'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_24\" data-index=\"24\" className={this.state.activeFontStyle === \"font_style_24\" ? 'font-box font_style_24  active' : 'font-box font_style_24'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_25\" data-index=\"25\" className={this.state.activeFontStyle === \"font_style_25\" ? 'font-box font_style_25  active' : 'font-box font_style_25'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_26\" data-index=\"25\" className={this.state.activeFontStyle === \"font_style_26\" ? 'font-box font_style_26  active' : 'font-box font_style_26'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_27\" data-index=\"27\" className={this.state.activeFontStyle === \"font_style_27\" ? 'font-box font_style_27  active' : 'font-box font_style_27'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_28\" data-index=\"28\" className={this.state.activeFontStyle === \"font_style_28\" ? 'font-box font_style_28  active' : 'font-box font_style_28'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_29\" data-index=\"29\" className={this.state.activeFontStyle === \"font_style_29\" ? 'font-box font_style_29  active' : 'font-box font_style_29'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_30\" data-index=\"30\" className={this.state.activeFontStyle === \"font_style_30\" ? 'font-box font_style_30  active' : 'font-box font_style_30'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                            </div>\r\n                                          </div>\r\n\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_30\" data-index=\"30\" className={this.state.activeFontStyle === \"font_style_31\" ? 'font-box font_style_31  active' : 'font-box font_style_31'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_31\" data-index=\"31\" className={this.state.activeFontStyle === \"font_style_32\" ? 'font-box font_style_32  active' : 'font-box font_style_32'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_32\" data-index=\"32\" className={this.state.activeFontStyle === \"font_style_33\" ? 'font-box font_style_33  active' : 'font-box font_style_33'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_34\" data-index=\"34\" className={this.state.activeFontStyle === \"font_style_34\" ? 'font-box font_style_34  active' : 'font-box font_style_34'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_35\" data-index=\"35\" className={this.state.activeFontStyle === \"font_style_35\" ? 'font-box font_style_35  active' : 'font-box font_style_35'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"col-md-4\">\r\n                                            <div data-shape=\"font_style_36\" data-index=\"36\" className={this.state.activeFontStyle === \"font_style_36\" ? 'font-box font_style_36  active' : 'font-box font_style_36'}\r\n                                              onClick={this.setButtonStyleActive('font')}>\r\n                                              Aa\r\n                                            </div>\r\n                                          </div>\r\n                                            {/* new font style */}\r\n                                        </div>\r\n                                      </div>\r\n                          <div className=\"heading\">\r\n                            <h5>Text Color</h5>\r\n                            <p>Choose the color of the text for your page</p>\r\n                          </div>\r\n                          <div className=\"item\">\r\n                                        <div className=\"row\">\r\n                                          <div className=\"part\">\r\n                                            <div data-color=\"#011627\" data-index=\"1\" className={this.state.activeFontcolor === \"#011627\" ? 'color-box bg_1 active' : 'color-box bg_1'}\r\n                                              onClick={this.setActiveClass('font')}>\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"part\">\r\n                                            <div data-color=\"#2ec4b6\" data-index=\"2\" className={this.state.activeFontcolor === \"#2ec4b6\" ? 'color-box bg_2 active' : 'color-box bg_2'}\r\n                                              onClick={this.setActiveClass('font')}>\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"part\">\r\n                                            <div data-color=\"#e71d36\" data-index=\"3\" className={this.state.activeFontcolor === \"#e71d36\" ? 'color-box bg_3 active' : 'color-box bg_3'}\r\n                                              onClick={this.setActiveClass('font')}>\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"part\">\r\n                                            <div data-color=\"#ff9f1c\" data-index=\"4\" className={this.state.activeFontcolor === \"#ff9f1c\" ? 'color-box bg_4 active' : 'color-box bg_4'}\r\n                                              onClick={this.setActiveClass('font')}>\r\n                                            </div>\r\n                                          </div>\r\n                                         \r\n                                          <div className=\"part mr0\">\r\n                           \r\n                                            <div className={this.state.activeFontcolor === this.state.dynamicFontColor ? 'color-box color-pick active' : 'color-box color-pick'}\r\n                                              data-color={this.state.dynamicFontColor} style={{ backgroundColor: this.state.activeFontcolor }} data-index=\"6\" id=\"custom_color_font\" onClick={this.openColorPicker('font')}>\r\n                                                <label>\r\n                                                  <input type=\"color\" id=\"color-picker_font\" onChange={this.changeColor('font')} />\r\n                                                  <AddBoxOutlinedIcon/>\r\n                                                  </label>\r\n                                              </div>\r\n\r\n                                          </div>\r\n\r\n\r\n\r\n                                        </div>\r\n                                      </div>\r\n                          <div className=\"heading\">\r\n                            <h5>Text Name  Size</h5>\r\n                            <p>Choose text size of your name </p>\r\n                          </div>\r\n                          <div className=\"item\">\r\n                              <div className=\"row\">\r\n                                 <div className=\"col-md-4\">\r\n                                      <div className=\"font-size-box namesmall\" \r\n                                            data-shape=\"14px\"\r\n                                             className={this.state.activeNameSize === \"14px\" ? 'font-size-box namesmall active' : 'font-size-box namesmall'}\r\n                                              onClick={this.setButtonStyleActive('nameSize')}>\r\n                                        Small\r\n                                      </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-4\">\r\n                                      <div className=\"font-size-box namemedium\" data-shape=\"18px\"\r\n                                             className={this.state.activeNameSize === \"18px\" ? 'font-size-box namemedium active' : 'font-size-box namemedium'}\r\n                                              onClick={this.setButtonStyleActive('nameSize')}>\r\n                                        Medium\r\n                                      </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-4\">\r\n                                      <div className=\"font-size-box namelarge\" \r\n                                      data-shape=\"22px\"\r\n                                      className={this.state.activeNameSize === \"22px\" ? 'font-size-box namelarge active' : 'font-size-box namelarge'}\r\n                                       onClick={this.setButtonStyleActive('nameSize')}>\r\n                                        Large\r\n                                      </div>\r\n                                    </div>\r\n                              </div>\r\n                          </div>\r\n                          <div className=\"heading\">\r\n                            <h5>Text Bio Size</h5>\r\n                            <p>Choose text size of your bio</p>\r\n                          </div>\r\n                          <div className=\"item\">\r\n                              <div className=\"row\">\r\n                                 <div className=\"col-md-4\">\r\n                                      <div className=\"font-size-box biosmall\" data-shape=\"14px\"\r\n                                      className={this.state.activeBioSize === \"14px\" ? 'font-size-box biosmall active' : 'font-size-box biosmall'}\r\n                                       onClick={this.setButtonStyleActive('bioSize')}>\r\n                                        Small\r\n                                      </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-4\">\r\n                                      <div className=\"font-size-box biomedium\" data-shape='18px'\r\n                                      className={this.state.activeBioSize === \"18px\" ? 'font-size-box biomedium active' : 'font-size-box biomedium'}\r\n                                      onClick={this.setButtonStyleActive('bioSize')}>\r\n                                        Medium\r\n                                      </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-4 \">\r\n                                      <div className=\"font-size-box biolarge\" data-shape='22px'\r\n                                      className={this.state.activeBioSize === \"22px\" ? 'font-size-box biolarge active' : 'font-size-box biolarge'}\r\n                                      onClick={this.setButtonStyleActive('bioSize')}> \r\n                                        Large\r\n                                      </div>\r\n                                    </div>\r\n                              </div>\r\n                          </div>\r\n                    \r\n                    \r\n                        </div>\r\n                      </Tab2.Pane>\r\n                  \r\n                    </Tab2.Content>\r\n                  </div>\r\n                </Tab2.Container>\r\n              </div>\r\n              <LivePreview2 JM_User_Profile_Url={this.state.JM_User_Profile_Url} ref=\"livepreview\" />\r\n                                \r\n            </div>\r\n          </div>\r\n        </div>\r\n                              \r\n\r\n        <FooterClass />\r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default MyAppearance\r\n","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\HowItWork.js",["2084","2085","2086","2087","2088","2089"],"import React from 'react';\r\nimport FooterClass from '../header_footer/FooterClass';\r\nimport MainHeader from '../header_footer/MainHeader';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport ProfileHeader from '../header_footer/ProfileHeader';\r\n\r\nconst HowItWork = () => {\r\n    const  JM_ID= parseInt(localStorage.getItem('JM_ID')) \r\n\r\n    return (\r\n      <>\r\n      {\r\n          (JM_ID > 0) ?\r\n          <ProfileHeader/>\r\n          :\r\n          <MainHeader/>\r\n      }\r\n\r\n      <div>\r\n        \t<div className=\"howitwork-sec\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"title\">\r\n                    <h3>How Does It Work ?</h3>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <Tabs defaultActiveKey=\"fan\">\r\n                        <Tab eventKey=\"fan\" title=\"FOR FANS\">\r\n                        <div className=\"row mb-30\">\r\n                              <div className=\"col-md-6 d-flex flex-wrap align-content-center\">\r\n                                <div className=\"text\">\r\n                                    <h3>What is Expy?</h3>\r\n                                    <p>Expy is the homepage where you can find out everything your favorite creator is doing online, whether new content across platforms, events, personalized services among others. Get to know your favorite creators better from their Expy homepage!</p>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"col-md-6\">\r\n                                  <div className=\"image\">\r\n                                    <img src={\"images/fan-what.jpg\"} />\r\n                                  </div>\r\n                              </div>\r\n                          </div>\r\n\r\n                          <div className=\"row mb-30\">\r\n                              <div className=\"col-md-6 order-md-last d-flex flex-wrap align-content-center\">\r\n                                <div className=\"text\">\r\n                                    <h3>How does It work?</h3>\r\n                                    <h4>Enter Expy</h4>\r\n                                    <p>Visit expy.bio from your desktop or mobile phone.</p>\r\n                                    <h4>Browse and Select your Creator</h4>\r\n                                    <p>From our extensive industry category pool of creators using Expy.</p>\r\n                                    <h4>See everything important to your Creator</h4>\r\n                                    <p>Whether their latest YouTube video, Spotify single or paid, premium content, the creator’s whole online persona lives on their Expy page! </p>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"col-md-6\">\r\n                                  <div className=\"image\">\r\n                                    <img src={\"images/fan-work.jpg\"} />\r\n                                  </div>\r\n                              </div>\r\n                          </div>\r\n\r\n                          <div className=\"row mb-30\">\r\n                              <div className=\"col-md-6 d-flex flex-wrap align-content-center\">\r\n                                <div className=\"text\">\r\n                                    <h3>How do payments work?</h3>\r\n                                    <p>Payment can be made by debit / credit card when requesting a paid creator service. In case of cancellation or unfulfillment, the money is fully refunded to your account.</p>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"col-md-6\">\r\n                                  <div className=\"image\">\r\n                                      <img src={\"images/fan-pay.jpg\"} />\r\n                                  </div>\r\n                              </div>\r\n                          </div>\r\n\r\n                          <div className=\"row\">\r\n                              <div className=\"col-md-6 order-md-last d-flex flex-wrap align-content-center\">\r\n                                <div className=\"text\">\r\n                                    <h3>How do I receive the paid creator service?</h3>\r\n                                    <p>A link to the paid service will be sent to your email and a notification of the completed paid service will be sent to your phone. Hooray!</p>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"col-md-6\">\r\n                                  <div className=\"image\">\r\n                                    <img src={\"images/fan-receive.jpg\"} />\r\n                                  </div>\r\n                              </div>\r\n                          </div>\r\n                        </Tab>\r\n                        <Tab eventKey=\"creators\" title=\"FOR CREATORS\">\r\n                        <div className=\"row mb-30\">\r\n                              <div className=\"col-md-6 d-flex flex-wrap align-content-center\">\r\n                                <div className=\"text\">\r\n                                    <h3>What is Expy?</h3>\r\n                                    <p>Expy is a community-first, one-stop homepage for creators and influencers to share all their content, sell monetizable services, engage their audience, plus collaborate with ambitious creators via one link. Share, monetize, engage, collaborate and grow directly from your social media link in bio.</p>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"col-md-6\">\r\n                                  <div className=\"image\">\r\n                                    <img src={\"images/creator-what.jpg\"} />\r\n                                  </div>\r\n                              </div>\r\n                          </div>\r\n                           <div className=\"row\">\r\n                              <div className=\"col-md-6 order-md-last d-flex flex-wrap align-content-center\">\r\n                                <div className=\"text\">\r\n                                    <h3>How does It work?</h3>\r\n                                    <h4>Register and verify your account</h4>\r\n                                    <p>Submit some details to be verified (2 minutes) and create a profile.</p>\r\n                                    <h4>Personalize your page</h4>\r\n                                    <p>With 3 simple clicks, you are able to make your page a reflection of your online persona. Add any links, social widgets, content embedding, paid services (personalized videos, live video sessions, content paywall and many more) and anything else you would like your fans to see. Should not take longer than 5 minutes!</p>\r\n                                    <h4>Post your Expy link</h4>\r\n                                    <p>Find your personalized link and paste it in the “website” section of your main social media profiles (e.g. Instagram, Twitter, YouTube…).</p>\r\n                                    <h4> Engage with Expy’s creator community </h4>\r\n                                    <p>As an Expy creator, you’ll have access to Expy’s exclusive creator tribe, with a private WhatsApp/Discord group, bi-weekly creator calls, numerous monetary-incentivized social media contests, creator collaboration opportunities (facilitated by Expy) and many other perks and rewards.</p>\r\n                                    <p>You’re good to go! Share your Expy link anywhere to engage, monetize and grow your audience and collaborate with ambitious creators!</p>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"col-md-6\">\r\n                                  <div className=\"image\">\r\n                                    <img src={\"images/fan-work.jpg\"} />\r\n                                  </div>\r\n                              </div>\r\n                          </div>\r\n                          <div className=\"row\">\r\n                          <div className=\"col-md-12\">\r\n                                  <div className=\"image\">\r\n                                      <iframe width=\"100%\" height=\"550\" \r\n                                        src=\"https://www.youtube.com/embed/videoseries?list=PLIsPVSTJtbnsatcCe_qd3Wp9YtVuvT8sH&rel=0\"\r\n                                        title=\"Video Guide\"\r\n              \r\n                                        frameborder=\"0\" \r\n                                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \r\n                                        allowfullscreen>\r\n\r\n                                        </iframe>                               \r\n                                  </div>\r\n                                  \r\n                              </div>\r\n                          </div>\r\n                        </Tab>\r\n                    </Tabs>\r\n                </div>\r\n              </div> \r\n            </div>  \r\n          </div>\r\n      </div>\r\n    <FooterClass/>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default HowItWork\r\n","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\TermsAndCondition.js",[],"E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\PremiumFeature.js",[],"E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\NotificationView.js",["2090"],"import React, { Component }from 'react';\r\nimport FooterClass from '../header_footer/FooterClass';\r\n\r\nimport ProfileHeader from '../header_footer/ProfileHeader';\r\nimport ProfileNav from './ProfileNav';\r\nimport API from '../services/API'\r\n\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nclass NotificationView extends Component\r\n{\r\n    constructor(props) {\r\n      super(props)\r\n    \r\n      this.state={\r\n            allRequest:[],\r\n            newRequest:0, \r\n            openModel:false,\r\n            base_url: process.env.REACT_APP_API_URL,\r\n            root_url: process.env.REACT_APP_ROOT_URL, \r\n            JM_User_Profile_Url:'',\r\n            isLoading:'heloo'\r\n        }\r\n    }\r\n    \r\n   async  componentDidMount()\r\n    {\r\n            API.updateSeen();\r\n            this.refreshStateHeaders();\r\n            var id = parseInt(localStorage.getItem('JM_ID'));  \r\n            var JSONdata = {\r\n              JM_ID: id\r\n            };  \r\n            this.setState({\r\n              isLoading:'Loading ....'\r\n            })\r\n            const data1=await API.postData(JSONdata,'GetAllRequest','view')\r\n            if(data1.status===1)\r\n            {\r\n              const data=API.decryptJson(data1.flag);\r\n              this.setState({\r\n                allRequest:data.allRequest,    \r\n               });\r\n               if(data.newRequest!==null && data.newRequest.length > 0)\r\n                this.setState({\r\n                    newRequest:data.newRequest[0].pendingRequest,    \r\n                });\r\n                if(data.userDetails.length > 0)\r\n                {\r\n                    this.setState({\r\n                        JM_Name:data.userDetails[0].JM_Name,    \r\n                        JM_User_Profile_Url:data.userDetails[0].JM_User_Profile_Url, \r\n                        isLoading:''\r\n                    });\r\n                }\r\n\r\n            }\r\n            else\r\n            {\r\n              this.setState({newRequest:0})       \r\n            }\r\n            //document.getElementsByTagName('meta')[\"keywords\"].content = \"Expy\";\r\n           // document.getElementsByTagName('meta')[\"description\"].content = \"View All Notification\";\r\n            document.title = \"View Notification | Expy\";\r\n            document.getElementsByClassName(\"btun Mobile-notification\").innerHTML = \"\"\r\n            \r\n    }\r\n    refreshStateHeaders= () => {\r\n      this.refs.ProfileHeader.updateState(this.state);\r\n    }\r\n  render()\r\n  {\r\n    <Helmet>\r\n      <title>View Notification  | Expy </title>\r\n      <meta name=\"description\" content=\"Use Expy to SHARE all your important links, content and OFFER paid, personalized, premium features under one beautiful Bio-Link page. FREE and FAST to set up.\"></meta>\r\n    </Helmet>\r\n      const {allRequest}=this.state;\r\n      allRequest.sort( function ( a, b ) { return b.BM_ID - a.BM_ID; } );\r\n      let notifyTable=allRequest && allRequest.map((item,i)=>{\r\n                return (      \r\n                    item.IsSeen===1 && (item.DA_DA_ID===0 || item.DA_DA_ID===999 || item.DA_DA_ID===2 || item.DA_DA_ID===3) ?\r\n                     <div className=\"item\">  \r\n                            <a href={\"/notify?type=Purchased\"}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-9\">\r\n                                        {\r\n                                            item.DA_DA_ID===0?\r\n                                                <p>You received a new gift of ₹{item.Actual_Price}.</p>\r\n                                            :\r\n                                            item.DA_DA_ID===999?\r\n                                                <p>You received a new Tip of of ₹{item.Actual_Price}.</p>\r\n                                            :\r\n                                            item.DA_DA_ID===2?\r\n                                            <p> Your content has been purchased for ₹{item.Actual_Price}.</p>\r\n                                            :   \r\n                                            item.DA_DA_ID===3?\r\n                                              <p>Your digital good has been purchased for ₹{item.Actual_Price}.</p>\r\n                                              :                                         \r\n                                            null\r\n                                        }  \r\n\r\n                                    </div>\r\n                                    <div className=\"col-md-3 justify-content-end d-flex flex-wrap align-content-center\">\r\n                                       <span>\r\n                                          {/* <Moment date= {item.BM_Purchase_Date} format=\"D MMM YYYY\" /> */}\r\n                                        {  item.BM_Purchase_Date}\r\n                                          <button className=\"defaultButton\" style={{marginLeft:'5px'}}>View</button>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </a>\r\n                     </div>\r\n                     : \r\n                     item.IsSeen===1 && item.DA_DA_ID === 1?\r\n                    <div className=\"item\">  \r\n                            <a href={item.Status==='P' ? '/notify?type=Pending' :  item.Status==='A' ? '/notify?type=Accepted' : item.Status==='C' ? '/notify?type=Completed' :  item.Status==='B' ? '/notify?type=Booked' :'notify' }>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-9\">\r\n                                        {\r\n                                            item.DA_DA_ID===1?\r\n                                            <p>You have a new request for a personalized video or audio message for ₹{item.Actual_Price}.</p>\r\n                                            // :                                            \r\n                                            // item.DA_DA_ID===3?\r\n                                            // <p> Digital E-Commerce of {item.DA_Title}</p>\r\n                                            :\r\n                                            null\r\n                                        }  \r\n\r\n                                    </div>\r\n                                    <div className=\"col-md-3 justify-content-end d-flex flex-wrap align-content-center\">\r\n                                        <span>   \r\n                                        {  item.BM_Purchase_Date}\r\n                                               <button className=\"defaultButton\" style={{marginLeft:'5px'}}>View</button>\r\n                                             </span>\r\n                                    </div>\r\n                                </div>\r\n                            </a>\r\n                     </div>\r\n                    // :\r\n                    //  item.IsSeen===1 && item.DA_DA_ID === 3?\r\n                    //  <div className=\"item\">  \r\n                    //          <a href={item.Status==='C' ? '/notify?type=Completed' : 'notify' }>\r\n                    //              <div className=\"row\">\r\n                    //                  <div className=\"col-md-9\">\r\n                    //                      {\r\n                                                                                      \r\n                    //                           item.DA_DA_ID===3?\r\n                    //                           <p>Your digital good has been purchased for ₹{item.BM_Purchase_Amt}.</p>\r\n                    //                          :\r\n                    //                          null\r\n                    //                      }  \r\n \r\n                    //                  </div>\r\n                    //                  <div className=\"col-md-3 justify-content-end d-flex flex-wrap align-content-center\">\r\n                    //                      <span>    \r\n                    //                      {  item.BM_Purchase_Date}\r\n                    //                          <button className=\"defaultButton\" style={{marginLeft:'5px'}}>View</button>\r\n                    //                          </span>\r\n                    //                  </div>\r\n                    //              </div>\r\n                    //          </a>\r\n                    //   </div>\r\n                      :\r\n                      item.IsSeen===1 && item.DA_DA_ID === 5?\r\n                      <div className=\"item\">  \r\n                              <a href={item.Status==='B' ? '/notify?type=Booked' : 'notify' }>\r\n                                  <div className=\"row\">\r\n                                      <div className=\"col-md-9\">\r\n                                          {\r\n                                                                                       \r\n                                               item.DA_DA_ID===5 &&  item.isReminder===0?\r\n                                               <p>A video session has been booked for ₹{item.Actual_Price}.</p>\r\n                                              :\r\n                                              item.DA_DA_ID===5 &&  item.isReminder===2?\r\n                                                <p>You have a video session in 1 hour on Expy!.</p> \r\n                                              :\r\n                                              null\r\n                                          }  \r\n  \r\n                                      </div>\r\n                                      <div className=\"col-md-3 justify-content-end d-flex flex-wrap align-content-center\">\r\n                                          <span>    \r\n                                          {  item.BM_Purchase_Date}\r\n\r\n                                         { \r\n                                          item.DA_DA_ID===5 &&  item.isReminder===2?\r\n                                          <a href={process.env.REACT_APP_ROOT_URL+\"meet?id=\"+item.BM_Content_Sent} target=\"_blank\" className=\"defaultButton\" style={{marginLeft:'5px'}}>Go</a>\r\n                                          :\r\n                                          <button className=\"defaultButton\" style={{marginLeft:'5px'}}>View</button>\r\n                                          \r\n                                          } \r\n                                            \r\n                                              </span>\r\n                                      </div>\r\n                                  </div>\r\n                              </a>\r\n                       </div>\r\n                       :\r\n                      null\r\n                   \r\n                )\r\n        });\r\n  return (\r\n    <>\r\n \r\n        <ProfileHeader state={this.state} ref=\"ProfileHeader\" />\r\n\r\n        <div className=\"profile-tab\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <ProfileNav />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    \r\n        <div className=\"req-notification-sec\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                      <div className=\"col-md-8 offset-md-2\">\r\n                                          <div className=\"req-notification\">\r\n                                              <div class=\"heading\">\r\n                                                <h3>Transactions &amp; Requests Notifications</h3>\r\n                                                <a href=\"/notify?type=Pending\" type=\"button\">\r\n                                                  <button class=\"defaultButton\">\r\n                                                    View Transactions &amp; Requests Dashboard</button>\r\n                                                    </a>\r\n                                                    {/* <LoaderMobile/>  */}\r\n                                                    <p style={{color:'green',fontWeight:'600',fontSize:'16px'}}>{this.state.isLoading}</p>\r\n                                              </div>\r\n                                      \r\n                                              {\r\n                                                    notifyTable\r\n                                              }\r\n                                          \r\n                                      \r\n                                          </div>\r\n                                      </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n     \r\n    <FooterClass/>\r\n    </>\r\n  )\r\n}\r\n}\r\nexport default NotificationView","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\BrowsePage.js",["2091","2092","2093","2094","2095"],"import React, { Component } from 'react'\r\n\r\nimport FooterClass from '../header_footer/FooterClass';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport SearchItemNextPrev from './SearchItemNextPrev';\r\nimport Items from './Items';\r\nimport MainHeader from '../header_footer/MainHeader';\r\n\r\n class BrowsePage extends Component {\r\n     constructor(props) {\r\n       super(props)\r\n     \r\n       this.state = {\r\n          tab:0,\r\n          tab_item:false,\r\n          tab_people:true,\r\n          exploreData:[],\r\n          JM_ID:parseInt(localStorage.getItem('JM_ID')),\r\n          JM_Name: '',\r\n          JM_Email: '',\r\n          JM_Url: '',\r\n          JM_Profile_Pic: '',\r\n          JM_User_Profile_Url: '',\r\n          base_url: process.env.REACT_APP_API_URL,\r\n          root_url: process.env.REACT_APP_ROOT_URL,\r\n          ProfilePath: 'Profile/',\r\n          linkPath: '',\r\n          ProfileimagePath: '',\r\n          limitData:2,\r\n          isLoading:false\r\n       }\r\n     }\r\n     handleChange =tab=>e=> {\r\n      this.setState({tab});\r\n        if(tab===0)\r\n        {\r\n          this.setState({tab_people:true,tab_item:false});\r\n           // alert(1);           \r\n        }\r\n        if(tab===1)\r\n        {\r\n          this.setState({tab_people:false,tab_item:true});\r\n            //alert(2);\r\n        }\r\n      };\r\n      componentDidMount() {\r\n       // this.validateSession();\r\n        this.Get_All_Users();  \r\n           \r\n      }\r\n  \r\n      Get_All_Users=()=>{\r\n        this.setState({isLoading: true})  \r\n        const API_url = this.state.base_url + \"admin/Get_All_Users\";\r\n        let JSONdata = {\r\n            JM_ID: this.state.JM_ID,\r\n            limit:this.state.limitData        \r\n          };\r\n        fetch(API_url,\r\n            {\r\n                method: 'post',\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(JSONdata)\r\n            })\r\n        .then((response) => response.json())\r\n        .then(data => {\r\n            if(data.status===1)\r\n            {\r\n                    this.setState({exploreData:data.exploreData})\r\n                    this.setState({isLoading: false})  \r\n            }\r\n            else\r\n                alert(data.msg);\r\n        });\r\n\r\n      }\r\n      seeMore=(prevState)=>{\r\n          let limitData=this.state.limitData;\r\n          limitData=limitData+2;\r\n\r\n          //this.Get_All_Users();\r\n         \r\n          this.setState({\r\n            limitData:limitData\r\n            },() => {\r\n                //console.log(this.state.limitData);\r\n               this.Get_All_Users();\r\n            });\r\n         \r\n      }\r\n      gotoProfile=()=>{\r\n        this.props.history.push(\"/direct-access\");\r\n      }\r\n  render() {\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          flexGrow: 1,\r\n          maxWidth: 500,\r\n        },\r\n      });\r\n\r\n      let tabView=(\r\n        <Paper square className={useStyles.root}>\r\n        <Tabs\r\n            value={this.state.tab}       \r\n            variant=\"fullWidth\"\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            aria-label=\"icon label tabs example\"\r\n            centered\r\n        >\r\n           <Tab  aria-label=\"phone\" label=\"People\" onClick={this.handleChange(0)}/>\r\n            <Tab  aria-label=\"favorite\" label=\"Items\" onClick={this.handleChange(1)}/>\r\n           \r\n        </Tabs>\r\n        </Paper>\r\n      );\r\n        let base_url=this.state.base_url;\r\n        let root_url=this.state.root_url;\r\n     let profileCard;\r\n     profileCard=this.state.exploreData.map((user,i) =>{\r\n          return (\r\n                <div className=\"item\">\r\n                    <div className=\"cards\">\r\n                        <div className=\"prop-pic\">\r\n                        <a href={root_url+user.JM_User_Profile_Url} target=\"_blank\">   <img src={process.env.REACT_APP_UPLOAD_URL+user.JM_Profile_Pic} /></a>\r\n                        </div>\r\n                        <div className=\"name\">\r\n                        {\r\n                            user.JM_Verified===1 ?\r\n                            <span className=\"verify-tick\"><img  src=\"/images/verifyIcon.png\"/></span>\r\n                            :\r\n                            null\r\n                          }\r\n                     \r\n                        <a href={root_url+user.JM_User_Profile_Url} target=\"_blank\"> <h4>{user.JM_Name}</h4></a> \r\n                            <p>{user.JM_Email}</p>\r\n                        </div>\r\n                        {/* <a href={root_url+user.JM_User_Profile_Url} target=\"_blank\">Follow</a> */}\r\n                    </div>\r\n                </div>\r\n              ) \r\n        })\r\nlet exploreContent=(\r\n        <div className=\"profile-sec pd-top1\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 offset-md-4\">                  \r\n                            {tabView}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"container\"> \r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 offset-md-2\">\r\n                            {/* <div className=\"title\">\r\n                                <h2>Explore</h2>\r\n                                <p>Find your favourite people</p>\r\n                            </div> */}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"profile-box\">                 \r\n                            {profileCard}                 \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <button className=\"btun\" onClick={this.seeMore}>See More</button>                   \r\n                    </div>\r\n                    </div>\r\n                </div>\r\n        )\r\n  let exploreItems=(\r\n            <div className=\"profile-sec pd-top1\">\r\n              <div className=\"row\">\r\n                  <div className=\"col-md-4 offset-md-4\">                  \r\n                      {tabView}\r\n                  </div>\r\n              </div>\r\n              <div className=\"container\"> \r\n                        <SearchItemNextPrev/>    \r\n                        <Items/>\r\n               </div>\r\n            </div>\r\n\r\n        \r\n);\r\n    return (\r\n      <>     \r\n      \r\n                <MainHeader/>\r\n                {\r\n                 this.state.tab_people ? \r\n                    exploreContent \r\n                 :                  \r\n                    exploreItems  \r\n                }\r\n                \r\n                <FooterClass/>    \r\n   \r\n             \r\n        }        \r\n     \r\n    \r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default BrowsePage;\r\n","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\AboutUs.js",[],"E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\ImageCarousel.js",["2096","2097","2098","2099","2100","2101","2102","2103","2104","2105","2106","2107","2108"],"import React, { Component } from 'react';\r\nimport RBCarousel from \"react-bootstrap-carousel\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\r\nimport ProfileHeader from '../header_footer/ProfileHeader';\r\nimport FooterClass from '../header_footer/FooterClass';\r\nimport ToastAlert from './ToastAlert';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport axios, { isCancel } from \"axios\";\r\nimport {ProgressBar} from 'react-bootstrap';\r\nimport cryptoRandomString from 'crypto-random-string';\r\nimport ReactCrop from 'react-image-crop'\r\nimport 'react-image-crop/dist/ReactCrop.css'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport API from '../services/API'\r\nclass ImageCarousel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n      \r\n        this.state = {       \r\n           JM_Email: localStorage.getItem('JM_Email'),\r\n           JM_ID: parseInt(localStorage.getItem('JM_ID')),      \r\n           JM_User_Profile_Url: localStorage.getItem('JM_User_Profile_Url'),        \r\n           showAlert:false,   \r\n           title:'',\r\n           msg:'',\r\n           base_url: process.env.REACT_APP_API_URL,\r\n           root_url: process.env.REACT_APP_ROOT_URL,\r\n           carousel_1:'',\r\n           carousel_2:'',\r\n           carousel_3:'',\r\n           selectedFile1:null,\r\n           selectedFile2:null,\r\n           selectedFile3:null,\r\n           Is_Image1:false, \r\n           Is_Image2:false, \r\n           Is_Image3:false, \r\n           uploadPercentage: 0,\r\n           BtnName:'Save Carousel',\r\n           show: false,\r\n           title:'',\r\n           msg:'',\r\n           carousel_title_1:'', \r\n           carousel_title_2:'',\r\n           carousel_title_3:'',   \r\n           openCropModal_1:false,        \r\n           openCropModal_2:false,     \r\n           openCropModal_3:false, \r\n           \r\n           src1: null,  src2: null,  src3: null,\r\n           crop: {\r\n             unit: \"%\",\r\n             width: 30,\r\n             aspect: 1 / 1\r\n           },\r\n        \r\n        }\r\n    }\r\n\r\n  \r\n\r\n    componentDidMount() \r\n    {\r\n    //console.log(this.props)\r\n    }\r\n\r\n\r\n\r\n  //===starting of crop image1\r\n\r\n  handleFile=id=> e => {\r\n    const fileReader = new FileReader()\r\n    if (e.target.files !== null && e.target.files.length > 0) \r\n    {\r\n      fileReader.onloadend = () => \r\n      {\r\n        if(id===1)\r\n             this.setState({ src1: fileReader.result })\r\n         else  if(id===2) \r\n            this.setState({ src2: fileReader.result })\r\n            else  if(id===3)  this.setState({ src3: fileReader.result })\r\n      }\r\n      fileReader.readAsDataURL(e.target.files[0])\r\n      if(id===1)\r\n            this.setState({ openCropModal_1: true })\r\n        else if(id===2)\r\n            this.setState({ openCropModal_2: true })\r\n       else if(id===3)\r\n            this.setState({ openCropModal_3: true })\r\n     }\r\n  }\r\n\r\n  onImageLoaded = image => {\r\n    this.imageRef = image\r\n  }\r\n\r\n  onCropChange = (crop)=> {\r\n    \r\n    this.setState({ crop });\r\n  }\r\n\r\n  onCropComplete = (crop) => {\r\n    if (this.imageRef && crop.width && crop.height)\r\n     {\r\n      const croppedImageUrl = this.getCroppedImg(this.imageRef, crop)\r\n      this.setState({ croppedImageUrl })\r\n    }\r\n  }\r\n\r\n  getCroppedImg(image, crop) {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n\r\n    //============================= 01-sep-2021 by sudipta\r\n    let targetWidth=0;\r\n    let targetHeight=0;\r\n    if(image.naturalWidth > 1200)\r\n    {\r\n       targetWidth=1200;\r\n       targetHeight=1200;\r\n    }\r\n    else\r\n    {\r\n      targetWidth=crop.width;\r\n      targetHeight=crop.height;   \r\n    } \r\n     //=====================\r\n    canvas.width = targetWidth;\r\n    canvas.height = targetHeight;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      targetWidth,\r\n      targetHeight\r\n    )\r\n\r\n    const reader = new FileReader()\r\n    canvas.toBlob(blob => \r\n    {\r\n      let r = cryptoRandomString({ length: 30 });\r\n      //console.log(\"random\", r);\r\n      reader.readAsDataURL(blob)\r\n      reader.onloadend = () => {\r\n        this.dataURLtoFile(reader.result, r + '.jpg')\r\n      }\r\n    })\r\n  }\r\n  \r\n  dataURLtoFile(dataurl, filename) {\r\n    let arr = dataurl.split(','),\r\n      mime = arr[0].match(/:(.*?);/)[1],\r\n      bstr = atob(arr[1]),\r\n      n = bstr.length,\r\n      u8arr = new Uint8Array(n);\r\n\r\n    while (n--) {\r\n      u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    let croppedImage = new File([u8arr], filename, { type: mime });\r\n   // console.log(croppedImage)\r\n    if(this.state.openCropModal_1===true)\r\n    {\r\n        this.setState({\r\n            croppedImage1 : croppedImage,\r\n            carousel_1: URL.createObjectURL(croppedImage),\r\n            selectedFile1: croppedImage \r\n       })\r\n       console.log(croppedImage)\r\n    }\r\n  else  if(this.state.openCropModal_2===true)\r\n    {\r\n        this.setState({\r\n            croppedImage2 : croppedImage,\r\n           carousel_2: URL.createObjectURL(croppedImage),\r\n           selectedFile2: croppedImage \r\n       })\r\n    }\r\n  else  if(this.state.openCropModal_3===true)\r\n    {\r\n        this.setState({\r\n            croppedImage3 : croppedImage,\r\n           carousel_3: URL.createObjectURL(croppedImage),\r\n           selectedFile3: croppedImage   \r\n       })\r\n    }\r\n     \r\n  }\r\n\r\n\r\n  uploadPic=id=>e=>{  \r\n      if(id===1) \r\n      {\r\n        this.setState({ \r\n            Is_Image1: true,openCropModal_1:false,     \r\n        })\r\n      }\r\n      if(id===2) \r\n      {\r\n        this.setState({ \r\n            Is_Image2: true,openCropModal_2:false,     \r\n        })\r\n      }\r\n      if(id===3) \r\n      {\r\n        this.setState({ \r\n            Is_Image3: true,openCropModal_3:false,     \r\n        })\r\n      }\r\n  }\r\n  //===end of crop image1\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    showToast = (title,msg)=> {\r\n        this.setState({ show: true,title,msg })\r\n      }\r\n      hideToast = () => {\r\n        this.setState({ show: false })\r\n      }\r\n    imageOnChange=id=>e=>{\r\n\r\n        const file = e.target.files[0];\r\n        if(typeof file!=='undefined' && file!==null)\r\n        {\r\n            if(id===1)\r\n            {\r\n                this.setState({ selectedFile1: e.target.files[0] }); \r\n                this.setState({\r\n                carousel_1: URL.createObjectURL(file),  \r\n                Is_Image1:true \r\n                });  \r\n               \r\n            }\r\n           else if(id===2)\r\n            {\r\n                this.setState({ selectedFile2: e.target.files[0] }); \r\n                this.setState({\r\n                carousel_2: URL.createObjectURL(file),   \r\n                Is_Image2:true ,\r\n                });  \r\n            }\r\n            else\r\n            {\r\n                this.setState({ selectedFile3: e.target.files[0] }); \r\n                this.setState({\r\n                carousel_3: URL.createObjectURL(file),  \r\n                Is_Image3:true, \r\n                }); \r\n            }\r\n        }\r\n      \r\n    }\r\n\r\n    //08-jul-2021\r\n    onchangeTitle=(e)=>{\r\n\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n        var value=e.target.value.replace(/'/g, \"<>\");\r\n        //console.log(value)\r\n    }\r\n\r\n    saveCarousel=(e)=>{\r\n        e.preventDefault();\r\n        let isValid=this.validation();\r\n        if(isValid)\r\n        {\r\n                var carousel_title_1 ='';\r\n                var carousel_title_2='';  \r\n                var carousel_title_3 ='';  \r\n                const formData = new FormData(); \r\n                let Api_url=this.state.base_url+'admin/addImageCarousel';\r\n            // let Api_url='http://localhost:9000/admin/addProduct';\r\n                if(this.state.selectedFile1 !==null && this.state.carousel_1!=='' )\r\n                {  \r\n                    formData.append('carousel_1', this.state.selectedFile1);  \r\n                    carousel_title_1 = this.state.carousel_title_1.replace(/'/g, \"<>\");              \r\n                }\r\n                if(this.state.selectedFile2 !==null && this.state.carousel_2!=='' )\r\n                {  \r\n                    formData.append('carousel_2', this.state.selectedFile2);   \r\n                    carousel_title_2 = this.state.carousel_title_2.replace(/'/g, \"<>\");            \r\n                }\r\n                if(this.state.selectedFile3 !==null && this.state.carousel_3!=='')\r\n                {   \r\n                    formData.append('carousel_3', this.state.selectedFile3)\r\n                    carousel_title_3 = this.state.carousel_title_3.replace(/'/g, \"<>\"); \r\n                }\r\n     \r\n\r\n\r\n            formData.append('carousel_title_1', carousel_title_1); \r\n            formData.append('carousel_title_2', carousel_title_2); \r\n            formData.append('carousel_title_3', carousel_title_3); \r\n\r\n            formData.append('DA_Type', 'image'); \r\n            formData.append('DA_DA_ID', 4) // for premium featured id\r\n            formData.append('JM_ID', this.state.JM_ID)         \r\n            formData.append('DA_Title', 'image carousel')  \r\n            formData.append('DA_Description', '')  \r\n            formData.append('DA_Cover', \"\") \r\n            formData.append('DA_Price', 0)      \r\n            formData.append('JM_User_Profile_Url_plus_JM_ID',this.state.JM_User_Profile_Url + \"_\" + this.state.JM_ID)\r\n            \r\n           \r\n            const CancelToken = axios.CancelToken;\r\n            const source = CancelToken.source();\r\n            const options = {\r\n              onUploadProgress: (progressEvent) => \r\n              {\r\n                const {loaded, total} = progressEvent;\r\n                let percent = Math.floor( (loaded * 100) / total )\r\n                //console.log( `${loaded}kb of ${total}kb | ${percent}% wait...` );\r\n    \r\n                if( percent < 100 )\r\n                {\r\n                  this.setState({ uploadPercentage: percent })\r\n                }\r\n              },\r\n              cancelToken: source.token,\r\n              headers: {\r\n                \"authorization\": API.getAuth(),\"id\":API.getId()\r\n              },\r\n              \r\n            }\r\n       \r\n            \r\n           this.setState({BtnName:'Uploading..',disabledBtn:true});\r\n            axios.post(Api_url, formData, options).then(res =>\r\n            { \r\n              //console.log(res)\r\n              if(res.data.status > 0)\r\n              {\r\n                 this.setState({videoFile:null,videoData:'NA',audioFile:null,audioData:''});\r\n                 this.fileArray=[];     \r\n                \r\n                 this.setState({ avatar: res.data.url, uploadPercentage: 100 }, ()=>{\r\n                  setTimeout(() => {\r\n                    this.setState({ uploadPercentage: 0 })\r\n                  }, 1000);\r\n                })            \r\n                   \r\n                 this.showToast('success','Image Carousel is added to profile');                     \r\n                 this.setState({\r\n                     disabledBtn:false,BtnName:'Save',\r\n                    selectedFile1:null,carousel_1:'',\r\n                    selectedFile2:null,carousel_2:'',\r\n                    selectedFile3:null,carousel_3:'',\r\n                    Is_Image1:false,\r\n                    Is_Image2:false,\r\n                    Is_Image3:false,\r\n                    carousel_title_1:'', \r\n                    carousel_title_2:'',\r\n                    carousel_title_3:'',\r\n                });\r\n              }\r\n              else\r\n              {\r\n                \r\n                this.showToast('error','internal error occurred'); \r\n                this.setState({disabledBtn:false,BtnName:'Save Carousel'});\r\n              }     \r\n               \r\n            })\r\n            .catch(err => \r\n            {\r\n              //console.log(err);             \r\n              if(isCancel(err)) \r\n              {\r\n                  //alert(err.message);\r\n                  this.showToast('canceled',err.message); \r\n                  this.setState({\r\n                          disabledBtn:false,BtnName:'Save Carousel',\r\n                        selectedFile1:null,\r\n                        selectedFile2:null,\r\n                        selectedFile3:null,\r\n                        Is_Image1:false,\r\n                        Is_Image2:false,\r\n                        Is_Image3:false,\r\n                        carousel_title_1:'', \r\n                        carousel_title_2:'',\r\n                        carousel_title_3:'',\r\n                       \r\n                    \r\n                    });\r\n                  this.setState({ uploadPercentage: 0 })\r\n              }\r\n              else\r\n              {\r\n            \r\n                this.showToast('error',err.response.status===404 ?'network connection error':'internal error occurred'); \r\n            \r\n                this.setState({\r\n                    disabledBtn:false,BtnName:'Save Carousel',\r\n                    selectedFile1:null,\r\n                    selectedFile2:null,\r\n                    selectedFile3:null,\r\n                    Is_Image1:false,\r\n                    Is_Image2:false,\r\n                    Is_Image3:false,\r\n                    carousel_title_1:'', \r\n                    carousel_title_2:'',\r\n                    carousel_title_3:'',\r\n                });\r\n\r\n                this.setState({ uploadPercentage: 0 })\r\n              }\r\n          });\r\n        }\r\n        else\r\n        {\r\n          var msg=\"Choose atleast one image\";\r\n          this.showToast('empty field',msg);           \r\n        }\r\n    }\r\n    cancelUpload = (e) => \r\n    {\r\n        this.state.source.cancel('Upload cancelled');       \r\n    }\r\n   validation =()=>{\r\n           if(this.state.selectedFile1!==null || this.state.selectedFile2!==null || this.state.selectedFile3!==null)\r\n               return true;\r\n           else\r\n               return false;  \r\n    }\r\n    removeFile=(id)=>e=>{\r\n      if(id===1)\r\n        {\r\n          this.setState({      \r\n            selectedFile1:null,       \r\n            Is_Image1:false,    \r\n            carousel_1:'', \r\n   \r\n        });\r\n      }\r\n      else if(id===2)\r\n      {\r\n        \r\n          this.setState({            \r\n            selectedFile2:null,   \r\n            Is_Image2:false,\r\n            carousel_2:'',\r\n       \r\n        });\r\n\r\n      }\r\n      else if(id===3)\r\n      {\r\n        \r\n          this.setState({            \r\n            selectedFile3:null,   \r\n            Is_Image3:false,\r\n            carousel_3:'',\r\n       \r\n        });\r\n\r\n      }\r\n\r\n    }\r\n    render() {\r\n\r\n        const { crop, profile_pic, src1,src2,src3 } = this.state\r\n        const {uploadPercentage} = this.state;\r\n        return (\r\n            <>\r\n            <ProfileHeader/>\r\n\r\n                    <div className=\"direct-access\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                             \r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"heading\">\r\n                                            <h3>Add an image carousel to your page</h3>\r\n                                            <p></p>\r\n                                            <a href=\"/me\" className=\"btnCropSave\" style={{marginTop:'10px'}}>              \r\n                                                <ArrowBackIcon/>\r\n                                                Back to Profile\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n                                \r\n                                    <div className=\"col-md-4\">\r\n                                        <div className=\"item\">                            \r\n                                            <label htmlFor=\"upImage1\" className=\"up-img\">\r\n                                                <div className=\"carosule-image\">\r\n                                                <button onClick={this.removeFile(1)} className=\"removeCarousel\">X</button>\r\n                                                    {\r\n                                                        this.state.Is_Image1===true ?\r\n                                                        <img src={this.state.carousel_1} />\r\n                                                        :\r\n                                                        <img src={'images/choose_img1.jpg'} />\r\n\r\n                                                    }\r\n                                            \r\n                                                </div>\r\n\r\n                                                {/* accept=\"image/png, image/jpeg,image/gif\" onChange={this.handleFile} /> */}\r\n                                                <input type=\"file\" id=\"upImage1\" accept=\"image/png, image/jpeg,image/jpg,image/gif\" \r\n                                                onChange={this.handleFile(1)} style={{ display: \"none\" }} />\r\n                                            </label>\r\n                                            <input type=\"text\" class=\"form-control\" name=\"carousel_title_1\" value={this.state.carousel_title_1} \r\n                                            onChange={this.onchangeTitle} placeholder=\"Enter Title\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-4\">\r\n                                        <div className=\"item\">                            \r\n                                            <label htmlFor=\"upImage2\" className=\"up-img\">\r\n                                                <div className=\"carosule-image\">\r\n                                                   <button onClick={this.removeFile(2)} className=\"removeCarousel\">X</button>\r\n                                                    {\r\n                                                        this.state.Is_Image2===true ?\r\n                                                        <img src={this.state.carousel_2} />\r\n                                                        :\r\n                                                        <img src={'images/choose_img2.jpg'} />\r\n\r\n                                                    }\r\n                                            \r\n                                                </div>\r\n                                                <input type=\"file\" id=\"upImage2\" accept=\"image/png, image/jpeg,image/jpg,image/gif\"\r\n                                                     onChange={this.handleFile(2)} style={{ display: \"none\" }} />\r\n                                            </label>\r\n                                            <input type=\"text\" class=\"form-control\" name=\"carousel_title_2\" value={this.state.carousel_title_2} \r\n                                            onChange={this.onchangeTitle} placeholder=\"Enter Title\"/>\r\n                                            \r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-4\">\r\n                                        <div className=\"item\">                            \r\n                                            <label htmlFor=\"upImage3\" className=\"up-img\">\r\n                                                <div className=\"carosule-image\">\r\n                                                <button onClick={this.removeFile(3)} className=\"removeCarousel\">X</button>\r\n                                                    {\r\n                                                        this.state.Is_Image3===true ?\r\n                                                        <img src={this.state.carousel_3} />\r\n                                                        :\r\n                                                        <img src={'images/choose_img3.jpg'} />\r\n\r\n                                                    }\r\n                                                </div>\r\n                                                <input type=\"file\" id=\"upImage3\" accept=\"image/png, image/jpeg,image/jpg,image/gif\" \r\n                                                 onChange={this.handleFile(3)} style={{ display: \"none\" }} />\r\n                                            </label>\r\n                                            <input type=\"text\" class=\"form-control\" name=\"carousel_title_3\" value={this.state.carousel_title_3} \r\n                                            onChange={this.onchangeTitle} placeholder=\"Enter Title\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 offset-md-3 \">                               \r\n                                            {/* carousel */}\r\n                                            <div className=\"Carousel-box\" style={{display:'block'}}>\r\n                                                    <RBCarousel\r\n                                                        animation={true}\r\n                                                        autoplay={true}\r\n                                                        slideshowSpeed={2000}\r\n                                                        defaultActiveIndex={0}\r\n                                                        leftIcon={this.state.leftIcon}\r\n                                                        rightIcon={this.state.rightIcon}\r\n                                                        onSelect={this._onSelect}\r\n                                                        ref={this.slider}\r\n                                                        version={4}\r\n                                                    >\r\n                                                        <div className=\"item\">\r\n                                                        \r\n                                                            {\r\n                                                                this.state.Is_Image1===true ?\r\n                                                                <img src={this.state.carousel_1} />\r\n                                                                :\r\n                                                                <img\r\n                                                                src=\"../images/sample_car_image.jpg\" alt=\"image1\"\r\n                                                            />\r\n\r\n                                                            }\r\n                                                               <div className={\"overlay\"}> \r\n                                                                    <span>\r\n                                                                         {this.state.carousel_title_1===''?'Carousel Title 1' : this.state.carousel_title_1}\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                        </div>\r\n                                                        <div className=\"item\">\r\n                                                            {\r\n                                                                this.state.Is_Image2===true ?                                                           \r\n                                                                <img src={this.state.carousel_2} />  \r\n                                                                :\r\n                                                                <img\r\n                                                                src=\"../images/sample_car_image.jpg\" alt=\"image2\"\r\n                                                                />\r\n\r\n                                                            } \r\n                                                            <div className={\"overlay\"}> \r\n                                                                <span>\r\n                                                                    {this.state.carousel_title_2 ===''?'Carousel Title 2' : this.state.carousel_title_2}\r\n                                                                </span>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                        <div className=\"item\">\r\n                                                            {\r\n                                                                this.state.Is_Image3===true ?\r\n                                                                <img src={this.state.carousel_3} />\r\n                                                                :\r\n                                                                <img\r\n                                                                src=\"../images/sample_car_image.jpg\" alt=\"image3\"\r\n                                                                />\r\n\r\n                                                            }\r\n                                                             <div className={\"overlay\"}>\r\n                                                                     <span>\r\n                                                                         {this.state.carousel_title_3===''?'Carousel Title 3' : this.state.carousel_title_3}                                                                 \r\n                                                                    </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        </RBCarousel>\r\n                                                </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <button className=\"save-carosule\"  onClick={this.saveCarousel}>Save Carousel</button>\r\n                                    </div>\r\n                                    { \r\n                                            uploadPercentage > 0 && \r\n                                            <>\r\n                                                <ProgressBar animated  variant=\"success\" style={{width:'80%',margin: '15px'}} now={uploadPercentage} active label={`${uploadPercentage}%`} /> \r\n                                                <span  style={{cursor:'pointer'}}  onClick={this.cancelUpload}>\r\n                                                    <i className=\"fa fa-close\" style={{fontSize:'22px',marginTop: '56%'}}></i>\r\n                                                </span>\r\n                                            </>\r\n                                    }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                            \r\n\r\n\r\n        {/* image crop modal */}\r\n        <Modal\r\n          show={this.state.openCropModal_1}\r\n          onHide={() => this.setState({ openCropModal_1: false })}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-sm\" style={{ fontSize: '15px' }}>\r\n              Crop and Save\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n          \r\n              <div className=\"cropp-image\" >\r\n                {src1 && (\r\n                  <ReactCrop\r\n                    src={src1}\r\n                    crop={crop}\r\n                    id={1}\r\n                    onImageLoaded={this.onImageLoaded}\r\n                    onComplete={this.onCropComplete}\r\n                    onChange={this.onCropChange}\r\n                  />\r\n                )}\r\n\r\n              </div>\r\n\r\n              <button className=\"btnCropSave\"   onClick={this.uploadPic(1)}>Okay</button>\r\n\r\n            {uploadPercentage > 0 && <ProgressBar animated variant=\"success\" style={{ width: '100%' }} now={uploadPercentage} active label={`${uploadPercentage}%`} />}\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n {/* image crop modal 2*/}\r\n <Modal\r\n          show={this.state.openCropModal_2}\r\n          onHide={() => this.setState({ openCropModal_2: false })}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-sm\" style={{ fontSize: '15px' }}>\r\n              Crop and Save\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n          \r\n              <div className=\"cropp-image\" >\r\n                {src2 && (\r\n                  <ReactCrop\r\n                    src={src2}\r\n                    crop={crop}             \r\n                    onImageLoaded={this.onImageLoaded}\r\n                    onComplete={this.onCropComplete}\r\n                    onChange={this.onCropChange}\r\n                  />\r\n                )}\r\n\r\n              </div>\r\n\r\n              <button className=\"btnCropSave\"   onClick={this.uploadPic(2)}>Okay</button>\r\n\r\n            {uploadPercentage > 0 && <ProgressBar animated variant=\"success\" style={{ width: '100%' }} now={uploadPercentage} active label={`${uploadPercentage}%`} />}\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n\r\n{/* image crop modal 3*/}\r\n<Modal\r\n          show={this.state.openCropModal_3}\r\n          onHide={() => this.setState({ openCropModal_3: false })}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-sm\" style={{ fontSize: '15px' }}>\r\n              Crop and Save\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n          \r\n              <div className=\"cropp-image\" >\r\n                {src3 && (\r\n                  <ReactCrop\r\n                    src={src3}\r\n                    crop={crop}             \r\n                    onImageLoaded={this.onImageLoaded}\r\n                    onComplete={this.onCropComplete}\r\n                    onChange={this.onCropChange}\r\n                  />\r\n                )}\r\n\r\n              </div>\r\n\r\n              <button className=\"btnCropSave\"   onClick={this.uploadPic(3)}>Okay</button>\r\n\r\n            {uploadPercentage > 0 && <ProgressBar animated variant=\"success\" style={{ width: '100%' }} now={uploadPercentage} active label={`${uploadPercentage}%`} />}\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n\r\n\r\n              <FooterClass/>\r\n          <ToastAlert title={this.state.title} hideToast={this.hideToast} \r\n            msg={this.state.msg} show={this.state.show} \r\n            image={this.state.logo} showToast={this.showToast}/>\r\n        </>\r\n        );\r\n    }\r\n}\r\n\r\nImageCarousel.propTypes = {\r\n\r\n};\r\n\r\nexport default ImageCarousel;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\DragableList.js",[],"E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\EditImageCarousel.js",["2109","2110","2111","2112","2113","2114","2115","2116","2117","2118","2119","2120","2121","2122","2123"],"import React, { Component } from 'react';\r\n\r\nimport RBCarousel from \"react-bootstrap-carousel\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\r\nimport ProfileHeader from '../header_footer/ProfileHeader';\r\nimport FooterClass from '../header_footer/FooterClass';\r\nimport ToastAlert from './ToastAlert';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport axios, { isCancel } from \"axios\";\r\nimport {ProgressBar} from 'react-bootstrap';\r\nimport API from '../services/API';\r\nimport cryptoRandomString from 'crypto-random-string';\r\nimport ReactCrop from 'react-image-crop'\r\nimport 'react-image-crop/dist/ReactCrop.css'\r\nimport Modal from 'react-bootstrap/Modal'\r\nclass EditImageCarousel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n      \r\n        this.state = {       \r\n           JM_Email: localStorage.getItem('JM_Email'),\r\n           JM_ID: parseInt(localStorage.getItem('JM_ID')),      \r\n           JM_User_Profile_Url: localStorage.getItem('JM_User_Profile_Url'), \r\n           profileFolder: localStorage.getItem('JM_User_Profile_Url') +\"_\"+ parseInt(localStorage.getItem('JM_ID')),\r\n           showAlert:false,   \r\n           title:'',\r\n           msg:'',\r\n           base_url: process.env.REACT_APP_API_URL,\r\n           root_url: process.env.REACT_APP_ROOT_URL,\r\n           carousel_1:'',\r\n           carousel_2:'',\r\n           carousel_3:'',\r\n           selectedFile1:null,\r\n           selectedFile2:null,\r\n           selectedFile3:null,\r\n           Is_Image1:false, \r\n           Is_Image2:false, \r\n           Is_Image3:false, \r\n           uploadPercentage: 0,\r\n           BtnName:'Save Carousel',\r\n           show: false,\r\n           title:'',\r\n           msg:'',\r\n           productDetails:this.props.location.state.productDetails,\r\n           carousel_title_1:'', \r\n           carousel_title_2:'',\r\n           carousel_title_3:'',\r\n\r\n           openCropModal_1:false,        \r\n           openCropModal_2:false,     \r\n           openCropModal_3:false,            \r\n           src1: null,  src2: null,  src3: null,\r\n           crop: {\r\n             unit: \"%\",\r\n             width: 30,\r\n             aspect: 1 / 1\r\n           },\r\n        \r\n        }\r\n    }\r\n\r\n  \r\n\r\n    componentDidMount() \r\n    {\r\n        //console.log(this.props.location.state.productDetails)\r\n        const carousel=this.props.location.state.productDetails;\r\n\r\n        this.setState({\r\n            carousel_1:carousel.carousel_1!=='NA' ? process.env.REACT_APP_UPLOAD_URL+carousel.carousel_1: '',\r\n            carousel_2:carousel.carousel_2!=='NA' ? process.env.REACT_APP_UPLOAD_URL+carousel.carousel_2:'',\r\n            carousel_3:carousel.carousel_3!=='NA' ? process.env.REACT_APP_UPLOAD_URL+carousel.carousel_3:'',\r\n            Is_Image1:carousel.carousel_1==='NA' ? false :true, \r\n            Is_Image2:carousel.carousel_2==='NA' ? false :true, \r\n            Is_Image3:carousel.carousel_3==='NA' ? false :true, \r\n            carousel_title_1:carousel.carousel_title_1.replace('<>', \"'\"),\r\n            carousel_title_2:carousel.carousel_title_2.replace('<>', \"'\"),\r\n            carousel_title_3:carousel.carousel_title_3.replace('<>', \"'\"),\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n //===starting of crop image1\r\n\r\n handleFile=id=> e => {\r\n    const fileReader = new FileReader()\r\n    if (e.target.files !== null && e.target.files.length > 0) \r\n    {\r\n      fileReader.onloadend = () => \r\n      {\r\n          if(id===1)\r\n             this.setState({ src1: fileReader.result })\r\n             else  if(id===2) \r\n            this.setState({ src2: fileReader.result })\r\n            else  if(id===3) \r\n             this.setState({ src3: fileReader.result })\r\n      }\r\n      fileReader.readAsDataURL(e.target.files[0])\r\n      if(id===1)\r\n            this.setState({ openCropModal_1: true })\r\n      else if(id===2)\r\n            this.setState({ openCropModal_2: true })\r\n      else if(id===3)\r\n            this.setState({ openCropModal_3: true })\r\n     }\r\n  }\r\n\r\n  onImageLoaded = image => {\r\n    this.imageRef = image\r\n  }\r\n\r\n  onCropChange = (crop)=> {\r\n    \r\n    this.setState({ crop });\r\n  }\r\n\r\n  onCropComplete = (crop) => {\r\n    if (this.imageRef && crop.width && crop.height)\r\n     {\r\n      const croppedImageUrl = this.getCroppedImg(this.imageRef, crop)\r\n      this.setState({ croppedImageUrl })\r\n    }\r\n  }\r\n\r\n  getCroppedImg(image, crop) {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n\r\n    let targetWidth=0;\r\n    let targetHeight=0;\r\n    if(image.naturalWidth > 1200)\r\n    {\r\n       targetWidth=1200;\r\n       targetHeight=1200;\r\n    }\r\n    else\r\n    {\r\n      targetWidth=crop.width;\r\n      targetHeight=crop.height;   \r\n    } \r\n\r\n\r\n    canvas.width = targetWidth;\r\n    canvas.height = targetHeight;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      targetWidth,\r\n      targetHeight\r\n    )\r\n\r\n    const reader = new FileReader()\r\n    canvas.toBlob(blob => \r\n    {\r\n      let r = cryptoRandomString({ length: 30 });\r\n      //console.log(\"random\", r);\r\n      reader.readAsDataURL(blob)\r\n      reader.onloadend = () => {\r\n        this.dataURLtoFile(reader.result, r + '.jpg')\r\n      }\r\n    })\r\n  }\r\n  \r\n  dataURLtoFile(dataurl, filename) {\r\n    let arr = dataurl.split(','),\r\n      mime = arr[0].match(/:(.*?);/)[1],\r\n      bstr = atob(arr[1]),\r\n      n = bstr.length,\r\n      u8arr = new Uint8Array(n);\r\n\r\n    while (n--) {\r\n      u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    let croppedImage = new File([u8arr], filename, { type: mime });\r\n   // console.log(croppedImage)\r\n    if(this.state.openCropModal_1===true)\r\n    {\r\n        this.setState({\r\n            croppedImage1 : croppedImage,\r\n            carousel_1: URL.createObjectURL(croppedImage),\r\n            selectedFile1: croppedImage \r\n       })\r\n    }\r\n  else  if(this.state.openCropModal_2===true)\r\n    {\r\n        this.setState({\r\n            croppedImage2 : croppedImage,\r\n           carousel_2: URL.createObjectURL(croppedImage),\r\n           selectedFile2: croppedImage \r\n       })\r\n    }\r\n  else  if(this.state.openCropModal_3===true)\r\n    {\r\n        this.setState({\r\n            croppedImage3 : croppedImage,\r\n           carousel_3: URL.createObjectURL(croppedImage),\r\n           selectedFile3: croppedImage   \r\n       })\r\n    }\r\n     \r\n  }\r\n\r\n\r\n  uploadPic=id=>e=>{  \r\n      if(id===1) \r\n      {\r\n        this.setState({ \r\n            Is_Image1: true,openCropModal_1:false,     \r\n        })\r\n      }\r\n      if(id===2) \r\n      {\r\n        this.setState({ \r\n            Is_Image2: true,openCropModal_2:false,     \r\n        })\r\n      }\r\n      if(id===3) \r\n      {\r\n        this.setState({ \r\n            Is_Image3: true,openCropModal_3:false,     \r\n        })\r\n      }\r\n  }\r\n  //===end of crop image1\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    onchangeTitle=(e)=>{\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    showToast = (title,msg)=> {\r\n        this.setState({ show: true,title,msg })\r\n      }\r\n      hideToast = () => {\r\n        this.setState({ show: false })\r\n      }\r\n    imageOnChange=id=>e=>{\r\n        const file = e.target.files[0];\r\n        if(typeof file!=='undefined' && file!==null)\r\n        {\r\n            if(id===1)\r\n            {\r\n                this.setState({ selectedFile1: e.target.files[0] }); \r\n                this.setState({\r\n                carousel_1: URL.createObjectURL(file),  \r\n                Is_Image1:true \r\n                });  \r\n            }\r\n           else if(id===2)\r\n            {\r\n                this.setState({ selectedFile2: e.target.files[0] }); \r\n                this.setState({\r\n                carousel_2: URL.createObjectURL(file),   \r\n                Is_Image2:true ,\r\n                });  \r\n            }\r\n            else\r\n            {\r\n                this.setState({ selectedFile3: e.target.files[0] }); \r\n                this.setState({\r\n                carousel_3: URL.createObjectURL(file),  \r\n                Is_Image3:true, \r\n                }); \r\n            }\r\n        }\r\n      \r\n    }\r\n    saveCarousel=(e)=>{\r\n        e.preventDefault();\r\n        let isValid=this.validation();\r\n        if(isValid)\r\n        {\r\n                var carousel_title_1 ='';\r\n                var carousel_title_2='';  \r\n                var carousel_title_3 ='';  \r\n\r\n                const formData = new FormData(); \r\n                let Api_url=this.state.base_url+'admin/updateImageCarousel';\r\n            // let Api_url='http://localhost:9000/admin/addProduct';\r\n                if(this.state.selectedFile1 !==null && this.state.carousel_1!=='' )\r\n                {  \r\n                    formData.append('carousel_1', this.state.selectedFile1);  \r\n                              \r\n                }\r\n                if(this.state.selectedFile2 !==null && this.state.carousel_2!=='' )\r\n                {  \r\n                    formData.append('carousel_2', this.state.selectedFile2);     \r\n                      \r\n                }\r\n                if(this.state.selectedFile3 !==null && this.state.carousel_3!=='')\r\n                {   \r\n                    formData.append('carousel_3', this.state.selectedFile3)\r\n                   \r\n                }\r\n         \r\n\r\n             \r\n                carousel_title_1 = this.state.carousel_title_1.replace(/\\'/g, \"\\\\'\");   \r\n                carousel_title_2 = this.state.carousel_title_2.replace(/\\'/g, \"\\\\'\");   \r\n                carousel_title_3 = this.state.carousel_title_3.replace(/\\'/g, \"\\\\'\");  \r\n\r\n        \r\n\r\n                formData.append('carousel_title_1', carousel_title_1); \r\n                formData.append('carousel_title_2', carousel_title_2); \r\n                formData.append('carousel_title_3', carousel_title_3); \r\n\r\n            formData.append('DA_ID', this.state.productDetails.tableId); \r\n            formData.append('DA_Type', 'image'); \r\n            formData.append('DA_DA_ID', 4) // for premium featured id\r\n            formData.append('JM_ID', this.state.JM_ID)         \r\n            formData.append('DA_Title', 'image carousel')  \r\n            formData.append('DA_Description', '')  \r\n            formData.append('DA_Cover', \"\") \r\n            formData.append('DA_Price', 0)      \r\n            formData.append('JM_User_Profile_Url_plus_JM_ID',this.state.JM_User_Profile_Url + \"_\" + this.state.JM_ID)\r\n            \r\n           \r\n            const CancelToken = axios.CancelToken;\r\n            const source = CancelToken.source();\r\n            const options = {\r\n              onUploadProgress: (progressEvent) => \r\n              {\r\n                const {loaded, total} = progressEvent;\r\n                let percent = Math.floor( (loaded * 100) / total )\r\n                //console.log( `${loaded}kb of ${total}kb | ${percent}% wait...` );\r\n    \r\n                if( percent < 100 )\r\n                {\r\n                  this.setState({ uploadPercentage: percent })\r\n                }\r\n              },\r\n              cancelToken: source.token,\r\n              headers: {\r\n                \"authorization\": API.getAuth(),\"id\":API.getId()\r\n              },\r\n            }\r\n       \r\n           this.setState({BtnName:'Uploading..',disabledBtn:true});\r\n            axios.post(Api_url, formData, options).then(res =>\r\n            { \r\n              //console.log(res)\r\n              if(res.data.status > 0)\r\n              {\r\n                 this.setState({videoFile:null,videoData:'NA',audioFile:null,audioData:''});\r\n                 this.fileArray=[];     \r\n                \r\n                 this.setState({ avatar: res.data.url, uploadPercentage: 100 }, ()=>{\r\n                  setTimeout(() => {\r\n                    this.setState({ uploadPercentage: 0 })\r\n                  }, 1000);\r\n                })            \r\n                   \r\n                 this.showToast('success','Image Carousel is updated to profile');                     \r\n                 this.setState({\r\n                     disabledBtn:false,BtnName:'Save',                   \r\n                \r\n                });\r\n              }\r\n              else\r\n              {\r\n                \r\n                this.showToast('error','internal error occurred'); \r\n                this.setState({disabledBtn:false,BtnName:'Save Carousel'});\r\n              }     \r\n               \r\n            })\r\n            .catch(err => \r\n            {\r\n              //console.log(err);             \r\n              if(isCancel(err)) \r\n              {\r\n                  //alert(err.message);\r\n                  this.showToast('canceled',err.message); \r\n                  this.setState({\r\n                          disabledBtn:false,BtnName:'Save Carousel',                        \r\n                    \r\n                    });\r\n                  this.setState({ uploadPercentage: 0 })\r\n              }\r\n              else\r\n              {\r\n            \r\n                this.showToast('error',err.response.status===404 ?'network connection error':'internal error occurred'); \r\n            \r\n                this.setState({\r\n                        disabledBtn:false,BtnName:'Save Carousel',                   \r\n                \r\n                });\r\n\r\n                this.setState({ uploadPercentage: 0 })\r\n              }\r\n          });\r\n        }\r\n        else\r\n        {\r\n          var msg=\"Nothing to update\"; \r\n          this.showToast('info',msg);           \r\n        }\r\n    }\r\n    cancelUpload = (e) => \r\n    {\r\n        this.state.source.cancel('Upload cancelled');       \r\n    }\r\n   validation =()=>{\r\n           if(this.state.selectedFile1!==null || this.state.carousel_1!=='' || \r\n            this.state.selectedFile2!==null || this.state.carousel_2!=='' ||\r\n            this.state.selectedFile3!==null || this.state.carousel_3!=='' )\r\n               return true;\r\n           else\r\n               return false;  \r\n    }\r\n\r\n    removeFile=(id)=> async e=>{\r\n       \r\n       var flagData={\r\n            DA_ID:this.state.productDetails.tableId,\r\n            order:id\r\n        }\r\n        const flag=await API.encryptData(flagData)\r\n        var  JSONdata={\r\n                flag:flag           \r\n            }\r\n            const data = await API.postData(JSONdata,'removeCarouselImg');\r\n            if(data.status===1)\r\n            {\r\n                if(id===1)\r\n                {\r\n                    this.setState({      \r\n                        selectedFile1:null,       \r\n                        Is_Image1:false,    \r\n                        carousel_1:'',      \r\n                    });\r\n                    \r\n                }\r\n                else if(id===2)\r\n                {\r\n                    \r\n                    this.setState({            \r\n                        selectedFile2:null,   \r\n                        Is_Image2:false,\r\n                        carousel_2:'',\r\n                \r\n                    });\r\n            \r\n                }\r\n                else if(id===3)\r\n                {\r\n                    \r\n                    this.setState({            \r\n                        selectedFile3:null,   \r\n                        Is_Image3:false,\r\n                        carousel_3:'',         \r\n                    });\r\n                }\r\n            }\r\n      }\r\n    render() {\r\n        const { crop, profile_pic, src1,src2,src3 } = this.state\r\n        const {uploadPercentage} = this.state;\r\n        return (\r\n            <>\r\n            <ProfileHeader/>\r\n\r\n                    <div className=\"direct-access\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                             \r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"heading\">\r\n                                            <h3>Update image carousel to your page</h3>\r\n                                            <p></p>\r\n                                            <a href=\"/me\" className=\"btnCropSave\" style={{marginTop:'10px'}}>              \r\n                                                <ArrowBackIcon/>\r\n                                                Back to Profile\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n                                \r\n                                    <div className=\"col-md-4\">\r\n                                        <div className=\"item\">                            \r\n                                            <label htmlFor=\"upImage1\" className=\"up-img\">\r\n                                                <div className=\"carosule-image\">\r\n                                                <button onClick={this.removeFile(1)} className=\"removeCarousel\">X</button>\r\n                                                    {\r\n                                                        this.state.Is_Image1===true ?\r\n                                                        <img src={this.state.carousel_1} />\r\n                                                        :\r\n                                                        <img src={'images/choose_img1.jpg'} />\r\n\r\n                                                    }\r\n                                            \r\n                                                </div>\r\n                                                <input type=\"file\" id=\"upImage1\" accept=\"image/png, image/jpeg,image/jpg,image/gif\" \r\n                                                  onChange={this.handleFile(1)} style={{ display: \"none\" }} />\r\n                                            </label>\r\n                                            <input type=\"text\" class=\"form-control\" name=\"carousel_title_1\" value={this.state.carousel_title_1} \r\n                                            onChange={this.onchangeTitle} placeholder=\"Enter Title\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-4\">\r\n                                        <div className=\"item\">                            \r\n                                            <label htmlFor=\"upImage2\" className=\"up-img\">\r\n                                                <div className=\"carosule-image\">\r\n                                                <button onClick={this.removeFile(2)} className=\"removeCarousel\">X</button>\r\n                                                    {\r\n                                                        this.state.Is_Image2===true ?\r\n                                                        <img src={this.state.carousel_2} />\r\n                                                        :\r\n                                                        <img src={'images/choose_img2.jpg'} />\r\n\r\n                                                    }\r\n                                            \r\n                                                </div>\r\n                                                <input type=\"file\" id=\"upImage2\" accept=\"image/png, image/jpeg,image/jpg,image/gif\"\r\n                                                  onChange={this.handleFile(2)}  style={{ display: \"none\" }} />\r\n                                            </label>\r\n                                            <input type=\"text\" class=\"form-control\" name=\"carousel_title_2\" value={this.state.carousel_title_2} \r\n                                            onChange={this.onchangeTitle} placeholder=\"Enter Title\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-4\">\r\n                                        <div className=\"item\">                            \r\n                                            <label htmlFor=\"upImage3\" className=\"up-img\">\r\n                                                <div className=\"carosule-image\">\r\n                                                <button onClick={this.removeFile(3)} className=\"removeCarousel\">X</button>\r\n                                                    {\r\n                                                        this.state.Is_Image3===true ?\r\n                                                        <img src={this.state.carousel_3} />\r\n                                                        :\r\n                                                        <img src={'images/choose_img3.jpg'} />\r\n\r\n                                                    }\r\n                                                </div>\r\n                                                <input type=\"file\" id=\"upImage3\" accept=\"image/png, image/jpeg,image/jpg,image/gif\" \r\n                                                   onChange={this.handleFile(3)} style={{ display: \"none\" }} />\r\n                                            </label>\r\n                                            <input type=\"text\" class=\"form-control\" name=\"carousel_title_3\" value={this.state.carousel_title_3} \r\n                                            onChange={this.onchangeTitle} placeholder=\"Enter Title\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 offset-md-3 \">                               \r\n                                            {/* carousel */}\r\n                                            <div className=\"Carousel-box\" style={{display:'block'}}>\r\n                                                    <RBCarousel\r\n                                                        animation={true}\r\n                                                        autoplay={true}\r\n                                                        slideshowSpeed={2000}\r\n                                                        defaultActiveIndex={0}\r\n                                                        leftIcon={this.state.leftIcon}\r\n                                                        rightIcon={this.state.rightIcon}\r\n                                                        onSelect={this._onSelect}\r\n                                                        ref={this.slider}\r\n                                                        version={4}\r\n                                                    >\r\n                                                        <div className=\"item\">\r\n                                                        \r\n                                                            {\r\n                                                                this.state.Is_Image1===true ?\r\n                                                                <img src={this.state.carousel_1} />\r\n                                                                :\r\n                                                                <img\r\n                                                                src=\"../images/sample_car_image.jpg\" alt=\"image1\"\r\n                                                            />\r\n\r\n                                                            }\r\n                                                             <div className={\"overlay\"}> \r\n                                                                    <span>\r\n                                                                         {this.state.carousel_title_1===''?'Carousel Title 1' : this.state.carousel_title_1}\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                        </div>\r\n                                                        <div className=\"item\">\r\n                                                            {\r\n                                                                this.state.Is_Image2===true ?\r\n                                                                <img src={this.state.carousel_2} />\r\n                                                                :\r\n                                                                <img\r\n                                                                src=\"../images/sample_car_image.jpg\" alt=\"image2\"\r\n                                                            />\r\n\r\n                                                            }\r\n                                                            <div className={\"overlay\"}> \r\n                                                                <span>\r\n                                                                    {this.state.carousel_title_2 ===''?'Carousel Title 2' : this.state.carousel_title_2}\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"item\">\r\n                                                            {\r\n                                                                this.state.Is_Image3===true ?\r\n                                                                <img src={this.state.carousel_3} />\r\n                                                                :\r\n                                                                <img\r\n                                                                src=\"../images/sample_car_image.jpg\" alt=\"image3\"/>\r\n\r\n                                                            }\r\n                                                            <div className={\"overlay\"}>\r\n                                                                     <span>\r\n                                                                         {this.state.carousel_title_3===''?'Carousel Title 3' : this.state.carousel_title_3}                                                                 \r\n                                                                    </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        </RBCarousel>\r\n                                                </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <button className=\"save-carosule\"  onClick={this.saveCarousel}>Save Carousel</button>\r\n                                    </div>\r\n                                    { \r\n                                            uploadPercentage > 0 && \r\n                                            <>\r\n                                                <ProgressBar animated  variant=\"success\" style={{width:'80%',margin: '15px'}} now={uploadPercentage} active label={`${uploadPercentage}%`} /> \r\n                                                <span  style={{cursor:'pointer'}}  onClick={this.cancelUpload}>\r\n                                                    <i className=\"fa fa-close\" style={{fontSize:'22px',marginTop: '56%'}}></i>\r\n                                                </span>\r\n                                            </>\r\n                                    }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                                             \r\n\r\n\r\n        {/* image crop modal */}\r\n        <Modal\r\n          show={this.state.openCropModal_1}\r\n          onHide={() => this.setState({ openCropModal_1: false })}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-sm\" style={{ fontSize: '15px' }}>\r\n              Crop and Save\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n          \r\n              <div className=\"cropp-image\" >\r\n                {src1 && (\r\n                  <ReactCrop\r\n                    src={src1}\r\n                    crop={crop}\r\n                    id={1}\r\n                    onImageLoaded={this.onImageLoaded}\r\n                    onComplete={this.onCropComplete}\r\n                    onChange={this.onCropChange}\r\n                  />\r\n                )}\r\n\r\n              </div>\r\n\r\n              <button className=\"btnCropSave\"   onClick={this.uploadPic(1)}>Okay</button>\r\n\r\n            {uploadPercentage > 0 && <ProgressBar animated variant=\"success\" style={{ width: '100%' }} now={uploadPercentage} active label={`${uploadPercentage}%`} />}\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n {/* image crop modal 2*/}\r\n <Modal\r\n          show={this.state.openCropModal_2}\r\n          onHide={() => this.setState({ openCropModal_2: false })}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-sm\" style={{ fontSize: '15px' }}>\r\n              Crop and Save\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n          \r\n              <div className=\"cropp-image\" >\r\n                {src2 && (\r\n                  <ReactCrop\r\n                    src={src2}\r\n                    crop={crop}             \r\n                    onImageLoaded={this.onImageLoaded}\r\n                    onComplete={this.onCropComplete}\r\n                    onChange={this.onCropChange}\r\n                  />\r\n                )}\r\n\r\n              </div>\r\n\r\n              <button className=\"btnCropSave\"   onClick={this.uploadPic(2)}>Okay</button>\r\n\r\n            {uploadPercentage > 0 && <ProgressBar animated variant=\"success\" style={{ width: '100%' }} now={uploadPercentage} active label={`${uploadPercentage}%`} />}\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n\r\n{/* image crop modal 3*/}\r\n<Modal\r\n          show={this.state.openCropModal_3}\r\n          onHide={() => this.setState({ openCropModal_3: false })}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-sm\" style={{ fontSize: '15px' }}>\r\n              Crop and Save\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n          \r\n              <div className=\"cropp-image\" >\r\n                {src3 && (\r\n                  <ReactCrop\r\n                    src={src3}\r\n                    crop={crop}             \r\n                    onImageLoaded={this.onImageLoaded}\r\n                    onComplete={this.onCropComplete}\r\n                    onChange={this.onCropChange}\r\n                  />\r\n                )}\r\n\r\n              </div>\r\n\r\n              <button className=\"btnCropSave\"   onClick={this.uploadPic(3)}>Okay</button>\r\n\r\n            {uploadPercentage > 0 && <ProgressBar animated variant=\"success\" style={{ width: '100%' }} now={uploadPercentage} active label={`${uploadPercentage}%`} />}\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n\r\n\r\n\r\n\r\n\r\n              <FooterClass/>\r\n          <ToastAlert title={this.state.title} hideToast={this.hideToast} \r\n            msg={this.state.msg} show={this.state.show} \r\n            image={this.state.logo} showToast={this.showToast}/>\r\n        </>\r\n        );\r\n    }\r\n}\r\n\r\nEditImageCarousel.propTypes = {\r\n\r\n};\r\n\r\nexport default EditImageCarousel;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\profile\\facebook.js",[],"E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\NotificationRequest.js",["2124","2125","2126","2127","2128","2129","2130","2131","2132","2133","2134","2135","2136","2137","2138","2139","2140","2141","2142","2143","2144","2145","2146","2147","2148","2149"],"import React, { Component } from 'react';\r\n\r\nimport FooterClass from '../header_footer/FooterClass';\r\nimport ProfileHeader from '../header_footer/ProfileHeader_MS2_B1';\r\nimport ProfileNav from './ProfileNav';\r\nimport \"datatables.net-dt/js/dataTables.dataTables\";\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\";\r\nimport $ from 'jquery';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport * as queryString from 'query-string';\r\nimport { Helmet } from \"react-helmet\";\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport API from '../services/API'\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { \r\n    faSearch,\r\n    faExclamationCircle,faChevronRight,faChevronLeft\r\n  } from \"@fortawesome/free-solid-svg-icons\";\r\n// import config from 'config.json'\r\n\r\nclass NotificationRequest extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            allRequest:[],\r\n            newRequest:0, \r\n            openModel:false,\r\n            base_url: process.env.REACT_APP_API_URL,\r\n            root_url: process.env.REACT_APP_ROOT_URL,\r\n          \r\n            show:false,\r\n            open:false,\r\n            JM_ID:this.props.JM_ID,   \r\n            BM_Email:'',\r\n            BM_ID:'',\r\n            data:[],\r\n            selectedFile:null,\r\n            showSubmitBtn:false,\r\n            fileName:'',\r\n            openModelLiveVideo:false,\r\n            showLiveVideo:false,\r\n            session_date:API.GetCurDate(),\r\n            session_time:'',\r\n            session_time_end:'',\r\n            Asc:0,\r\n            dataLoading:true,\r\n            pendingRequest:0,\r\n            ddl_request:'',\r\n            searchByName:'',\r\n            searchByProduct:'',\r\n            showConfirmModal:false,\r\n            requestData:[],\r\n            ddl_id:'',\r\n            showPopUp:''\r\n\r\n        }\r\n      \r\n\r\n    }\r\n \r\n    async  Get_AllRequests(type)\r\n    {\r\n    var id = parseInt(localStorage.getItem('JM_ID'));  \r\n\r\n    var flagData={\r\n    JM_ID: id,\r\n    type:type\r\n    }\r\n    const flag=API.encryptData(flagData);      \r\n    let JSONdata={\r\n    flag:flag\r\n    }\r\n\r\n    const API_url = process.env.REACT_APP_API_URL+ \"admin/GetAllRequest_by_status\";\r\n    const response=await fetch(API_url,{\r\n    method: 'post',\r\n    headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n    body: JSON.stringify(JSONdata)\r\n    });\r\n    const data1=await response.json();\r\n    if(data1.status===1)\r\n    {\r\n\r\n    const data=API.decryptJson(data1.flag);\r\n    let items=data.allRequest;\r\n    let allRequest= items.sort(function (a, b) {\r\n    return b.BM_ID - a.BM_ID;\r\n    });\r\n\r\n    this.setState({\r\n    allRequest:allRequest,dataLoading:false ,ddl_request:type,\r\n    pendingRequest:data.pendingRequest!==null && data.pendingRequest.length > 0 ? data.pendingRequest[0].pendingRequest : 0,    \r\n    productList:data.productList\r\n    });\r\n\r\n    if(data.userDetails.length > 0)\r\n    {\r\n    this.setState({\r\n    JM_Name:data.userDetails[0].JM_Name,    \r\n    JM_User_Profile_Url:data.userDetails[0].JM_User_Profile_Url, \r\n\r\n    });\r\n    }\r\n    document.getElementById('ddl_request').value=type;\r\n    // console.log(this.state.ddl_request)\r\n    }            \r\n\r\n    }\r\n    componentDidMount() {   \r\n        $(document).ready(function() {\r\n            $('#right-button').on('click', function() {\r\n            //   event.preventDefault();\r\n                $('#content').animate({\r\n                    scrollLeft: \"+=700px\"\r\n                }, \"slow\");\r\n            });\r\n            $('#left-button').on('click', function() {\r\n                //   event.preventDefault();\r\n                $('#content').animate({\r\n                    scrollLeft: \"-=700px\"\r\n                  }, \"slow\");\r\n            });\r\n\r\n    });\r\n\r\n          this.Get_AllRequests('S'); \r\n    }\r\n    createJqueryTable=(tableId)=>\r\n    {\r\n    var isDataTable = $.fn.DataTable.isDataTable('#' + tableId);\r\n    //////console.log('isDataTable: ' + isDataTable); \r\n    var  table = $('#' + tableId).DataTable({ \r\n    destroy : true,\r\n    \"order\": [[ 3, \"asec\" ]], // for ordering desc\r\n    'iDisplayLength': 100\r\n\r\n    });\r\n    }\r\n\r\n\r\n\r\n    //MS3 B2\r\n    updateRequestStat=(BM_ID,data)=>e=>\r\n    {     \r\n\r\n         let Status=e.target.value;\r\n         let ddl_id=e.target.id; \r\n         if(Status==='D' || Status==='A')\r\n         {\r\n             this.setState({\r\n                 showConfirmModal:true,currentStatus:Status,requestData:data,ddl_id:ddl_id\r\n             })\r\n         }\r\n         else\r\n         {\r\n            this.setState({\r\n                showPopUp:'show-popup',currentStatus:Status,requestData:data,ddl_id:ddl_id\r\n            })\r\n         }\r\n         \r\n    }\r\n    updateRequestStatAfterConfirm=(e)=>{\r\n        const API_url = process.env.REACT_APP_API_URL + \"admin/updateRequestStat\"; \r\n        let Status=this.state.currentStatus;\r\n        let data=this.state.requestData;\r\n        let id=this.state.ddl_id;\r\n        if(Status==='D')\r\n        {\r\n\r\n           // this.isConfirm_Dec(Status,data,id)\r\n            this.doDeclined(data)\r\n        }\r\n        else if(Status==='A')\r\n        {\r\n                    let JSONdata = {};\r\n                    id = parseInt(localStorage.getItem('JM_ID'));   \r\n                    let flagData = {                           \r\n                            BM_ID: data.BM_ID,\r\n                            JM_ID:id,\r\n                            Status:Status,\r\n                            data:data\r\n                      };\r\n                  \r\n                    const flag=API.encryptData(flagData);                  \r\n                       JSONdata = {\r\n                        flag: flag\r\n                      };\r\n\r\n                    fetch(API_url,\r\n                    {\r\n                    method: 'post',\r\n                    headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n                    body: JSON.stringify(JSONdata)\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(data1 => {\r\n                    if (data1.status > 0) \r\n                    {\r\n                        this.setState({  dataLoading:true,    ddl_request:Status,\r\n                            searchByName:'',  searchByProduct:'',showConfirmModal:false})\r\n                            alert(\"Request is accepted\");\r\n                        this.Get_AllRequests(Status)\r\n                    }\r\n                });\r\n\r\n        }\r\n    }\r\n    closeConfirmModal=(e)=>{\r\n        document.getElementById(this.state.ddl_id).value=this.state.requestData.Status;\r\n        this.setState({showConfirmModal:false,ddl_id:'',currentStatus:'',requestData:[]})\r\n    }\r\n\r\n    closeCompleteModal=e=>{\r\n    this.setState({openModel:false,show:false});    \r\n    window.location.reload();\r\n\r\n    }\r\n    closeLiveVideoModal=e=>{\r\n    this.setState({openModelLiveVideo:false,showLiveVideo:false});    \r\n    window.location.reload();\r\n\r\n    }\r\n    openCompleteModal=(data)=>e=>{\r\n    var type=e.target.value;\r\n    //console.log(data);\r\n    if(type==='C')\r\n    {\r\n    if(data.DA_DA_ID===1)\r\n    {\r\n    this.setState({openModel:true,show:true,data});\r\n    }\r\n    else \r\n    {\r\n    this.setState({openModelLiveVideo:true,showLiveVideo:true,data});\r\n    }\r\n    }              \r\n    else if(type==='D')\r\n    this.doDeclined(data);\r\n\r\n    }\r\n    //26-jul-2021\r\n    openCompleteVideoModal=(data)=>e=>{\r\n    var type=e.target.value;        \r\n    var id=e.target.id;   \r\n    this.isConfirm(type,data,id)\r\n\r\n    }\r\n    isConfirm = (type,data,id) => {\r\n\r\n    if(type==='C')\r\n    {\r\n\r\n    confirmAlert({\r\n    title: 'Confirm Change',\r\n    message: 'Are you sure you want to complete the request?',\r\n    buttons: [\r\n    {\r\n    label: 'Yes',\r\n    onClick: () => this.DoCompleteRequest(data,id)\r\n    },\r\n    {\r\n    label: 'No',\r\n    onClick: () => document.getElementById(id).value='A'\r\n    }\r\n    ],\r\n    closeOnEscape: false,\r\n    closeOnClickOutside: false,\r\n    });\r\n    }\r\n    else if(type==='D')\r\n    {\r\n    confirmAlert({\r\n    title: 'Confirm Decline',\r\n    message: 'Are you sure you want to decline the request?',\r\n    buttons: [\r\n    {\r\n    label: 'Yes',\r\n    onClick: () => this.doDeclined(data)\r\n    },\r\n    {\r\n    label: 'No',\r\n    onClick: () => document.getElementById(id).value='A'\r\n    }\r\n    ],\r\n    closeOnEscape: false,\r\n    closeOnClickOutside: false,\r\n    });\r\n    }\r\n    };\r\n    isConfirm_Dec = (type,data,id) => {\r\n\r\n    if(type==='D')\r\n    {\r\n    confirmAlert({\r\n    title: 'Confirm Decline',\r\n    message: 'Are you sure you want to decline the request?',\r\n    buttons: [\r\n    {\r\n    label: 'Yes',\r\n    onClick: () => this.doDeclined(data)\r\n    },\r\n    {\r\n    label: 'No',\r\n    onClick: () => document.getElementById(id).value='P'\r\n    }\r\n    ],\r\n    closeOnEscape: false,\r\n    closeOnClickOutside: false,\r\n    });\r\n    }\r\n    };\r\n    DoCompleteRequest=async(data,id)=>{\r\n    //////console.log(data)\r\n    // /video_rq_complete\r\n\r\n\r\n    var flagData={\r\n    data:data\r\n    }\r\n    const flag=API.encryptData(flagData);\r\n\r\n    var JSONdata={\r\n    flag:flag\r\n    }\r\n\r\n    const response=await API.postData(JSONdata,\"video_rq_complete\");          \r\n    if (response.status === 1) \r\n    {    \r\n    alert('Request is Completed');\r\n    window.location.reload();\r\n    }\r\n    else if(response.status === 2) \r\n    {    \r\n    alert('Unable to complete request before completion date');\r\n    document.getElementById(id).value='A'\r\n    }\r\n    else\r\n    alert('internal error');\r\n\r\n    }    \r\n\r\n    doDeclined=(data)=>{\r\n\r\n        var flagData={\r\n        BM_ID: data.BM_ID,\r\n        paymentId:data.Payment_ID,\r\n        data:data\r\n        }\r\n        const flag=API.encryptData(flagData);\r\n\r\n        var JSONdata={\r\n        flag:flag\r\n        }\r\n\r\n    if(isNaN(parseInt(data.isFree))===false && parseInt(data.isFree)===1)\r\n    {\r\n    const API_url = this.state.base_url + \"admin/declinedFree\";\r\n    fetch(API_url,\r\n    {\r\n    method: 'post',\r\n    headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n    body: JSON.stringify(JSONdata)\r\n    })\r\n    .then((response) => response.json())\r\n    .then(data => {\r\n    if (data.status === 1) \r\n    {    \r\n        alert('Request is Declined');\r\n        window.location.reload();\r\n    }\r\n    else\r\n    alert('internal error');\r\n    });\r\n    }\r\n\r\n    else if(data.isFree===0)\r\n    {\r\n    const API_url = this.state.base_url + \"admin/refund\";\r\n\r\n    fetch(API_url,\r\n    {\r\n    method: 'post',\r\n    headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n    body: JSON.stringify(JSONdata)\r\n    })\r\n    .then((response) => response.json())\r\n    .then(data => {\r\n    if (data.status === 1) \r\n    {    \r\n    alert('Request is Declined');\r\n    window.location.reload();\r\n    }\r\n    else\r\n    alert('internal error');\r\n    });\r\n    }\r\n\r\n    }\r\n\r\n    fileOnChange=(e)=>{\r\n    this.setState({ audioData: '' }); \r\n    const file = e.target.files[0];\r\n        if(typeof file!=='undefined')\r\n        {\r\n        const name = e.target.files[0].name;\r\n        const lastDot = name.lastIndexOf('.');        \r\n        const fileName = name.substring(0, lastDot);\r\n        const ext = name.substring(lastDot + 1);\r\n\r\n        const allowedExtension = ['mp3','mp4','mov'];\t\t\t\r\n        if(!allowedExtension.includes(ext))\r\n        {\r\n            document.getElementById(\"msg\").style.color='red';\r\n            document.getElementById('msg').innerHTML='File type must be mp4 or mp3';\r\n            return false;\r\n        }\r\n     \r\n\r\n            var fileType='';\r\n            if(ext==='mp4')           \r\n            fileType='vdo'\r\n            else if(ext==='mp3')           \r\n            fileType='ado'\r\n            else if(ext==='mov')           \r\n            fileType='mov'\r\n            else         \r\n            fileType='img'\r\n\r\n            this.setState({\r\n                    selectedFile: file,\r\n                    fileUrl: URL.createObjectURL(file),\r\n                    fileType                    \r\n                });\r\n                this.uploadFile(file);\r\n\r\n            }\r\n        else\r\n        {\r\n        //////console.log(\"file is undefined\")\r\n        }\r\n    }\r\n    uploadFile=(file)=>{\r\n        \r\n    document.getElementById(\"upfile\").disabled=true;\r\n    document.getElementById(\"msg\").style.color='#6107f7';\r\n    document.getElementById('msg').innerHTML='Uploading .....';\r\n    const formData = new FormData();                     \r\n    let Api_url=this.state.base_url+'admin/uploadFile';\r\n    formData.append('sampleFile', file)\r\n    formData.append('JM_User_Profile_Url_plus_JM_ID',this.state.data.JM_User_Profile_Url+\"_\"+this.state.data.JM_ID) \r\n\r\n    fetch(Api_url, {\r\n    method: 'POST',    \r\n    headers: { \"authorization\": API.getAuth(),\"id\":API.getId()},     \r\n    body: formData\r\n    })\r\n    .then(response => response.json())\r\n    .then(data1 => \r\n    {          //////console.log(data);     \r\n    if(data1.status===1)       \r\n    {                       \r\n\r\n        const data=API.decryptJson(data1.flag);\r\n\r\n        this.setState({\r\n            fileName:data.fileName,\r\n            showSubmitBtn:true,\r\n            isPreview:true\r\n        })\r\n        document.getElementById(\"msg\").style.color='green';\r\n        document.getElementById('msg').innerHTML=data1.msg;\r\n        //document.getElementById('upfile').style.display='none';\r\n    }\r\n    else\r\n    {\r\n        this.setState({\r\n            fileName:'',\r\n            showSubmitBtn:false,\r\n            isPreview:false\r\n        })\r\n        document.getElementById(\"msg\").style.color='red';\r\n        document.getElementById('msg').innerHTML=data1.msg;\r\n        document.getElementById(\"upfile\").disabled=true;\r\n    }\r\n    })\r\n    .catch(error => {\r\n    ////console.error(error)\r\n    this.setState({\r\n        fileName:'',\r\n        showSubmitBtn:false,\r\n        isPreview:false\r\n    })\r\n    document.getElementById(\"msg\").style.color='red';\r\n    document.getElementById('msg').innerHTML='Internal error, try later';\r\n    })\r\n    }\r\n\r\n    submitFile=event=>{\r\n\r\n    event.preventDefault();    \r\n    if(this.state.selectedFile!==null || typeof this.state.selectedFile==='undefined')      \r\n    {\r\n    const formData = new FormData(); \r\n\r\n    let Api_url=this.state.base_url+'admin/completeRequest';\r\n\r\n\r\n\r\n    var flagData={\r\n    fileName:this.state.fileName,\r\n    ProfileName:this.state.requestData.JM_User_Profile_Url+\"_\"+this.state.requestData.JM_ID,\r\n    BM_Email:this.state.requestData.BM_Email,\r\n    BM_ID:this.state.requestData.BM_ID,\r\n    BM_Name:this.state.requestData.BM_Name,\r\n    BM_Purchase_Date:this.state.requestData.actualPurchaseDate,\r\n    JM_Name:this.state.requestData.JM_Name,\r\n    JM_User_Profile_Url:this.state.requestData.JM_User_Profile_Url,\r\n    DA_Title: this.state.requestData.DA_Title,\r\n    BM_Purchase_Amt: this.state.requestData.BM_Purchase_Amt,\r\n    Actual_Price: this.state.requestData.Actual_Price,\r\n    BM_Phone:this.state.requestData.BM_Phone\r\n    }\r\n\r\n    const flag=API.encryptData(flagData);\r\n    let  JSONdata = {\r\n    flag: flag\r\n    };\r\n\r\n    this.setState({                   \r\n    showSubmitBtn:false,\r\n    })\r\n    document.getElementById('msg').innerHTML='Processing...please wait';\r\n\r\n    fetch(Api_url, {\r\n    method: 'POST',         \r\n    headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n    body: JSON.stringify(JSONdata)\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => \r\n    {          //////console.log(data);     \r\n        if(data.status===1)       \r\n        {                      \r\n            \r\n            document.getElementById(\"msg\").style.color='green';\r\n            document.getElementById(\"msg\").innerHTML='Request has been completed';          \r\n            this.showMessage();\r\n        \r\n        }\r\n        else\r\n        {\r\n            this.setState({\r\n                fileName:'',\r\n                showSubmitBtn:true,\r\n            })\r\n            document.getElementById(\"msg\").style.color='red';\r\n            document.getElementById('msg').innerHTML='Server error, Try later';\r\n        }\r\n\r\n    })\r\n    .catch(error => {\r\n\r\n        this.setState({\r\n            fileName:'',\r\n            showSubmitBtn:true,\r\n        })\r\n        document.getElementById(\"msg\").style.color='red';\r\n        document.getElementById('msg').innerHTML='Server error, Try later';\r\n            ////console.error(error)\r\n    })\r\n    }\r\n    else\r\n    {\r\n        document.getElementById(\"msg\").innerHTML='Select File';\r\n        return false;\r\n    }\r\n\r\n    }\r\n    showMessage=()=>{\r\n    setTimeout(function() {      \r\n    window.location.reload();\r\n    }, 3000);    \r\n\r\n    }\r\n    requestTab=()=>{\r\n    // alert(\"hii\");\r\n    }\r\n\r\n    sortTable=(tableName,n)=>e=> \r\n    {\r\n    var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;\r\n    table = document.getElementById(tableName);\r\n    switching = true;\r\n    //Set the sorting direction to ascending:\r\n    dir = \"asc\"; \r\n    /*Make a loop that will continue until\r\n    no switching has been done:*/\r\n    while (switching) {\r\n    //start by saying: no switching is done:\r\n    switching = false;\r\n    rows = table.rows;\r\n    /*Loop through all table rows (except the\r\n    first, which contains table headers):*/\r\n    for (i = 1; i < (rows.length - 1); i++) {\r\n    //start by saying there should be no switching:\r\n    shouldSwitch = false;\r\n    /*Get the two elements you want to compare,\r\n    one from current row and one from the next:*/\r\n    x = rows[i].getElementsByTagName(\"TD\")[n];\r\n    y = rows[i + 1].getElementsByTagName(\"TD\")[n];\r\n    /*check if the two rows should switch place,\r\n    based on the direction, asc or desc:*/\r\n    if (dir === \"asc\") \r\n    {\r\n    if(tableName!=='tbl_purchased')\r\n    {\r\n\r\n\r\n    if(n!==7 && n!==3)\r\n    {\r\n            \r\n\r\n        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\r\n            //if so, mark as a switch and break the loop:\r\n            shouldSwitch= true;\r\n            break;\r\n        }\r\n    }\r\n    if(n===7)\r\n    {\r\n        var xValue=x.getAttribute(\"data-value\");\r\n        var yValue=y.getAttribute(\"data-value\");\r\n        var dt1=new Date(xValue)\r\n        var dt2=new Date(yValue)\r\n        if (dt1 > dt2 ) {\r\n            //if so, mark as a switch and break the loop:\r\n            shouldSwitch = true;\r\n            break;\r\n        }\r\n    }\r\n    if(n===3)\r\n    {\r\n        var xValue=parseFloat(x.innerHTML)\r\n        var yValue=parseFloat(y.innerHTML)\r\n\r\n        if (xValue > yValue ) {\r\n            //if so, mark as a switch and break the loop:\r\n            shouldSwitch = true;\r\n            break;\r\n        }\r\n    }\r\n    }\r\n    else\r\n    {\r\n\r\n    if(n===3 || n===6)\r\n    {\r\n        var xValue=parseFloat(x.innerHTML)\r\n        var yValue=parseFloat(y.innerHTML)\r\n\r\n        if (xValue > yValue ) {\r\n            //if so, mark as a switch and break the loop:\r\n            shouldSwitch = true;\r\n            break;\r\n        }\r\n    }\r\n    else if(n===5)\r\n    {\r\n        var xValue=x.getAttribute(\"data-value\");\r\n        var yValue=y.getAttribute(\"data-value\");\r\n        var dt1=new Date(xValue)\r\n        var dt2=new Date(yValue)\r\n        if (dt1 > dt2 ) {\r\n            //if so, mark as a switch and break the loop:\r\n            shouldSwitch = true;\r\n            break;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\r\n            //if so, mark as a switch and break the loop:\r\n            shouldSwitch= true;\r\n            break;\r\n        }\r\n    }\r\n\r\n    }\r\n    } \r\n    else if (dir === \"desc\")\r\n    {\r\n    if(tableName!=='tbl_purchased')\r\n    {\r\n    if(n!==7 && n!==3)\r\n    {\r\n        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\r\n            //if so, mark as a switch and break the loop:\r\n            shouldSwitch = true;\r\n            break;\r\n        }\r\n    }\r\n    if(n===7)\r\n    {\r\n        var xValue=x.getAttribute(\"data-value\");\r\n        var yValue=y.getAttribute(\"data-value\");\r\n        var dt1=new Date(xValue)\r\n        var dt2=new Date(yValue)\r\n        if (dt1 < dt2 ) {\r\n            //if so, mark as a switch and break the loop:\r\n            shouldSwitch = true;\r\n            break;\r\n        }\r\n    }\r\n    if(n===3)\r\n    {\r\n        var xValue=parseFloat(x.innerHTML)\r\n        var yValue=parseFloat(y.innerHTML)\r\n\r\n        if (xValue < yValue ) {\r\n            //if so, mark as a switch and break the loop:\r\n            shouldSwitch = true;\r\n            break;\r\n        }\r\n    }\r\n    }\r\n    else\r\n    {\r\n\r\n    if(n===3 || n===6)\r\n    {\r\n        var xValue=parseFloat(x.innerHTML)\r\n        var yValue=parseFloat(y.innerHTML)\r\n\r\n        if (xValue < yValue ) {\r\n            //if so, mark as a switch and break the loop:\r\n            shouldSwitch = true;\r\n            break;\r\n        }\r\n    }\r\n    else if(n===5)\r\n    {\r\n        var xValue=x.getAttribute(\"data-value\");\r\n        var yValue=y.getAttribute(\"data-value\");\r\n        var dt1=new Date(xValue)\r\n        var dt2=new Date(yValue)\r\n        if (dt1 < dt2 ) {\r\n            //if so, mark as a switch and break the loop:\r\n            shouldSwitch = true;\r\n            break;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\r\n            //if so, mark as a switch and break the loop:\r\n            shouldSwitch= true;\r\n            break;\r\n        }\r\n    }\r\n\r\n    }\r\n    }\r\n    }\r\n    if (shouldSwitch) {\r\n    /*If a switch has been marked, make the switch\r\n    and mark that a switch has been done:*/\r\n    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\r\n    switching = true;\r\n    //Each time a switch is done, increase this count by 1:\r\n    switchcount ++;      \r\n    } else {\r\n    /*If no switching has been done AND the direction is \"asc\",\r\n    set the direction to \"desc\" and run the while loop again.*/\r\n    if (switchcount === 0 && dir === \"asc\") {\r\n    dir = \"desc\";\r\n    switching = true;\r\n    }\r\n    }\r\n    }\r\n    }\r\n\r\n    onSort=(sortKey)=>e=>{\r\n    /*\r\n    assuming your data is something like\r\n    [\r\n    {accountname:'foo', negotiatedcontractvalue:'bar'},\r\n    {accountname:'monkey', negotiatedcontractvalue:'spank'},\r\n    {accountname:'chicken', negotiatedcontractvalue:'dance'},\r\n    ]\r\n    */\r\n\r\n\r\n    let allRequest = this.state.allRequest;\r\n    if(this.state.Asc===0)\r\n    {\r\n\r\n    allRequest.sort((a,b) => a.sortKey - b.sortKey)\r\n    this.setState({allRequest,Asc:1})\r\n    }\r\n    if(this.state.Asc===1)\r\n    {\r\n    allRequest.sort((a,b) => b.sortKey - b.sortKey)\r\n    this.setState({allRequest,Asc:0})\r\n\r\n    }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    myFunction=(tableName,id,colIndex=1)=>e=>{        \r\n        this.closeSidePopUp();\r\n        var input, filter, table, tr, td, i, txtValue;\r\n        input = document.getElementById(id);\r\n        filter = input.value.toUpperCase();\r\n        table = document.getElementById(tableName);\r\n        tr = table.getElementsByTagName(\"tr\");\r\n\r\n        if(e.target.name==='searchByName')\r\n         this.setState({searchByProduct:'',})\r\n        else\r\n            this.setState({searchByName:'',searchByProduct:e.target.value})\r\n\r\n        for (i = 0; i < tr.length; i++) {\r\n        td = tr[i].getElementsByTagName(\"td\")[colIndex];\r\n        if (td) {\r\n        txtValue = td.textContent || td.innerText;\r\n        if (txtValue.toUpperCase().indexOf(filter) > -1) {\r\n        tr[i].style.display = \"\";\r\n        } else {\r\n        tr[i].style.display = \"none\";\r\n        }\r\n        }       \r\n        }\r\n    }\r\n\r\n    //07-jul-2021\r\n    submitLiveVideo=async (e)=>{\r\n    document.getElementById('msg_live_session').innerHTML=''\r\n    if(this.state.session_date==='')\r\n    {\r\n    document.getElementById('msg_live_session').innerHTML='Select date';\r\n    return false;\r\n    }\r\n    if(this.state.session_time==='')\r\n    {\r\n    document.getElementById('msg_live_session').innerHTML='Select start time';\r\n    return false;\r\n    }\r\n    if(this.state.session_time_end==='')\r\n    {\r\n    document.getElementById('msg_live_session').innerHTML='Select end time';\r\n    return false;\r\n    }\r\n\r\n    var session_time=API.ConvertTimeTo12(this.state.session_time);\r\n    var session_time_end=API.ConvertTimeTo12(this.state.session_time_end);\r\n\r\n    var JSONdata={\r\n    fileName:this.state.fileName,\r\n    ProfileName:this.state.data.JM_User_Profile_Url+\"_\"+this.state.data.JM_ID,\r\n    BM_Email:this.state.data.BM_Email,\r\n    BM_ID:this.state.data.BM_ID,\r\n    BM_Name: this.state.data.BM_Name,\r\n    BM_Purchase_Date: this.state.data.BM_Purchase_Date,\r\n    JM_Name: this.state.JM_Name,\r\n    JM_User_Profile_Url:this.state.JM_User_Profile_Url,\r\n    DA_Title: this.state.data.DA_Title,\r\n    BM_Purchase_Amt: this.state.data.BM_Purchase_Amt,\r\n    BM_Phone: this.state.data.BM_Phone,\r\n    session_date:this.state.session_date,\r\n    session_time:session_time,\r\n    session_time_end:session_time_end\r\n    }\r\n    //////console.log(JSONdata)\r\n    var data=await API.postData(JSONdata,'setMeeting');\r\n    if(data.status===1)\r\n    {\r\n    document.getElementById(\"msg_live_session\").innerHTML=data.msg;\r\n    this.setState({\r\n    session_date:API.GetCurDate(),\r\n    session_time:'',\r\n    session_time_end:''\r\n\r\n    })\r\n    API.WaitForSecond(3000);\r\n    window.location.reload();\r\n    }\r\n    else\r\n    {\r\n    document.getElementById(\"msg_live_session\").innerHTML=data.msg;\r\n    return false;\r\n    }\r\n    }\r\n    changeDate=(e)=>{\r\n    var date=e.target.value;\r\n    this.setState({\r\n    [e.target.name]:e.target.value\r\n    }) \r\n    }\r\n\r\n    //MS3 B1 -28 -oct-2021\r\n    GetRequest=(e)=>{\r\n        this.closeSidePopUp();\r\n        let type=e.target.value;     \r\n        this.setState({  dataLoading:true,    ddl_request:type,\r\n            searchByName:'',  searchByProduct:''})\r\n        this.Get_AllRequests(type)\r\n    }\r\n    openSidePopUp=(data)=>e=>{\r\n        this.setState({\r\n            showPopUp:'show-popup',requestData:data,showSubmitBtn:false\r\n        })\r\n        let msg=document.getElementById(\"msg\");\r\n        if(typeof msg!=='undefined' &&  msg!==null)\r\n            document.getElementById(\"msg\").innerHTML='';\r\n    }\r\n    closeSidePopUp=(e)=>{\r\n        this.setState({\r\n            showPopUp:'',currentStatus:'',requestData:[],ddl_id:''\r\n        })\r\n        \r\n    }\r\n   \r\n    render() {\r\n\r\n        const urlParams = queryString.parse(window.location.search);\r\n        const type = urlParams.type;\r\n        const {allRequest,productList}=this.state;     \r\n        let dataTableAll=allRequest && allRequest.map((item,i)=>{\r\n        return(\r\n                <tr>\r\n\r\n                    \r\n                    <td>\r\n                    {  item.DA_DA_ID===0 || item.DA_DA_ID===999 ?\r\n                            <div className=\"td-service\" onClick={this.openSidePopUp(item)}>\r\n                                <img src={API.GetProductIcon(item.DA_DA_ID)} alt=\"\"/> Donation & Gifts\r\n                            </div>\r\n                        :\r\n                        item.DA_DA_ID===1?\r\n                             <div className=\"td-service\" onClick={this.openSidePopUp(item)}>\r\n                                <img src={API.GetProductIcon(1)} alt=\"\"/> Personalizes Video or Audio\r\n                            </div>\r\n                        :\r\n                        item.DA_DA_ID===2?\r\n                            <div className=\"td-service\" onClick={this.openSidePopUp(item)}>\r\n                                <img src={API.GetProductIcon(2)} alt=\"\"/> Unlock Content\r\n                            </div>\r\n                        :\r\n                        item.DA_DA_ID===3?\r\n                            <div className=\"td-service\" onClick={this.openSidePopUp(item)}>\r\n                                <img src={API.GetProductIcon(3)} alt=\"\"/> Sell Digital Goods\r\n                            </div>\r\n                        :\r\n                        item.DA_DA_ID===5?\r\n                            <div className=\"td-service\" onClick={this.openSidePopUp(item)}>\r\n                                <img src={API.GetProductIcon(5)} alt=\"\"/> Live Video Session\r\n                            </div>\r\n                        :\r\n                        item.DA_DA_ID===6?\r\n                             <div className=\"td-service\" onClick={this.openSidePopUp(item)}>\r\n                                <img src={API.GetProductIcon(6)} alt=\"\"/> Contests & Giveaways\r\n                            </div>\r\n                        :\r\n                        null\r\n                    }\r\n\r\n                    </td>\r\n                    <td data-value={item.actualPurchaseDate}>                         \r\n                                {item.BM_Purchase_Date}\r\n                                { \" \"+item.BM_Purchase_Time}\r\n                        </td>\r\n                        <td>{item.BM_Name}</td>\r\n                        { \r\n                            item.Consent > 0 ?     \r\n                            <td>{item.BM_Email}</td> \r\n                            :     \r\n                            <td></td>                            \r\n                        }\r\n                \r\n                    <td> {item.Actual_Price} </td>\r\n                    {/* <td>{item.BM_Instruction}</td>   */}\r\n                    <td> {item.BM_Purchase_Amt} </td>\r\n                    <td>\r\n                        \r\n                                            \r\n                            { \r\n                                item.Status==='P' && (this.state.ddl_request==='P' || this.state.ddl_request==='All') ?\r\n                                <>                                 \r\n                                    <div className=\"action pending\">\r\n                                        <select id={\"ddl_stat_\"+item.BM_ID} onChange={this.updateRequestStat(item.BM_ID,item)}>\r\n                                            <option value=\"P\" selected={item.Status==='P'}>Pending</option>                                                    \r\n                                            <option value=\"A\">Accept</option>\r\n                                            <option value=\"D\">Decline</option>\r\n                                        </select> \r\n                                        <FontAwesomeIcon icon={faExclamationCircle} />\r\n                                    </div>\r\n                                </>\r\n                                :\r\n                                item.Status==='A' && (this.state.ddl_request==='A' || this.state.ddl_request==='All') ?\r\n                                <>\r\n                                \r\n                                    <div className=\"action accepted\">\r\n                                        <select id={\"ddl_stat_\"+item.BM_ID} onChange={this.updateRequestStat(item.BM_ID,item)}>\r\n                                            <option value=\"A\" selected={item.Status==='A'}>Accept</option>\r\n                                            <option value=\"C\">Complete</option>\r\n                                            <option value=\"D\">Decline</option>\r\n                                        </select> \r\n                                        <FontAwesomeIcon icon={faExclamationCircle} />\r\n                                    </div>\r\n                                </>\r\n                                :\r\n                                item.Status==='C'  && (this.state.ddl_request==='C' || this.state.ddl_request==='All')?\r\n                                <>                               \r\n                                \r\n                                    <div className=\"action completed\">\r\n                                        <select id={\"ddl_stat_\"+item.BM_ID} onChange={this.updateRequestStat(item.BM_ID,item)}>\r\n                                        <option value=\"C\"  selected={item.Status==='C'} disabled>Completed</option>  \r\n                                        </select> \r\n                                        {/* <FontAwesomeIcon icon={faExclamationCircle} /> */}\r\n                                    </div>          \r\n                                                    \r\n                                </>\r\n                                :\r\n                                item.Status==='C' && (this.state.ddl_request==='S' || this.state.ddl_request==='All')?\r\n                                <>                               \r\n                                \r\n                                    <div className=\"action completed\">\r\n                                        <select id={\"ddl_stat_\"+item.BM_ID} onChange={this.updateRequestStat(item.BM_ID,item)}>\r\n                                        <option value=\"C\"  selected={item.Status==='C'} disabled>Purchased</option>  \r\n                                        </select> \r\n                                        {/* <FontAwesomeIcon icon={faExclamationCircle} /> */}\r\n                                    </div>           \r\n                                             \r\n                                </>\r\n                                :\r\n                                item.Status==='B' && (this.state.ddl_request==='B' || this.state.ddl_request==='All')?\r\n                                <>                               \r\n                                    <div className=\"action accepted\">\r\n                                        <select id={\"ddl_stat_\"+item.BM_ID} onChange={this.updateRequestStat(item.BM_ID,item)}>\r\n                                            <option value=\"B\"   selected={item.Status==='B'}  disabled>Booked</option>  \r\n                                        </select> \r\n                                        {/* <FontAwesomeIcon icon={faExclamationCircle} />    */}\r\n                                    </div>                          \r\n                                </>\r\n                                :\r\n                                item.Status==='D' && (this.state.ddl_request==='D'|| this.state.ddl_request==='All')?\r\n                                <>                               \r\n                                        <div className=\"action declined\">\r\n                                        <select id={\"ddl_stat_\"+item.BM_ID} onChange={this.updateRequestStat(item.BM_ID,item)}>\r\n                                            <option value=\"D\"   selected={item.Status==='D'}  disabled>Declined</option>  \r\n                                        </select> \r\n                                        {/* <FontAwesomeIcon icon={faExclamationCircle} />  */}\r\n                                    </div>                                \r\n                                </>\r\n                                :\r\n                                <span></span>\r\n                            }\r\n                        \r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n\r\n        let ddl_filter_product = productList && productList.map((item,i)=>{\r\n            return (\r\n               <option value={item.DA_Title}>{item.DA_Title}</option>           \r\n            )\r\n        })\r\n        const sidePop=this.state.requestData;\r\n        return (\r\n            <>\r\n              <Helmet>\r\n                    <title>Notification & Requests | Expy </title>\r\n                    <meta name=\"description\" content=\"Use Expy to SHARE all your important links, content and OFFER paid, personalized, premium features under one beautiful Bio-Link page. FREE and FAST to set up.\"></meta>\r\n                </Helmet>\r\n            \r\n                <ProfileHeader/>\r\n                <div className=\"profile-tab\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                        <div className=\"col-md-12 text-center\">\r\n                        <ProfileNav/>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n               \r\n\r\n                 {/* sudipta */}\r\n\r\n                <div className=\"notification-sec\">\r\n                    <button className=\"right-scroll-btun\" id=\"right-button\"><FontAwesomeIcon icon={faChevronRight} /></button>\r\n                    <button className=\"left-scroll-btun\" id=\"left-button\"><FontAwesomeIcon icon={faChevronLeft} /></button>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 padd-0\">\r\n                                <div className=\"table-box\">\r\n                                    <div className=\"heading\">\r\n                                        <h3>Transactions & Requests</h3>\r\n                                    </div>\r\n                                    <div className=\"filter-part\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-5 col-md-3\">\r\n                                                <select className=\"catagory\" name=\"ddl_request\" id=\"ddl_request\" onChange={this.GetRequest}>\r\n                                                    <option value=\"All\">All</option>\r\n                                                    <option value=\"P\">Pending</option>\r\n                                                    <option value=\"A\">Accept</option>\r\n                                                    <option value=\"C\">Completed</option>\r\n                                                    <option value=\"B\">Booked</option>\r\n                                                    <option value=\"S\">Purchased</option>\r\n                                                    <option value=\"D\">Declined</option>\r\n                                                </select>\r\n                                                {\r\n                                                    this.state.pendingRequest > 0 ?\r\n                                                        <span className=\"totalpending\">{this.state.pendingRequest}</span>\r\n                                                    :\r\n                                                    null\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"col-lg-7 col-md-9\">\r\n                                                <a href=\"/payout\" className=\"wallet-btn\">View Wallet</a>\r\n                                                <div className=\"input-group\">\r\n                                                    <select className=\"service\" id=\"inp_product\"  name=\"searchByProduct\" \r\n                                                      value={this.state.searchByProduct} onChange={this.myFunction('tbl_request','inp_product',0)}>\r\n                                                      <option value=\"\">--Select--</option>  \r\n                                                      {ddl_filter_product}\r\n                                                    </select>\r\n                                                    <div className=\"input-group-prepend\">\r\n                                                    <div className=\"input-group-text\"><FontAwesomeIcon icon={faSearch} /></div>\r\n                                                    </div>\r\n                                                        <input className=\"form-control\" type=\"text\" id=\"inp_search\" name=\"searchByName\"\r\n                                                         onKeyUp={this.myFunction('tbl_request','inp_search',2)} \r\n                                                        value={this.state.searchByName}\r\n                                                        onChange={(e)=> this.setState({[e.target.name]:e.target.value})}\r\n                                                        placeholder=\"Search for names..\" title=\"Type in a name\"/>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"table-responsive main-table \" id=\"content\">\r\n                                        <table id=\"tbl_request\">\r\n                                            <thead>\r\n                                                 <th style={{width:'20%'}}onClick={this.sortTable('tbl_all',0)}>Product/Service</th>     \r\n                                                <th style={{width:'11%'}} onClick={this.sortTable('tbl_all',1)}>Date/Time</th>                                              \r\n                                                <th style={{width:'16%'}} onClick={this.sortTable('tbl_all',2)}>Name</th>\r\n                                                <th style={{width:'20%'}} onClick={this.sortTable('tbl_all',3)}>Email id</th>                                                                                   \r\n                                                <th style={{width:'7%'}} onClick={this.sortTable('tbl_all',4)}>Price(₹)</th>\r\n                                                {/* <th style={{width:'50%'}} onClick={this.sortTable('tbl_all',5)}>Message</th>                                                                */}\r\n                                                <th style={{width:'15%'}} onClick={this.sortTable('tbl_all',5)}>Amount Earned</th>\r\n                                                <th style={{width:'13%'}} onClick={this.sortTable('tbl_all',6)}>Status</th>\r\n                                            </thead>\r\n                                            <tbody>      \r\n                                               {\r\n                                                    this.state.dataLoading===false ?\r\n                                                    dataTableAll.length > 0  ? dataTableAll : 'No data found'\r\n                                                    :\r\n                                                    <p>Loading....</p>\r\n                                                }                                  \r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div> \r\n                                </div>    \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* className=\"details-popup show-popup\" */}\r\n                    <div className={\"details-popup-back \"+this.state.showPopUp}>\r\n                        <div className=\"details-popup\" >                \r\n                                <span className=\"details_popup_close\" id=\"close_pop\" onClick={this.closeSidePopUp}>×</span>\r\n                                <div className=\"main-details\">\r\n                                    <div className=\"date\">\r\n                                        <p>                                \r\n                                            {sidePop.BM_Purchase_Date}        \r\n                                            {/* + \" \"+sidePop.BM_Purchase_Time  */}\r\n                                        </p>\r\n                                    </div>\r\n                                    <div className=\"details-box\">\r\n                                        <div className=\"icon\"><img src={API.GetProductIcon(sidePop.DA_DA_ID)} alt=\"\"/></div>\r\n                                                <h3>\r\n                                                {\r\n                                                            productList && productList.map((item,i)=>{\r\n                                                                return (\r\n                                                                    item.DA_DA_ID===sidePop.DA_DA_ID ?\r\n                                                                    ' '+item.DA_Title\r\n                                                                    :\r\n                                                                    sidePop.DA_DA_ID===999 && item.DA_DA_ID===0 ?\r\n                                                                    ' '+item.DA_Title\r\n                                                                    :\r\n                                                                    null       \r\n                                                                )\r\n                                                            })\r\n                                                }     \r\n\r\n                                                </h3>\r\n                                        <div className=\"details\">\r\n                                            <p><span>Total Price: </span> {sidePop.Actual_Price}</p>\r\n                                            <p><span>Amount credit: </span> {sidePop.BM_Purchase_Amt}</p>\r\n                                        </div>\r\n                                        <div className=\"details\">\r\n                                            <p><span>Person name: </span>{sidePop.BM_Name}</p>\r\n                                            <p><span>Email ID: </span> \r\n                                            {\r\n                                            sidePop.Consent > 0 && (sidePop.DA_DA_ID!==0 || sidePop.DA_DA_ID!==999)? \r\n                                            ' '+sidePop.BM_Email \r\n                                            : \r\n                                            sidePop.Consent === 0 && (sidePop.DA_DA_ID===0 || sidePop.DA_DA_ID===999)? \r\n                                            ' '+sidePop.BM_Email \r\n                                            :\r\n                                            ''\r\n                                            \r\n                                            }\r\n                                            \r\n                                            </p>\r\n                                        </div>\r\n                                        <div className=\"details\">\r\n                                            <p><span>Massage: </span>{sidePop.BM_Instruction}</p>\r\n                                            <p><span>Payment Status:</span>{ sidePop.Status!=='P' ? ' Added to Wallet' : ' Pending'} </p>\r\n                                        </div>\r\n                                    </div>\r\n                                    {\r\n                                        sidePop.DA_DA_ID===1 && sidePop.Status==='A'?\r\n                                        <div className=\"upload-box\">\r\n                                            <h3>You can upload your file</h3>\r\n                                            <p>CLICK ON THE BUTTON FOR UPLOAD FILES</p>\r\n                                            {/* <div className=\"file-preview\"><img src={\"images/why-back.jpg\"}/></div>  */}\r\n                                        \r\n                                                \r\n                                            \r\n                                                {\r\n                                                    this.state.showSubmitBtn===true ?\r\n                                                    <>\r\n                                                    <div id=\"preview_req\" className=\"file-preview\">\r\n                                                        {\r\n                                                            this.state.isPreview && this.state.fileType ==='img'?\r\n                                                            <img src={this.state.fileUrl} style={{width:'100%'}} alt=\"\"/>\r\n                                                            :\r\n                                                            this.state.isPreview && (this.state.fileType ==='vdo' || this.state.fileType ==='mov')?\r\n                                                            <video src={this.state.fileUrl} style={{width:'100%'}} controls/>\r\n                                                            :\r\n                                                            this.state.isPreview && this.state.fileType ==='ado'?\r\n                                                            <audio src={this.state.fileUrl}/>\r\n                                                            :\r\n                                                            null\r\n            \r\n                                                        }\r\n            \r\n                                                    </div>\r\n                                                    <button className=\"up-file\" onClick={this.submitFile} id=\"btn_sbmit\">Submit Request</button> \r\n\r\n                                                    </>\r\n                                                    :\r\n                                                    <>                                               \r\n                                                    <label className=\"up-file\" for=\"upfile\">\r\n                                                        Upload Video or Audio\r\n                                                        <input type=\"file\" \r\n                                                        name=\"upfile\" id=\"upfile\" accept=\".mp4,.mp3,.mov\" onChange={this.fileOnChange}\r\n                                                        style={{display: \"none\"}}/>\r\n                                                    </label>   \r\n                                                    </>                        \r\n                                                }\r\n                                                <p id=\"msg\" style={{color:'red',fontSize:'13px'}}></p>  \r\n                                        </div>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                    \r\n                                </div>\r\n                        </div>                            \r\n                    </div>\r\n\r\n                </div>\r\n\r\n                    {/* sudipta */}              \r\n\r\n                        <Modal\r\n                            show={this.state.showConfirmModal}\r\n                            onHide={this.closeConfirmModal}\r\n                            backdrop=\"static\"\r\n                            keyboard={false}\r\n                            centered\r\n                            size=\"sm\"\r\n                            className=\"request-modal\"\r\n                        >\r\n                                <Modal.Header closeButton>\r\n                                <Modal.Title>\r\n                                        <h4>Are You Sure ?</h4>\r\n                                </Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body>\r\n                                        <p>Do you want to {                                            \r\n                                            this.state.currentStatus==='A'?\r\n                                            ' Accept the request?'\r\n                                            :\r\n                                            this.state.currentStatus==='D'?\r\n                                            ' Decline the request?'\r\n                                            :\r\n                                            ' change the status ?'\r\n                                        }</p>\r\n                                </Modal.Body>\r\n                                <Modal.Footer>                                  \r\n                                     <button className=\"yes\" onClick={this.updateRequestStatAfterConfirm}>Yes</button>\r\n                                     <button onClick={this.closeConfirmModal}>No</button>\r\n                                </Modal.Footer>\r\n                          </Modal>\r\n\r\n                      \r\n                <FooterClass/>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNotificationRequest.propTypes = {\r\n\r\n};\r\n\r\nexport default NotificationRequest;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\CropImage.js",[],"E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\NewsLetter.js",[],"E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\profile\\Me.js",["2150","2151","2152","2153","2154","2155","2156","2157","2158","2159","2160","2161","2162","2163","2164","2165","2166","2167","2168","2169","2170","2171","2172","2173","2174","2175","2176","2177","2178","2179","2180","2181","2182","2183","2184","2185","2186","2187","2188","2189","2190","2191","2192","2193","2194","2195","2196"],"\r\n\r\nimport React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport Accordion from 'react-bootstrap/Accordion';\r\n\r\nimport Embed2 from 'react-embed';\r\nimport Embed from 'react-music-embed'\r\nimport Buy from '../premium/Buy';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\n\r\n// import {Custom} from '../../Custom';\r\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\r\nimport Profile_Gift from './Profile_Gift';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport PictureAsPdfOutlinedIcon from '@material-ui/icons/PictureAsPdfOutlined';\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport CameraAltOutlinedIcon from '@material-ui/icons/CameraAltOutlined';\r\n// import { Helmet } from 'react-helmet';\r\nimport { MDBIcon } from 'mdbreact';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Tipping from '../premium/Tipping';\r\n\r\n\r\n// import { positions, Provider } from \"react-alert\";\r\n// import {AlertTemplate} from \"react-alert-template-basic\";\r\nimport ShareIcon from '@material-ui/icons/Share';\r\n\r\n\r\n//MS2 =============================================\r\n//carousel\r\n\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\r\n\r\nimport Popover from 'react-bootstrap/Popover'\r\n\r\nimport FourZeroFour from './FourZeroFour';\r\nimport ReactGA from 'react-ga';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport API from '../services/API';\r\nimport BuyContestGiveAways from '../premium/BuyContestGiveAways'\r\n\r\n\r\n\r\nimport SweetAlert from 'sweetalert-react';\r\nimport {filterXSS}  from \"xss\"\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Me extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      JM_Email: localStorage.getItem('JM_Email'),\r\n      JM_ID: parseInt(localStorage.getItem('JM_ID')),\r\n      linkMaster: [],\r\n      userDetails: [],\r\n      themeMasterUser: [],\r\n      socialWidget: [],\r\n      category_master: [],\r\n      category_links: [],\r\n      embed_content: [],\r\n      productList: [],\r\n      gifts: [],\r\n      isLoggedIn: false,\r\n      JM_Name: '',\r\n      JM_Email: '',\r\n      JM_Url: '',\r\n      JM_Profile_Pic: '',\r\n      JM_User_Profile_Url: '',\r\n      base_url: process.env.REACT_APP_API_URL,\r\n      root_url: process.env.REACT_APP_ROOT_URL,\r\n      ProfilePath: 'Profile/',\r\n      linkPath: '',\r\n      ProfileimagePath: '',\r\n      open: false,\r\n      isChecked: false,\r\n      logo: \"\",\r\n      bgColor: '',\r\n      bgImage: \"\",\r\n      showPage: false,\r\n      showGiftPage: false,\r\n      DonarAmt:0,\r\n      DonarName:'',\r\n      DonarMsg:'',\r\n      ShowSweetAlert:false,\r\n      sweetTitle:'',\r\n      sweetMsg:'',\r\n      showFourZeroFour:false\r\n\r\n    }\r\n    //console.log(this.props.Url);\r\n  }\r\n\r\n  doSomethingBeforeUnload = async (url) => {\r\n\r\n    var JSONdata = {\r\n      JM_Profile_Url: this.props.match.params.Url\r\n    };\r\n\r\n    const response = await fetch(url, {\r\n      method: 'post',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(JSONdata)\r\n    });\r\n    const data = await response.json();\r\n\r\n  }\r\n  // Setup the `beforeunload` event listener\r\n  setupBeforeUnloadListener = () => {\r\n    window.addEventListener(\"beforeunload\", (ev) => {\r\n      ev.preventDefault();\r\n      const API_url = process.env.REACT_APP_API_URL + \"admin/updateCurrentStatus\";\r\n      return this.doSomethingBeforeUnload(API_url);\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    ReactGA.initialize('G-ZRSP9HVQ30');\r\n    ReactGA.pageview(window.location.pathname + window.location.search);\r\n    this.Get_User_Details();\r\n    // var JM_Name=localStorage.getItem('JM_User_Profile_Url');\r\n    // document.title = JM_Name +\" | Expy\";\r\n\r\n    // var content=\"Everything about \"+JM_Name+\" in one place. Follow and Connect with \" +JM_Name;\r\n    // document.querySelector('meta[name=\"description\"]').setAttribute(\"content\", content);\r\n\r\n\r\n   \r\n  }\r\n\r\n  async Get_User_Details() {\r\n\r\n    let pathname = window.location.pathname;\r\n    var user_url = this.props.match.params.Url;\r\n    //var user_url = pathname.replace(/\\//g, \"\");  \r\n    var flagData = {\r\n      JM_User_Profile_Url: user_url,\r\n      livePreview: 0\r\n    };\r\n\r\n    const flag=API.encryptData(flagData);\r\n      let  JSONdata = {\r\n          flag: flag\r\n        };\r\n\r\n    const API_url = this.state.base_url + \"admin/isExistUrl_Profile\";\r\n    const response = await fetch(API_url, {\r\n      method: 'post',\r\n      headers: { \"Content-Type\": \"application/json\",\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n      body: JSON.stringify(JSONdata)\r\n    });\r\n    const data1 = await response.json();\r\n    if (data1.status === 1) \r\n    {\r\n      const data=API.decryptJson(data1.flag);\r\n    \r\n      this.setState({    \r\n      \r\n        userDetailsAll: data.data,\r\n        userDetails:data.userDetails,\r\n        themeMasterUser:data.themeMasterUser,\r\n        socialWidget:data.socialWidget,\r\n        gifts:data.gifts, \r\n        category_master:data.category_master,\r\n        JM_Name: data.userDetails[0].JM_Name,\r\n      });\r\n\r\n      var url = window.location.href;\r\n      let url_gift = \"/\" + user_url + \"/gift\";\r\n      let slash_url = \"/\" + user_url;\r\n      if (slash_url !== pathname || slash_url !== url_gift)\r\n      {\r\n        this.setState({ showPage: true, showGiftPage: false });\r\n        if (url_gift === pathname) \r\n        {\r\n          this.setState({ showPage: false, showGiftPage: true });      // window.location.reload(true);\r\n        }\r\n      }\r\n      else if (url_gift === pathname) \r\n      {\r\n        this.setState({ showPage: false, showGiftPage: true });\r\n      }\r\n      else if (url_gift !== pathname)\r\n      {\r\n        //console.log(url)\r\n        url = url.replace(pathname, \"/\" + user_url);\r\n        window.history.pushState('', '', url);\r\n        this.setState({ showPage: true, showGiftPage: false });     \r\n\r\n      }     \r\n\r\n    }\r\n    else \r\n    {\r\n     // this.setState({ showPage: false })\r\n      this.setState({ showFourZeroFour: true, showPage: false,showGiftPage: false });     \r\n    }\r\n\r\n\r\n    //console.log(data)\r\n  }\r\n\r\n  Router = (url) => {\r\n    window.history.pushState('', '', url);\r\n\r\n\r\n  }\r\n\r\n\r\n  doClick = (type, id) => e => {\r\n    //console.log(type + id)\r\n    var JSONdata = {\r\n      Stat_Type: type,\r\n      Stat_ID: id,\r\n      JM_ID: this.state.userDetails[0].JM_ID\r\n\r\n    };\r\n    const API_url = this.state.base_url + \"admin/updateClick\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        //console.log(data);\r\n      });\r\n  }\r\n\r\n  openSupportModal=(e)=>{\r\n    this.setState({\r\n      showSupport:true\r\n    })\r\n  }\r\n\r\n  closeSupportModal=(e)=>{\r\n    this.setState({\r\n      showSupport:false,\r\n      DonarName:'',\r\n      DonarMsg:'',\r\n      DonarAmt:0\r\n    })\r\n  }\r\n  onChangeHandle=(e)=>{\r\n      this.setState({[e.target.name]:e.target.value});     \r\n  }\r\n\r\n//MS 2=========================================\r\n\r\n\r\n//newslatter\r\nsubmitNewsLatter=(e)=>{\r\n    e.preventDefault();\r\n    var JSONdata = {\r\n      NL_Name: this.state.NL_Name,\r\n      NL_Email: this.state.NL_Email,\r\n      JM_ID: this.state.userDetails[0].JM_ID\r\n    };\r\n    if(this.state.NL_Name.length ===0)\r\n    {\r\n      document.getElementById(\"msg_newsletter\").innerHTML='Enter Name';\r\n      return false;\r\n    }\r\n    if(this.state.NL_Email.length ===0)\r\n    {\r\n      document.getElementById(\"msg_newsletter\").innerHTML='Enter Email';\r\n      return false;\r\n    }\r\n    if(this.state.NL_Email.includes('.')===false && this.state.NL_Email.includes('@')===false )\r\n    {\r\n      document.getElementById(\"msg_newsletter\").innerHTML='Invalid Email-ID';\r\n      return false;\r\n    }\r\n    const API_url = this.state.base_url + \"admin/newsLatterCreators\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => \r\n      {\r\n        if(data.status==1)\r\n        {\r\n          document.getElementById(\"msg_newsletter\").innerHTML='Thanks for subscribing';\r\n          this.setState({\r\n            NL_Name: '',\r\n            NL_Email: '',\r\n          })\r\n        }\r\n        else\r\n        {\r\n            document.getElementById(\"msg_newsletter\").innerHTML='internal error, try again later..';\r\n            return false;\r\n        }\r\n        //console.log(data);\r\n      });\r\n}\r\n\r\n\r\n//07-aug-2021\r\nshowSwtAlert=(sweetTitle,sweetMsg)=>e=>{\r\n  this.state({\r\n      ShowSweetAlert:true,\r\n      sweetTitle,\r\n      sweetMsg\r\n    })\r\n}\r\nonCloseAlert=(e)=>{\r\n  this.state({\r\n    ShowSweetAlert:true   \r\n  })\r\n}\r\n  render() {\r\n\r\n \r\n    var timeInterval=API.GetSlidingInterval();\r\n    let imagePath = \"\";\r\n    let base_url = this.state.base_url;\r\n    let linkPath = \"\"; let JM_User_Profile_Url = \"\";\r\n    let JM_User_Profile_Url_plus_JM_ID = \"\";\r\n    let JM_Name, JM_Email, JM_Description = ''; let JM_Social_Widget_Position = \"\", JM_Verified = 0;\r\n    //MS 2\r\n    let JM_Gift_Title='',JM_Gift_Active=0;\r\n    let JM_NewsLetter_Active=0,JM_NewsLetter_Title='';\r\n    let JM_Payout_Details=0;let JM_Checkout_My_Social='';\r\n    if (this.state.userDetails != null && this.state.userDetails.length > 0) {\r\n      let len = this.state.userDetails.length;\r\n      for (var i = 0; i < len; i++) {\r\n\r\n        imagePath = process.env.REACT_APP_UPLOAD_URL + this.state.userDetails[i].JM_Profile_Pic;\r\n        linkPath = process.env.REACT_APP_UPLOAD_URL + \"Profile/\" + this.state.userDetails[i].JM_User_Profile_Url + \"_\" + this.state.userDetails[i].JM_ID + \"/\";\r\n        JM_User_Profile_Url_plus_JM_ID = this.state.userDetails[i].JM_User_Profile_Url + \"_\" + this.state.userDetails[i].JM_ID;\r\n        JM_Name = this.state.userDetails[i].JM_Name;\r\n        JM_Email = this.state.userDetails[i].JM_Email;\r\n        JM_Description = this.state.userDetails[i].JM_Description;\r\n        JM_Social_Widget_Position = this.state.userDetails[i].JM_Social_Widget_Position;\r\n        JM_Verified = this.state.userDetails[i].JM_Verified;\r\n        JM_User_Profile_Url = this.state.userDetails[i].JM_User_Profile_Url;\r\n        JM_NewsLetter_Title=this.state.userDetails[i].JM_NewsLetter_Title;\r\n        JM_NewsLetter_Active=this.state.userDetails[i].JM_NewsLetter_Active;\r\n        JM_Gift_Title=this.state.userDetails[i].JM_Gift_Title;\r\n        JM_Gift_Active=parseInt(this.state.userDetails[i].JM_Gift_Active);\r\n        JM_Payout_Details=parseInt(this.state.userDetails[i].JM_Payout_Details);\r\n        JM_Checkout_My_Social=this.state.userDetails[i].JM_Checkout_My_Social;\r\n        break;\r\n      }\r\n    }\r\n    var bgImage = \"\",bgImageVideo=\"\", fontColor = \"\", back_color = \"\";\r\n    var font_family = \"\", cssClass = \"\", highlightColor = \"\", item_color = \"\", item_style = \"\",item_border_color=\"\",TM_Bio_Color='',TM_Name_Color='',TM_Footer_Color='';;\r\n    var TM_Item_Effect='',TM_Name_Size='',TM_Bio_Size='';\r\n\r\n    var TM_Thumbnail_Icon_Color='',TM_SocialWidget_Icon_Color='';\r\n    if (this.state.themeMasterUser != null && this.state.themeMasterUser.length > 0) {\r\n      let len = this.state.themeMasterUser.length;\r\n      for (var j = 0; j < len; j++) {\r\n        bgImage = this.state.themeMasterUser[j].TM_Back_Image==='' ? '': 'url(' + process.env.REACT_APP_UPLOAD_URL + this.state.themeMasterUser[j].TM_Back_Image + ')';\r\n        bgImageVideo =  process.env.REACT_APP_UPLOAD_URL + this.state.themeMasterUser[j].TM_Back_Image;\r\n        fontColor = this.state.themeMasterUser[j].TM_Font_Color\r\n        back_color = this.state.themeMasterUser[j].TM_Back_Color;\r\n        font_family = this.state.themeMasterUser[j].TM_Font;\r\n        highlightColor = this.state.themeMasterUser[j].TM_Highlight_Color;\r\n        cssClass = this.state.themeMasterUser[j].TM_Class_Name + \" \" + font_family;\r\n        item_color = this.state.themeMasterUser[j].TM_Item_Color;\r\n        item_style = this.state.themeMasterUser[j].TM_Item_Style;\r\n        item_border_color=this.state.themeMasterUser[j].TM_Border_Color;\r\n        TM_Name_Color=this.state.themeMasterUser[j].TM_Name_Color;\r\n        TM_Bio_Color=this.state.themeMasterUser[j].TM_Bio_Color;\r\n        TM_Footer_Color=this.state.themeMasterUser[j].TM_Footer_Color;\r\n        TM_Item_Effect=this.state.themeMasterUser[j].TM_Item_Effect;\r\n        TM_Name_Size=this.state.themeMasterUser[j].TM_Name_Size;\r\n        TM_Bio_Size=this.state.themeMasterUser[j].TM_Bio_Size;\r\n        TM_Thumbnail_Icon_Color=this.state.themeMasterUser[j].TM_Thumbnail_Icon_Color;\r\n        TM_SocialWidget_Icon_Color=this.state.themeMasterUser[j].TM_SocialWidget_Icon_Color;\r\n        break;\r\n      }\r\n    }\r\n   // TM_Footer_Color='white';\r\n    var h=window.screen.height;\r\n    var w=window.screen.width;\r\n   \r\n    if(w <= 480) //mobile\r\n    {\r\n     // TM_Footer_Color='white';\r\n     \r\n    }\r\n    else\r\n    {\r\n      //TM_Footer_Color=''\r\n    }\r\n    let footer_logo=process.env.REACT_APP_UPLOAD_URL+\"footer_logo.png\";\r\n    if(\r\n      bgImage.endsWith('profile_back_7.jpg') || bgImageVideo.endsWith('profile_back_7.jpg') ||\r\n      bgImage.endsWith('profile_back_8.jpg') || bgImageVideo.endsWith('profile_back_8.jpg') \r\n      || bgImage.endsWith('profile_back_9.jpg') || bgImageVideo.endsWith('profile_back_9.jpg')\r\n      || bgImage.endsWith('profile_back_11.jpg') || bgImageVideo.endsWith('profile_back_11.jpg')\r\n      || bgImage.endsWith('profile_back_12.jpg') || bgImageVideo.endsWith('profile_back_12.jpg')\r\n      || bgImage.endsWith('profile_back_13.jpg') || bgImageVideo.endsWith('profile_back_13.jpg')\r\n      || bgImage.endsWith('profile_back_14.jpg') || bgImageVideo.endsWith('profile_back_14.jpg')\r\n      || bgImage.endsWith('profile_back_15.jpg') || bgImageVideo.endsWith('profile_back_15.jpg')\r\n      || bgImage.endsWith('profile_back_16.jpg') || bgImageVideo.endsWith('profile_back_16.jpg')\r\n      || bgImage.endsWith('profile_back_17.jpg') || bgImageVideo.endsWith('profile_back_17.jpg')\r\n      || bgImage.endsWith('profile_back_18.jpg') || bgImageVideo.endsWith('profile_back_18.jpg')\r\n      || bgImage.endsWith('profile_back_20.jpg') || bgImageVideo.endsWith('profile_back_20.jpg')\r\n      || bgImage.endsWith('profile_back_21.jpg') || bgImageVideo.endsWith('profile_back_21.jpg')\r\n      || bgImage.endsWith('profile_back_23.jpg') || bgImageVideo.endsWith('profile_back_23.jpg')\r\n      || bgImage.endsWith('profile_back_24.jpg') || bgImageVideo.endsWith('profile_back_24.jpg')\r\n      || bgImage.endsWith('profile_back_25.jpg') || bgImageVideo.endsWith('profile_back_25.jpg')\r\n      || bgImage.endsWith('profile_back_27.jpg') || bgImageVideo.endsWith('profile_back_27.jpg')\r\n      || bgImage.endsWith('profile_back_28.jpg') || bgImageVideo.endsWith('profile_back_28.jpg')\r\n      || bgImage.endsWith('profile_back_30.jpg') || bgImageVideo.endsWith('profile_back_30.jpg')\r\n      \r\n      || back_color.includes('linear-gradient(180deg,  #9c14fc 0%, #7604f9 100%)') // gradient 1\r\n      || back_color.includes('linear-gradient(180deg,  #f66a08 0%, #f50f2c 100%)') // gradient 3\r\n      || back_color.includes('linear-gradient(180deg,  #19c4f2 0%, #7008fb 100%)') // gradient 4\r\n      || back_color.includes('linear-gradient(180deg,  #7c15fa 0%, #f21890 100%)') // gradient 5 \r\n      || back_color.includes('linear-gradient(180deg,  #27a2e4 0%, #0a2437 100%)') // gradient 9\r\n\r\n      || bgImage.endsWith('profile_back_31.jpg') || bgImageVideo.endsWith('profile_back_31.jpg')      \r\n      || bgImage.endsWith('profile_back_32.jpg') || bgImageVideo.endsWith('profile_back_32.jpg')\r\n      || bgImage.endsWith('profile_back_33.jpg') || bgImageVideo.endsWith('profile_back_33.jpg')\r\n      || bgImage.endsWith('profile_back_35.jpg') || bgImageVideo.endsWith('profile_back_35.jpg')\r\n      || bgImage.endsWith('profile_back_36.jpg') || bgImageVideo.endsWith('profile_back_36.jpg')\r\n      || bgImage.endsWith('profile_back_39.jpg') || bgImageVideo.endsWith('profile_back_39.jpg')\r\n      || bgImage.endsWith('profile_back_40.jpg') || bgImageVideo.endsWith('profile_back_40.jpg')\r\n      || bgImage.endsWith('profile_back_41.jpg') || bgImageVideo.endsWith('profile_back_41.jpg')\r\n      || bgImage.endsWith('profile_back_42.jpg') || bgImageVideo.endsWith('profile_back_42.jpg')\r\n      || bgImage.endsWith('profile_back_43.jpg') || bgImageVideo.endsWith('profile_back_43.jpg')\r\n      || bgImage.endsWith('profile_back_44.jpg') || bgImageVideo.endsWith('profile_back_44.jpg')\r\n      || bgImage.endsWith('profile_back_45.jpg') || bgImageVideo.endsWith('profile_back_45.jpg')\r\n      )\r\n    {\r\n      footer_logo=process.env.REACT_APP_UPLOAD_URL+'footer_logo_white.png';\r\n    }\r\n    else if(\r\n      bgImage.endsWith('profile_back_10.jpg') || bgImageVideo.endsWith('profile_back_10.jpg')\r\n      || bgImage.endsWith('profile_back_19.jpg') || bgImageVideo.endsWith('profile_back_19.jpg')\r\n      || bgImage.endsWith('profile_back_22.jpg') || bgImageVideo.endsWith('profile_back_22.jpg')\r\n      || bgImage.endsWith('profile_back_26.jpg') || bgImageVideo.endsWith('profile_back_26.jpg')\r\n      || bgImage.endsWith('profile_back_29.jpg') || bgImageVideo.endsWith('profile_back_29.jpg')\r\n  \r\n      || back_color.includes('linear-gradient(180deg,  #2293d7 0%, #1ed2ed 100%)') // gradient 2 \r\n      || back_color.includes('linear-gradient(180deg,  #fb754f 0%, #f39911 100%)') // gradient 6\r\n      || back_color.includes('linear-gradient(180deg,  #fb6ca2 0%, #fd8877 100%)') // gradient 7\r\n      || back_color.includes('linear-gradient(180deg,  #ffff00 0%, #54a000 100%)') // gradient 8\r\n\r\n      || bgImage.endsWith('profile_back_34.jpg') || bgImageVideo.endsWith('profile_back_34.jpg')\r\n      || bgImage.endsWith('profile_back_37.jpg') || bgImageVideo.endsWith('profile_back_37.jpg')\r\n      || bgImage.endsWith('profile_back_38.jpg') || bgImageVideo.endsWith('profile_back_38.jpg')\r\n      || bgImage.endsWith('profile_back_46.jpg') || bgImageVideo.endsWith('profile_back_46.jpg')\r\n    )\r\n    {\r\n      footer_logo=process.env.REACT_APP_UPLOAD_URL+'footer_logo_black.png';\r\n    }\r\n\r\n    let isMobileView='';\r\n    if(w >= 480) //web\r\n    {    \r\n      isMobileView='';\r\n    }\r\n    else\r\n     {\r\n       if(bgImageVideo.includes('theme/profile_back_'))\r\n           isMobileView='';//last-footer\r\n       else\r\n       {\r\n           isMobileView='';        \r\n       }\r\n     }\r\n\r\n    const mystyle = {\r\n      color: fontColor,\r\n      // fontFamily: font_family,  \r\n      background: item_color,\r\n      border: item_border_color==='' ? '': '1px solid '+ item_border_color\r\n    };\r\n    const mystyleSocialWidget = {\r\n      color: TM_SocialWidget_Icon_Color, \r\n    };\r\n\r\n    const nameStyle = {\r\n      color: TM_Name_Color,\r\n      fontSize:TM_Name_Size,\r\n      marginBottom:'5px'  \r\n    };\r\n\r\n    const bioStyle = {\r\n      color: TM_Bio_Color,\r\n      fontSize:TM_Bio_Size \r\n    };\r\n\r\n    const FolderSubStyle = {\r\n      color: fontColor,\r\n      fontSize: '12px'\r\n    };\r\n    const FolderTitleStyle = {\r\n      color: fontColor, \r\n    };\r\n    const mystyleForHightight = {\r\n     color: TM_Thumbnail_Icon_Color, \r\n      backgroundColor: highlightColor\r\n    };\r\n    const thumbIconStyle={\r\n      color: TM_Thumbnail_Icon_Color, \r\n      backgroundColor:highlightColor,\r\n  }\r\n\r\n  const newsletterHeading={\r\n    color: fontColor, \r\n  \r\n  }\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //themeMasterUser\r\n    let SocialWidget;\r\n    var activeWidget=0;\r\n    if(this.state.socialWidget !=null && this.state.socialWidget.length > 0)\r\n    {\r\n      for (let index = 0; index < this.state.socialWidget.length; index++) \r\n      {\r\n        if(this.state.socialWidget[index].SWM_Active===1 && this.state.socialWidget[index].SWM_Style_Type==='W')\r\n        activeWidget++;          \r\n      }\r\n    }\r\n    if (this.state.socialWidget != null && this.state.socialWidget.length > 0) {\r\n      SocialWidget = this.state.socialWidget.map((link, i) => {\r\n        return (        \r\n          link.SWM_Active === 1 &&  link.SWM_Url!=='' &&  link.SWM_Style_Type==='W'?   \r\n          <>\r\n       \r\n            <li>\r\n                {\r\n                          \r\n                          link.SWM_Title==='Email' ?\r\n                          <a  key={link.SWM_ID} href={\"mailto:\"+ link.SWM_Url} target=\"_blank\" style={TM_SocialWidget_Icon_Color==='unset'? '': mystyleSocialWidget}>\r\n                               <FontAwesomeIcon icon={API.SocialIcons(link.SWM_Icon)} \r\n                               onClick={this.doClick('S', link.SWM_ID)}/>\r\n                          </a>\r\n                          :\r\n                          link.SWM_Url.startsWith(\"http://\") || link.SWM_Url.startsWith(\"https://\") ?\r\n                          <a  key={link.SWM_ID} href={link.SWM_Url} data-id={link.SWM_ID} target=\"_blank\" style={mystyleSocialWidget}>\r\n                             {\r\n                                link.SWM_Icon==='faHandPaper'?\r\n                                <FontAwesomeIcon icon={API.SocialIcons(link.SWM_Icon)} className=\"rotateCls\"\r\n                                onClick={this.doClick('S', link.SWM_ID)}/>\r\n                                :\r\n                                <FontAwesomeIcon icon={API.SocialIcons(link.SWM_Icon)} \r\n                                onClick={this.doClick('S', link.SWM_ID)}/>\r\n\r\n                             } \r\n                          </a>   \r\n                          :\r\n                            <a  key={link.SWM_ID}  href={`https://${link.SWM_Url}`} data-id={link.SWM_ID} target=\"_blank\" style={mystyleSocialWidget}>\r\n                            {/* <img src={process.env.REACT_APP_UPLOAD_URL + link.SWM_Icon}  /> */}\r\n                              {\r\n                                link.SWM_Icon==='faHandPaper'?\r\n                                <FontAwesomeIcon icon={API.SocialIcons(link.SWM_Icon)} className=\"rotateCls\" \r\n                                onClick={this.doClick('S', link.SWM_ID)}/>\r\n                                :\r\n                                <FontAwesomeIcon icon={API.SocialIcons(link.SWM_Icon)} onClick={this.doClick('S', link.SWM_ID)} />\r\n                              } \r\n                           </a>  \r\n                          \r\n                }\r\n\r\n            \r\n            </li>\r\n            </>\r\n            :\r\n            null\r\n        \r\n        )\r\n      })\r\n    }\r\n\r\n    let category_master;\r\n    category_master = this.state.category_master.map((link, i) => {\r\n      return (\r\n        <Accordion data={link.CM_ID} onClick={this.doClick('C', link.CM_ID)}>\r\n          {\r\n           link.CM_Active_Status === 1 ?\r\n            <>\r\n              <div className=\"btun-box\" >\r\n\r\n                <Accordion.Toggle style={mystyle} variant=\"link\" eventKey={link.CM_ID} className={\"big-btun folder-shadow \" + item_style  +\" \"+TM_Item_Effect}>\r\n                  <span style={FolderTitleStyle} className={font_family}><b><u>{link.CM_Folder_Title}</u></b></span>\r\n                  <p style={FolderSubStyle} className={font_family}>{link.CM_Folder_Sub_Title}  </p>\r\n                </Accordion.Toggle>\r\n                < div className=\"icon folderCollapse\" style={mystyleForHightight}>\r\n                  {\r\n                    (link.CM_Folder_Back_Image === null || link.CM_Folder_Back_Image === '') && (link.CM_Icon === '' || link.CM_Icon === null) ?\r\n                      <img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} />\r\n                      : (link.CM_Folder_Back_Image !== null || link.CM_Folder_Back_Image !== '') && link.CM_Icon === '' ?\r\n                        <img style={{ width: '100%' }} src={process.env.REACT_APP_UPLOAD_URL + link.CM_Folder_Back_Image} />\r\n                        : (link.CM_Icon !== '' || link.CM_Icon !== null) ?\r\n                          <MDBIcon icon={link.CM_Icon} />\r\n                          :\r\n                          <img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} />\r\n                  }\r\n\r\n                </div>\r\n                <Accordion.Collapse eventKey={link.CM_ID} id=\"payout\">\r\n                  <>\r\n                    <div className={\"folder \" + item_style +\" \"+TM_Item_Effect } >\r\n                      {\r\n\r\n\r\n                        this.state.linkMaster && this.state.linkMaster.map((lnk, i) => (\r\n                          lnk.LM_Url !== \"\" && lnk.LM_Folder_ID > 0 && lnk.LM_Folder_ID === link.CM_ID && lnk.LM_Active === 1 ?\r\n                            <div className=\"btun-box\" onClick={this.doClick('L', lnk.LM_ID)}>\r\n                              <a className={\"big-btun \" + item_style +\" \"+TM_Item_Effect + \" \" + font_family} href={lnk.LM_Url} target=\"_blank\" style={mystyle}>{lnk.LM_Title}</a>\r\n                              <div className=\"icon\" style={mystyleForHightight}>\r\n                                {\r\n                                  lnk.LM_Image === '' && (lnk.LM_Icon === '' || lnk.LM_Icon === null) ?\r\n                                    <img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} />\r\n                                    : lnk.LM_Image !== '' && lnk.LM_Icon === '' ?\r\n                                      <img style={{ width: '100%' }} src={process.env.REACT_APP_UPLOAD_URL + lnk.LM_Image} />\r\n                                      : lnk.LM_Icon !== '' && lnk.LM_Image === '' ?\r\n                                        <MDBIcon icon={lnk.LM_Icon} />\r\n                                        :\r\n                                        <img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} />\r\n                                }\r\n\r\n                              </div>\r\n                            </div>\r\n                            :\r\n                            null\r\n                        ))\r\n\r\n                      }\r\n                    </div>\r\n                  </>\r\n                </Accordion.Collapse>\r\n\r\n              </div>\r\n            </>\r\n            :\r\n            null\r\n          }\r\n        </Accordion>\r\n      )\r\n    })\r\n\r\n    let embed_content;\r\n    embed_content = this.state.embed_content && this.state.embed_content.map((link, i) => {\r\n      return (\r\n\r\n        link.LM_Url !== \"\" && link.LM_Folder_ID === 0 && link.LM_Active === 1 ?\r\n          //  <ReactPlayer url={link.LM_Url} />\r\n\r\n          <div className=\"btun-box\" onClick={this.doClick('E', link.EC_ID)}>\r\n            {/* <a className={\"big-btun \"+item_style+ \" \"+font_family} href={link.LM_Url} target=\"_blank\" style={mystyle}>Follow Me on {link.LM_Title}</a> */}\r\n            <div className={\"product-box \" + item_style +\" \"+TM_Item_Effect + font_family}>\r\n              <Embed url={link.LM_Url} />\r\n            </div>\r\n          </div>\r\n          :\r\n          null\r\n      )\r\n    })\r\n \r\n    let premium=this.state.userDetailsAll;\r\n    let productListItems=[];\r\n    if (premium != null && premium.length > 0)\r\n    {\r\n      for (let i = 0; i < premium.length; i++) \r\n      {  \r\n        let products={};\r\n          products.DA_ID=premium[i].tableId;\r\n          products.Archive = premium[i].archive;\r\n          products.Create_Date=premium[i].Create_Date;\r\n          products.DA_Active=premium[i].activeInactive;\r\n          products.DA_Collection=premium[i].collection;\r\n\r\n          products.DA_Cover=premium[i].cover;\r\n          products.DA_DA_ID=premium[i].prodId;\r\n\r\n          products.DA_Description=premium[i].description;\r\n        \r\n          \r\n          products.DA_INR_Doller=premium[i].DA_INR_Doller;\r\n          products.DA_OrderBy=premium[i].Order_By_All;\r\n          products.DA_Payout=0;\r\n          products.DA_Price=premium[i].price;\r\n          products.DA_Status=\"P\";\r\n          products.DA_Support=0;\r\n          products.DA_Title=premium[i].title;\r\n          products.DA_Type=premium[i].prodType;\r\n          products.JM_ID=premium[i].JM_ID;\r\n          products.Order_By_All=premium[i].Order_By_All;\r\n          products.mailText=premium[i].mailText;\r\n          products.duration=premium[i].duration;\r\n          products.planDays=premium[i].planDays;\r\n          products.JM_Name=JM_Name;\r\n          products.Q1=premium[i].Q1;\r\n          products.Q2=premium[i].Q2;\r\n          products.Q3=premium[i].Q3;\r\n          products.Q4=premium[i].Q4;\r\n          products.File_Upload=premium[i].File_Upload;\r\n\r\n          products.DA_Allow_Cust_Pay=premium[i].DA_Allow_Cust_Pay;\r\n          products.DA_Min_Amount=premium[i].DA_Min_Amount;\r\n          products.DA_Suggested_Amont=premium[i].DA_Suggested_Amont;\r\n          products.File_upload_text=premium[i].File_upload_text;\r\n          productListItems.push(products)\r\n      }\r\n  \r\n    }\r\n    //console.log(productListItems)\r\n    let gifts;\r\n    if (this.state.gifts !== null && this.state.gifts.length > 0) \r\n    {\r\n      if(JM_Gift_Active===1 && JM_Payout_Details===1)\r\n      gifts = <div className=\"btun-box\">\r\n        <button className={\"big-btun \" + item_style +\" \"+TM_Item_Effect + \" \" + font_family} style={mystyle}>{JM_Gift_Title}</button>\r\n        <div className=\"icon\" style={thumbIconStyle}>\r\n          <CardGiftcardIcon />\r\n        </div>\r\n        <a className={\"buy \"+  font_family} style={{ backgroundColor: highlightColor, color: TM_Thumbnail_Icon_Color }} userDetails={this.state.userDetails} gifts={this.state.gifts} href={\"/\" + JM_User_Profile_Url + \"/gift\"}>View</a>\r\n      </div>\r\n      else \r\n      gifts = null\r\n    }\r\n    let products={};\r\n\r\n    //document.title = JM_Name +\" | Expy\"; \r\n    //document.getElementById(\"main_meta\").content=\"Everything about \"+JM_Name+\"  in one place. Follow and Connect with \"+JM_Name;\r\n\r\n      let style_noImage={      \r\n        backgroundColor:back_color\r\n      }\r\n      let style_withImage={      \r\n        backgroundImage:bgImage\r\n      }\r\n\r\n      JM_Name = filterXSS(JM_Name);\r\n      JM_Description = filterXSS(JM_Description);\r\n    return (\r\n      <>\r\n        {/* <Helmet>\r\n        <title>{ `${ JM_Name } | Expy` }</title>\r\n            <meta name=\"description\" content={\"Everything about \"+JM_Name+\"  in one place. Follow and Connect with \"+JM_Name}></meta>\r\n        </Helmet> */}\r\n       \r\n        {\r\n          this.state.showPage\r\n            ? \r\n            \r\n          <div className=\"per-prop\" data={bgImage} style={{background:bgImage ==='' ? back_color : bgImage}}>\r\n            {\r\n              bgImageVideo.endsWith('.mp4') ||  bgImageVideo.endsWith('.mov') ? \r\n              <div className=\"back-vodeo\">\r\n\r\n                  <video preload=\"true\" playsinline=\"true\" autoplay=\"autoplay\" loop muted>\r\n                      <source src={bgImageVideo} type=\"video/mp4\" />\r\n                  </video>\r\n              </div>\r\n              :\r\n              null\r\n            }\r\n           \r\n            <div className={cssClass}>  \r\n         \r\n            <button className=\"share\" style={{display:'none'}}><ShareIcon/></button>\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\"> \r\n                 <div className=\"heightFooter\">\r\n                    <div className=\"per-prop-body\">\r\n                          {/* <div className={\"overlay \"} style={mystyle}>\r\n                          </div> */}\r\n                      <div className=\"dtail-part\">\r\n                        <div className=\"prop-pic\">\r\n                      \r\n                        <img src={imagePath} alt=\"\"/>\r\n                        </div>                      \r\n                            <div className=\"name\" >\r\n                              \r\n                                <h3 className={font_family} style={nameStyle}>{JM_Name}\r\n                                {\r\n                                                  JM_Verified===1 ?\r\n                                                  <span className=\"verify-tick\"><img  src=\"/images/verifyIcon.png\"/></span>\r\n                                                  :\r\n                                                  null\r\n                                }\r\n                                \r\n                                </h3>\r\n                                \r\n                                {/* <p className={font_family} style={nameStyle}>{JM_Description}</p> */}\r\n                                <pre className={font_family} style={bioStyle}>\r\n                                                        {JM_Description}\r\n                                </pre>\r\n                            </div>\r\n                            <div className=\"per-prop-footer\">\r\n                              <ul className=\"Social-links\">\r\n                                                {\r\n                                                  JM_Social_Widget_Position==='top' && activeWidget > 0?                                                 \r\n                                                  <div className=\"socialCheckout\" style={{color: TM_Name_Color }}>{JM_Checkout_My_Social}</div> \r\n                                                  : null                                                 \r\n                                                  }\r\n                                                  { JM_Social_Widget_Position==='top' && activeWidget > 0 ? SocialWidget : null}\r\n                              </ul>\r\n                            </div>\r\n                          <div className=\"button-part\">\r\n\r\n                          {\r\n                            this.state.userDetailsAll &&  this.state.userDetailsAll.map((link,i) =>(                           \r\n                              link.ItemType==='customlink' && link.URL !== \"\" && link.folderId === 0 && link.activeInactive===1?\r\n                                <div className=\"btun-box\" onClick={this.doClick('L',link.tableId)} key={link.tableId}>\r\n                                  <a className={\"big-btun \"+item_style +\" \"+TM_Item_Effect +\" \"+ font_family} href={link.URL} target=\"_blank\" style={mystyle}>{link.title}</a>\r\n                                    <div className=\"icon\" style={thumbIconStyle}>\r\n                                      {\r\n                                        link.image === '' && (link.icon==='' || link.icon===null) ?\r\n                                        <img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} />\r\n                                        : link.image !== '' && link.icon===''  ?\r\n                                        <img style={{ width: '100%' }} src={process.env.REACT_APP_UPLOAD_URL + link.image} />\r\n                                        : link.icon !== '' && link.image===''  ?\r\n                                          <MDBIcon icon={link.icon}/>\r\n                                        :\r\n                                        <img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} />\r\n                                      }\r\n                                    \r\n                                    </div>\r\n                                </div>\r\n                              :\r\n                              link.ItemType==='category' ?\r\n                              <Accordion data={link.tableId} onClick={this.doClick('C', link.tableId)} key={link.tableId}>\r\n                              {\r\n                              link.activeInactive === 1 ?\r\n                                <div style={{marginBottom:'20px'}} key={link.tableId}>\r\n                                     <div className=\"btun-box\" style={{marginBottom:'0px'}}>                  \r\n                                        <Accordion.Toggle style={mystyle} variant=\"link\" eventKey={link.tableId} className={\"big-btun folder-shadow \" + item_style +\" \"+TM_Item_Effect}>\r\n                                          <span style={FolderTitleStyle} className={font_family}><b><u>{link.title}</u></b></span>\r\n                                          <p style={FolderSubStyle} className={font_family}>{link.description}  </p>\r\n                                        </Accordion.Toggle>\r\n                                        <div className=\"icon\" style={thumbIconStyle}>\r\n                                        {\r\n                                          (link.image === null || link.image === '') && (link.icon === '' || link.icon === null) ?\r\n                                            <img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} />\r\n                                            : (link.image !== null || link.image !== '') && link.icon === '' ?\r\n                                              <img style={{ width: '100%' }} src={process.env.REACT_APP_UPLOAD_URL + link.image} />\r\n                                              : (link.icon !== '' || link.icon !== null) ?\r\n                                                <MDBIcon icon={link.icon} />\r\n                                                :\r\n                                                <img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} />\r\n                                        }\r\n                      \r\n                                      </div>\r\n                                    </div>\r\n                                    <Accordion.Collapse eventKey={link.tableId} id=\"payout\">\r\n                                        <>\r\n                                          <div className={\"folder\"} >\r\n                                            {      \r\n                                              this.state.userDetailsAll && this.state.userDetailsAll.map((lnk, i) => (\r\n                                                lnk.ItemType==='customlink' && lnk.URL !== \"\" && lnk.folderId  === link.tableId && lnk.activeInactive === 1 ?\r\n                                                  <div className=\"btun-box\" onClick={this.doClick('L', lnk.tableId)}>\r\n                                                    <a className={\"big-btun \" + item_style +\" \"+TM_Item_Effect + \" \" + font_family} href={lnk.URL} target=\"_blank\" style={mystyle}>{lnk.title}</a>\r\n                                                    <div className=\"icon\" style={thumbIconStyle}>\r\n                                                      {\r\n                                                        lnk.image === '' && (lnk.icon === '' || lnk.icon === null) ?\r\n                                                          <img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} />\r\n                                                          : lnk.image !== '' && lnk.icon === '' ?\r\n                                                            <img style={{ width: '100%' }} src={process.env.REACT_APP_UPLOAD_URL + lnk.image} />\r\n                                                            : lnk.icon !== '' && lnk.image === '' ?\r\n                                                              <MDBIcon icon={lnk.icon} />\r\n                                                              :\r\n                                                              <img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} />\r\n                                                      }\r\n                      \r\n                                                    </div>\r\n                                                  </div>\r\n                                                  :\r\n                                                  null\r\n                                              ))\r\n                      \r\n                                            }\r\n                                          </div>\r\n                                        </>\r\n                                      </Accordion.Collapse>\r\n                                  </div>\r\n                                  :\r\n                                  null\r\n                                }\r\n                                \r\n                              </Accordion>\r\n                              :\r\n                              link.ItemType==='embedcontent'   && link.folderId === 0 && link.activeInactive === 1 ?\r\n                              <div className=\"btun-box\" onClick={this.doClick('E', link.tableId)} key={link.tableId}>\r\n                                  {/* <a className={\"big-btun \"+item_style +\" \"+TM_Item_Effect + \" \"+font_family} href={link.LM_Url} target=\"_blank\" style={mystyle}>Follow Me on {link.LM_Title}</a> */}\r\n                                  <div className={\"product-box \" + item_style +\" \"+TM_Item_Effect + font_family}>\r\n                                  {\r\n                                    link.URL.includes('apple.com')?\r\n                                  <iframe src={link.URL} style={{left: 0, width: '100%', height: '450px', position: 'relative'}}\r\n                                          allowfullscren allow=\"encrypted-media;\">\r\n                                    </iframe>\r\n                                    :\r\n                                    link.URL.includes('youtube.com')  ||    link.URL.includes('youtu.be') ?\r\n                                    // <Embed2 url={link.URL} width={300}/>\r\n                                        link.URL.includes('embed')===false ?\r\n                                          <Embed2 url={link.URL} width={300}/>\r\n                                        :\r\n                                        <iframe src={link.URL} width=\"100%\" height={315}  frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\">\r\n\r\n                                        </iframe>\r\n                                    :\r\n                                    link.URL.includes('spotify.com')?\r\n                                      // <Embed2 url={link.URL} width={300}/>\r\n                                      <iframe src={link.URL} width=\"100%\" height={'250px'} frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\">\r\n\r\n                                      </iframe>\r\n                                    :\r\n                                    link.URL.includes('soundcloud.com')?\r\n                                      <Embed2 url={link.URL} width=\"100%\"/>\r\n                                    :\r\n                                    link.URL.includes('twitter.com')?\r\n                                    <Embed2 url={link.URL} width=\"100%\"/>\r\n                                    :\r\n                                    null\r\n                                  }\r\n                                \r\n                                  \r\n                                  </div>\r\n                                </div>\r\n                              :\r\n                              link.ItemType==='premium' && link.activeInactive === 1 && JM_Payout_Details===1?                           \r\n                              <div className=\"btun-box\" key={link.tableId}>\r\n                                <button className={\"big-btun \" + item_style +\" \"+TM_Item_Effect + \" \" + font_family} style={mystyle}>{link.title}\r\n                                { \r\n                                 link.prodId!==6?\r\n                                         (link.DA_Allow_Cust_Pay===0)?  \r\n                                               (link.price > 0)?\r\n                                               \" Rs.\" + link.price\r\n                                               :          \r\n                                               null                       \r\n                                             \r\n                                          :\r\n                                          (link.DA_Allow_Cust_Pay===1)?                                            \r\n                                              (link.DA_Min_Amount > 0)?\r\n                                              \" Rs.\" + link.DA_Min_Amount\r\n                                               :          \r\n                                               null    \r\n                                          :\r\n                                          null\r\n                                 \r\n                                :\r\n                                link.prodId===6?\r\n                                  (link.DA_Allow_Cust_Pay===0)?  \r\n                                        (link.price > 0)?\r\n                                        \" Rs.\" + link.price\r\n                                        :          \r\n                                        null                       \r\n                                      \r\n                                    :\r\n                                      (link.DA_Allow_Cust_Pay===1)?                                            \r\n                                        (link.DA_Min_Amount > 0)?\r\n                                        \" Rs.\" + link.DA_Min_Amount\r\n                                        :          \r\n                                        null    \r\n                                    :\r\n                                     null\r\n                                  :\r\n                                  null\r\n                                }\r\n                                  {\r\n                                    // link.DA_INR_Doller==='INR' ?\r\n                                    //       \" (Rs.\" + link.DA_Price+\")\"\r\n                                    // :\r\n                                    //       \" ($\" + link.DA_Price+\")\"\r\n                                  }\r\n                  \r\n                                </button>\r\n                                <div className=\"icon \" style={thumbIconStyle}>\r\n                                  {\r\n                                    link.prodType === 'video' ?\r\n                                      <PlayCircleOutlineIcon />\r\n                                      :\r\n                                      null\r\n                                  }\r\n                                  {\r\n                                    link.prodType === 'audio' ?\r\n                                      <AudiotrackIcon />\r\n                                      :\r\n                                      null\r\n                                  }\r\n                                  {\r\n                                    link.prodType === 'image' ?\r\n                                      <ImageIcon />\r\n                                      :\r\n                                      null\r\n                                  }\r\n                                  {\r\n                                    link.prodType === 'NA' ?\r\n                                      <CameraAltOutlinedIcon />\r\n                                      :\r\n                                      null\r\n                                  }\r\n                                  {/* /DescriptionOutlinedIcon import PictureAsPdfOutlinedIcon from '@material-ui/icons/PictureAsPdfOutlined'; */}\r\n                                  {\r\n                                    link.prodType === 'txt' ?\r\n                  \r\n                                      <DescriptionOutlinedIcon />\r\n                                      :\r\n                                      null\r\n                                  }\r\n                                  {\r\n                                    link.prodType === 'pdf' ?\r\n                  \r\n                                      <PictureAsPdfOutlinedIcon />\r\n                                      :\r\n                                      null\r\n                                  } \r\n                                  {\r\n                                    link.prodType === 'videoCam' ?\r\n                                   \r\n                                      <VideocamIcon />\r\n                                      :\r\n                                      null\r\n                                  }\r\n    \r\n                                </div>\r\n                                {\r\n                                  link.prodId===6?\r\n                                  <BuyContestGiveAways font_family={font_family} productList={productListItems[i]} mystyleForHightight={mystyleForHightight} JM_User_Profile_Url_plus_JM_ID={JM_User_Profile_Url_plus_JM_ID} userDetails={this.state.userDetails} showSwtAlert={this.showSwtAlert} />\r\n                                  :\r\n                                  <Buy font_family={font_family} productList={productListItems[i]} mystyleForHightight={mystyleForHightight} JM_User_Profile_Url_plus_JM_ID={JM_User_Profile_Url_plus_JM_ID} userDetails={this.state.userDetails} />\r\n\r\n                                }\r\n                                \r\n                              </div>\r\n                              :\r\n                              link.ItemType==='socialBar' && link.activeInactive === 1 ?    \r\n                              <div className=\"btun-box\" onClick={this.doClick('S',link.tableId)} key={link.tableId}>\r\n                                \r\n                                \r\n                                {\r\n\r\n                                    link.title==='Email' ?\r\n                                    <a href={\"mailto:\"+ link.URL} className={\"big-btun \"+item_style +\" \"+TM_Item_Effect +\" \"+ font_family}  target=\"_blank\" style={mystyle}\r\n                                        onClick={this.doClick('S', link.tableId)}>\r\n                                          {link.title} \r\n                                    </a>\r\n                                  :\r\n                                  link.URL.startsWith(\"http://\") || link.URL.startsWith(\"https://\") ?\r\n                                      <a className={\"big-btun \"+item_style +\" \"+TM_Item_Effect +\" \"+ font_family} \r\n                                        href={link.URL} target=\"_blank\" style={mystyle}\r\n                                        onClick={this.doClick('S', link.tableId)}>\r\n                                          {link.title}                                      \r\n                                      </a>\r\n                                      :\r\n                                      <a className={\"big-btun \"+item_style +\" \"+TM_Item_Effect +\" \"+ font_family} \r\n                                      href={`https://${link.URL}`} target=\"_blank\" style={mystyle}\r\n                                        onClick={this.doClick('S', link.tableId)}>\r\n                                          {link.title}                                      \r\n                                      </a>\r\n                                    \r\n                                }\r\n                              \r\n\r\n\r\n                                  <div className=\"icon\" style={thumbIconStyle}>\r\n                                    {\r\n                                        link.icon!=='' || link.icon===null ?\r\n                                          // <img style={{ width: '100%' }} src={process.env.REACT_APP_UPLOAD_URL + link.icon} />                                                       \r\n                                          \r\n                                            link.icon==='faHandPaper'?\r\n                                            <FontAwesomeIcon icon={API.SocialIcons(link.icon)} className=\"rotateCls\" />\r\n                                            :\r\n                                            <FontAwesomeIcon icon={API.SocialIcons(link.icon)} />\r\n                                          \r\n                                        :\r\n                                          <img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} />\r\n                                      }      \r\n                                  \r\n                                  </div>\r\n                              </div>   \r\n                              :  link.ItemType === 'carousel' && link.prodId === 4 && link.activeInactive===1 ?                                     \r\n                                  <div className=\"Carousel-box\" style={{display:'block'}} key={link.tableId}>\r\n                                    \r\n                                    <Carousel interval={timeInterval} keyboard={false}>\r\n                                                            { \r\n                                                              link.carousel_1 !== 'NA' ?\r\n                                                                  <Carousel.Item>                                                                    \r\n                                                                              <div className={\"item\"} style={mystyle}>\r\n                                                                                    {\r\n                                                                                      link.carousel_1 !== 'NA' ?\r\n                                                                                        <img\r\n                                                                                          src={process.env.REACT_APP_UPLOAD_URL + link.carousel_1} alt=\"image1\"\r\n                                                                                        />\r\n                                                                                        :\r\n                                                                                        null\r\n                                                                                    }\r\n                                                                                   <div className={\"overlay \"+font_family}>\r\n                                                                                      <span>\r\n                                                                                      {\r\n                                                                                       link.carousel_title_1!=='NA' ?\r\n                                                                                       link.carousel_title_1.replace('<>', \"'\")\r\n                                                                                       :\r\n                                                                                       \"No title\"\r\n                                                                                      \r\n                                                                                      }\r\n                                                                                     </span>\r\n                                                                                     </div>\r\n                                                                                  </div> \r\n                                                                      \r\n                                                                </Carousel.Item>\r\n                                                                :\r\n                                                                null\r\n                                                            }\r\n                                                              \r\n\r\n                                                            { \r\n                                                              link.carousel_2 !== 'NA' ?\r\n                                                                  <Carousel.Item>\r\n                                                                         \r\n                                                                                  <div className={\"item\"} style={mystyle}>\r\n                                                                                    {\r\n                                                                                      link.carousel_2 !== 'NA' ?\r\n                                                                                        <img\r\n                                                                                          src={process.env.REACT_APP_UPLOAD_URL + link.carousel_2} alt=\"image2\"\r\n                                                                                        />\r\n                                                                                        :\r\n                                                                                        \"No title\"\r\n                                                                                    }\r\n                                                                                       <div className={\"overlay \"+font_family}>\r\n                                                                                          <span>\r\n                                                                                            {\r\n                                                                                               link.carousel_title_2!=='NA' ?\r\n                                                                                               link.carousel_title_2.replace('<>', \"'\")\r\n                                                                                               :\r\n                                                                                               \"No title\"\r\n                                                                                            \r\n                                                                                            }\r\n\r\n                                                                                          </span>\r\n                                                                                          </div>\r\n                                                                                  </div> \r\n                                                                   \r\n                                                                  </Carousel.Item>\r\n                                                                :\r\n                                                                null\r\n                                                            }\r\n\r\n                                                            { \r\n                                                              link.carousel_3 !== 'NA' ?\r\n                                                                  <Carousel.Item>\r\n                                                                                  <div className={\"item\"} style={mystyle}>\r\n                                                                                    {\r\n                                                                                      link.carousel_3!=='NA'?\r\n                                                                                      <img\r\n                                                                                      src={process.env.REACT_APP_UPLOAD_URL+link.carousel_3} alt=\"image3\"\r\n                                                                                        />\r\n                                                                                      :\r\n                                                                                    null                                                                                  \r\n                                                                                    }\r\n                                                                                       <div className={\"overlay \"+font_family}>\r\n                                                                                          <span>\r\n                                                                                          {\r\n                                                                                              link.carousel_title_3!=='NA' ?\r\n                                                                                              link.carousel_title_3.replace('<>', \"'\")\r\n                                                                                              :\r\n                                                                                              \"No title\"\r\n                                                                                         \r\n                                                                                          \r\n                                                                                          }\r\n                                                                                            </span></div>\r\n                                                                                  </div> \r\n                                                                  </Carousel.Item>\r\n                                                                :\r\n                                                                null\r\n                                                            }\r\n\r\n                                                          </Carousel>\r\n                                                        \r\n                                  </div>\r\n                              :\r\n                              null\r\n                              : \r\n                              null\r\n                            ))\r\n                          }\r\n                  \r\n                          {gifts}         \r\n                          {/* news letter */}\r\n                          {\r\n                            JM_NewsLetter_Active===1 ?\r\n                            <div className={\"reg-box \"+ item_style +\" \"+TM_Item_Effect}   style={mystyle}>\r\n                                <div className=\"heading\" >\r\n                                    <p className={font_family} style={newsletterHeading}>{JM_NewsLetter_Title}</p>\r\n                                </div>\r\n                                    <input type=\"text\" className={\"form-control \" + font_family} style={mystyle} placeholder=\"Enter your name\" \r\n                                    name=\"NL_Name\" value={this.state.NL_Name} style={mystyle} onChange={this.onChangeHandle}/>\r\n                                    <input type=\"text\" className={\"form-control \" + font_family} style={mystyle} placeholder=\"Enter your e-mail address\" \r\n                                    name=\"NL_Email\" value={this.state.NL_Email} onChange={this.onChangeHandle}/>\r\n  \r\n                                    <button className={\"next-btun \"+ item_style +\" \"+TM_Item_Effect +\" \"+ font_family} style={mystyleForHightight} onClick={this.submitNewsLatter}>Submit</button>\r\n                                    <p style={{color:'red'}} id=\"msg_newsletter\"></p>\r\n                                \r\n                            </div> \r\n                            :\r\n                            null\r\n                          }\r\n                          {/* news letter end */}\r\n                        </div>\r\n\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"per-prop-footer\">\r\n                      <ul className={\"Social-links\"}>\r\n                      {\r\n                                                  JM_Social_Widget_Position==='bottom' && activeWidget > 0?                                                 \r\n                                                  <div className=\"socialCheckout\" style={{color: TM_Name_Color }}>{JM_Checkout_My_Social}</div> \r\n                                                  : null                                                 \r\n                                                  }\r\n                                                  { JM_Social_Widget_Position==='bottom' && activeWidget > 0 ? SocialWidget : null}\r\n                      </ul>\r\n                    </div>  \r\n                  </div>                               \r\n                </div>\r\n              </div>\r\n\r\n              \r\n           \r\n              <div className={\"row \" + isMobileView} style={{padding:'10px 0'}}>\r\n                <div className=\"col-4 col-md-4 offset-md-2\">\r\n                  <div className=\"page-footer-logo\">\r\n                      <a href=\"/\">\r\n                      <img src={footer_logo} />\r\n                      </a>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-8 col-md-4\">\r\n                  <ul className=\"page-footer-link \" style={{color: TM_Footer_Color}} >\r\n                      <li><Link to=\"/\" className={font_family} style={{color: TM_Footer_Color,fontSize:'14px'}}>Explore</Link></li> |&nbsp; \r\n                      <li><Link to=\"/join\" className={font_family} style={{color: TM_Footer_Color,fontSize:'14px'}} >Create Page</Link></li>\r\n                    </ul>\r\n                </div>\r\n              </div>  \r\n            </div>\r\n\r\n\r\n            <SweetAlert\r\n              show={this.state.ShowSweetAlert}\r\n              title={this.state.sweetTitle}\r\n              text={this.state.sweetMsg}\r\n              onConfirm={() => this.setState({ ShowSweetAlert: false })}\r\n            />\r\n          </div>\r\n\r\n                <Modal\r\n                show={this.state.showSupport}\r\n                onHide={this.closeSupportModal}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                centered\r\n                className={font_family}         \r\n              >\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>\r\n                    <p className=\"addnew-title\">Send tips to @{JM_User_Profile_Url}</p>\r\n                  </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n          \r\n                  <div className=\"addnew-box\">\r\n                   <label>How much do you want to send?</label>\r\n                    <input type=\"number\" className=\"form-control\" placeholder=\"Enter Tip Amount\"\r\n                      name=\"DonarAmt\" min=\"0\" value={this.state.DonarAmt} onChange={this.onChangeHandle}/>\r\n\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter Your Name (optional)\"\r\n                      name=\"DonarName\" value={this.state.DonarName} onChange={this.onChangeHandle}/>\r\n\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Tip Messsage (optional)\"\r\n                      name=\"DonarMsg\" value={this.state.DonarMsg} onChange={this.onChangeHandle} />\r\n\r\n\r\n                      <div className=\"btun-box\">\r\n                      {\r\n                        this.state.DonarAmt > 0 ?\r\n                          <Tipping ref=\"checkout\" BM_Type={'D'}  DA_INR_Doller={'INR'} DA_Price={this.state.DonarAmt} \r\n                            DonarName={this.state.DonarName} JM_Name={JM_User_Profile_Url} message={this.state.DonarMsg} DA_ID={0}  state={this.state} userDetails={this.state.userDetails[0]}/>\r\n                        :\r\n                        null\r\n                      }\r\n                          \r\n                        <button className=\"btun\" onClick={this.closeSupportModal}>Cancel</button>\r\n                        </div>\r\n                        <p style={{color:this.state.errColor}}>{this.state.errMsg}</p>\r\n\r\n                    </div>   \r\n        \r\n                </Modal.Body>\r\n\r\n              </Modal>\r\n                {/* <Provider template={AlertTemplate} {...options}>\r\n                      \r\n                </Provider> */}\r\n               \r\n\r\n        </div> \r\n             :\r\n              this.state.showGiftPage\r\n              ?\r\n              <Profile_Gift state={this.state} doClick={this.doClick} />\r\n              :   \r\n              this.state.showFourZeroFour===true?\r\n              <FourZeroFour/>\r\n              :null    \r\n           \r\n        }\r\n        \r\n\r\n     \r\n      \r\n        \r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Me;\r\n// spotify example\r\n{/* <iframe src=\"https://open.spotify.com/embed/album/1DFixLWuPkv3KT3TnV35m3\" width=\"300\" height=\"380\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe> */ }\r\n\r\n\r\n// import SpotifyPlayer from 'react-spotify-player';\r\n\r\n// size may also be a plain string using the presets 'large' or 'compact'\r\n// const size = {\r\n//   width: '100%',\r\n//   height: 300,\r\n// };\r\n// const view = 'list'; // or 'coverart'\r\n// const theme = 'black'; // or 'white'\r\n\r\n// <SpotifyPlayer\r\n//   uri=\"spotify:album:1TIUsv8qmYLpBEhvmBmyBk\"\r\n//   size={size}\r\n//   view={view}\r\n//   theme={theme}\r\n// />\r\n\r\n//error in iphone browser\r\n\r\n///TypeError: undefined is not an object (evaluating 'navigator.serviceWorker.register')(anonymous function) @ main.e836af31.chunk.js:1u @ VM297 sundar:1t @ VM297 sundar:1r @ VM297 sundar:1global code @ main.e836af31.chunk.js:1","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\Contest_All.js",[],"E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\MyProfile2.js",["2197","2198","2199","2200","2201","2202","2203","2204","2205","2206","2207","2208","2209","2210","2211","2212","2213","2214","2215","2216","2217","2218","2219","2220","2221","2222","2223","2224","2225","2226","2227","2228","2229","2230","2231","2232","2233","2234","2235","2236","2237","2238","2239","2240","2241","2242","2243","2244","2245","2246"],"import React, { Component } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nimport FooterClass from '../header_footer/FooterClass';\r\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\nimport IndeterminateCheckBoxOutlinedIcon from '@material-ui/icons/IndeterminateCheckBoxOutlined';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ProfileNav from './ProfileNav';\r\nimport ProfileHeader from '../header_footer/ProfileHeader';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport EditLinks from './EditLinks';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport ToastAlert from './ToastAlert';\r\nimport { withRouter } from \"react-router\";\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport * as queryString from 'query-string';\r\nimport axios from 'axios';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport EditSocialWidget from './EditSocialWidget';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport OpenWithSharpIcon from '@material-ui/icons/OpenWithSharp';\r\nimport SendSharpIcon from '@material-ui/icons/SendSharp';\r\nimport { ProgressBar } from 'react-bootstrap';\r\nimport EditLinks2 from './EditLinks2';\r\nimport { MDBIcon } from 'mdbreact';\r\nimport LivePreview2 from './LivePreview2';\r\nimport AddNewLink2 from './AddNewLink2';\r\nimport cryptoRandomString from 'crypto-random-string';\r\nimport ReactCrop from 'react-image-crop'\r\nimport 'react-image-crop/dist/ReactCrop.css'\r\nimport StackedLink2 from './StackedLink2';\r\nimport EditStackedLink2 from './EditStackedLink2';\r\nimport SocialWidget2 from './SocialWidget2';\r\nimport EditSocialWidget2 from './EditSocialWidget2';\r\nimport EmbedContent2 from './EmbedContent2';\r\nimport EditEmbedContent2 from './EditEmbedContent2';\r\nimport EditPremiumFeature2 from './EditPremiumFeature2';\r\nimport EditUnlockContent2 from '../premium/EditUnlockContent2';\r\nimport EditPopGift2 from '../premium/EditPopGift2';\r\nimport EditSupportMe2 from '../premium/EditSupportMe2';\r\n\r\nimport EmojiEventsIcon from '@material-ui/icons/EmojiEvents';\r\nimport { Helmet } from \"react-helmet\";\r\nimport EventIcon from '@material-ui/icons/Event';\r\n\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\r\n//social sharing \r\n//import ShareBtn from 'react-share-button';\r\n//import \"react-share-button/dist/ShareBtn\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\nimport {\r\n  FacebookShareButton,\r\n  LinkedinShareButton,\r\n  TwitterShareButton,\r\n  TelegramShareButton,\r\n  WhatsappShareButton,\r\n  PinterestShareButton,\r\n  RedditShareButton,\r\n  EmailShareButton,\r\n} from 'react-share';\r\n\r\nimport {\r\n  FacebookIcon,\r\n  TwitterIcon,\r\n  TelegramIcon,\r\n  WhatsappIcon,\r\n  LinkedinIcon,\r\n  PinterestIcon,\r\n  RedditIcon,\r\n  EmailIcon,\r\n} from 'react-share';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ColorLensOutlinedIcon from '@material-ui/icons/ColorLensOutlined';\r\nimport ExplicitIcon from '@material-ui/icons/Explicit';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport API from '../services/API';\r\nimport EditDigitalEcommerce from '../premium/EditDigitalEcommerce';\r\nimport EditContestGiveAway from '../premium/EditContestGiveAway';\r\nimport ContestReport from '../premium/ContestReport';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\n\r\n\r\nclass MyProfile extends Component \r\n{\r\n  url = '';\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      JM_Email: localStorage.getItem('JM_Email'),\r\n      JM_ID: parseInt(localStorage.getItem('JM_ID')),\r\n      linkMaster: [],\r\n      userDetailsAll: [],\r\n      directAccess: [],\r\n      productList: [],\r\n      category_master: [],\r\n      socialWidget: [],\r\n      category_links: [],\r\n      embed_content: [],\r\n      gifts: [],\r\n      isLoggedIn: false,\r\n      JM_Name: '',\r\n      JM_Url: '',\r\n      JM_Profile_Pic: '',\r\n      JM_User_Profile_Url: localStorage.getItem('JM_User_Profile_Url'),\r\n      base_url: process.env.REACT_APP_API_URL,\r\n      root_url: process.env.REACT_APP_ROOT_URL,\r\n      ProfilePath: 'Profile/',\r\n      linkPath: '',\r\n      ProfileimagePath: '',\r\n      open: false,\r\n      isChecked: false,\r\n      value: '',\r\n      copied: false,\r\n      checkedBoxes: [],\r\n      colapseBoxes: [],\r\n      checkedBoxesFolder: [],\r\n      title: '',\r\n      msg: '',\r\n      logo: '',\r\n      show: false,//for toast\r\n      confirm: false,\r\n      selectedFile: null,\r\n      openEditURLModal: false,\r\n      Validation: true,\r\n      openDynamic: false,\r\n      isLoading: false,\r\n      openMoveLinkModel: false,\r\n      radio: 0,\r\n      LM_ID_Move: 0,\r\n      JM_ID_Move: 0,\r\n      CM_ID_Move: 0,\r\n      uploadPercentage: 0,\r\n      avatar: '',\r\n      isBlocked: 0,\r\n      inProgess: true,\r\n\r\n      src: null,\r\n      crop: {\r\n        unit: \"px\",\r\n        width: 100,\r\n        aspect: 1 / 1\r\n      },\r\n      croppedImageUrl: null,\r\n      openCropModal: false,\r\n      openSocialModal: false,\r\n      referralCode: [],\r\n      old_url: '',\r\n      //MS2\r\n      activeNameBio_color: '#000000',\r\n      isCompletedUrlProcessing: false,\r\n      btnRequest: 'Change',\r\n\r\n      JM_NewsLetter_Active: 0,\r\n      JM_NewsLetter_Title: '',\r\n      showNewsModal: false,\r\n      //walk thrrough\r\n      JM_Steps: 1,\r\n      openRefModal: false,\r\n      isValidRefCode: false,\r\n      JM_Referral_Code: '',\r\n      leftIcon: '<',\r\n      rightIcon: '>',\r\n      JM_Gift_Title:'Send me a gift',\r\n      JM_Gift_Active:0,\r\n      openSocialTitleModal:false,\r\n      JM_Checkout_My_Social:'Check out my socials',\r\n      authorization:window.token,\r\n    }\r\n    //console.log(this.props.location.search)\r\n\r\n  }\r\n  componentDidMount() {\r\n    //$('#JM_Description').on('input', function() {\r\n    // $('#res').html(this.value.replace(/\\r?\\n/g, '<br>'));\r\n    //})\r\n    //API.isActive();\r\n    this.validateSession();\r\n    this.Get_User_Details();\r\n  }\r\n\r\n  \r\n  //===starting of crop image\r\n\r\n  handleFile = e => {\r\n    const fileReader = new FileReader()\r\n    if (e.target.files !== null && e.target.files.length > 0) {\r\n      fileReader.onloadend = () => {\r\n        this.setState({ src: fileReader.result })\r\n      }\r\n      fileReader.readAsDataURL(e.target.files[0])\r\n      this.setState({ openCropModal: true })\r\n    }\r\n  }\r\n\r\n  onImageLoaded = image => {\r\n    this.imageRef = image\r\n  }\r\n\r\n  onCropChange = (crop) => {\r\n    this.setState({ crop });\r\n  }\r\n\r\n  onCropComplete = crop => {\r\n    if (this.imageRef && crop.width && crop.height) {\r\n      const croppedImageUrl = this.getCroppedImg(this.imageRef, crop)\r\n      this.setState({ croppedImageUrl })\r\n    }\r\n  }\r\n\r\n  getCroppedImg(image, crop) {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    \r\n    ctx.imageSmoothingQuality = 'high';\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    )\r\n\r\n    const reader = new FileReader()\r\n    canvas.toBlob(blob => {\r\n\r\n      let r = cryptoRandomString({ length: 30 });\r\n      //console.log(\"random\", r);\r\n      reader.readAsDataURL(blob)\r\n      reader.onloadend = () => {\r\n        this.dataURLtoFile(reader.result, r + '.jpg')\r\n      }\r\n    })\r\n  }\r\n  dataURLtoFile(dataurl, filename) {\r\n    let arr = dataurl.split(','),\r\n      mime = arr[0].match(/:(.*?);/)[1],\r\n      bstr = atob(arr[1]),\r\n      n = bstr.length,\r\n      u8arr = new Uint8Array(n);\r\n\r\n    while (n--) {\r\n      u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    let croppedImage = new File([u8arr], filename, { type: mime });\r\n    this.setState({ croppedImage: croppedImage })\r\n  }\r\n  //===end of crop image\r\n\r\n\r\n  validateSession() {\r\n\r\n    const urlParams = queryString.parse(window.location.search);\r\n    const code = urlParams.code;  \r\n    localStorage.setItem('token', code);\r\n    var JM_ID = parseInt(localStorage.getItem('JM_ID'));\r\n\r\n    API.autoLogout();\r\n\r\n    if (isNaN(JM_ID) || JM_ID === 0 || JM_ID === null) {\r\n      // if (typeof code === \"undefined\") \r\n      // {\r\n      localStorage.setItem('JM_Email', \"\");\r\n      localStorage.setItem('JM_ID', 0);\r\n      window.location.href = '/';\r\n      // }\r\n      // else \r\n      // {\r\n      // let token = this.getAccessTokenFromCode(code);\r\n      //this.getFacebookUserData(token);\r\n\r\n      // }\r\n\r\n\r\n    }\r\n    //else  if (code !== 'undefined') \r\n    //{\r\n    //     axios.post('https://api.instagram.com/oauth/access_token', queryString.stringify({\r\n    //     client_id: '480886739775031',\r\n    //     client_secret: '8208035d75f168409c41a05a1d81fe77',\r\n    //     grant_type: 'authorization_code',\r\n    //     redirect_uri: process.env.REACT_APP_API_URL+'me',\r\n    //     code: code\r\n    //     }))\r\n    //     .then(response => {\r\n    //         //console.log(response.data) \r\n    //         var token=response.data.access_token;\r\n    //         var user_id=response.data.user_id;\r\n    //         var url=\"https://graph.instagram.com/\"+user_id+\"?fields=id,username&access_token=\"+token;\r\n\r\n    //               axios.get(url)\r\n    //               .then(function (response) {                 \r\n    //                 //console.log(response);\r\n    //               })\r\n    //               .catch(function (error) {        \r\n    //                 //console.log(error);\r\n    //               })\r\n    //               .then(function () {               \r\n    //               });\r\n    //       })\r\n    //     .catch(error => {\r\n    //         //console.log(error)\r\n    //     })\r\n    // }\r\n\r\n\r\n\r\n  }\r\n\r\n  async getAccessTokenFromCode(code) {\r\n\r\n    const { data } = await axios({\r\n      url: 'https://graph.facebook.com/v4.0/oauth/access_token',\r\n      method: 'get',\r\n      params: {\r\n        client_id: process.env.REACT_APP_FACEBOOK_APP_ID,\r\n        client_secret: process.env.REACT_APP_Secret_Key,\r\n        redirect_uri: process.env.REACT_APP_API_URL + 'me',\r\n        code,\r\n      },\r\n    });\r\n    //console.log(data); // { access_token, token_type, expires_in }\r\n    //return data.access_token;\r\n    this.getFacebookUserData(data.access_token);\r\n  }\r\n  async getFacebookUserData(access_token) {\r\n    //console.log(access_token);\r\n\r\n    const { data } = await axios({\r\n      url: 'https://graph.facebook.com/me',\r\n      method: 'get',\r\n      params: {\r\n        fields: ['id', 'email', 'first_name', 'last_name'].join(','),\r\n        access_token: access_token,\r\n      },\r\n    });\r\n    //console.log(data.email); // { id, email, first_name, last_name }\r\n\r\n\r\n    if (data != null && data.email.length > 0 && data.id.length > 0) {\r\n      let API_url = process.env.REACT_APP_API_URL + \"admin/socialLogin\";\r\n      // var JSONdata  = {           \r\n      //     JM_Email:this.state.JM_Email,\r\n      //     JM_Password:this.state.JM_Password              \r\n      //   };\t\r\n      fetch(API_url, {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(data)\r\n      }).then(function (response) {\r\n        return response.json();\r\n      }).then(result => {\r\n        if (result.status === 1) {\r\n          //console.log(data.msg);\r\n          localStorage.setItem('JM_ID', result.JM_ID);\r\n          localStorage.setItem('JM_Email', data.email);\r\n          this.Get_User_Details();\r\n        }\r\n        else {\r\n          //console.log(\"failed to insert or fetch\")\r\n          localStorage.setItem('JM_Email', \"\");\r\n          localStorage.setItem('JM_ID', 0);\r\n          window.location.href = '/';\r\n        }\r\n      });\r\n\r\n    }\r\n\r\n    // return data;\r\n  };\r\n\r\n  async Get_User_Details() {\r\n    var id = parseInt(localStorage.getItem('JM_ID'));\r\n    var JSONdata = {\r\n       JM_ID: id\r\n    };\r\n    const API_url = this.state.base_url + \"admin/userDetailsAll\";\r\n    const response = await fetch(API_url, {\r\n      method: 'post',\r\n      headers: { \"Content-Type\": \"application/json\",\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n      body: JSON.stringify(JSONdata)\r\n    });\r\n    const data1 = await response.json();\r\n   \r\n    if (data1 != null && data1.status > 0) \r\n    {\r\n      const data=API.decryptJson(data1.flag);\r\n      this.setState({\r\n        userDetailsAll: data.data,\r\n        userDetails: data.userDetails,\r\n        themeMasterUser: data.themeMasterUser,\r\n        socialWidget: data.socialWidget,\r\n        gifts: data.gifts,\r\n        category_master: data.category_master,\r\n        JM_Name: data.userDetails[0].JM_Name,\r\n        JM_Description: data.userDetails[0].JM_Description,\r\n        isBlocked: data.userDetails[0].isBlocked,\r\n        Ref_Code: data.userDetails[0].JM_User_Profile_Url + \"-\" + data.userDetails[0].JM_ID,\r\n        old_url: data.userDetails[0].JM_User_Profile_Url,\r\n        TM_Bio_Color: data.themeMasterUser[0].TM_Bio_Color,\r\n        TM_Name_Color: data.themeMasterUser[0].TM_Name_Color,\r\n        TM_Footer_Color: data.themeMasterUser[0].TM_Footer_Color,\r\n        activeNameBio_color: data.themeMasterUser[0].TM_Bio_Color,\r\n        JM_NewsLetter_Title: data.userDetails[0].JM_NewsLetter_Title,\r\n        JM_NewsLetter_Active: data.userDetails[0].JM_NewsLetter_Active,\r\n        JM_Gift_Active:data.userDetails[0].JM_Gift_Active,\r\n        JM_Steps: data.userDetails[0].JM_Steps,\r\n        JM_Gift_Title:data.userDetails[0].JM_Gift_Title,\r\n        JM_Checkout_My_Social:data.userDetails[0].JM_Checkout_My_Social,\r\n      });\r\n\r\n      this.Update_ReferralCode(this.state.Ref_Code);\r\n\r\n      if(this.state.JM_Steps===0)\r\n         this.setState({ open: true })\r\n      //console.log(\"myprofile2\")\r\n      //console.log(data)\r\n\r\n    }\r\n\r\n    if (this.state.isBlocked === 1) \r\n    {\r\n      window.location.href = process.env.REACT_APP_ROOT_URL;\r\n    }\r\n    this.setCheckBoxes();\r\n    //console.log(data);\r\n\r\n  }\r\n  //MS2\r\n  Update_ReferralCode = (original_code) => {\r\n    var id = parseInt(localStorage.getItem('JM_ID'));\r\n\r\n    var JSONdata = {\r\n      JM_ID: id,\r\n      Code: this.state.Ref_Code\r\n    };\r\n    const API_url = process.env.REACT_APP_API_URL + \"admin/Update_ReferralCode\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        //console.log(data)\r\n      });\r\n\r\n  }\r\n  openModal = () => {\r\n    !this.state.open ?\r\n      this.setState({ open: true })\r\n      :\r\n      this.setState({ open: false })\r\n\r\n  }\r\n\r\n  doDeleteLink = e => {\r\n    // var id=document.getElementById('hidden').value;\r\n    const LM_ID = e.currentTarget.dataset.remove;\r\n    var JSONdata = {\r\n      LM_ID: LM_ID\r\n    };\r\n    const API_url = this.state.base_url + \"admin/deleteLink\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.Get_User_Details();\r\n          this.refreshMobileView();\r\n        }\r\n        else\r\n          alert('not fetch');\r\n      });\r\n  }\r\n  //doDeleteLinkSocial\r\n  doDeleteLinkSocial = e => {\r\n    // var id=document.getElementById('hidden').value;\r\n    const SWM_ID = e.currentTarget.dataset.remove;\r\n    var JSONdata = {\r\n      SWM_ID: SWM_ID\r\n    };\r\n    const API_url = this.state.base_url + \"admin/deleteLinkSocial\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.Get_User_Details();\r\n          this.refreshMobileView();\r\n        }\r\n        else\r\n          alert('not fetch');\r\n      });\r\n  }\r\n\r\n  doDeleteCategory = e => {\r\n    // var id=document.getElementById('hidden').value;\r\n    const CM_ID = e.currentTarget.dataset.remove;\r\n    var JSONdata = {\r\n      CM_ID: CM_ID,\r\n      JM_ID: this.state.JM_ID\r\n    };\r\n    const API_url = this.state.base_url + \"admin/deleteCategory\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\",\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.Get_User_Details();\r\n          this.refreshMobileView();\r\n        }\r\n        else\r\n          alert('not fetch');\r\n      });\r\n  }\r\n  doDeleteEmbed = e => {\r\n    const EC_ID = e.currentTarget.dataset.remove;\r\n    var JSONdata = {\r\n      EC_ID: EC_ID\r\n    };\r\n    const API_url = this.state.base_url + \"admin/deleteEmbed\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.Get_User_Details();\r\n          this.refreshMobileView();\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'profile is updated',\r\n            // isLoading:true   \r\n          });\r\n        }\r\n        else\r\n          alert('not fetch');\r\n      });\r\n  }\r\n\r\n  setStateAfterInsert = (currentState) => {\r\n    this.setState({\r\n      userDetailsAll: currentState.userDetailsAll,\r\n      themeMasterUser: currentState.themeMasterUser,\r\n      userDetails: currentState.userDetails,\r\n      socialWidget: currentState.socialWidget,\r\n      gifts: currentState.gifts,\r\n      category_master: currentState.category_master,\r\n      show: true,\r\n      title: currentState.title,\r\n      msg: currentState.msg,\r\n    });\r\n    this.refreshMobileView();\r\n    this.setCheckBoxes();\r\n  }\r\n  setCheckBoxes = () => {\r\n    var checkedBoxes = [];\r\n    if (this.state.userDetailsAll != null && this.state.userDetailsAll.length > 0) {\r\n      let len = this.state.userDetailsAll.length;\r\n      for (var j = 0; j < len; j++) {\r\n        if (this.state.userDetailsAll[j].ItemType === 'customlink') {\r\n          if (this.state.userDetailsAll[j].activeInactive === 1) {\r\n            checkedBoxes.push(this.state.userDetailsAll[j]);\r\n          }\r\n          else {\r\n            // const index = checkedBoxes.findIndex((ch) => (ch.tableId === this.state.userDetailsAll[j].tableId && ch.ItemType= === 'customlink');     \r\n            const index = checkedBoxes.findIndex(element => element.tableId === this.state.userDetailsAll[j].tableId && element.ItemType === 'customlink');\r\n            // document.getElementById('lnk_item_' + this.state.userDetailsAll[j].tableId +\"_\"+ this.state.userDetailsAll[j].ItemType).style.opacity = '0.5';\r\n          }\r\n        }\r\n        if (this.state.userDetailsAll[j].ItemType === 'category') {\r\n          if (this.state.userDetailsAll[j].activeInactive === 1) {\r\n            checkedBoxes.push(this.state.userDetailsAll[j]);\r\n          }\r\n          else {\r\n            // const index = checkedBoxes.findIndex((ch) => (ch.tableId === this.state.userDetailsAll[j].tableId && ch.ItemType= === 'customlink');     \r\n            const index = checkedBoxes.findIndex(element => element.tableId === this.state.userDetailsAll[j].tableId && element.ItemType === 'category');\r\n            // document.getElementById('lnk_item_' + this.state.userDetailsAll[j].tableId +\"_\"+ this.state.userDetailsAll[j].ItemType).style.opacity = '0.5';\r\n          }\r\n        }\r\n        if (this.state.userDetailsAll[j].ItemType === 'embedcontent') {\r\n          if (this.state.userDetailsAll[j].activeInactive === 1) {\r\n            checkedBoxes.push(this.state.userDetailsAll[j]);\r\n          }\r\n          else {\r\n            // const index = checkedBoxes.findIndex((ch) => (ch.tableId === this.state.userDetailsAll[j].tableId && ch.ItemType= === 'customlink');     \r\n            const index = checkedBoxes.findIndex(element => element.tableId === this.state.userDetailsAll[j].tableId && element.ItemType === 'embedcontent');\r\n            // document.getElementById('lnk_item_' + this.state.userDetailsAll[j].tableId +\"_\"+ this.state.userDetailsAll[j].ItemType).style.opacity = '0.5';\r\n          }\r\n        }\r\n        if (this.state.userDetailsAll[j].ItemType === 'premium' || this.state.userDetailsAll[j].ItemType === 'carousel') {\r\n          if (this.state.userDetailsAll[j].activeInactive === 1) {\r\n            checkedBoxes.push(this.state.userDetailsAll[j]);\r\n          }\r\n          else {\r\n            const index = checkedBoxes.findIndex(element => element.tableId === this.state.userDetailsAll[j].tableId && element.ItemType === 'premium');\r\n          }\r\n        }\r\n        if (this.state.userDetailsAll[j].ItemType === 'socialBar') {\r\n          if (this.state.userDetailsAll[j].activeInactive === 1) {\r\n            checkedBoxes.push(this.state.userDetailsAll[j]);\r\n          }\r\n          else {\r\n            const index = checkedBoxes.findIndex(element => element.tableId === this.state.userDetailsAll[j].tableId && element.ItemType === 'socialBar');\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (this.state.socialWidget != null && this.state.socialWidget.length > 0) {\r\n      let len = this.state.socialWidget.length;\r\n      for (var k = 0; k < len; k++) {\r\n        if (this.state.socialWidget[k].SWM_Active === 1 && this.state.socialWidget[k].SWM_Style_Type === 'W') {\r\n          checkedBoxes.push(this.state.socialWidget[k]);\r\n\r\n        }\r\n        else {\r\n          const index = checkedBoxes.findIndex((ch) => ch.SWM_ID === this.state.socialWidget[k].SWM_ID);\r\n          //document.getElementById('lnk_item_' + this.state.socialWidget[k].SWM_ID).style.opacity = '0.5';\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n\r\n    if (this.state.JM_NewsLetter_Active === 1) \r\n    {\r\n      checkedBoxes.push({ creatorId: this.state.JM_ID, JM_NewsLetter_Title: this.state.JM_NewsLetter_Title,JM_NewsLetter_Active:this.state.JM_NewsLetter_Active });\r\n    }\r\n    // else \r\n    // {\r\n    //   const index = checkedBoxes.findIndex((ch) => ch.creatorId === this.state.JM_ID);\r\n    // }\r\n    if (this.state.JM_Gift_Active === 1) \r\n    {\r\n      checkedBoxes.push({ creatorId: this.state.JM_ID, JM_Gift_Title: this.state.JM_Gift_Title ,JM_Gift_Active:this.state.JM_Gift_Active});\r\n    }\r\n    // else \r\n    // {\r\n    //   const index = checkedBoxes.findIndex((ch) => ch.creatorId === this.state.JM_ID);\r\n    // }\r\n\r\n\r\n    this.setState({\r\n      checkedBoxes\r\n    });\r\n\r\n    //console.log(this.state.checkedBoxes)\r\n  }\r\n\r\n  doCopy = () => {\r\n    /* Get the text field */\r\n    var copyText = document.getElementById(\"copy_text\").innerText;\r\n    alert(\"Copied the text: \" + copyText);\r\n  }\r\n  doOut = () => {\r\n    var tooltip = document.getElementById(\"myTooltip\");\r\n    tooltip.innerHTML = \"Copy to clipboard\";\r\n  }\r\n  doActive = item => e => {\r\n\r\n    const checkedBoxes = [...this.state.checkedBoxes];\r\n    let LM_Active = 0;\r\n    if (e.target.checked) {\r\n      checkedBoxes.push(item);\r\n      LM_Active = 1;\r\n      // document.getElementById('lnk_item_' + item.tableId+\"_\"+item.ItemType).style.opacity = '1';\r\n    } else {\r\n      const index = checkedBoxes.findIndex((ch) => ch.tableId === item.tableId);\r\n      checkedBoxes.splice(index, 1);\r\n      //document.getElementById('lnk_item_' + item.tableId+\"_\"+item.ItemType).style.opacity = '0.5';\r\n    }\r\n    this.setState({ checkedBoxes });\r\n\r\n    var JSONdata = {\r\n      LM_ID: item.tableId,\r\n      LM_Active: LM_Active\r\n    };\r\n\r\n    const API_url = this.state.base_url + \"admin/updateActiveLink\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Profile is updated',\r\n            // isLoading:true   \r\n          });\r\n          this.refreshMobileView();\r\n\r\n\r\n        }\r\n        else {\r\n          this.setState({\r\n            show: true,\r\n            title: 'error!!!',\r\n            msg: 'Profile is not updated',\r\n            // isLoading:true   \r\n          });\r\n        }\r\n      });\r\n\r\n\r\n  }\r\n  doActiveCategoryMaster = item => e => {\r\n\r\n    const checkedBoxes = [...this.state.checkedBoxes];\r\n    let CM_Active_Status = 0;\r\n    if (e.target.checked) {\r\n      checkedBoxes.push(item);\r\n      CM_Active_Status = 1;\r\n      // document.getElementById('lnk_item_' + item.tableId+\"_\"+item.ItemType).style.opacity = '1';\r\n    } else {\r\n      const index = checkedBoxes.findIndex((ch) => ch.tableId === item.tableId);\r\n      checkedBoxes.splice(index, 1);\r\n      //  document.getElementById('lnk_item_' + item.tableId+\"_\"+item.ItemType).style.opacity = '0.5';\r\n    }\r\n    this.setState({ checkedBoxes });\r\n\r\n    var JSONdata = {\r\n      CM_ID: item.tableId,\r\n      CM_Active_Status: CM_Active_Status\r\n    };\r\n\r\n    const API_url = this.state.base_url + \"admin/updateActiveCategory\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Profile is updated',\r\n            // isLoading:true   \r\n          });\r\n          this.refreshMobileView();\r\n\r\n\r\n        }\r\n        else {\r\n          this.setState({\r\n            show: true,\r\n            title: 'error!!!',\r\n            msg: 'Profile is not updated',\r\n            // isLoading:true   \r\n          });\r\n        }\r\n      });\r\n\r\n\r\n  }\r\n  doActiveEmbed = item => e => {\r\n\r\n    const checkedBoxes = [...this.state.checkedBoxes];\r\n    let LM_Active = 0;\r\n    if (e.target.checked) {\r\n      checkedBoxes.push(item);\r\n      LM_Active = 1;\r\n      // document.getElementById('lnk_item_' + item.tableId).style.opacity = '1';\r\n    } else {\r\n      const index = checkedBoxes.findIndex((ch) => ch.tableId === item.tableId);\r\n      checkedBoxes.splice(index, 1);\r\n      //document.getElementById('lnk_item_' + item.tableId).style.opacity = '0.5';\r\n    }\r\n    this.setState({ checkedBoxes });\r\n\r\n    var JSONdata = {\r\n      EC_ID: item.tableId,\r\n      LM_Active: LM_Active\r\n    };\r\n\r\n    const API_url = this.state.base_url + \"admin/updateActiveEmbed\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Profile is updated',\r\n            // isLoading:true   \r\n          });\r\n          this.refreshMobileView();\r\n\r\n\r\n        }\r\n        else {\r\n          this.setState({\r\n            show: true,\r\n            title: 'error!!!',\r\n            msg: 'Profile is not updated',\r\n            // isLoading:true   \r\n          });\r\n        }\r\n      });\r\n\r\n\r\n  }\r\n  doActiveSocialWidget = item => e => {\r\n    this.setState({\r\n      // isLoading:true   \r\n    });\r\n    const checkedBoxes = [...this.state.checkedBoxes];\r\n    let SWM_Active = 0;\r\n    if (e.target.checked) {\r\n      checkedBoxes.push(item);\r\n      SWM_Active = 1;\r\n    } else {\r\n      const index = checkedBoxes.findIndex((ch) => ch.SWM_ID === item.SWM_ID);\r\n      checkedBoxes.splice(index, 1);\r\n    }\r\n    this.setState({ checkedBoxes });\r\n\r\n    var JSONdata = {\r\n      SWM_ID: item.SWM_ID,\r\n      SWM_Active: SWM_Active\r\n    };\r\n\r\n    const API_url = this.state.base_url + \"admin/updateActiveLinkSocial\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Profile is updated',\r\n            // isLoading:true   \r\n          });\r\n          this.refreshMobileView();\r\n\r\n          //this.reload();\r\n          // alert(data.msg);\r\n          this.setState({\r\n            // isLoading:false   \r\n          });\r\n        }\r\n        else {\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Failed to Update'\r\n          });\r\n\r\n        }\r\n      });\r\n  }\r\n\r\n  //MS2\r\n  doActiveSocialBar = item => e => {\r\n\r\n    const checkedBoxes = [...this.state.checkedBoxes];\r\n    let SWM_Active = 0;\r\n    if (e.target.checked) {\r\n      checkedBoxes.push(item);\r\n      SWM_Active = 1;\r\n    } else {\r\n      const index = checkedBoxes.findIndex((ch) => ch.tableId === item.tableId);\r\n      checkedBoxes.splice(index, 1);\r\n    }\r\n    this.setState({ checkedBoxes });\r\n\r\n    var JSONdata = {\r\n      SWM_ID: item.tableId,\r\n      SWM_Active: SWM_Active\r\n    };\r\n\r\n    const API_url = this.state.base_url + \"admin/updateActiveLinkSocial\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Profile is updated',\r\n            // isLoading:true   \r\n          });\r\n          this.refreshMobileView();\r\n\r\n          //this.reload();\r\n          // alert(data.msg);\r\n          this.setState({\r\n            // isLoading:false   \r\n          });\r\n        }\r\n        else {\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Failed to Update'\r\n          });\r\n\r\n        }\r\n      });\r\n  }\r\n  //newsletter\r\n  doActiveNewsLetter = id => e => {\r\n    const checkedBoxes = [...this.state.checkedBoxes];\r\n    let JM_NewsLetter_Active = 0;\r\n    if (e.target.checked) {\r\n      checkedBoxes.push({ JM_ID: id, JM_NewsLetter_Active: 1 });\r\n      JM_NewsLetter_Active = 1;\r\n    }\r\n    else {\r\n      const index = checkedBoxes.findIndex((ch) => ch.JM_ID === id);\r\n      checkedBoxes.splice(index, 1);\r\n    }\r\n    this.setState({ checkedBoxes });\r\n    var JSONdata = {\r\n      JM_ID: id,\r\n      JM_NewsLetter_Active: JM_NewsLetter_Active,\r\n      JM_NewsLetter_Title: '',\r\n      type: 'active'\r\n    };\r\n\r\n    const API_url = this.state.base_url + \"admin/updateActiveNewsLetter\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Profile is updated',\r\n          });\r\n          this.refreshMobileView();\r\n        }\r\n        else {\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Failed to Update'\r\n          });\r\n\r\n        }\r\n      });\r\n\r\n  }\r\n//13-jul-2021\r\ndoActiveVartualGift = id => e => {\r\n  const checkedBoxes = [...this.state.checkedBoxes];\r\n  let JM_Gift_Active = 0;\r\n  if (e.target.checked) {\r\n    checkedBoxes.push({ JM_ID: id, JM_Gift_Active: 1 });\r\n    JM_Gift_Active = 1;\r\n  }\r\n  else {\r\n    const index = checkedBoxes.findIndex((ch) => ch.JM_ID === id && ch.JM_Gift_Active===1);\r\n    checkedBoxes.splice(index, 1);\r\n  }\r\n  this.setState({ checkedBoxes });\r\n  var JSONdata = {\r\n    JM_ID: id,\r\n    JM_Gift_Active: JM_Gift_Active,\r\n    JM_Gift_Title: '',\r\n    type: 'active'\r\n  };\r\n\r\n  const API_url = this.state.base_url + \"admin/updateActiveVartualGift\";\r\n  fetch(API_url,\r\n    {\r\n      method: 'post',\r\n      headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n      body: JSON.stringify(JSONdata)\r\n    })\r\n    .then((response) => response.json())\r\n    .then(data => {\r\n      if (data.status === 1) {\r\n\r\n        this.setState({\r\n          show: true,\r\n          title: 'Success!!!',\r\n          msg: 'Profile is updated',\r\n        });\r\n        this.refreshMobileView();\r\n      }\r\n      else {\r\n        this.setState({\r\n          show: true,\r\n          title: 'Success!!!',\r\n          msg: 'Failed to Update'\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n}\r\nEditGiftTitle=e=>{\r\n  this.setState({\r\n    showTitleModal:true\r\n  })\r\n }\r\nupdateGiftTitle=id=>async e=>{\r\n \r\n\r\n  document.getElementById('msg_title').innerHTML=''; document.getElementById('msg_title').style.color='red';\r\n  if(this.state.JM_Gift_Title.length===0)\r\n  {\r\n    document.getElementById('msg_title').innerHTML='Empty Title';\r\n    return false;\r\n  }\r\n  var data=await API.updateJoiningMaster(this.state.JM_Gift_Title,'JM_Gift_Title',this.state.JM_ID)  \r\n  if (data.status === 1) \r\n  {\r\n    document.getElementById('msg_title').style.color='green';\r\n    document.getElementById('msg_title').innerHTML='Title is updated';\r\n    //this.Get_User_Details();\r\n    this.refreshMobileView();\r\n  }\r\n  else\r\n  {\r\n    document.getElementById('msg_title').style.color='red';\r\n    document.getElementById('msg_title').innerHTML='Internal error, try again later'\r\n  }\r\n}\r\nupdateCheckoutSocialTitle=id=>async e=>{ \r\n\r\n  document.getElementById('msg_social').innerHTML='';document.getElementById('msg_social').style.color='red';\r\n  if(this.state.JM_Checkout_My_Social.length===0)\r\n  {\r\n    document.getElementById('msg_social').innerHTML='Empty Title';\r\n    return false;\r\n  }\r\n  var data=await API.updateJoiningMaster(this.state.JM_Checkout_My_Social,'JM_Checkout_My_Social',this.state.JM_ID)  \r\n  if (data.status === 1)\r\n  {\r\n    document.getElementById('msg_social').style.color='green';\r\n    document.getElementById('msg_social').innerHTML='Title is updated';\r\n    this.Get_User_Details();\r\n    this.refreshMobileView();\r\n    \r\n  }\r\n  else\r\n  {\r\n    document.getElementById('msg_social').style.color='red';\r\n    document.getElementById('msg_social').innerHTML='Internal error, try again later';\r\n  }\r\n}\r\n\r\n//\r\n\r\n  doActivePremium = item => e => {\r\n\r\n    const checkedBoxes = [...this.state.checkedBoxes];\r\n    let DA_Active = 0;\r\n    if (e.target.checked) {\r\n      checkedBoxes.push(item);\r\n      DA_Active = 1;\r\n      //document.getElementById('lnk_item_' + item.tableId).style.opacity = '1';\r\n    } else {\r\n      const index = checkedBoxes.findIndex((ch) => ch.tableId === item.tableId);\r\n      checkedBoxes.splice(index, 1);\r\n      //document.getElementById('lnk_item_' + item.tableId).style.opacity = '0.5';\r\n    }\r\n    this.setState({ checkedBoxes });\r\n\r\n    var JSONdata = {\r\n      DA_ID: item.tableId,\r\n      DA_Active: DA_Active\r\n    };\r\n\r\n    const API_url = this.state.base_url + \"admin/updateActivePremium\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Profile is updated',\r\n            // isLoading:true   \r\n          });\r\n          this.refreshMobileView();\r\n\r\n\r\n        }\r\n        else {\r\n          this.setState({\r\n            show: true,\r\n            title: 'error!!!',\r\n            msg: 'Profile is not updated',\r\n            // isLoading:true   \r\n          });\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  showToast = () => {\r\n    this.setState({ show: true })\r\n  }\r\n  hideToast = () => {\r\n    this.setState({ show: false })\r\n  }\r\n\r\n  DirectAccess = () => {\r\n\r\n    let JM_ID = 0; let JM_User_Profile_Url = \"\"; let JM_Referral = \"NA\";\r\n    if (this.state.userDetails != null && this.state.userDetails.length > 0) {\r\n      JM_ID = this.state.userDetails[0].JM_ID;\r\n      JM_User_Profile_Url = this.state.userDetails[0].JM_User_Profile_Url;\r\n      JM_Referral = this.state.userDetails[0].JM_Referral;\r\n    }\r\n    // if(JM_Referral==='NA')\r\n    // {\r\n    //   this.setState({\r\n    //     openRefModal:true\r\n    //   })\r\n    //   return false;\r\n    // }\r\n    //if(JM_Referral!=='NA')\r\n    // {\r\n    this.props.history.push(\"/premium-feature\");\r\n    this.props.history.push({\r\n      state: {\r\n        directAccess: this.state.directAccess,\r\n        JM_ID: JM_ID,\r\n        JM_User_Profile_Url: JM_User_Profile_Url,\r\n      }\r\n    })\r\n    //}\r\n\r\n    //console.log(this.props);\r\n  }\r\n  //23-jun-2021\r\n  ImageCarousel = (e) => {\r\n    let JM_ID = 0; let JM_User_Profile_Url = \"\"; let JM_Referral = \"NA\";\r\n    if (this.state.userDetails != null && this.state.userDetails.length > 0) {\r\n      JM_ID = this.state.userDetails[0].JM_ID;\r\n      JM_User_Profile_Url = this.state.userDetails[0].JM_User_Profile_Url;\r\n      JM_Referral = this.state.userDetails[0].JM_Referral;\r\n    }\r\n    this.props.history.push(\"/create-carousel\");\r\n    this.props.history.push({\r\n      state: {\r\n        directAccess: this.state.directAccess,\r\n        JM_ID: JM_ID,\r\n        JM_User_Profile_Url: JM_User_Profile_Url,\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  EmbedContent = () => {\r\n\r\n  }\r\n  doCopied = (e) => {\r\n    //  document.getElementById(\"copy_icon\").compareDocumentPosition\r\n    //e.target.innerHTML = 'Copied';\r\n    //  e.target.style.background = 'black';\r\n    document.getElementById(\"copy_icon\").style.color = 'black';\r\n\r\n  }\r\n\r\n  deleteGift = (e) => {\r\n    const DA_ID = e.currentTarget.dataset.remove;\r\n    const type = e.currentTarget.dataset.type;\r\n    let ProfileUrl = e.currentTarget.dataset.profileurl;\r\n    var JSONdata;\r\n    var fileName = e.currentTarget.dataset.filename;\r\n\r\n    JSONdata = {\r\n      DA_ID: DA_ID,\r\n      profileName: ProfileUrl,\r\n      fileName: fileName\r\n    };\r\n    const API_url = this.state.base_url + \"admin/deleteProduct\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.Get_User_Details();\r\n          this.refreshMobileView();\r\n        }\r\n        else\r\n          alert('not fetch');\r\n      });\r\n  }\r\n  deleteProduct = (e) => {\r\n    //DA_Type\r\n    let fileNameArr = JSON.parse(e.currentTarget.dataset.filename);\r\n    let fileName = \"\";\r\n    const DA_ID = e.currentTarget.dataset.remove;\r\n    const type = e.currentTarget.dataset.type;\r\n    let ProfileUrl = e.currentTarget.dataset.profileurl;\r\n\r\n    var JSONdata;\r\n    if (type === \"video\") \r\n    {\r\n      if (fileNameArr !== null && fileNameArr.length > 0)\r\n        fileName = fileNameArr[0]\r\n        JSONdata = {\r\n          DA_ID: DA_ID,\r\n          profileName: ProfileUrl,\r\n          fileName: fileName\r\n        };\r\n    }\r\n    if (type === \"audio\") \r\n    {\r\n      if (fileNameArr !== null && fileNameArr.length > 0)\r\n        fileName = fileNameArr[0]\r\n      JSONdata = {\r\n        DA_ID: DA_ID,\r\n        profileName: ProfileUrl,\r\n        fileName: fileName\r\n      };\r\n    }\r\n    if (type === \"image\") \r\n    {\r\n      if (fileNameArr !== null && fileNameArr.length > 0)\r\n        fileName = fileNameArr[0]\r\n      JSONdata = {\r\n        DA_ID: DA_ID,\r\n        profileName: ProfileUrl,\r\n        fileName: fileName\r\n      };\r\n    }\r\n    if (type === \"NA\" || type === \"contest\" ) \r\n    {\r\n      JSONdata = {\r\n        DA_ID: DA_ID,\r\n        profileName: ProfileUrl,\r\n        fileName: \"\"\r\n      };\r\n    }\r\n    if (type === \"album\") {\r\n      if (fileNameArr !== null && fileNameArr.length > 0)\r\n        fileName = fileNameArr\r\n      JSONdata = {\r\n        DA_ID: DA_ID,\r\n        profileName: ProfileUrl,\r\n        fileName: fileName\r\n      };\r\n    }\r\n    if (type === \"carousel\") {\r\n      if (fileNameArr !== null && fileNameArr.length > 0)\r\n          fileName = fileNameArr\r\n      JSONdata = {\r\n        DA_ID: DA_ID,\r\n        profileName: ProfileUrl,\r\n        fileName: fileName\r\n      };\r\n    }\r\n    const API_url = this.state.base_url + \"admin/deleteProduct\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) \r\n        {\r\n          this.setState({\r\n            title: 'info !!!',\r\n            msg: 'Item is deleted successfully',\r\n            show: true\r\n          })\r\n          this.Get_User_Details();\r\n          this.refreshMobileView();\r\n        }\r\n        else {\r\n          //alert('not fetch');\r\n          this.setState({\r\n            title: 'info !!!',\r\n            msg: data.msg,\r\n            show: true\r\n          })\r\n        }\r\n      });\r\n\r\n\r\n  }\r\n\r\n  //27-jul-2021 video session delete\r\n  deleteVideoSession=async (e)=>{  \r\n      const DA_ID = e.currentTarget.dataset.remove;\r\n        var  JSONdata = {\r\n          DA_ID: DA_ID,\r\n          JM_ID:this.state.JM_ID       \r\n      }\r\n        const data = await API.postData(JSONdata,'deleteVideoSession');     \r\n          if (data.status === 1) \r\n          {\r\n            this.setState({\r\n              title: 'info !!!',\r\n              msg: 'Item is deleted successfully',\r\n              show: true\r\n            })\r\n            this.Get_User_Details();\r\n            this.refreshMobileView();\r\n          }\r\n          else \r\n          {\r\n            //alert('not fetch');\r\n            this.setState({\r\n              title: 'info !!!',\r\n              msg: data.msg,\r\n              show: true\r\n            })\r\n          }\r\n     \r\n  }\r\n\r\n  //05-aug-2021\r\n  deleteContest=async (e)=>{\r\n\r\n    const DA_ID = e.currentTarget.dataset.remove;\r\n        var  JSONdata = {\r\n          DA_ID: DA_ID,\r\n          JM_ID:this.state.JM_ID       \r\n      }\r\n         const data = await API.postData(JSONdata,'deleteContest');     \r\n          if (data.status === 1) \r\n          {\r\n            this.setState({\r\n              title: 'info !!!',\r\n              msg: 'Item is deleted successfully',\r\n              show: true\r\n            })\r\n            this.Get_User_Details();\r\n            this.refreshMobileView();\r\n          }\r\n          else \r\n          {\r\n            //alert('not fetch');\r\n            this.setState({\r\n              title: 'info !!!',\r\n              msg: data.msg,\r\n              show: true\r\n            })\r\n          }\r\n\r\n  }\r\n\r\n\r\n\r\n  isConfirm = () => {\r\n\r\n    if(this.state.JM_User_Profile_Url.length ===0)\r\n    {\r\n      document.getElementById(\"msg\").innerHTML = '* Enter url';\r\n      return false;\r\n    }\r\n    if (this.state.old_url === this.state.JM_User_Profile_Url) \r\n    {\r\n      document.getElementById(\"msg\").innerHTML = 'Nothing to change';    \r\n      return false;\r\n    }\r\n\r\n\r\n    confirmAlert({\r\n      title: 'Confirm Change',\r\n      message: 'Are you sure you want to change your username? You will be able to change it again upon page refresh.',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => this.doEditUrl()\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => console.log(\"cancel is clicked\")\r\n        }\r\n      ],\r\n      closeOnEscape: false,\r\n      closeOnClickOutside: false,\r\n    });\r\n  };\r\n\r\n  uploadProfilePic = (e) => {\r\n\r\n    const file = e.target.files[0];\r\n    this.setState({ selectedFile: e.target.files[0] });\r\n    this.setState({\r\n      selectedFile: file\r\n    }, () => {\r\n      //console.log(this.state.selectedFile);\r\n      this.uploadPic();\r\n\r\n    });\r\n    this.setState({\r\n      JM_Profile_Pic: URL.createObjectURL(file)\r\n    });\r\n\r\n  }\r\n  uploadPic = (e) => {\r\n    e.preventDefault();\r\n\r\n    let JM_User_Profile_Url = \"\";\r\n    if (this.state.userDetails != null && this.state.userDetails.length > 0) {\r\n      JM_User_Profile_Url = this.state.userDetails[0].JM_User_Profile_Url;\r\n    }\r\n    const formData = new FormData();\r\n\r\n    let Api_url = this.state.base_url + 'admin/profileImageFromProfile';\r\n    formData.append('sampleFile', this.state.croppedImage)\r\n    formData.append('JM_ID', this.state.JM_ID)\r\n    formData.append('JM_User_Profile_Url', JM_User_Profile_Url)\r\n\r\n    const options = {\r\n      onUploadProgress: (progressEvent) => {\r\n        const { loaded, total } = progressEvent;\r\n        let percent = Math.floor((loaded * 100) / total)\r\n        //console.log(`${loaded}kb of ${total}kb | ${percent}%`);\r\n\r\n        if (percent < 100) {\r\n          this.setState({ uploadPercentage: percent })\r\n        }\r\n      },\r\n        headers: {\r\n          \"authorization\": API.getAuth(),\"id\":API.getId()\r\n        },\r\n    }\r\n\r\n    axios.post(Api_url, formData, options).then(res => {\r\n      if (res.data.status === 1) \r\n      {\r\n        const data=API.decryptJson(res.data.flag);\r\n\r\n        var userDetails = data.userDetails;\r\n        if (userDetails != null && userDetails.length > 0) {\r\n          this.setState({ avatar: res.data.url, uploadPercentage: 100 }, () => {\r\n            setTimeout(() => {\r\n              this.setState({ uploadPercentage: 0 })\r\n            }, 1000);\r\n          })\r\n\r\n\r\n          this.setState({ userDetails });\r\n          this.Get_User_Details();\r\n          this.setState({\r\n            openCropModal: false\r\n          })\r\n          this.refreshMobileView();\r\n\r\n        }\r\n      }\r\n      else {\r\n        alert(\"internal error occered\");\r\n      }\r\n      //console.log(res.data)\r\n\r\n    })\r\n  }\r\n\r\n  doEditUrl = (e) => {\r\n\r\n\r\n\r\n\r\n    //e.preventDefault();\r\n    if (this.state.Validation) \r\n    {\r\n      //console.log(this.state.Validation)\r\n    }\r\n    else \r\n    {\r\n\r\n      const formData = new FormData();\r\n      let Api_url = this.state.base_url + 'admin/changeUrlByAdmin';\r\n      let old_url = this.state.old_url;\r\n      formData.append('old_url', old_url)\r\n      formData.append('JM_ID', this.state.JM_ID)\r\n      formData.append('new_url', this.state.JM_User_Profile_Url)\r\n\r\n      this.setState({\r\n        isCompletedUrlProcessing: true,\r\n        btnRequest: \"Processing...don't refresh the page!!!\"\r\n      });\r\n      fetch(Api_url, {\r\n        method: 'POST',\r\n        headers: {\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: formData\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          //console.log(data);\r\n          if (data.status === 1) {\r\n            document.getElementById(\"req_msg\").style.color = 'green';\r\n            document.getElementById(\"req_msg\").innerHTML = \"Your requested username has been applied!!\";\r\n            localStorage.setItem('JM_User_Profile_Url', this.state.JM_User_Profile_Url);\r\n            setTimeout(function () {\r\n              window.location.reload(true);\r\n            }, 2000);\r\n            //this.Get_User_Details();\r\n          }\r\n          else {\r\n            this.setState({\r\n              isCompletedUrlProcessing: false,\r\n              btnRequest: \"Change\"\r\n            });\r\n            document.getElementById(\"req_msg\").innerHTML = 'internal error, try again later';\r\n          }\r\n        })\r\n        .catch(error => {\r\n          this.setState({\r\n            isCompletedUrlProcessing: false,\r\n            btnRequest: \"Change\"\r\n          });\r\n          document.getElementById(\"req_msg\").innerHTML = 'internal error, try again later';\r\n          //console.error(error)\r\n        })\r\n\r\n    }\r\n  }\r\n  onEditChangeUrl = (e) => {\r\n    //this.setState({[e.target.name]:e.target.value});  \r\n\r\n    let Url = e.target.value.replace(/[^a-z0-9\\-\\_]/gi, \"\");\r\n    this.setState({ [e.target.name]: Url });\r\n    this.setState({ Validation: true });\r\n\r\n    if (this.state.old_url === Url) \r\n    {\r\n      document.getElementById(\"msg\").innerHTML = '';\r\n      this.setState({ Validation: true });\r\n      return false;\r\n    }\r\n\r\n    if (Url.length > 0) \r\n    {\r\n      this.setState({ Validation: false });\r\n      let API_url = this.state.base_url + \"admin/ValidateURL_Profile\";\r\n      fetch(API_url, {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify({ JM_User_Profile_Url: Url, JM_ID: this.state.JM_ID })\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          if (data.status === 1 || data.status === 2) \r\n          {\r\n            //console.log(data.msg);\r\n            document.getElementById(\"msg\").innerHTML = data.msg;\r\n            this.setState({ Validation: true });\r\n          }\r\n          else {\r\n            document.getElementById(\"msg\").innerHTML = '';\r\n            this.setState({ Validation: false });\r\n          }\r\n\r\n        });\r\n\r\n    }\r\n    else \r\n    {\r\n      document.getElementById(\"msg\").innerHTML = '* Enter url';\r\n      this.setState({ Validation: true });\r\n      return false;\r\n    }\r\n  }\r\n\r\n  openModalDynamic = id => e => {\r\n    // !this.state.openDynamic ?\r\n    //   this.setState({ openDynamic: true })\r\n    //   :\r\n    //   this.setState({ openDynamic: false })\r\n    //console.log(e)\r\n  }\r\n  reload = (e) => {\r\n    document.getElementById('iframeid').src += '';\r\n    //console.log(\"ok\")\r\n  }\r\n\r\n  onDragEndSocialWidget = (result) => {\r\n    //console.log(result)\r\n    const { destination, source, reason } = result;\r\n    if (!destination || reason === 'CANCEL') {\r\n      return;\r\n    }\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\r\n      return;\r\n    }\r\n    const socialWidget = Object.assign([], this.state.socialWidget);\r\n    const droppedUser = this.state.socialWidget[source.index];\r\n    socialWidget.splice(source.index, 1);\r\n    socialWidget.splice(destination.index, 0, droppedUser);\r\n\r\n    this.setState({ socialWidget })\r\n    //console.log(socialWidget)\r\n    this.UpdateOrderBySocialWidget(socialWidget);\r\n  }\r\n  UpdateOrderBySocialWidget = (socialWidget) => {\r\n\r\n      let flagData = {\r\n      socialWidget: socialWidget\r\n    };\r\n\r\n  const flag=API.encryptData(flagData);\r\n\r\n    let JSONdata = {\r\n      flag: flag\r\n    };\r\n    const API_url = this.state.base_url + \"admin/updateOrderBySocialWidget\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.Get_User_Details();\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Profile is updated',\r\n            // isLoading:true   \r\n          });\r\n          this.refreshMobileView();\r\n        }\r\n        else {\r\n          this.setState({\r\n            show: false,\r\n            title: 'Failed!!!',\r\n            msg: 'Failed to updated',\r\n            // isLoading:true   \r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  onDragEndCustomLink = (result) => {\r\n    //console.log(result)\r\n    const { destination, source, reason } = result;\r\n    if (!destination || reason === 'CANCEL') {\r\n      return;\r\n    }\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\r\n      return;\r\n    }\r\n    const linkMaster = Object.assign([], this.state.linkMaster);\r\n    const droppedUser = this.state.linkMaster[source.index];\r\n    linkMaster.splice(source.index, 1);\r\n    linkMaster.splice(destination.index, 0, droppedUser);\r\n\r\n    this.setState({ linkMaster })\r\n    this.updateOrderByCustomLink(linkMaster);\r\n  }\r\n\r\n  updateOrderByCustomLink = (customLink) => {\r\n\r\n\r\n    let flagData = {\r\n      customLink: customLink\r\n    };\r\n\r\n    const flag=API.encryptData(flagData);\r\n\r\n    let JSONdata = {\r\n      flag: flag\r\n    };\r\n\r\n\r\n    const API_url = this.state.base_url + \"admin/updateOrderByCustomLink\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\",\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.Get_User_Details();\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Profile is updated',\r\n            // isLoading:true   \r\n          });\r\n          this.refreshMobileView();\r\n        }\r\n        else {\r\n          this.setState({\r\n            show: false,\r\n            title: 'Failed!!!',\r\n            msg: 'Failed to updated',\r\n            // isLoading:true   \r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  onDragProductList = (result) => {\r\n    //console.log(result)\r\n    const { destination, source, reason } = result;\r\n    if (!destination || reason === 'CANCEL') {\r\n      return;\r\n    }\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\r\n      return;\r\n    }\r\n    const productList = Object.assign([], this.state.productList);\r\n    const droppedUser = this.state.productList[source.index];\r\n    productList.splice(source.index, 1);\r\n    productList.splice(destination.index, 0, droppedUser);\r\n\r\n    this.setState({ productList })\r\n    //console.log(productList)\r\n    this.UpdateOrderProductList(productList);\r\n  }\r\n\r\n  UpdateOrderProductList = (productList) => {\r\n    let JSONdata = {\r\n      productList: productList\r\n    };\r\n    const API_url = this.state.base_url + \"admin/updateOrderByProductList\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.Get_User_Details();\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Profile is updated',\r\n            // isLoading:true   \r\n          });\r\n          this.refreshMobileView();\r\n        }\r\n        else {\r\n          this.setState({\r\n            show: false,\r\n            title: 'Failed!!!',\r\n            msg: 'Failed to updated',\r\n            // isLoading:true   \r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  refreshMobileView = () => {\r\n    this.refs.livepreview2.UpdateMobileView();\r\n  }\r\n\r\n  updateUserName = (e) => {\r\n    document.getElementById('userName').value = e.target.value;\r\n    //console.log(e.target.value)\r\n  }\r\n  onChangeNameDesc = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    if (e.target.name === 'JM_Name') {\r\n      var JM_Name = e.target.value.replace(/'/g, \"\\\\'\");\r\n      this.updateProfile('JM_Name', JM_Name);\r\n\r\n    }\r\n    else {\r\n\r\n      var JM_Description = e.target.value.replace(/'/g, \"\\\\'\");\r\n      this.updateProfile('JM_Description', JM_Description);\r\n    }\r\n\r\n  }\r\n  updateProfile = (name, value) => {\r\n    const API_url = process.env.REACT_APP_API_URL + \"admin/updateProfileNameDescription\";\r\n    var JSONdata = {};\r\n    if (name === 'JM_Name')\r\n      JSONdata = {\r\n        name: name,\r\n        JM_Name: value,\r\n        JM_ID: this.state.JM_ID\r\n      };\r\n    else\r\n      JSONdata = {\r\n        name: name,\r\n        JM_Description: value,\r\n        JM_ID: this.state.JM_ID\r\n      };\r\n\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          // this.setState({\r\n          //   show: true,\r\n          //   title: 'Success!!!',\r\n          //   msg: 'Profile is updated',        \r\n          // });\r\n          this.refreshMobileView();\r\n        }\r\n        else {\r\n          // this.setState({\r\n          //   show: false,\r\n          //   title: 'Failed!!!',\r\n          //   msg: 'Failed to updated',          \r\n          // });\r\n        }\r\n      });\r\n  }\r\n\r\n  collapseHandleClick = id => e => {\r\n    const colapseBoxes = [...this.state.colapseBoxes];\r\n    if (colapseBoxes != null) {\r\n\r\n      if (colapseBoxes.filter(item => item.tableId === id).length === 0) {\r\n        colapseBoxes.push({ id: id, isOpen: true });\r\n      }\r\n      colapseBoxes.map((item, i) => {\r\n        (item.tableId !== id) ? item.isOpen = false : item.isOpen = true;\r\n      });\r\n    }\r\n\r\n    //console.log(colapseBoxes);\r\n    this.setState({ colapseBoxes });\r\n    let element = document.getElementById(\"Collapse_\" + id);\r\n    var className = element.classList.value;\r\n    //console.log(element.classList.value)\r\n    if (className.includes('show')) {\r\n      element.classList.remove(\"show\");\r\n      document.getElementById(\"hide_show_text_\" + id).innerText = 'Show';\r\n      document.getElementById(\"plus_icon_\" + id).style.display = 'inline-block';\r\n      document.getElementById(\"minus_icon_\" + id).style.display = 'none';\r\n    }\r\n    else {\r\n      element.classList.add(\"show\");\r\n      document.getElementById(\"hide_show_text_\" + id).innerText = 'Hide';\r\n      document.getElementById(\"plus_icon_\" + id).style.display = 'none';\r\n      document.getElementById(\"minus_icon_\" + id).style.display = 'inline-block';\r\n    }\r\n    //element.classList.add(\"myNewClass\") \r\n    //Collapse_7\r\n    this.createCategoryLinks(id);\r\n  }\r\n  onChangeRadio = (event) => {\r\n    //setSelectedValue(event.target.value);\r\n    this.setState({ radio: event.target.value });\r\n    //console.log(event.target.value)\r\n  };\r\n  moveCustomLinks = () => {\r\n    //console.log(this.state.radio)\r\n    //console.log(this.state.LM_ID_Move)\r\n    //console.log(this.state.JM_ID_Move)\r\n    //if(this.state.radio > 0)\r\n    //{\r\n    let folderId = this.state.radio;\r\n    let type = 'customLink';\r\n    this.MoveLinkToFolder(folderId, this.state.JM_ID_Move, this.state.LM_ID_Move, type);\r\n    // }\r\n\r\n  }\r\n  MoveLinkToFolder = (folderId, JM_ID, LinkId, type) => {\r\n    let JSONdata = [];\r\n    if (type === 'customLink') \r\n    {\r\n\r\n\r\n    let flagData = {\r\n         type: type,\r\n        CM_ID: folderId,\r\n        JM_ID: JM_ID,\r\n        LM_ID: LinkId\r\n    };\r\n    const flag=API.encryptData(flagData);\r\n     JSONdata = {\r\n      flag: flag\r\n    };\r\n\r\n   \r\n    }\r\n    const API_url = process.env.REACT_APP_API_URL + \"admin/moveLinkToFolder\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.Get_User_Details();\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Link is Moved Successfully',\r\n            // isLoading:true   \r\n          });\r\n          this.refreshMobileView();\r\n        }\r\n        else {\r\n          this.setState({\r\n            show: false,\r\n            title: 'Failed!!!',\r\n            msg: 'Failed to Move',\r\n            // isLoading:true   \r\n          });\r\n        }\r\n      });\r\n\r\n  }\r\n  createCategoryLinks = id => e => {\r\n    let category_links;\r\n    category_links = this.state.userDetailsAll.map((link, i) => {\r\n      return (\r\n        link.folderId > 0 && id === link.folderId ?\r\n          <div className=\"item\" id={'lnk_item_' + link.tableId}>\r\n            <p style={{ fontWeight: 'bold', color: '#ff6f6e' }}>Custom Link</p>\r\n            <div className=\"move\"><MoreVertIcon /></div>\r\n            <div className=\"top-part\">\r\n              {\r\n                link.image === '' ?\r\n                  <div className=\"icon\"><img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} /></div>\r\n                  :\r\n                  <div className=\"icon\"><img style={{ width: '100%' }} src={process.env.REACT_APP_UPLOAD_URL + link.image} /></div>\r\n              }\r\n\r\n              <h4> {link.title}</h4>\r\n            </div>\r\n            <div className=\"bottom-part\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-2\">\r\n                  <label className=\"switch\" for={'lnk_' + link.tableId}>\r\n                    <input type=\"checkbox\" id={'lnk_' + link.tableId} name={'lnk_' + link.tableId}\r\n                      checked={this.state.checkedBoxes.find((ch) => ch.tableId === link.tableId)}\r\n                      onClick={this.doActive(link)}\r\n                    />\r\n                    <div className=\"slider round\" ></div>\r\n                  </label>\r\n                </div>\r\n                <div className=\"col-lg-10 text-right\">\r\n                  {/* <button><ShareIcon /></button> */}\r\n                  <button data-remove={link.folderId} onClick={() => { this.setState({ openMoveLinkModel: true, LM_ID_Move: link.tableId, JM_ID_Move: link.JM_ID, CM_ID_Move: link.folderId }) }}><OpenWithSharpIcon /></button>\r\n                  <EditLinks data={this.state.userDetailsAll[i]} setStateAfterInsert={this.setStateAfterInsert} />\r\n                  <input type=\"hidden\" name=\"hidden\" value={link.tableId}></input>\r\n                  <button data-remove={link.tableId} onClick={this.doDeleteLink}><DeleteForeverIcon /></button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          :\r\n          null\r\n      )\r\n\r\n    })\r\n    return category_links;\r\n  }\r\n\r\n  doRequestVerify = (e) => {\r\n    var JSONdata = {\r\n      JM_ID: this.state.JM_ID\r\n    };\r\n    const API_url = process.env.REACT_APP_API_URL + \"admin/doRequestVerify\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.Get_User_Details();\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Request is Sent',\r\n            // isLoading:true   \r\n          });\r\n          document.getElementById(\"btn_Request\").style.background = '#228e52';\r\n          document.getElementById(\"btn_Request\").innerHTML = 'Request sent';\r\n          this.refreshMobileView();\r\n\r\n        }\r\n        else {\r\n          this.setState({\r\n            show: false,\r\n            title: 'Failed!!!',\r\n            msg: 'Failed to Send Request, wait sometimes and  try again',\r\n            // isLoading:true   \r\n          });\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  onDragEnd = (result) => {\r\n    //console.log(\"drag and drop\")\r\n    //console.log(result)\r\n    const { destination, source, reason } = result;\r\n    if (!destination || reason === 'CANCEL') {\r\n      return;\r\n    }\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\r\n      return;\r\n    }\r\n    const userDetailsAll = Object.assign([], this.state.userDetailsAll);\r\n    const droppedUser = this.state.userDetailsAll[source.index];\r\n    userDetailsAll.splice(source.index, 1);\r\n    userDetailsAll.splice(destination.index, 0, droppedUser);\r\n\r\n    this.setState({ userDetailsAll })\r\n    //console.log(userDetailsAll)\r\n    this.updateOrderByForEachTable(userDetailsAll);\r\n  }\r\n  updateOrderByForEachTable = (userDetailsAll) => {\r\n\r\n\r\n    \r\n    let flagData = {\r\n      userDetailsAll: userDetailsAll\r\n    };\r\n    const flag=API.encryptData(flagData);\r\n    let JSONdata = {\r\n      flag: flag\r\n    };\r\n \r\n    const API_url = this.state.base_url + \"admin/updateOrderByForEachTable\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\", \"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.Get_User_Details();\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Profile is updated',\r\n            // isLoading:true   \r\n          });\r\n          this.refreshMobileView();\r\n        }\r\n        else {\r\n          this.setState({\r\n            show: false,\r\n            title: 'Failed!!!',\r\n            msg: 'Failed to updated',\r\n            // isLoading:true   \r\n          });\r\n        }\r\n      });\r\n\r\n  }\r\n  //MS2 =========================================\r\n  ModalSocialOpen = () => {\r\n\r\n    if (this.state.referralCode && this.state.referralCode.length === 0) {\r\n      this.Update_ReferralCode(this.state.Ref_Code);\r\n    }\r\n    this.setState({ openModel: true, show: true });\r\n  }\r\n\r\n  updateColor = (e) => {\r\n    let color = e.target.value;\r\n    //console.log(color)\r\n    let JSONdata = {};\r\n\r\n    this.setState({ activeNameBio_color: '#000000' });\r\n    JSONdata = {\r\n      TM_Bio_Color: 'TM_Bio_Color',\r\n      JM_ID: this.state.JM_ID,\r\n      TM_Bio_Color: color,\r\n    }\r\n    this.updateNameBioColor(JSONdata);\r\n  }\r\n\r\n  updateNameBioColor = (JSONdata) => {\r\n\r\n    const API_url = process.env.REACT_APP_API_URL + \"admin/updateNameBioColor\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: \"Name, Bio, Footer's, Static  text color has been changed successfully\",\r\n            themeMasterUser: data.themeMasterUser,\r\n            TM_Bio_Color: data.themeMasterUser[0].TM_Bio_Color,\r\n            TM_Name_Color: data.themeMasterUser[0].TM_Name_Color,\r\n            TM_Footer_Color: data.themeMasterUser[0].TM_Footer_Color,\r\n            activeNameBio_color: data.themeMasterUser[0].TM_Footer_Color\r\n          });\r\n\r\n          // this.getApper();\r\n          this.refreshMobileView();\r\n\r\n        }\r\n        else {\r\n          this.setState({\r\n            show: true,\r\n            title: 'error!!!',\r\n            msg: 'Profile is not updated',\r\n            // isLoading:true   \r\n          });\r\n        }\r\n      });\r\n\r\n  }\r\n  //\r\n  closeEditUrlModal = (e) => {\r\n    if (this.state.isCompletedUrlProcessing === false)\r\n      this.setState({ openEditURLModal: false })\r\n    else\r\n      return false;\r\n  }\r\n\r\n  //news letter modal\r\n  openNewsModal = () => {\r\n    this.setState({ showNewsModal: true })\r\n  }\r\n  updateNewsLetterTitle = (e) => {\r\n\r\n    if (this.state.JM_NewsLetter_Title.length === 0) {\r\n      document.getElementById(\"msg_news\").innerHTML = 'Enter Title';\r\n      return false;\r\n    }\r\n    var JSONdata = {\r\n      JM_ID: this.state.JM_ID,\r\n      JM_NewsLetter_Active: this.state.JM_NewsLetter_Active,\r\n      JM_NewsLetter_Title: this.state.JM_NewsLetter_Title,\r\n      type: 'title'\r\n    };\r\n\r\n    const API_url = this.state.base_url + \"admin/updateActiveNewsLetter\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Profile is updated',\r\n            showNewsModal: false\r\n          });\r\n          this.Get_User_Details();\r\n          this.refreshMobileView();\r\n        }\r\n        else {\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Failed to Update'\r\n          });\r\n\r\n        }\r\n      });\r\n\r\n\r\n  }\r\n\r\n  //MS 2\r\n  updateSteps = id => e => {\r\n    API.updateToolStep(id);\r\n  }\r\n  updateStepsClose = id => e => {\r\n    API.updateStepsClose(id);\r\n  }\r\n  onRefCodeChange = (e) => {\r\n\r\n  }\r\n\r\n  openCheckoutSocial=(e)=>{\r\n    this.setState({\r\n      openSocialTitleModal:true\r\n    })\r\n  }\r\n\r\nOpenLiveVideo=(data)=>e=>\r\n{\r\n  this.props.history.push(\"/live-video-session-edit\");\r\n  this.props.history.push({\r\n    state: {\r\n      data: data,\r\n      JM_ID: this.state.JM_ID,\r\n      JM_User_Profile_Url: this.state.JM_User_Profile_Url,\r\n    }\r\n  })\r\n}\r\nhandleKeyPress = async (event) => {\r\n  if(event.key === 'Enter')\r\n  {  \r\n    console.log(\"here\");\r\n    document.getElementById('msg_social').innerHTML='';document.getElementById('msg_social').style.color='red';\r\n      if(this.state.JM_Checkout_My_Social.length===0)\r\n      {\r\n        document.getElementById('msg_social').innerHTML='Empty Title';\r\n        return false;\r\n      }\r\n      var data=await API.updateJoiningMaster(this.state.JM_Checkout_My_Social,'JM_Checkout_My_Social',this.state.JM_ID)  \r\n      if (data.status === 1)\r\n      {\r\n        document.getElementById('msg_social').style.color='green';\r\n        document.getElementById('msg_social').innerHTML='Title is updated';\r\n        this.Get_User_Details();\r\n        this.refreshMobileView();\r\n        \r\n      }\r\n      else\r\n      {\r\n        document.getElementById('msg_social').style.color='red';\r\n        document.getElementById('msg_social').innerHTML='Internal error, try again later';\r\n      }\r\n  }\r\n}\r\n\r\n  render() {\r\n    const { uploadPercentage } = this.state;\r\n    const { crop, profile_pic, src } = this.state\r\n    let timeInterval=API.GetSlidingInterval();\r\n    //const urlParams = queryString.parse(window.location.search);\r\n\r\n    ////console.log(`The code is: ${urlParams.code}`);\r\n    //console.log(this.state.userDetails)\r\n\r\n    let imagePath = this.state.base_url + this.state.ProfilePath;\r\n    let base_url = this.state.base_url;\r\n    let linkPath = \"\";\r\n    let JM_User_Profile_Url_plus_JM_ID = \"\", JM_ID = 0;\r\n    let JM_Profile_Pic = \"\"; let JM_User_Profile_Url = \"\", JM_Payout_Details = 0, JM_Verified = 0, isRequested = 1, isRequestForChangeUrl = 0;\r\n    let JM_NewsLetter_Active = 0, JM_NewsLetter_Title = '',JM_Gift_Active=0,JM_Checkout_My_Social='';\r\n    let JM_Steps = 0;let JM_Social_Widget_Position = \"\";\r\n    if (this.state.userDetails != null && this.state.userDetails.length > 0) {\r\n      let len = this.state.userDetails.length;\r\n      for (var i = 0; i < len; i++) {\r\n        linkPath = base_url + \"Profile/\" + this.state.userDetails[i].JM_User_Profile_Url + \"_\" + this.state.userDetails[i].JM_ID + \"/\";\r\n        JM_User_Profile_Url_plus_JM_ID = this.state.userDetails[i].JM_User_Profile_Url + \"_\" + this.state.userDetails[i].JM_ID;\r\n        JM_Profile_Pic = this.state.userDetails[i].JM_Profile_Pic;\r\n        JM_User_Profile_Url = this.state.userDetails[i].JM_User_Profile_Url;\r\n        JM_Payout_Details = this.state.userDetails[i].JM_Payout_Details;\r\n        JM_Verified = this.state.userDetails[i].JM_Verified;\r\n        isRequested = this.state.userDetails[i].isRequested;\r\n        isRequestForChangeUrl = this.state.userDetails[i].isRequestForChangeUrl;\r\n        JM_ID = this.state.userDetails[i].JM_ID;\r\n        JM_NewsLetter_Title = this.state.userDetails[i].JM_NewsLetter_Title;\r\n        JM_NewsLetter_Active = this.state.userDetails[i].JM_NewsLetter_Active;\r\n        JM_Gift_Active=this.state.userDetails[i].JM_Gift_Active;\r\n        JM_Steps = this.state.userDetails[i].JM_Steps;\r\n        JM_Checkout_My_Social=this.state.userDetails[i].JM_Checkout_My_Social;\r\n        JM_Social_Widget_Position = this.state.userDetails[i].JM_Social_Widget_Position;\r\n        //console.log(\"JM_Steps\")\r\n        //console.log(JM_Steps)\r\n        break;\r\n      }\r\n\r\n      localStorage.setItem('JM_Profile_Pic', JM_Profile_Pic);\r\n      if (JM_Steps === 0) {\r\n\r\n        localStorage.setItem('tool_bio', 'block');\r\n        localStorage.setItem('tool_new_item', 'none');\r\n        localStorage.setItem('tool_drag_part', 'none');\r\n        localStorage.setItem('tool_preview', 'none');\r\n        localStorage.setItem('tool_design', 'none');\r\n        localStorage.setItem('tool_stat', 'none');\r\n        localStorage.setItem('tool_setting', 'none');\r\n        localStorage.setItem('tool_notify', 'none');\r\n        localStorage.setItem('tool_page_link', 'none');\r\n      }\r\n      else {\r\n        localStorage.setItem('tool_bio', 'none');\r\n        localStorage.setItem('tool_new_item', 'none');\r\n        localStorage.setItem('tool_drag_part', 'none');\r\n        localStorage.setItem('tool_preview', 'none');\r\n        localStorage.setItem('tool_design', 'none');\r\n        localStorage.setItem('tool_stat', 'none');\r\n        localStorage.setItem('tool_setting', 'none');\r\n        localStorage.setItem('tool_notify', 'none');\r\n        localStorage.setItem('tool_page_link', 'none');\r\n      }\r\n      var root_url = this.state.root_url;\r\n    }\r\n\r\n\r\n    const messageBar = {\r\n      backgroundColor: \"#fff\",\r\n      paddingTop: \"10px\",\r\n      paddingBottom: \" 0\",\r\n      borderBottom: \" 1px solid rgba(0,0,0,.1)\",\r\n      zIndex: \"9999\",\r\n      textAlign: \"center\",\r\n      width: \"100%\",\r\n    }\r\n    const ColorNameBio = {\r\n      color: '#000000' //this.state.TM_Bio_Color\r\n    }\r\n\r\n    let socialWidget;\r\n    socialWidget = this.state.socialWidget && this.state.socialWidget.map((link, i) => (\r\n      link.SWM_Url !== \"\" && link.SWM_Style_Type === 'W' ?\r\n        <Draggable key={i} draggableId={i + \" \"} index={i}>\r\n          {(provided) => (\r\n            <div className=\"item\" id={'lnk_item_' + link.SWM_ID} ref={provided.innerRef}  {...provided.draggableProps} {...provided.dragHandleProps}>\r\n              {/* <p style={{fontWeight:'bold',color:'#ff6f6e'}}>Social widgets</p> */}\r\n              <div className=\"move\"><MoreVertIcon /></div>\r\n              <div className=\"top-part\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-4\">\r\n                    <h4>Social widgets</h4>\r\n                  </div>\r\n                  <div className=\"col-md-8\">\r\n                    <label className=\"switch\" for={'lnk_' + link.SWM_ID}>\r\n                      <input type=\"checkbox\" id={'lnk_' + link.SWM_ID} name={'lnk_' + link.SWM_ID}\r\n                        checked={this.state.checkedBoxes.find((ch) => ch.SWM_ID === link.SWM_ID)}\r\n                        onClick={this.doActiveSocialWidget(link)}\r\n\r\n                      />\r\n                      <div className=\"slider round\" ></div>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"bottom-part\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-2\">\r\n                    <div className=\"icon\" data-id={link.SWM_Icon} style={{fontSize: '25px'}}>\r\n                      {/* <img style={{ width: '100%' }} src={process.env.REACT_APP_UPLOAD_URL + link.SWM_Icon} /> */}\r\n                      \r\n                              {\r\n                               link.SWM_Icon==='faHandPaper'?\r\n                               <FontAwesomeIcon icon={API.SocialIcons(link.SWM_Icon)} className=\"rotateCls\" />\r\n                               :\r\n                               <FontAwesomeIcon icon={API.SocialIcons(link.SWM_Icon)} />\r\n                              }\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"text\">\r\n                      <h4>{link.SWM_Title}</h4>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-4 text-right\">\r\n                    {/* <button><ShareIcon /></button> */}\r\n                    <EditSocialWidget2 socialWidget={this.state.socialWidget[i]} setStateAfterInsert={this.setStateAfterInsert} />\r\n                    <input type=\"hidden\" name=\"hidden\" value={link.SWM_ID}></input>\r\n                    <button data-remove={link.SWM_ID} onClick={this.doDeleteLinkSocial}><DeleteForeverIcon /></button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Draggable>\r\n        :\r\n        null\r\n    ))\r\n\r\n    let gifts;\r\n    gifts = this.state.gifts.map((link, i) => {\r\n      return (\r\n        <div className=\"gift-item\">\r\n          <img src={link.DA_Collection} />\r\n          {\r\n            link.DA_Price > 0 ?\r\n              <p>{\"Rs. \" + link.DA_Price}</p>\r\n              :\r\n              <p style={{color:'#fff'}}>{'Rs. '}</p>\r\n          }\r\n          <div className=\"row\">\r\n              {\r\n                    link.DA_DA_ID===0?\r\n                    <EditPopGift2 src={link.DA_Collection} gift={this.state.gifts[i]} setStateAfterInsert={this.setStateAfterInsert} />\r\n                    :\r\n                    <EditSupportMe2 src={link.DA_Collection} gift={this.state.gifts[i]} setStateAfterInsert={this.setStateAfterInsert} />\r\n\r\n              } \r\n                \r\n            <input type=\"hidden\" name=\"hidden\" value={link.DA_ID}></input>\r\n            <button data-remove={link.DA_ID} data-ProfileUrl={JM_User_Profile_Url_plus_JM_ID}\r\n              data-ProfileUrl={JM_User_Profile_Url_plus_JM_ID} data-fileName={link.DA_Collection}\r\n              data-type={link.DA_Type}\r\n              onClick={this.deleteGift}>\r\n              <DeleteForeverIcon />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n\r\n\r\n\r\n\r\n    // MS2\r\n    let newsLetter;\r\n    newsLetter = (\r\n      <div className=\"item\">\r\n        {/* <div className=\"move\"><MoreVertIcon />\r\n        </div> */}\r\n        <div className=\"top-part\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <label className=\"switch\" for={'news_' + JM_ID}>\r\n                <input type=\"checkbox\" id={'news_' + JM_ID} name={'news_' + JM_ID}\r\n                  checked={this.state.checkedBoxes.find((ch) => ch.creatorId === JM_ID && ch.JM_NewsLetter_Active===1)}\r\n                  onClick={this.doActiveNewsLetter(JM_ID)}\r\n                />\r\n                <div className=\"slider round\" ></div>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"bottom-part\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-2\">\r\n              <div className=\"icon\"><img style={{ width: '100%' }} src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} /></div>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <div className=\"text\">\r\n                <h4> {JM_NewsLetter_Title}</h4>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4 text-right\">\r\n              <button onClick={this.openNewsModal}><CreateIcon />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n        //19-jul-2021\r\n       let checkOutSocial;\r\n        checkOutSocial = (\r\n          <div className=\"item\">\r\n            {/* <div className=\"move\"><MoreVertIcon />\r\n            </div> */}\r\n            <div className=\"top-part\">      \r\n            Set your social widget title       \r\n            </div>\r\n            <div className=\"bottom-part\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                  <div className=\"icon\"><img style={{ width: '100%' }} src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} /></div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"text\">\r\n                    <h4> {JM_Checkout_My_Social}</h4>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4 text-right\">\r\n                  <button onClick={this.openCheckoutSocial}><CreateIcon />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    \r\n\r\n\r\n    let LiveMobile = (\r\n      <>\r\n        <LivePreview2 state={this.state} ref=\"livepreview2\" />\r\n        <button onClick={this.refreshMobileView} style={{ display: 'none' }}>Click</button>\r\n      </>\r\n    )\r\n\r\n    //23-jun-2021\r\n    let carousel;\r\n    carousel = this.state.gifts.map((link, i) => {\r\n      return (\r\n        <div className=\"gift-item\">\r\n          <img src={link.DA_Collection} />\r\n          {\r\n            link.DA_Price > 0 ?\r\n              <p>{\"Rs. \" + link.DA_Price}</p>\r\n              :\r\n              <p>{\"Support\"}</p>\r\n          }\r\n          <div className=\"row\">\r\n            <EditPopGift2 src={link.DA_Collection} gift={this.state.gifts[i]} setStateAfterInsert={this.setStateAfterInsert} />\r\n            <input type=\"hidden\" name=\"hidden\" value={link.DA_ID}></input>\r\n            <button data-remove={link.DA_ID} data-ProfileUrl={JM_User_Profile_Url_plus_JM_ID}\r\n              data-ProfileUrl={JM_User_Profile_Url_plus_JM_ID} data-fileName={link.DA_Collection}\r\n              data-type={link.DA_Type}\r\n              onClick={this.deleteGift}>\r\n              <DeleteForeverIcon />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <title>Profile | Expy </title>\r\n          <meta name=\"description\" content=\"Use Expy to SHARE all your important links, content and OFFER paid, personalized, premium features under one beautiful Bio-Link page. FREE and FAST to set up.\"></meta>\r\n        </Helmet>\r\n        <ProfileHeader JM_Profile_Pic={this.state.JM_Profile_Pic} JM_User_Profile_Url={this.state.JM_User_Profile_Url} />\r\n\r\n        <div className=\"profile-tab\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <ProfileNav userDetails={this.state.userDetails} JM_User_Profile_Url={JM_User_Profile_Url} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"myprofile\">\r\n          <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n              <div className=\"col-lg-8 col-md-12\">\r\n                <div className=\"profilePart\" id=\"profilePart\">\r\n                  {/* {              \r\n                          this.state.userDetails &&  this.state.userDetails.map((user,i) =>(                     */}\r\n\r\n                  <div className=\"prop-box\">\r\n                    <div className=\"prop-part\">\r\n\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-3\">\r\n                          <div className=\"prop-pic\">\r\n                            {\r\n                              JM_Verified === 1 ?\r\n                                <span className=\"verify-tick\"><img src=\"/images/verifyIcon.png\" /></span>\r\n                                :\r\n                                null\r\n                            }\r\n\r\n                            <label htmlFor=\"prop_up\" className=\"up_pic\">Click to Upload</label>\r\n                            <img src={process.env.REACT_APP_UPLOAD_URL + JM_Profile_Pic} />\r\n\r\n                            <input type=\"file\" id=\"prop_up\" style={{ display: \"none\" }} accept=\"image/png, image/jpeg,image/gif\" onChange={this.handleFile} />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6\">\r\n                          <div className=\"name\">\r\n                            <input type=\"text\" className=\"form-control\" id=\"userName\" name=\"JM_Name\" style={ColorNameBio} value={this.state.JM_Name} onChange={this.onChangeNameDesc} />\r\n                            <textarea type=\"text\" className=\"form-control\" id=\"tagLine\" name=\"JM_Description\" style={ColorNameBio} value={this.state.JM_Description === 'NA' || this.state.JM_Description === 'Write your tagline' ? '' : this.state.JM_Description} onChange={this.onChangeNameDesc} placeholder=\"Your Bio\" />\r\n\r\n                            {/* walk-through-bio */}\r\n                            {\r\n\r\n                              this.state.JM_Steps === 0 ?\r\n                                <div className=\"tooltips\" style={{ width: '100%' }} >\r\n                                  <div className=\"tooltip-bottom\" id=\"tool_bio\" style={{ display: localStorage.getItem('tool_bio') }}>\r\n                                    <h6>Bio description</h6>\r\n                                    <p> Add your Bio here. Short, sweet, easy to read. You can also choose the color of your name + bio.</p>\r\n                                    <i></i>\r\n                                    <span className=\"cls\" onClick={this.updateStepsClose('tool_bio')}>x</span>\r\n                                    <span className=\"step\">Step 1 out of 9</span>\r\n                                    <button className=\"nxtbtun\" onClick={this.updateSteps(2)}>Next</button>\r\n                                  </div>\r\n                                </div>\r\n                                :\r\n                                null\r\n                            }\r\n\r\n                          </div>\r\n\r\n\r\n                          <input id=\"input-color\" style={{ visibility: 'hidden', position: 'absolute' }} type=\"color\" value={this.state.activeNameBio_color} onChange={this.updateColor} />\r\n                          <label for=\"input-color\" className=\"colorPickerBioName\"> <ColorLensOutlinedIcon /> Choose color for Name and Bio </label>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-md-3\">\r\n                          <NavLink className=\"set-btn\"\r\n                            to={{ pathname: \"/settings\", userDetails: this.state.userDetails }} >\r\n                            <SettingsOutlinedIcon /> Settings\r\n                          </NavLink>\r\n                          {\r\n                            this.state.JM_Steps === 0 ?\r\n                              <div className=\"tooltips\" style={{ margin: 'auto' }} >\r\n\r\n                                <div className=\"tooltip-left\" id=\"tool_setting\" style={{ display: localStorage.getItem('tool_setting') }}>\r\n                                  <h6>Settings</h6>\r\n                                  <p>Update your account settings here.</p>\r\n                                  <i></i>\r\n                                  <span className=\"cls\" onClick={this.updateStepsClose('tool_setting')}>x</span>\r\n                                  <span className=\"step\">Step 7 out of 9</span>\r\n                                  <button className=\"nxtbtun\" onClick={this.updateSteps(8)}>Next</button>\r\n                                </div>\r\n                              </div>\r\n                              : null\r\n                          }\r\n                        </div>\r\n\r\n                      </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </div>\r\n                    <div className=\"prop-link\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-3\">\r\n                          <p> Your expy.bio link: </p>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                          <span id=\"copy_text\" className=\"copy-text\">{root_url + JM_User_Profile_Url}</span>\r\n                          {/* TOOL TIP */}\r\n                          {\r\n                            this.state.JM_Steps === 0 ?\r\n                              <div className=\"tooltips\" >\r\n                                <div className=\"tooltip-bottom\" id=\"tool_page_link\" style={{ top: '45px', display: localStorage.getItem('tool_page_link') }} >\r\n                                  <h6> Expy page link</h6>\r\n                                  <p style={{ color: 'white' }}> You're all set! Copy this link and share it with the world.</p>\r\n                                  <i></i>\r\n                                  <span className=\"cls\" onClick={this.updateStepsClose('tool_page_link')}>x</span>\r\n                                  <span className=\"step\">Step 9 out of 9</span>\r\n                                  {/* <button className=\"nxtbtun\" onClick=\"\">Next</button> */}\r\n                                </div>\r\n                              </div>\r\n                              : null\r\n                          }\r\n                          <input type=\"hidden\" id=\"url\" value={JM_User_Profile_Url} />\r\n                        </div>\r\n\r\n                        <div className=\"col-md-3\">\r\n                          {/* <button onClick={()=> this.setState({openSocialModal:true}) } className=\"copybtn\"><ShareIcon/></button> */}\r\n                          <button onClick={() => this.setState({openSocialModal:true})} className=\"copybtn\"><ShareIcon /></button>\r\n                          <CopyToClipboard text={root_url + JM_User_Profile_Url}>\r\n                            <button className=\"copybtn\" >  <FileCopyIcon onClick={this.doCopied} id=\"copy_icon\" /></button>\r\n\r\n                          </CopyToClipboard>\r\n                          <span className=\"copybtn\">\r\n                            <EditIcon onClick={() => this.setState({ openEditURLModal: true, JM_User_Profile_Url: JM_User_Profile_Url,Validation:true })} />\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <br />\r\n\r\n                      {\r\n                        isRequested === 0 ?\r\n                          <button onClick={this.doRequestVerify} id=\"btn_Request\" className=\"Requestbtn\" style={{ float: 'none', margin: 'auto', display: 'table' }}><i className=\"fa fa-check-circle\" aria-hidden=\"true\"></i> Request verification</button>\r\n                          : null\r\n                      }\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                  {/* ))\r\n                        } */}\r\n                  {/* add items */}\r\n                  <div className=\"prop-body\">\r\n                    <div className=\"addItemcard\">\r\n                      <Button onClick={this.openModal} className=\"btun\"\r\n                        aria-controls=\"example-collapse-text\"\r\n                        aria-expanded={this.state.open}\r\n                      >\r\n                        <AddCircleOutlineOutlinedIcon />Add New Item\r\n\r\n                      </Button>\r\n                      {\r\n                        this.state.JM_Steps === 0 ?\r\n                          <div className=\"tooltips\" style={{ width: '100%' }}>\r\n                            <div className=\"tooltip-bottom\" id=\"tool_new_item\" style={{ display: localStorage.getItem('tool_new_item') }}>\r\n                              <h6>Add new items to page</h6>\r\n                              <p> Add items for your page from here. A newsletter sign up item is automatically added for you, which you can activate at the bottom of the page.</p>\r\n                              <i></i>\r\n                              <span className=\"cls\" onClick={this.updateStepsClose('tool_new_item')}>x</span>\r\n                              <span className=\"step\">Step 2 out of 9</span>\r\n                              <button className=\"nxtbtun\" onClick={this.updateSteps(3)}>Next</button>\r\n                            </div>\r\n                          </div>\r\n                          : null\r\n                      }\r\n                      <Collapse in={this.state.open} style={{ padding: '20px' }}>\r\n\r\n                        <div id=\"example-collapse-text\">\r\n                          <div className=\"row justify-content-center\" >\r\n                            <div className=\"col-md-4\">\r\n                              <SocialWidget2 showToast={this.showToast}\r\n                                JM_ID={this.state.JM_ID}\r\n                                JM_User_Profile_Url_plus_JM_ID={JM_User_Profile_Url_plus_JM_ID} Get_User_Details={this.Get_User_Details} setStateAfterInsert={this.setStateAfterInsert} userDetails={this.state.userDetails} />\r\n\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                              <AddNewLink2 showToast={this.showToast}\r\n                                JM_ID={this.state.JM_ID}\r\n                                JM_User_Profile_Url_plus_JM_ID={JM_User_Profile_Url_plus_JM_ID} Get_User_Details={this.Get_User_Details} setStateAfterInsert={this.setStateAfterInsert} />\r\n\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                              <StackedLink2 JM_ID={this.state.JM_ID}\r\n                                JM_User_Profile_Url_plus_JM_ID={JM_User_Profile_Url_plus_JM_ID} setStateAfterInsert={this.setStateAfterInsert} />\r\n\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                              <EmbedContent2 showToast={this.showToast}\r\n                                JM_ID={this.state.JM_ID}\r\n                                JM_User_Profile_Url_plus_JM_ID={JM_User_Profile_Url_plus_JM_ID} Get_User_Details={this.Get_User_Details} setStateAfterInsert={this.setStateAfterInsert} />\r\n\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                              <div className=\"card-btun\" onClick={this.DirectAccess}>\r\n                                <AddCircleOutlineOutlinedIcon />\r\n                                <h4>Monetization Features</h4>\r\n                                <p>Sell & earn</p>\r\n                              </div>\r\n                            </div>\r\n                            {/* caresoul */}\r\n                            <div className=\"col-md-4\">\r\n                              <div className=\"card-btun\" onClick={this.ImageCarousel}>\r\n                                <AddCircleOutlineOutlinedIcon />\r\n                                <h4>Image Carousel</h4>\r\n                                <p>Add sliding images</p>\r\n                              </div>\r\n                            </div>\r\n                        \r\n                          </div>\r\n                        </div>\r\n                      </Collapse>\r\n                    </div>\r\n\r\n                    {\r\n                      JM_Social_Widget_Position==='top'?\r\n                      checkOutSocial\r\n                      : null\r\n                    }\r\n\r\n\r\n                    <DragDropContext onDragEnd={this.onDragEndSocialWidget}>\r\n                      <Droppable droppableId=\"dp1\" >\r\n                        {(provided) => (\r\n                          <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                            {socialWidget}\r\n                          </div>\r\n\r\n                        )}\r\n\r\n                      </Droppable>\r\n                    </DragDropContext>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    {\r\n                      this.state.JM_Steps === 0 ?\r\n                        <div className=\"tooltips\">\r\n                          <div className=\"tooltip-top\" id=\"tool_drag_part\" style={{ display: localStorage.getItem('tool_drag_part') }}>\r\n                            <h6>Click and drag widgets to move around</h6>\r\n                            <p> Organize your links and widgets by simply dragging and dropping items.</p>\r\n                            <i></i>\r\n                            <span className=\"cls\" onClick={this.updateStepsClose('tool_drag_part')}>x</span>\r\n                            <span className=\"step\">Step 3 out of 9</span>\r\n                            <button className=\"nxtbtun\" onClick={this.updateSteps(4)}>Next</button>\r\n                          </div>\r\n                        </div>\r\n                        : null\r\n                    }\r\n\r\n\r\n                    {/* main design drag and drop */}\r\n\r\n\r\n                    <DragDropContext onDragEnd={this.onDragEnd}>\r\n                      <Droppable droppableId=\"main_dp\" >\r\n                        {(provided) => (\r\n                          <ul className=\"characters\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                            {\r\n                              this.state.userDetailsAll.map((link, i) => {\r\n\r\n                                return (\r\n                                  <Draggable key={i} draggableId={i + \" \"} index={i}>\r\n                                    {(provided) => (\r\n\r\n                                      <div id={'lnk_' + link.tableId} ref={provided.innerRef}  {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                                        {\r\n                                          link.ItemType === 'customlink' && link.folderId === 0 ?\r\n                                            // custom links\r\n                                            <div className=\"item\" id={'lnk_item_' + link.tableId + \"_\" + link.ItemType}>\r\n                                              <div className=\"move\"><MoreVertIcon /></div>\r\n                                              <div className=\"top-part\">\r\n\r\n                                                <div className=\"row\">\r\n                                                  <div className=\"col-md-4\">\r\n                                                    <h4>Custom Link</h4>\r\n                                                  </div>\r\n                                                  <div className=\"col-md-8\">\r\n                                                    <label className=\"switch\" for={'link_' + link.tableId}>\r\n                                                      <input type=\"checkbox\" id={'link_' + link.tableId} name={'link_' + link.tableId}\r\n                                                        checked={this.state.checkedBoxes.find((ch) => ch.tableId === link.tableId)}\r\n                                                        onClick={this.doActive(link)}\r\n                                                      />\r\n                                                      <div className=\"slider round\" ></div>\r\n                                                    </label>\r\n                                                  </div>\r\n                                                </div>\r\n\r\n                                              </div>\r\n                                              <div className=\"bottom-part\">\r\n                                                <div className=\"row\">\r\n                                                  <div className=\"col-lg-2\">\r\n                                                    {\r\n                                                        // for icon <img src={'https://'+(link.URL.split('//')[1]).split('/')[0]+'/'+'favicon.ico'} alt=\"no icon\"/>\r\n                                                         link.image === '' && (link.icon === '' || link.icon === null) ?\r\n                                                        <div className=\"icon\"><img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} /></div>\r\n                                                        : link.image !== '' && link.icon === '' ?\r\n                                                          <div className=\"icon\"><img style={{ width: '100%' }} src={process.env.REACT_APP_UPLOAD_URL + link.image} /></div>\r\n                                                          : link.icon !== '' && link.image === '' ?\r\n                                                            <div className=\"icon\"> <MDBIcon icon={link.icon} size=\"2x\" /></div>\r\n                                                            :\r\n                                                            <div className=\"icon\"><img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} /></div>\r\n                                                    }\r\n                                                  </div>\r\n                                                  <div className=\"col-md-6\">\r\n                                                    <div className=\"text\">\r\n                                                      <h4>{link.title}</h4>\r\n                                                    </div>\r\n                                                  </div>\r\n                                                  <div className=\"col-md-4 text-right\">\r\n                                                    <button onClick={() => { this.setState({ openMoveLinkModel: true, LM_ID_Move: link.tableId, JM_ID_Move: link.JM_ID }) }}><OpenWithSharpIcon /></button>\r\n                                                    <EditLinks2 data={this.state.userDetailsAll[i]} userDetails={this.state.userDetails[0]} setStateAfterInsert={this.setStateAfterInsert} />\r\n                                                    <input type=\"hidden\" name=\"hidden\" value={link.tableId}></input>\r\n                                                    <button data-remove={link.tableId} onClick={this.doDeleteLink}><DeleteForeverIcon /></button>\r\n                                                  </div>\r\n                                                </div>\r\n                                              </div>\r\n                                            </div>\r\n                                            :\r\n                                            link.ItemType === 'category' ?\r\n                                              // folder\r\n                                              <div className=\"item\" id={'lnk_item_' + link.tableId + \"_\" + link.ItemType} >\r\n                                               <div className=\"move\"><MoreVertIcon />     </div>\r\n                                                <div className=\"top-part\">\r\n                                                  <div className=\"row\">\r\n                                                    <div className=\"col-md-4\">\r\n                                                      <h4>{link.title}</h4>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-8\">\r\n                                                      <label className=\"switch\" for={'link_' + link.tableId}>\r\n                                                        <input type=\"checkbox\" id={'link_' + link.tableId} name={'lnk_' + link.tableId}\r\n                                                          checked={this.state.checkedBoxes.find((ch) => ch.tableId === link.tableId)}\r\n                                                          onClick={this.doActiveCategoryMaster(link)}\r\n                                                        />\r\n                                                        <div className=\"slider round\" ></div>\r\n                                                      </label>\r\n                                                    </div>\r\n                                                  </div>\r\n                                                </div>\r\n                                                <div className=\"bottom-part\">\r\n                                                  <div className=\"row\">\r\n                                                    <div className=\"col-lg-2\">\r\n                                                      {\r\n                                                        (link.image === null || link.image === '') && (link.icon === '' || link.icon === null) ?\r\n                                                          <div className=\"icon\"><img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} /></div>\r\n                                                          : (link.image !== null || link.image !== '') && link.icon === '' ?\r\n                                                            <div className=\"icon\"><img style={{ width: '100%' }} src={process.env.REACT_APP_UPLOAD_URL + link.image} /></div>\r\n                                                            : (link.icon !== '' || link.icon !== null) ?\r\n                                                              <div className=\"icon\"><MDBIcon icon={link.icon} size=\"2x\" /></div>\r\n                                                              :\r\n                                                              <div className=\"icon\"><img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} /></div>\r\n                                                      }\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6\">\r\n                                                      <div className=\"text\">\r\n                                                        <h4>{link.description} </h4>\r\n                                                      </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-md-4 text-right\">\r\n                                                      <button onClick={this.collapseHandleClick(link.tableId)} style={{ display: 'none' }} id={\"minus_icon_\" + link.tableId}><IndeterminateCheckBoxOutlinedIcon /></button>\r\n                                                      <button onClick={this.collapseHandleClick(link.tableId)} id={\"plus_icon_\" + link.tableId} style={{ display: 'inline-block' }} ><AddCircleOutlineOutlinedIcon /></button>\r\n                                                      <EditStackedLink2 category_master={this.state.userDetailsAll[i]} CM_ID={link.tableId}\r\n                                                        JM_User_Profile_Url_plus_JM_ID={JM_User_Profile_Url_plus_JM_ID} setStateAfterInsert={this.setStateAfterInsert} />\r\n                                                      <input type=\"hidden\" name=\"hidden\" value={link.tableId}></input>\r\n                                                      <button data-remove={link.tableId} onClick={this.doDeleteCategory}><DeleteForeverIcon /></button>\r\n                                                    </div>\r\n                                                  </div>\r\n                                                  <span id={\"hide_show_text_\" + link.tableId} style={{ display: 'none' }}> Show</span>\r\n\r\n                                                </div>\r\n                                                <div className=\"move\"><MoreVertIcon />\r\n                                                </div>\r\n                                                <Collapse in={this.state.colapseBoxes.find(x => x.id === link.tableId)?.isOpen}\r\n                                                  id={'Collapse_' + link.tableId}>\r\n                                                  {\r\n                                                    this.state.userDetailsAll !== null && this.state.userDetailsAll.length > 0 ?\r\n                                                      <div id={\"example-collapse-text\"}>\r\n                                                        {\r\n\r\n                                                          this.state.userDetailsAll.map((lnk, i) => {\r\n                                                            return (\r\n                                                              lnk.folderId > 0 && lnk.folderId === link.tableId ?\r\n                                                                <div className=\"item\" id={'lnk_item_' + lnk.tableId}>\r\n                                                                  {/* <p style={{ fontWeight: 'bold', color: '#ff6f6e' }}>Custom Link</p> */}\r\n                                                                  <div className=\"move\"><MoreVertIcon /></div>\r\n                                                                  <div className=\"top-part\">\r\n                                                                    <div className=\"row\">\r\n                                                                      <div className=\"col-md-4\">\r\n                                                                        <h4>Custom Link</h4>\r\n                                                                      </div>\r\n                                                                      <div className=\"col-md-8\">\r\n                                                                        <label className=\"switch\" for={'link_' + lnk.tableId}>\r\n                                                                          <input type=\"checkbox\" id={'link_' + lnk.tableId} name={'link_' + lnk.tableId}\r\n                                                                            checked={this.state.checkedBoxes.find((ch) => ch.tableId === lnk.tableId)}\r\n                                                                            onClick={this.doActive(lnk)}\r\n                                                                          />\r\n                                                                          <div className=\"slider round\" ></div>\r\n                                                                        </label>\r\n                                                                      </div>\r\n                                                                    </div>\r\n\r\n                                                                  </div>\r\n                                                                  <div className=\"bottom-part\">\r\n                                                                    <div className=\"row\">\r\n                                                                      <div className=\"col-md-2\">\r\n                                                                        {\r\n                                                                          lnk.image === '' && (lnk.icon === '' || lnk.icon === null) ?\r\n                                                                            <div className=\"icon\"><img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} /></div>\r\n                                                                            : lnk.image !== '' && lnk.icon === '' ?\r\n                                                                              <div className=\"icon\"><img style={{ width: '100%' }} src={process.env.REACT_APP_UPLOAD_URL + lnk.image} /></div>\r\n                                                                              : lnk.icon !== '' && lnk.image === '' ?\r\n                                                                                <div className=\"icon\"> <MDBIcon icon={lnk.icon} size=\"2x\" /></div>\r\n                                                                                :\r\n                                                                                <div className=\"icon\"><img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} /></div>\r\n                                                                        }\r\n                                                                      </div>\r\n                                                                      <div className=\"col-md-6\">\r\n                                                                        <div className=\"text\">\r\n                                                                          <h4> {lnk.title}</h4>\r\n                                                                        </div>\r\n                                                                      </div>\r\n                                                                      <div className=\"col-md-4 text-right\">\r\n                                                                        {/* <button><ShareIcon /></button> */}\r\n                                                                        <button onClick={() => { this.setState({ openMoveLinkModel: true, LM_ID_Move: lnk.tableId, JM_ID_Move: lnk.JM_ID }) }}><OpenWithSharpIcon /></button>\r\n                                                                        <EditLinks2 userDetails={this.state.userDetails[0]} data={this.state.userDetailsAll[i]} setStateAfterInsert={this.setStateAfterInsert} />\r\n                                                                        <input type=\"hidden\" name=\"hidden\" value={lnk.tableId}></input>\r\n                                                                        <button data-remove={lnk.tableId} onClick={this.doDeleteLink}><DeleteForeverIcon /></button>\r\n                                                                      </div>\r\n                                                                    </div>\r\n                                                                  </div>\r\n                                                                </div>\r\n                                                                :\r\n                                                                null\r\n                                                            )\r\n\r\n                                                          })\r\n\r\n                                                        }\r\n                                                      </div>\r\n                                                      :\r\n                                                      <h3>Empty Folder</h3>\r\n                                                  }\r\n                                                </Collapse>\r\n\r\n                                              </div>\r\n                                              :\r\n                                              link.ItemType === 'embedcontent' ?\r\n                                                <div className=\"item\" id={'lnk_item_' + link.tableId + \"_\" + link.ItemType}>\r\n                                                  <div className=\"move\"><MoreVertIcon /></div>\r\n                                                  <div className=\"top-part\">\r\n\r\n                                                    <div className=\"row\">\r\n                                                      <div className=\"col-md-4\">\r\n                                                        <h4>Embed Link</h4>\r\n                                                      </div>\r\n                                                      <div className=\"col-md-8\">\r\n                                                        <label className=\"switch\" for={'link_' + link.tableId}>\r\n                                                          <input type=\"checkbox\" id={'link_' + link.tableId} name={'link_' + link.tableId}\r\n                                                            checked={this.state.checkedBoxes.find((ch) => ch.tableId === link.tableId)}\r\n                                                            onClick={this.doActiveEmbed(link)}\r\n                                                          />\r\n                                                          <div className=\"slider round\" ></div>\r\n                                                        </label>\r\n                                                      </div>\r\n                                                    </div>\r\n\r\n                                                  </div>\r\n                                                  <div className=\"bottom-part\">\r\n                                                    <div className=\"row\">\r\n                                                      <div className=\"col-lg-2\">\r\n                                                        {\r\n                                                          link.image === '' ?\r\n                                                            <div className=\"icon\"><img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} /></div>\r\n                                                            :\r\n                                                            <div className=\"icon\"><img style={{ width: '100%' }} src={process.env.REACT_APP_UPLOAD_URL + link.image} /></div>\r\n                                                        }\r\n                                                      </div>\r\n                                                      <div className=\"col-md-6\">\r\n                                                        <div className=\"text\">\r\n                                                          <h4>{link.title}</h4>\r\n                                                        </div>\r\n                                                      </div>\r\n                                                      <div className=\"col-md-4 text-right\">\r\n                                                        {/* <button><ShareIcon /></button> */}\r\n                                                        {/* <button onClick={()=>{this.setState({openMoveLinkModel:true,LM_ID_Move:lnk.LM_ID,JM_ID_Move:lnk.JM_ID})}}><OpenWithSharpIcon/></button> */}\r\n                                                        <EditEmbedContent2 data={this.state.userDetailsAll[i]} setStateAfterInsert={this.setStateAfterInsert} JM_User_Profile_Url={this.state.JM_User_Profile_Url} />\r\n                                                        <input type=\"hidden\" name=\"hidden\" value={link.tableId}></input>\r\n                                                        <button data-remove={link.tableId} onClick={this.doDeleteEmbed}><DeleteForeverIcon /></button>\r\n                                                      </div>\r\n                                                    </div>\r\n                                                  </div>\r\n                                                </div>\r\n                                                :\r\n                                                link.ItemType === 'premium' && link.prodId !== 4 ?\r\n                                                  <div className=\"item\" id={'lnk_item_' + link.tableId}>\r\n                                                    {/* <p style={{ fontWeight: 'bold', color: '#ff6f6e' }}>Premium Content</p> */}\r\n                                                    <div className=\"move\"><MoreVertIcon /></div>\r\n                                                    <div className=\"top-part\">                                            \r\n                                                      <div className=\"row\">\r\n                                                        <div className=\"col-md-4\">\r\n                                                          {/* <h4>{link.DA_DA_ID===1 ? 'Personalized Video or Audio Message' : link.DA_DA_ID===2 ? 'Unlock Content' : 'Premium Features'}</h4> */}\r\n                                                          <h4>{link.prodId === 1 ? 'Personalized Message' : link.prodId === 2 ? 'Unlock Content' : link.prodId === 3 ? 'Digital E-Commerce Selling' : link.prodId === 5 ? 'Live Video' : link.prodId === 6 ? 'Giveaway' : 'Premium Features'}</h4>\r\n                                                        </div>\r\n                                                        <div className=\"col-md-8\">\r\n                                                          {\r\n                                                            JM_Payout_Details === 1 && link.prodType !== 'gifts' ?\r\n                                                              <label className=\"switch\" for={'link_' + link.tableId}>\r\n                                                                <input type=\"checkbox\" id={'link_' + link.tableId} name={'link_' + link.tableId}\r\n                                                                  checked={this.state.checkedBoxes.find((ch) => ch.tableId === link.tableId)}\r\n                                                                  onClick={this.doActivePremium(link)}\r\n                                                                />\r\n                                                                <div className=\"slider round\" ></div>\r\n                                                              </label>\r\n                                                              : null\r\n                                                          }\r\n\r\n                                                        </div>\r\n                                                        <div className=\"col-md-12\">\r\n                                                          {\r\n                                                            JM_Payout_Details === 0 ?\r\n                                                              <div style={messageBar}>\r\n                                                                <div style={messageBar}>\r\n                                                                  <p style={{ color: \" #e28b23\", fontSize: \"13px\" }}>\r\n                                                                    This item will be hidden from your profile until you add payout details.\r\n                                                                    <Link to={{ pathname: \"/settings\", userDetails: this.state.userDetails, state: { openTabNo: 1 } }} > Go to Settings</Link>\r\n                                                                  </p>\r\n                                                                </div>\r\n\r\n                                                              </div>\r\n                                                              : null\r\n                                                          }\r\n                                                        </div>\r\n\r\n                                                      </div>\r\n\r\n                                                    </div>\r\n                                                    <div className=\"bottom-part\">\r\n                                                      <div className=\"row\">\r\n                                                        <div className=\"col-md-2\">\r\n                                                          <div className=\"icon\" style={{ marginTop: \"0%\" }}>\r\n\r\n                                                          {\r\n                                                    \r\n                                                           link.prodId === 1 ? \r\n                                                            <PlayCircleOutlineIcon style={{ fontSize: \"50px\", color: \"#7504f8\" }} /> : \r\n                                                             link.prodId === 2 ? \r\n                                                             <LockOpenIcon  style={{ fontSize: \"50px\", color: \"#7504f8\" }}/> : \r\n                                                            link.prodId === 3 ? \r\n                                                            <ExplicitIcon  style={{fontSize: '50px',  color: \"#7504f8\"}}/>:\r\n                                                            link.prodId === 5 ? \r\n                                                             <VideocamIcon style={{ fontSize: \"50px\",  color: \"#7504f8\" }}/> :\r\n                                                            link.prodId === 6 ?\r\n                                                            <EmojiEventsIcon style={{fontSize: '50px',  color: \"#7504f8\"}}/>\r\n                                                            :  \r\n                                                            <EventIcon style={{ fontSize: \"50px\", color: \"#7504f8\"}} />                                                   \r\n                                                            }\r\n                                                            {/* {\r\n                                                              link.prodType === \"video\" ?\r\n                                                                <PlayCircleOutlineIcon style={{ fontSize: \"50px\", color: \"#7504f8\" }} />\r\n                                                                : null\r\n                                                            }\r\n                                                            {\r\n                                                              link.prodType === \"image\" ?\r\n                                                                <PhotoAlbumIcon style={{ fontSize: \"50px\", color: \"#7504f8\"}} />\r\n                                                                : null\r\n                                                            }\r\n                                                            {\r\n                                                              link.prodType === \"audio\" ?\r\n                                                                <AudiotrackIcon style={{ fontSize: \"50px\",  color: \"#7504f8\"}} />\r\n                                                                : null\r\n                                                            }\r\n                                                            {\r\n                                                              link.prodType === \"album\" ?\r\n                                                                <PhotoAlbumIcon style={{ fontSize: \"50px\", color: \"#7504f8\" }} />\r\n                                                                : null\r\n                                                            }\r\n                                                            {\r\n                                                              link.prodType === \"NA\" ?\r\n                                                                <CameraAltOutlinedIcon style={{ fontSize: \"50px\",   color: \"#7504f8\"}} />\r\n                                                                : null\r\n                                                            }\r\n                                                            {\r\n                                                              link.prodType === 'txt' ?\r\n\r\n                                                                <DescriptionOutlinedIcon style={{ fontSize: \"50px\", color: \"#7504f8\"}}/>\r\n                                                                :\r\n                                                                null\r\n                                                            }\r\n                                                            {\r\n                                                              link.prodType === 'pdf' ?\r\n\r\n                                                                <PictureAsPdfOutlinedIcon style={{ fontSize: \"50px\",  color: \"#7504f8\" }}/>\r\n                                                                :\r\n                                                                null\r\n                                                            }\r\n                                                            {\r\n                                                              link.prodType === 'videoCam' ?\r\n                                                             \r\n                                                                <VideocamIcon style={{ fontSize: \"50px\",  color: \"#7504f8\" }}/>\r\n                                                                :\r\n                                                                null\r\n                                                            }\r\n                                                            {\r\n                                                              link.prodType === 'contest' ?\r\n                                                             \r\n                                                                <EventIcon style={{ fontSize: \"50px\", color: \"#7504f8\"}} />\r\n                                                                :\r\n                                                                null\r\n                                                            } */}\r\n                                                          </div>\r\n\r\n\r\n                                                        </div>\r\n                                                        <div className=\"col-md-6\">\r\n                                                          <div className=\"text\">\r\n                                                         \r\n                                                          <h4>{link.title}     \r\n                                                           { \r\n                                                              link.prodId!==6?\r\n                                                                      (link.DA_Allow_Cust_Pay===0)?  \r\n                                                                            (link.price > 0)?\r\n                                                                            \" Rs.\" + link.price\r\n                                                                            :          \r\n                                                                            null                       \r\n                                                                          \r\n                                                                        :\r\n                                                                        (link.DA_Allow_Cust_Pay===1)?                                            \r\n                                                                            (link.DA_Min_Amount > 0)?\r\n                                                                            \" Rs.\" + link.DA_Min_Amount\r\n                                                                            :          \r\n                                                                            null    \r\n                                                                        :\r\n                                                                        null\r\n                                                              \r\n                                                              :\r\n                                                              link.prodId===6?\r\n                                                                (link.DA_Allow_Cust_Pay===0)?  \r\n                                                                      (link.price > 0)?\r\n                                                                      \" Rs.\" + link.price\r\n                                                                      :          \r\n                                                                      null                       \r\n                                                                    \r\n                                                                  :\r\n                                                                    (link.DA_Allow_Cust_Pay===1)?                                            \r\n                                                                      (link.DA_Min_Amount > 0)?\r\n                                                                      \" Rs.\" + link.DA_Min_Amount\r\n                                                                      :          \r\n                                                                      null    \r\n                                                                  :\r\n                                                                  null\r\n                                                                :\r\n                                                                null\r\n                                                              }\r\n                                                              </h4>\r\n                                                          </div>\r\n                                                        </div>\r\n                                                        <div className=\"col-md-4 text-right\">\r\n                                                              {\r\n                                                                   link.prodId === 6 ?\r\n                                                                 <ContestReport from={'P'} data={this.state.userDetailsAll[i]} JM_User_Profile_Url_plus_JM_ID={JM_User_Profile_Url_plus_JM_ID} setStateAfterInsert={this.setStateAfterInsert} />\r\n                                                                  :\r\n                                                                  null\r\n                                                              }\r\n                                                 \r\n                                         \r\n                                                       \r\n                                                          {\r\n                                                            (link.prodType === 'video' || link.prodType === 'image' || link.prodType === 'NA') && link.prodId === 1 ?\r\n                                                              <EditPremiumFeature2 data={this.state.userDetailsAll[i]} JM_User_Profile_Url_plus_JM_ID={JM_User_Profile_Url_plus_JM_ID} setStateAfterInsert={this.setStateAfterInsert} />\r\n                                                              :\r\n                                                              link.prodId === 2 ?\r\n                                                                <EditUnlockContent2 data={this.state.userDetailsAll[i]} JM_User_Profile_Url_plus_JM_ID={JM_User_Profile_Url_plus_JM_ID} setStateAfterInsert={this.setStateAfterInsert} />\r\n                                                                :\r\n                                                                link.prodId === 3 ?\r\n                                                                  <EditDigitalEcommerce data={this.state.userDetailsAll[i]} JM_User_Profile_Url_plus_JM_ID={JM_User_Profile_Url_plus_JM_ID} setStateAfterInsert={this.setStateAfterInsert} />\r\n                                                                  :\r\n                                                                  link.prodId === 5 ?\r\n                                                                  <button onClick={this.OpenLiveVideo(this.state.userDetailsAll[i])}><CreateIcon />  </button>\r\n                                                                  // <EditLiveVideoSessionPage data={this.state.userDetailsAll[i]} JM_User_Profile_Url_plus_JM_ID={JM_User_Profile_Url_plus_JM_ID} setStateAfterInsert={this.setStateAfterInsert} />\r\n                                                                  :\r\n                                                                  link.prodId === 6 ?                                                                 \r\n                                                                   <EditContestGiveAway data={this.state.userDetailsAll[i]} JM_User_Profile_Url_plus_JM_ID={JM_User_Profile_Url_plus_JM_ID} setStateAfterInsert={this.setStateAfterInsert} showToast={this.showToast}/>                                                                  :\r\n                                                                  null\r\n                                                          }\r\n\r\n                                                          <input type=\"hidden\" name=\"hidden\" value={link.tableId}></input>\r\n                                                          {\r\n                                                              link.prodId === 5 ?\r\n                                                                <button data-remove={link.tableId} data-ProfileUrl={JM_User_Profile_Url_plus_JM_ID}\r\n                                                              data-ProfileUrl={JM_User_Profile_Url_plus_JM_ID} data-fileName={link.collection}\r\n                                                              data-type={link.prodType}\r\n                                                              onClick={this.deleteVideoSession}><DeleteForeverIcon /></button>\r\n                                                              :\r\n                                                              link.prodId === 6 ?\r\n                                                                <button data-remove={link.tableId} data-ProfileUrl={JM_User_Profile_Url_plus_JM_ID}\r\n                                                                data-ProfileUrl={JM_User_Profile_Url_plus_JM_ID} data-fileName={link.collection}\r\n                                                                data-type={link.prodType}\r\n                                                                onClick={this.deleteContest}><DeleteForeverIcon /></button>\r\n                                                              :\r\n                                                                  <button data-remove={link.tableId} data-ProfileUrl={JM_User_Profile_Url_plus_JM_ID}\r\n                                                                data-ProfileUrl={JM_User_Profile_Url_plus_JM_ID} data-fileName={link.collection}\r\n                                                                data-type={link.prodType}\r\n                                                                onClick={this.deleteProduct}><DeleteForeverIcon /></button>\r\n                                                          }\r\n                                                          \r\n                                                        </div>\r\n                                                      </div>\r\n                                                    </div>\r\n                                                  </div>\r\n                                                  :\r\n                                                  link.ItemType === 'socialBar' ?\r\n                                                    <div className=\"item\" id={'lnk_item_' + link.tableId}>\r\n                                                      <div className=\"move\"><MoreVertIcon /></div>\r\n                                                      <div className=\"top-part\">\r\n                                                        <div className=\"row\">\r\n                                                          <div className=\"col-md-4\">\r\n                                                            <h4>Social Bar</h4>\r\n                                                          </div>\r\n                                                          <div className=\"col-md-8\">\r\n                                                            <label className=\"switch\" for={'link_' + link.tableId}>\r\n                                                              <input type=\"checkbox\" id={'link_' + link.tableId} name={'link_' + link.tableId}\r\n                                                                checked={this.state.checkedBoxes.find((ch) => ch.tableId === link.tableId)}\r\n                                                                onClick={this.doActiveSocialBar(link)}\r\n                                                              />\r\n                                                              <div className=\"slider round\" ></div>\r\n                                                            </label>\r\n                                                          </div>\r\n                                                        </div>\r\n                                                      </div>\r\n                                                      <div className=\"bottom-part\">\r\n                                                        <div className=\"row\">\r\n                                                          <div className=\"col-md-2\">\r\n                                                            <div className=\"icon\" style={{fontSize: '25px'}}>\r\n                                                              {/* <img style={{ width: '100%' }} src={process.env.REACT_APP_UPLOAD_URL + link.icon} /> */}\r\n                                                              {\r\n                                                                link.icon==='faHandPaper'?\r\n                                                                <FontAwesomeIcon icon={API.SocialIcons(link.icon)} className=\"rotateCls\" />\r\n                                                                :\r\n                                                                <FontAwesomeIcon icon={API.SocialIcons(link.icon)} />\r\n                                                              }\r\n                                                            </div>\r\n                                                          </div>\r\n                                                          <div className=\"col-md-6\">\r\n                                                            <div className=\"text\">\r\n                                                              <h4>{link.title}</h4>\r\n                                                            </div>\r\n                                                          </div>\r\n                                                          <div className=\"col-md-4 text-right\">\r\n                                                            <EditSocialWidget socialWidget={this.state.userDetailsAll[i]} setStateAfterInsert={this.setStateAfterInsert} />\r\n                                                            <input type=\"hidden\" name=\"hidden\" value={link.tableId}></input>\r\n                                                            <button data-remove={link.tableId} onClick={this.doDeleteLinkSocial}><DeleteForeverIcon /></button>\r\n                                                          </div>\r\n                                                        </div>\r\n                                                      </div>\r\n                                                    </div>\r\n                                                    :\r\n                                                    link.ItemType === 'carousel' && link.prodId === 4 ?\r\n                                                      <div className=\"item\" id={'lnk_item_' + link.tableId}>\r\n                                                        <div className=\"move\"><MoreVertIcon />\r\n                                                        </div>\r\n                                                        <div className=\"top-part\">\r\n                                                          <h4>Image Carousel</h4>\r\n                                                          <div className=\"row\">\r\n                                                            <div className=\"col-md-12\">\r\n                                                              <label className=\"switch\" for={'link_' + link.tableId}>\r\n                                                                <input type=\"checkbox\" id={'link_' + link.tableId} name={'link_' + link.tableId}\r\n                                                                  checked={this.state.checkedBoxes.find((ch) => ch.tableId === link.tableId)}\r\n                                                                  onClick={this.doActivePremium(link)}\r\n                                                                />\r\n                                                                <div className=\"slider round\" ></div>\r\n                                                              </label>\r\n                                                            </div>\r\n                                                          </div>\r\n                                                        </div>\r\n                                                        <div className=\"bottom-part d-block\">\r\n                                                          <div className=\"row\">\r\n                                                            <div className=\"col-md-6\">\r\n                                                              {/* carousel */}\r\n                                                              <div className=\"Carousel-box\" style={{ display: 'block' }}>\r\n                                                                        <Carousel interval={timeInterval} keyboard={false}>\r\n                                                                      { \r\n                                                                        link.carousel_1 !== 'NA' ?\r\n                                                                            <Carousel.Item>\r\n                                                                                    <div className=\"carousel_image\">\r\n                                                                                              {\r\n                                                                                                link.carousel_1 !== 'NA' ?\r\n                                                                                                  <img\r\n                                                                                                    src={process.env.REACT_APP_UPLOAD_URL + link.carousel_1} alt=\"image1\"\r\n                                                                                                  />\r\n                                                                                                  :\r\n                                                                                                  null\r\n                                                                                              }\r\n                                                                                            </div> \r\n                                                                          </Carousel.Item>\r\n                                                                          :\r\n                                                                          null\r\n                                                                      }\r\n                                                                        \r\n\r\n                                                                      { \r\n                                                                        link.carousel_2 !== 'NA' ?\r\n                                                                            <Carousel.Item>\r\n                                                                                          <div className=\"carousel_image\">\r\n                                                                                              {\r\n                                                                                                link.carousel_2 !== 'NA' ?\r\n                                                                                                  <img\r\n                                                                                                    src={process.env.REACT_APP_UPLOAD_URL + link.carousel_2} alt=\"image2\"\r\n                                                                                                  />\r\n                                                                                                  :\r\n                                                                                                  null\r\n                                                                                              }\r\n                                                                                            </div> \r\n                                                                            </Carousel.Item>\r\n                                                                          :\r\n                                                                          null\r\n                                                                      }\r\n\r\n                                                                      { \r\n                                                                        link.carousel_3 !== 'NA' ?\r\n                                                                            <Carousel.Item>\r\n                                                                                          <div className=\"carousel_image\">\r\n                                                                                              {\r\n                                                                                                link.carousel_3 !== 'NA' ?\r\n                                                                                                  <img\r\n                                                                                                    src={process.env.REACT_APP_UPLOAD_URL + link.carousel_3} alt=\"image3\"\r\n                                                                                                  />\r\n                                                                                                  :\r\n                                                                                                  null\r\n                                                                                              }\r\n                                                                                            </div> \r\n                                                                            </Carousel.Item>\r\n                                                                          :\r\n                                                                          null\r\n                                                                      }\r\n\r\n                                                                    </Carousel>\r\n                                                              </div>\r\n                                                          </div>\r\n                                                            <div className=\"col-md-6 text-right\">\r\n                                                             \r\n                                                              <input type=\"hidden\" name=\"carousel\" value={link.tableId}></input>\r\n                                                              <button className=\"editCarousel\"    data-type={link.prodType} data-remove={link.tableId} onClick={this.deleteProduct} data-fileName={link.collection}><DeleteForeverIcon /></button>\r\n                                                              <Link className=\"editCarousel\" to={{ pathname: \"/create-carousel-edit\", state: { productDetails: link } }}>\r\n                                                                <CreateIcon />\r\n                                                              </Link> \r\n                                                            </div>\r\n                                                          </div>\r\n                                                      </div>\r\n                                                           \r\n                                                      </div>\r\n                                                      :\r\n                                                      null\r\n                                        }\r\n                                      </div>\r\n\r\n                                    )}\r\n                                  </Draggable>\r\n                                );\r\n\r\n                              })\r\n                            }\r\n                            {provided.placeholder}\r\n                          </ul>\r\n                        )}\r\n                      </Droppable>\r\n                    </DragDropContext>\r\n\r\n                    {/* main design drag and drop */}\r\n\r\n\r\n                    <div className=\"item\">\r\n                      {/* <div className=\"move\"><MoreVertIcon />\r\n                      </div> */}\r\n                      <div className=\"top-part\">\r\n                             <h4>Virtual Gifts</h4>\r\n                             <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    { \r\n                                      JM_Payout_Details === 1 ?\r\n                                        <label className=\"switch\" for={'jm_' + JM_ID}>\r\n                                          <input type=\"checkbox\" id={'jm_' + JM_ID} name={'jm_' + JM_ID}\r\n                                            checked={this.state.checkedBoxes.find((ch) => ch.creatorId === JM_ID && ch.JM_Gift_Active===1)}\r\n                                            onClick={this.doActiveVartualGift(JM_ID)}\r\n                                          />\r\n                                          <div className=\"slider round\" ></div>\r\n                                        </label>\r\n                                        :\r\n                                        null\r\n                                        }\r\n                                  </div>\r\n                                  <div className=\"col-md-12\">\r\n                                      <div class=\"text\">\r\n                                        <h4>{this.state.JM_Gift_Title}\r\n                                          <input type=\"hidden\" name=\"carousel\" value={JM_ID}></input>                              \r\n                                          <Link className=\"gift-edit\" onClick={this.EditGiftTitle}>\r\n                                            <CreateIcon />\r\n                                          </Link> \r\n                                          </h4>\r\n                                      </div>\r\n                                       \r\n                                  </div>\r\n                             </div>\r\n                             {\r\n                                JM_Payout_Details === 1 ?\r\n                                  <Link className=\"gift-add\" to={{ pathname: \"/gifts\", state: { JM_ID: this.state.JM_ID } }}>\r\n                                    <AddCircleOutlineOutlinedIcon />\r\n                                  </Link>\r\n                                  :\r\n                                  <Link to={{ pathname: \"/settings\", userDetails: this.state.userDetails, state: { openTabNo: 1 } }} > Add Payout Details</Link>\r\n\r\n                              }\r\n                            \r\n                      </div>\r\n                      <div className=\"bottom-part d-table\">                        \r\n                        {gifts}\r\n                      </div>\r\n                    </div>\r\n                    {newsLetter}\r\n                    {\r\n                      JM_Social_Widget_Position==='bottom'?\r\n                      checkOutSocial\r\n                      : null\r\n                    }\r\n\r\n               \r\n\r\n                  </div>\r\n                  <Modal\r\n                    size=\"sm\"\r\n                    show={this.state.openEditURLModal}\r\n                    onHide={this.closeEditUrlModal}\r\n                    aria-labelledby=\"example-modal-sizes-title-sm\"\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    centered\r\n                  >\r\n                    <Modal.Header closeButton>\r\n                      <Modal.Title id=\"example-modal-sizes-title-sm\" style={{ fontSize: '15px' }}>\r\n                        Change your profile username\r\n                      </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                      <input type=\"text\" disabled={this.state.isCompletedUrlProcessing} className=\"form-control\" placeholder=\"username\" name=\"JM_User_Profile_Url\" value={this.state.JM_User_Profile_Url} onChange={this.onEditChangeUrl} />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                      <p id=\"msg\" style={{ color: 'red' }}></p>\r\n                      <div className=\"btun-box\">\r\n                  \r\n                            <Button onClick={this.isConfirm} disabled={this.state.Validation} className=\"btun btun_1\">{this.state.btnRequest}</Button>\r\n                           \r\n                        <p id='req_msg'></p>\r\n                        {/* <p style={{color:' #ea9515',fontWweight: 'bold',fontSsize: '12px'}}>\r\n                             Note: if you update this current username you will not able to see any data of earlier username. \r\n                         </p> */}\r\n                      </div>\r\n                    </Modal.Footer>\r\n                  </Modal>\r\n\r\n\r\n\r\n                  {/* Referral modal */}\r\n                  <Modal\r\n                    size=\"sm\"\r\n                    show={this.state.openRefModal}\r\n                    onHide={() => this.setState({ openRefModal: false })}\r\n                    aria-labelledby=\"example-modal-sizes-title-sm\"\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    centered\r\n                  >\r\n                    <Modal.Header closeButton>\r\n                      <Modal.Title id=\"example-modal-sizes-title-sm\" style={{ fontSize: '15px' }}>\r\n                        Monetization code\r\n                      </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Monetization code\" name=\"JM_Referral_Code\" value={this.state.JM_Referral_Code} onChange={this.onChangeNameDesc} />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n\r\n                      <div className=\"btun-box\">\r\n                        <Button onClick={this.isConfirm} disabled={this.state.isValidRefCode} className=\"btun btun_1\" id=\"Request\">Request</Button>\r\n                      </div>\r\n                      <p id=\"msg\" style={{ color: 'red' }}></p>\r\n                    </Modal.Footer>\r\n                  </Modal>\r\n\r\n\r\n                </div>\r\n\r\n              </div>\r\n              {LiveMobile}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ToastAlert title={this.state.title} hideToast={this.hideToast} msg={this.state.msg} show={this.state.show} image={this.state.logo} showToast={this.showToast} />\r\n\r\n        <Modal\r\n          size=\"sm\"\r\n          show={this.state.openMoveLinkModel}\r\n          onHide={() => this.setState({ openMoveLinkModel: false })}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-sm\" style={{ fontSize: '15px' }}>\r\n              Move Custom Links\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"row\">\r\n              <div className=\"col-12\" onChange={this.onChangeRadio}>\r\n\r\n                <input type=\"radio\" className=\"radio-folder\"\r\n                  value={0} name=\"category\" onChange={this.onChangeRadio} />\r\n                <label>Keep in front</label>\r\n              </div>\r\n\r\n            </div>\r\n            <h5 >Your Desired Folder(s)</h5>\r\n            <br />\r\n            <div className=\"row\" style={{ marginTop: '-26px' }}>\r\n\r\n              {\r\n                this.state.category_master && this.state.category_master.map((option, i) => {\r\n                  return (\r\n                    <>\r\n                      <div className=\"col-12\" >\r\n                        <input type=\"radio\"\r\n                          className=\"radio-folder\" onChange={this.onChangeRadio} value={option.CM_ID} data-id={this.state.CM_ID_Move} name=\"category\" />\r\n                        <label> {option.CM_Folder_Title}</label>\r\n\r\n                      </div>\r\n\r\n                    </>\r\n                  )\r\n                })\r\n              }\r\n\r\n            </div>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <p id=\"msg\" style={{ color: 'red' }}></p>\r\n            <div className=\"btun-box\">\r\n              <Button onClick={this.moveCustomLinks} className=\"movebtun\">Move <SendSharpIcon /></Button>\r\n            </div>\r\n\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        {/* image crop modal */}\r\n        <Modal\r\n          show={this.state.openCropModal}\r\n          onHide={() => this.setState({ openCropModal: false })}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-sm\" style={{ fontSize: '15px' }}>\r\n              Crop and Save\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <form onSubmit={this.uploadPic}>\r\n              <div className=\"cropp-image\">\r\n                {src && (\r\n                  <ReactCrop\r\n                    src={src}\r\n                    crop={crop}\r\n                    onImageLoaded={this.onImageLoaded}\r\n                    onComplete={this.onCropComplete}\r\n                    onChange={this.onCropChange}\r\n                  />\r\n                )}\r\n\r\n              </div>\r\n\r\n              <button className=\"btnCropSave\">save</button>\r\n\r\n            </form>\r\n            {uploadPercentage > 0 && <ProgressBar animated variant=\"success\" style={{ width: '100%' }} now={uploadPercentage} active label={`${uploadPercentage}%`} />}\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        {/* social share */}\r\n        <Modal\r\n          show={this.state.openSocialModal}\r\n          onHide={() => this.setState({ openSocialModal: false })}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-sm\" style={{ fontSize: '15px' }}>\r\n              <h4>Share on Social Platform</h4>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-3 text-center\">\r\n                <FacebookShareButton\r\n                  url={root_url + JM_User_Profile_Url}\r\n                  quote={\"Hi Creator, \" + this.state.JM_Name + \" is Inviting you to create your own Expy Bio Link: Enter Code: \" + this.state.Ref_Code + \" or use \" + root_url + \"signin to sign up.\"}\r\n                >\r\n                  <FacebookIcon\r\n                    size={62}\r\n                    round />\r\n                </FacebookShareButton>\r\n                <p>Facebook</p>\r\n              </div>\r\n              <div className=\"col-md-3 text-center\">\r\n                <TwitterShareButton\r\n                  url={root_url + JM_User_Profile_Url}\r\n                  title={\"Hi Creator, \" + this.state.JM_Name + \" is Inviting you to create your own Expy Bio Link: Enter Code: \" + this.state.Ref_Code + \" or use \" + root_url + \"signin to sign up.\"}\r\n                >\r\n                  <TwitterIcon\r\n                    size={62}\r\n                    round />\r\n                </TwitterShareButton>\r\n                <p>Twitter</p>\r\n              </div>\r\n              <div className=\"col-md-3 text-center\">\r\n                <WhatsappShareButton\r\n                  url={root_url + JM_User_Profile_Url}\r\n                  title={\"Hi Creator, \" + this.state.JM_Name + \" is Inviting you to create your own Expy Bio Link: Enter Code: \" + this.state.Ref_Code + \" or use \" + root_url + \"signin to sign up.\"}\r\n                >\r\n                  <WhatsappIcon\r\n                    size={62}\r\n                    round />\r\n                </WhatsappShareButton>\r\n                <p>Whatsapp</p>\r\n              </div>\r\n\r\n\r\n\r\n              <div className=\"col-md-3 text-center\">\r\n                <LinkedinShareButton\r\n                  url={root_url + JM_User_Profile_Url}\r\n                  title={\"Hi Creator,\"}\r\n                  title={\"Hi Creator,\" + this.state.JM_Name + \" is Inviting you to create your own Expy Bio Link: Enter Code: \" + this.state.Ref_Code + \" or use \" + root_url + \"signin to sign up.\"}\r\n                >\r\n                  <LinkedinIcon\r\n                    size={62}\r\n                    round />\r\n                </LinkedinShareButton>\r\n                <p>Linkedin</p>\r\n              </div>\r\n\r\n              <div className=\"col-md-3 text-center\">\r\n                <TelegramShareButton\r\n                  url={root_url + JM_User_Profile_Url}\r\n                  title={\"Hi Creator, \" + this.state.JM_Name + \" is Inviting you to create your own Expy Bio Link: Enter Code: \" + this.state.Ref_Code + \" or use \" + root_url + \"signin to sign up.\"}\r\n                >\r\n                  <TelegramIcon\r\n                    size={62}\r\n                    round />\r\n                </TelegramShareButton>\r\n                <p>Telegram</p>\r\n              </div>\r\n              <div className=\"col-md-3 text-center\">\r\n                <RedditShareButton\r\n                  url={root_url + JM_User_Profile_Url}\r\n                  title={\"Hi Creator, \" + this.state.JM_Name + \" is Inviting you to create your own Expy Bio Link: Enter Code: \" + this.state.Ref_Code + \" or use \" + root_url + \"signin to sign up.\"}\r\n                >\r\n                  <RedditIcon\r\n                    size={62}\r\n                    round />\r\n                </RedditShareButton>\r\n                <p>Reddit</p>\r\n              </div>\r\n              <div className=\"col-md-3 text-center\">\r\n                <PinterestShareButton\r\n                  url={root_url + JM_User_Profile_Url}\r\n                  media={JM_Profile_Pic}\r\n                  description={\"Hi Creator, \" + this.state.JM_Name + \" is Inviting you to create your own Expy Bio Link: Enter Code: \" + this.state.Ref_Code + \" or use \" + root_url + \"signin to sign up.\"}\r\n                >\r\n                  <PinterestIcon\r\n                    size={62}\r\n                    round />\r\n                </PinterestShareButton>\r\n                <p>Pinterest</p>\r\n              </div>\r\n              <div className=\"col-md-3 text-center\">\r\n                <EmailShareButton\r\n                  url={root_url + JM_User_Profile_Url}\r\n                  title={\"Hi Creator, \" + this.state.JM_Name + \" is Inviting you to create your own Expy Bio Link: Enter Code: \" + this.state.Ref_Code + \" or use \" + root_url + \"signin to sign up.\"}\r\n                >\r\n                  <EmailIcon\r\n                    size={62}\r\n                    round />\r\n                </EmailShareButton>\r\n                <p>Email</p>\r\n              </div>\r\n\r\n            </div>\r\n\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n\r\n          </Modal.Footer>\r\n        </Modal>\r\n        {/* ========================= */}\r\n        {/* newsletter edit */}\r\n        <Modal\r\n          size=\"sm\"\r\n          show={this.state.showNewsModal}\r\n          onHide={() => this.setState({ showNewsModal: false })}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-sm\" style={{ fontSize: '15px' }}>\r\n              Title\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Enter Title\" name=\"JM_NewsLetter_Title\" value={this.state.JM_NewsLetter_Title} onChange={(e) => this.setState({ JM_NewsLetter_Title: e.target.value })} />\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <p id=\"msg\" style={{ color: 'red' }}></p>\r\n            <div className=\"btun-box\">\r\n              <Button className=\"btun btun_1\" onClick={this.updateNewsLetterTitle}>Update</Button>\r\n              <p id='req_news'></p>\r\n            </div>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n                  {/* checkout my social title */}\r\n          \r\n\r\n       <Modal\r\n          size=\"sm\"\r\n          show={this.state.openSocialTitleModal}\r\n          onHide={() => this.setState({ openSocialTitleModal: false })}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-sm\" style={{ fontSize: '15px' }}>\r\n             Set Social Widget Title\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Enter Title\" name=\"JM_Checkout_My_Social\" \r\n            value={this.state.JM_Checkout_My_Social}\r\n             onChange={(e)=> this.setState({ [e.target.name]: e.target.value })}\r\n             onKeyPress={this.handleKeyPress}\r\n             />\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n        \r\n           <Button  className=\"btun\" style={{cursor:'pointer'}} onClick={this.updateCheckoutSocialTitle(this.state.JM_ID)}>Save</Button>\r\n        \r\n            <p id=\"msg_social\" style={{ color: 'red' }}></p>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n\r\n          {/* edit send me a gift option */}\r\n          <Modal\r\n              size=\"sm\"\r\n              show={this.state.showTitleModal}\r\n              onHide={() => this.setState({ showTitleModal: false })}\r\n              aria-labelledby=\"example-modal-sizes-title-sm\"\r\n              backdrop=\"static\"\r\n              keyboard={false}\r\n              centered\r\n            >\r\n              <Modal.Header closeButton>\r\n                <Modal.Title id=\"example-modal-sizes-title-sm\" style={{ fontSize: '15px' }}>\r\n                 Title of Gift Option\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Enter Title\" name=\"JM_Gift_Title\" value={this.state.JM_Gift_Title} onChange={(e)=> this.setState({[e.target.name]:e.target.value })} />\r\n              </Modal.Body>\r\n              <Modal.Footer>               \r\n                <div className=\"btun-box\">  </div>\r\n                <Button className=\"btun btun_1\" onClick={this.updateGiftTitle(this.state.JM_ID)}>Save</Button> \r\n                  <p id=\"msg_title\" style={{ color: 'red' }}></p>\r\n              \r\n              </Modal.Footer>\r\n            </Modal>\r\n\r\n        <FooterClass />\r\n      </>\r\n    )\r\n\r\n  }\r\n}\r\nexport default withRouter(MyProfile);\r\n\r\n","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\RND\\Eventcalender.js",["2247","2248","2249","2250","2251","2252","2253","2254","2255","2256","2257","2258","2259","2260","2261","2262"],"import React, { Component, useState, Form }from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Link,NavLink, Route, BrowserRouter as Router, Switch } from 'react-router-dom'\r\nimport FooterClass from '../header_footer/FooterClass';\r\nimport MainHeader from '../header_footer/MainHeader';\r\nimport { Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport moment from 'moment';\r\nimport ProfileHeader from '../header_footer/ProfileHeader';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport API  from '../services/API';\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tab'\r\nclass Eventcalender extends Component\r\n{\r\n  today = new Date();\r\n  currentMonth = this.today.getMonth();\r\n  currentYear = this.today.getFullYear();  \r\n  months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n  calender=[];\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       openModalAvailable:false,\r\n       openModalBooking:false,\r\n       available:[],\r\n       calender:[],\r\n       allSlot:[]\r\n    }\r\n  }\r\n  \r\n     \r\n     async  componentDidMount()\r\n      {\r\n        let  monthAndYear = document.getElementById(\"monthAndYear\");       \r\n        //console.log( this.currentMonth)\r\n        this.getCalender(this.currentMonth);\r\n       \r\n      }\r\n      async getCalender(month)\r\n      {\r\n        var currMonth=month+1;\r\n        currMonth=currMonth.toString().length===1 ? \"0\" + currMonth:currMonth;\r\n        var JSONdata={\r\n          yearMonthString:this.currentYear+\"-\"+currMonth+'-',\r\n          currMonth:this.currentMonth+1\r\n        }\r\n        const data1=await API.postData(JSONdata,'getCalender');\r\n        if(data1.status===1)\r\n        {\r\n          const resp=API.decryptJson(data1.flag);\r\n          this.calender=resp.data;          \r\n        }\r\n\r\n\r\n        \r\n      \r\n        this.showCalendar(this.currentMonth, this.currentYear);\r\n      }\r\n   \r\n\r\n     \r\n     next=()=>{\r\n        \r\n          this.currentYear = (this.currentMonth === 11) ? this.currentYear + 1 : this.currentYear;\r\n          this.currentMonth = (this.currentMonth + 1) % 12;\r\n          this.getCalender(this.currentMonth)\r\n         // this.showCalendar(this.currentMonth, this.currentYear);\r\n      }\r\n      \r\n      previous=()=> {\r\n\r\n        this.currentYear  = (this.currentMonth === 0) ?  this.currentYear  - 1 :  this.currentYear ;\r\n        this.currentMonth = (this.currentMonth === 0) ? 11 : this.currentMonth - 1;\r\n\r\n        this.getCalender(this.currentMonth)\r\n        //this.showCalendar(this.currentMonth,  this.currentYear );\r\n      }\r\n      \r\n      jump=(e)=> {\r\n\r\n        let selectMonth=document.getElementById(\"month\").value;\r\n        let selectYear=document.getElementById(\"yesr\").value;\r\n          this.currentYear = parseInt(selectYear);\r\n          this.currentMonth = parseInt(selectMonth);\r\n          this.showCalendar(this.currentMonth,  this.currentYear );\r\n      }\r\n      \r\n      showCalendar=async (month, year)=> {\r\n          var jsonData={\r\n            month:month+1,year:year\r\n          }\r\n          const data=await API.postData(jsonData,'Get_All_Booking_By_Date_Month');\r\n          let bookingData=[];\r\n          if(data.status===1)\r\n          {\r\n            const resp=API.decryptJson(data.flag);\r\n            bookingData=resp.bookingData;\r\n          }\r\n          \r\n          // //console.log(this.calender)\r\n          let firstDay = (new Date(year, month)).getDay();\r\n      \r\n         let tbl = document.getElementById(\"calendar-body\"); // body of the calendar\r\n      \r\n          // clearing all previous cells\r\n          tbl.innerHTML = \"\";\r\n      \r\n          // filing data about month and in the page via DOM.\r\n          let  monthAndYear = document.getElementById(\"monthAndYear\");\r\n          monthAndYear.innerHTML = this.months[month] + \" \" + year;\r\n\r\n          let selectYear = document.getElementById(\"year\");\r\n          let  selectMonth = document.getElementById(\"month\");\r\n\r\n          selectYear.value = year;\r\n          selectMonth.value = month;\r\n      \r\n          // creating all cells\r\n          let date = 1;\r\n          for (let i = 0; i < 6; i++) \r\n          {\r\n              // creates a table row\r\n              let row = document.createElement(\"tr\");\r\n              let cell=\"\"; let cellText=\"\";\r\n              //creating individual cells, filing them up with data.\r\n              for (let j = 0; j < 7; j++) \r\n              {\r\n                  if (i === 0 && j < firstDay) \r\n                  {\r\n                      cell = document.createElement(\"td\");\r\n                      cellText = document.createTextNode(\"\");\r\n                      cell.appendChild(cellText);\r\n                      row.appendChild(cell);\r\n                  }\r\n                  else if (date > this.daysInMonth(month, year))\r\n                  {\r\n                      break;\r\n                  }      \r\n                  else\r\n                  {\r\n                      cell = document.createElement(\"td\");                \r\n                      var h = document.createElement(\"H4\");                 \r\n                      var t = document.createTextNode(date);\r\n                      h.appendChild(t);\r\n\r\n                          var btnAvailable = document.createElement(\"BUTTON\");  \r\n                          btnAvailable.innerHTML = \"View\";     \r\n                          btnAvailable.onclick=this.openAvailable;\r\n                          btnAvailable.setAttribute(\"data-id\", date);\r\n                          btnAvailable.setAttribute(\"title\", \"Available Schedule\");\r\n                          btnAvailable.setAttribute(\"class\", 'calenderBtn');\r\n                      \r\n\r\n                    \r\n                          if (date === this.today.getDate() && year === this.today.getFullYear() && month === this.today.getMonth()) \r\n                          {\r\n                              cell.classList.add(\"today\");\r\n                          } \r\n                          \r\n                          //color if any schedule created on this date\r\n                          if(this.calender && this.calender.length > 0)\r\n                          {\r\n                            let  monthNumber=month + 1;\r\n                            monthNumber= monthNumber.toString().length===1 ? \"0\"+monthNumber.toString() : monthNumber.toString();\r\n                            let curDateNumber=date.toString().length ===1? \"0\"+date.toString():date.toString();\r\n                            let searchDate=this.today.getFullYear() + \"-\"+ monthNumber +\"-\"+ curDateNumber;\r\n\r\n                           \r\n                            let searchDate2= curDateNumber + \"-\"+ monthNumber +\"-\"+ this.today.getFullYear();\r\n                            var varDate = new Date(searchDate2); //dd-mm-YYYY\r\n                            var today = new Date();\r\n                            \r\n                            if(today >= varDate) \r\n                            {\r\n                         \r\n                                //console.log('current_date date is grater than specific_date')\r\n                            }\r\n                      \r\n                            var span = document.createElement(\"span\"); // no of booking   \r\n                            var foundValue = this.calender.filter(obj=>obj.calDate===searchDate && obj.calDateSlot===searchDate);\r\n                            if(foundValue.length > 0)\r\n                            {   \r\n      \r\n                              if (date >= this.today.getDate() && year === this.today.getFullYear() && month === this.today.getMonth())\r\n                              {\r\n                                cell.classList.add(\"scheduled\"); \r\n                                cell.appendChild(btnAvailable)\r\n                                cell.setAttribute(\"data-id\",  searchDate);\r\n                              } \r\n                              if (year === this.today.getFullYear() && month > this.today.getMonth())\r\n                              {\r\n                                cell.classList.add(\"scheduled\"); \r\n                                cell.appendChild(btnAvailable)\r\n                                cell.setAttribute(\"data-id\",  searchDate);\r\n                              } \r\n\r\n                               var foundObject= bookingData.filter(obj=>obj.calDay===date);\r\n                                if(foundObject && foundObject.length > 0)                             \r\n                                    span.innerHTML=foundObject[0].noOfBooking + \" session(s)\";\r\n                            }\r\n\r\n                           \r\n                      \r\n                          }\r\n\r\n                            cell.appendChild(h);\r\n                            cell.appendChild(span)\r\n                           // cell.appendChild(btnBooked)\r\n                            row.appendChild(cell);\r\n                            date++;\r\n                  }\r\n      \r\n      \r\n              }\r\n      \r\n              tbl.appendChild(row); // appending each row into calendar body.\r\n          }\r\n      \r\n      }\r\n      \r\n      \r\n      // check how many days in a month code from https://dzone.com/articles/determining-number-days-month\r\n      daysInMonth=(iMonth, iYear)=> \r\n      {\r\n          return 32 - new Date(iYear, iMonth, 32).getDate();\r\n      }\r\n      \r\n      openBooking=(e)=>\r\n      {\r\n        \r\n      }\r\n      openAvailable=async (e)=>\r\n      {\r\n                  \r\n                  var dateNumber = e.currentTarget.dataset.id\r\n                  \r\n                  let currentMonth=this.currentMonth+1;\r\n                  var day=dateNumber.toString().length===1 ? \"0\"+ dateNumber:dateNumber;\r\n                  var month=currentMonth.toString().length===1 ? \"0\"+currentMonth.toString(): currentMonth.toString();\r\n                  if(isNaN(day)) day=0;\r\n                  var flagData=\r\n                  {\r\n                    date:this.currentYear+\"-\"+month+\"-\"+day\r\n                  }    \r\n                \r\n                  const flag=API.encryptData(flagData)\r\n                  var  JSONdata={\r\n                        flag:flag           \r\n                    }\r\n                  const response=await API.postData(JSONdata,'GetOpenSlots');\r\n                  if(response.status===1)\r\n                  {    \r\n                      const resp=API.decryptJson(response.flag);\r\n                        \r\n                        if(resp && resp.length > 0)\r\n                        {\r\n                          //console.log(resp.available)\r\n                          const data=resp;\r\n                          let dropdown=[];\r\n                          for (let i = 0; i < data.length; i++) \r\n                          {\r\n                            let Duration=parseInt(data[i].Duration); if(isNaN(Duration)) Duration=0;\r\n                            if(Duration > 0)\r\n                            {\r\n                                  \r\n                                  let startSlotTime = data[i].startSlotTime.split(':');\r\n                                  let start='';let end='';\r\n                                  let start2='';let end2='';\r\n                                  if(startSlotTime.length  > 0)\r\n                                  {\r\n                                    start=startSlotTime[0];\r\n                                    if(startSlotTime[0].length===1)\r\n                                    {\r\n                                      start=\"0\"+startSlotTime[0];\r\n                                    }\r\n                                    end=startSlotTime[1];\r\n                                    if(startSlotTime[1].length===1)\r\n                                    {\r\n                                      end=\"0\"+startSlotTime[1];\r\n                                    }\r\n                                  }\r\n                                  let endSlotTime = data[i].endSlotTime.split(':');           \r\n                                  if(endSlotTime.length > 0)\r\n                                  {\r\n                                    start2=endSlotTime[0];\r\n                                    if(endSlotTime[0].length===1)\r\n                                    {\r\n                                      start2=\"0\"+endSlotTime[0];\r\n                                    }\r\n                                    end2=endSlotTime[1];\r\n                                    if(endSlotTime[1].length===1)\r\n                                    {\r\n                                      end2=\"0\"+endSlotTime[1];\r\n                                    }\r\n                                  }\r\n                        \r\n                                  let newSlotStartTime=API.tConvert24To12(start+\":\"+end);\r\n                                  let newSlotEndTime=API.tConvert24To12(start2+\":\"+end2);\r\n                        \r\n                                  data[i].startSlotTime=newSlotStartTime;\r\n                                  data[i].endSlotTime=newSlotEndTime;\r\n                            }\r\n                          }\r\n                            this.setState({\r\n                              openModalAvailable :true, allSlot:data\r\n                          })\r\n                        } \r\n                  \r\n                  }\r\n      }\r\n      onchangeCheck= async(item,e)=>{\r\n\r\n        //set status as blocked for this id \r\n        var JSONdata={\r\n          ES_ID:item.ES_ID\r\n        }\r\n        let ES_ID=item.ES_ID;\r\n        const data=await API.postData(JSONdata,'blockedSlot');\r\n        //console.log(data)\r\n        if(data.status===1)\r\n        {\r\n          let filteredArray = this.state.allSlot.filter(item => item.ES_ID !== ES_ID)\r\n          this.setState({allSlot: filteredArray});\r\n          e.target.checked=false\r\n        }\r\n\r\n      }\r\n      isConfirm = (item) =>e=> {\r\n        confirmAlert({\r\n          title: 'Confirm Change',\r\n          message: 'Are you sure you want to remove this slot?',\r\n          buttons: [\r\n            {\r\n              label: 'Yes',\r\n              onClick: () => this.onchangeCheck(item,e)\r\n            },\r\n            {\r\n              label: 'No',\r\n              onClick: () => e.target.checked=false\r\n            }\r\n          ],\r\n          closeOnEscape: false,\r\n          closeOnClickOutside: false,\r\n        });\r\n      };\r\n      isConfirm_Dec = (item) =>e=> {\r\n\r\n        confirmAlert({\r\n          title: 'Confirm Change',\r\n          message: 'Are you sure you want to decline this booking?',\r\n          buttons: [\r\n            {\r\n              label: 'Yes',\r\n              onClick: () => this.doDeclined(item)\r\n            },\r\n            {\r\n              label: 'No',\r\n              onClick: () => e.target.checked=false\r\n            }\r\n          ],\r\n          closeOnEscape: false,\r\n          closeOnClickOutside: false,\r\n        });\r\n      };\r\n \r\n      doDeclined=(data)=>{\r\n       \r\n        // var JSONdata = {\r\n        //     BM_ID: data.BM_ID,\r\n        //     paymentId:data.Payment_ID,\r\n        //     data:data\r\n        // };\r\n     \r\n        var flagData={\r\n          BM_ID: data.BM_ID,\r\n          paymentId:data.Payment_ID,\r\n          data:data\r\n        }\r\n        const flag=API.encryptData(flagData);\r\n\r\n        var JSONdata={\r\n         flag:flag\r\n        }\r\n\r\n        if(isNaN(parseInt(data.isFree))===false && parseInt(data.isFree)===1)\r\n        {\r\n                const API_url = process.env.REACT_APP_ROOT_URL + \"admin/declinedFree\";\r\n                fetch(API_url,\r\n                {\r\n                    method: 'post',\r\n                    headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n                    body: JSON.stringify(JSONdata)\r\n                })\r\n                .then((response) => response.json())\r\n                .then(data => {\r\n                    if (data.status === 1) \r\n                    {    \r\n                        alert('Request is Declined');\r\n                        window.location.reload();\r\n                    }\r\n                    else\r\n                    alert('internal error');\r\n                });\r\n        }\r\n\r\n       else if(data.isFree===0)\r\n        {\r\n        const API_url =process.env.REACT_APP_ROOT_URL + \"admin/refund\";\r\n        fetch(API_url,\r\n          {\r\n            method: 'post',\r\n            headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n            body: JSON.stringify(JSONdata)\r\n          })\r\n          .then((response) => response.json())\r\n          .then(data => {\r\n            if (data.status === 1) \r\n            {    \r\n               alert('Request is Declined');\r\n                window.location.reload();\r\n            }\r\n            else\r\n              alert('internal error');\r\n          });\r\n        }\r\n\r\n     }\r\n \r\n      render()\r\n  {\r\n    \r\n            const events = [\r\n            {\r\n                start: moment().toDate(),\r\n                end: moment().add(3, \"days\")\r\n                  .toDate(),\r\n                title: \"Some title\",\r\n                \r\n            },\r\n        ];\r\n\r\n      \r\n     let openSlots;\r\n     openSlots= this.state.allSlot &&  this.state.allSlot.map((item,i) =>{\r\n         return (\r\n          <div className=\"row calender-modal\">\r\n              { \r\n              item.ES_Status==='Open'?\r\n                <>\r\n                  <div className=\"col-md-12\"><h6> {item.DA_Title}</h6></div>\r\n                  <div className=\"col-md-5 col-6\"><p><span>Start Time:</span> {item.startSlotTime}</p></div>             \r\n                  <div className=\"col-md-5 col-6\"><p><span>End Time:</span>{item.endSlotTime} </p></div> \r\n                  {/* <div className=\"col-md-6 col-8\"><p><span>End Time:</span>{item.endSlotTime} </p></div>  */}\r\n                  {/*  className=\"col-md-6 col-4\" */}\r\n                  <div className=\"col-md-2 col-12\">\r\n                          <label className=\"switch\" for={\"blockedTimeSlot_\"+item.ES_ID}>\r\n                              <input type=\"checkbox\" id={\"blockedTimeSlot_\"+item.ES_ID} onChange={this.isConfirm(item)} />\r\n                              <div className=\"slider round\"></div>\r\n                          </label>\r\n                   </div> \r\n                </>     \r\n              :\r\n              null                    \r\n              }\r\n                  \r\n          </div>  \r\n         )\r\n      })\r\n    \r\n      let bookedSlot;\r\n      bookedSlot= this.state.allSlot &&  this.state.allSlot.map((item,i) =>{\r\n          return (\r\n           <div className=\"calender-modal\">\r\n               { \r\n               item.ES_Status==='Booked'?\r\n                 <div className=\"booked_tr\">\r\n                   <button className=\"declineBooking\" onClick={this.isConfirm_Dec(item)}>Cancel</button>\r\n                  <div className=\"row calenderList\">\r\n                   <div className=\"col-md-6 \"><p><span>Start Time:</span> {item.startSlotTime}</p></div>     \r\n                   <div className=\"col-md-6 \"><p><span>Duration:</span> {item.Duration}</p></div>\r\n                  </div>\r\n                  <div className=\"row calenderList\">        \r\n                   <div className=\"col-md-6 \"><p><span>Name of user:</span>{item.BM_Name} </p></div>\r\n                   <div className=\"col-md-6 \"><p><span>Notes:</span>{item.BM_Instruction} </p></div>\r\n                   </div> \r\n                   <div className=\"row calenderList\">  \r\n                    <div className=\"col-md-6 \">\r\n                      <p><span>Video Link:</span> <a href={process.env.REACT_APP_ROOT_URL+\"meet?id=\"+item.BM_Content_Sent} target=\"_black\">Open</a> </p>\r\n                    </div>\r\n                    \r\n                      <div className=\"col-md-6\">\r\n                         <p><a href={'/notify?type=Booked' }>Further Details</a> </p>\r\n                      </div>  \r\n                     \r\n                  </div>\r\n                 </div>     \r\n               :\r\n               null                    \r\n               }\r\n                   \r\n           </div>  \r\n          )\r\n       })\r\n  return (\r\n      \r\n    <>\r\n    <ProfileHeader/>\r\n   \r\n        <div className=\"calender-sec\">\r\n          <div className=\"container\">\r\n            <div className=\"col-md-10 offset-md-1\">\r\n              <div className=\"big-calender\">\r\n                  <div className=\"calender-head\">\r\n                    <button id=\"previous\" onClick={this.previous}>&lt;</button>\r\n                    <h3 className=\"card-header\" id=\"monthAndYear\"></h3>\r\n                    <button id=\"next\" onClick={this.next}>&gt;</button>\r\n                  </div>\r\n              \r\n                  <div className=\"calender-body\">\r\n                    <table className=\"table\" id=\"calendar\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Sun</th>\r\n                          <th>Mon</th>\r\n                          <th>Tue</th>\r\n                          <th>Wed</th>\r\n                          <th>Thu</th>\r\n                          <th>Fri</th>\r\n                          <th>Sat</th>\r\n                        </tr>\r\n                      </thead>\r\n                     \r\n                         <tbody id=\"calendar-body\">\r\n\r\n                        </tbody>\r\n                    </table>\r\n\r\n                       {/* <div className=\"form-inline\">\r\n                        <button className=\"btn btn-outline-primary col-sm-6\" id=\"previous\" onClick={this.previous}>Previous</button>\r\n\r\n                          <button className=\"btn btn-outline-primary col-sm-6\" id=\"next\" onClick={this.next}>Next</button>\r\n                        </div> */}\r\n                        <br/>\r\n                        <form className=\"form-inline\" style={{display:'none'}}>\r\n                            <label className=\"lead mr-2 ml-2\" for=\"month\">Jump To: </label>\r\n                            <select className=\"form-control col-sm-4\" name=\"month\" id=\"month\" onChange={this.jump}>\r\n                                <option value=\"0\">Jan</option>\r\n                                <option value=\"1\">Feb</option>\r\n                                <option value=\"2\">Mar</option>\r\n                                <option value=\"3\">Apr</option>\r\n                                <option value=\"4\">May</option>\r\n                                <option value=\"5\">Jun</option>\r\n                                <option value=\"6\">Jul</option>\r\n                                <option value=\"7\">Aug</option>\r\n                                <option value=\"8\">Sep</option>\r\n                                <option value=\"9\">Oct</option>\r\n                                <option value=\"10\">Nov</option>\r\n                                <option value=\"11\">Dec</option>\r\n                            </select>\r\n\r\n\r\n                            <label for=\"year\"></label><select className=\"form-control col-sm-4\" name=\"year\" id=\"year\" onChange={this.jump}>\r\n                          \r\n                            {/* <option value='2020'>2020</option> */}\r\n                            <option value=\"2021\">2021</option>\r\n                            <option value=\"2022\">2022</option>\r\n                             {/* <option value=\"2023\">2023</option>\r\n                            <option value=\"2024\">2024</option> */}\r\n                          \r\n                        </select></form>\r\n                        </div>  \r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n     \r\n \r\n    {/* available*/}\r\n    <Modal\r\n          show={this.state.openModalAvailable}\r\n          onHide={() => this.setState({ openModalAvailable: false })}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n          size={'lg'}\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-sm\" style={{ fontSize: '15px' }}>\r\n               View Schedule\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body> \r\n            <div className=\"calender-modal\">\r\n              \r\n                         \r\n                      <Tabs\r\n                            \r\n                            transition={false}\r\n                            id=\"noanim-tab-example\"\r\n                            className=\"mb-3\"\r\n                            variant='tabs' \r\n                          >\r\n                            <Tab eventKey=\"open\" title=\"Open Slots\" style={{maxHeight:'300px',overflowY:'auto',overflowX:'hidden',cursor:'pointer'}}>\r\n                           \r\n                            {openSlots}\r\n                            </Tab>\r\n                            <Tab eventKey=\"booked\" title=\"Booked Slots\" style={{maxHeight:'300px',overflowY:'auto',overflowX:'hidden',cursor:'pointer'}}>\r\n                            {bookedSlot}\r\n                            </Tab>\r\n                          \r\n                          </Tabs>\r\n            </div> \r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n\r\n          </Modal.Footer>\r\n        </Modal>\r\n {/* booking*/}\r\n <Modal\r\n          show={this.state.openModalBooking}\r\n          onHide={() => this.setState({ openModalBooking: false })}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-sm\" style={{ fontSize: '15px' }}>\r\n              Booking Schedule\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>          \r\n              <div className=\"cropp-image\" >\r\n               \r\n\r\n              </div>\r\n              {/* <button className=\"btnCropSave\"   onClick={this.uploadPic(3)}>Okay</button> */}\r\n           \r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n          <FooterClass/>\r\n    </>\r\n  )\r\n}\r\n}\r\n\r\nexport default Eventcalender\r\n","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\MyProfile2_copy.js",["2263","2264","2265","2266","2267","2268","2269","2270","2271","2272","2273","2274","2275","2276","2277","2278","2279","2280","2281","2282","2283","2284","2285","2286","2287","2288","2289","2290","2291","2292","2293","2294","2295","2296","2297","2298","2299","2300","2301","2302","2303","2304","2305","2306","2307","2308","2309","2310","2311","2312","2313","2314","2315","2316","2317","2318","2319","2320","2321","2322","2323","2324","2325","2326","2327","2328","2329","2330","2331","2332","2333","2334","2335","2336","2337","2338","2339","2340","2341","2342","2343","2344","2345","2346","2347","2348","2349","2350","2351","2352","2353","2354","2355","2356","2357","2358","2359","2360","2361","2362","2363","2364","2365","2366","2367","2368","2369","2370","2371","2372","2373","2374","2375","2376","2377","2378","2379","2380","2381","2382","2383","2384","2385","2386","2387","2388","2389","2390","2391","2392","2393","2394","2395"],"import React, { Component } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport { Link, NavLink, Route, BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\r\nimport { Nav, Navbar, Button } from 'react-bootstrap';\r\nimport FooterClass from '../header_footer/FooterClass';\r\nimport MainHeader from '../header_footer/MainHeader';\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\r\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\r\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\r\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\nimport IndeterminateCheckBoxOutlinedIcon from '@material-ui/icons/IndeterminateCheckBoxOutlined';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ProfileNav from './ProfileNav';\r\nimport ProfileHeader from '../header_footer/ProfileHeader';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport AddNewLink from './AddNewLink';\r\nimport EditLinks from './EditLinks';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport ToastAlert from './ToastAlert';\r\nimport DirectAccess from './DirectAccess';\r\nimport { withRouter } from \"react-router\";\r\nimport VideoLibraryIcon from '@material-ui/icons/VideoLibrary';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport DuoIcon from '@material-ui/icons/Duo';\r\nimport PhotoAlbumIcon from '@material-ui/icons/PhotoAlbum';\r\nimport VideoCallIcon from '@material-ui/icons/VideoCall';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\n//import EmailIcon from '@material-ui/icons/Email';\r\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport SocialWidget from './SocialWidget';\r\nimport * as queryString from 'query-string';\r\nimport axios from 'axios';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport EditSocialWidget from './EditSocialWidget';\r\nimport StackedLink from './StackedLink';\r\nimport LivePreview from './LivePreview';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport OpenWithSharpIcon from '@material-ui/icons/OpenWithSharp';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport SendSharpIcon from '@material-ui/icons/SendSharp';\r\nimport EditStackedLink from './EditStackedLink';\r\nimport EmbedContent from './EmbedContent';\r\nimport EditEmbedContent from './EditEmbedContent';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport EditPremiumFeature from './EditPremiumFeature';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport { ProgressBar } from 'react-bootstrap';\r\nimport EditUnlockContent from '../premium/EditUnlockContent';\r\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\r\nimport CameraAltOutlinedIcon from '@material-ui/icons/CameraAltOutlined';\r\nimport PictureAsPdfOutlinedIcon from '@material-ui/icons/PictureAsPdfOutlined';\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport EditPopGift from '../premium/EditPopGift';\r\nimport $ from 'jquery'\r\nimport EditLinks2 from './EditLinks2';\r\n\r\nimport { MDBIcon } from 'mdbreact';\r\nimport LivePreview2 from './LivePreview2';\r\nimport AddNewLink2 from './AddNewLink2';\r\nimport cryptoRandomString from 'crypto-random-string';\r\nimport ReactCrop from 'react-image-crop'\r\nimport 'react-image-crop/dist/ReactCrop.css'\r\nimport StackedLink2 from './StackedLink2';\r\nimport EditStackedLink2 from './EditStackedLink2';\r\nimport SocialWidget2 from './SocialWidget2';\r\nimport EditSocialWidget2 from './EditSocialWidget2';\r\nimport EmbedContent2 from './EmbedContent2';\r\nimport EditEmbedContent2 from './EditEmbedContent2';\r\nimport EditPremiumFeature2 from './EditPremiumFeature2';\r\nimport EditUnlockContent2 from '../premium/EditUnlockContent2';\r\nimport EditPopGift2 from '../premium/EditPopGift2';\r\n\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport RBCarousel from \"react-bootstrap-carousel\";\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\r\n//social sharing \r\n//import ShareBtn from 'react-share-button';\r\n//import \"react-share-button/dist/ShareBtn\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faInstagram,\r\n  faFacebookF,\r\n  faYoutube,\r\n  faSnapchatGhost,\r\n  faLinkedinIn,\r\n  faTwitch,\r\n  faTwitter,\r\n  faPinterestP,\r\n  faSpotify\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {\r\n  faGlobe,\r\n  faShoppingCart,\r\n  faEnvelope,\r\n  faHandPaper\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport {\r\n  FacebookShareCount,\r\n  GooglePlusShareCount,\r\n  LinkedinShareCount,\r\n  PinterestShareCount,\r\n  VKShareCount,\r\n  OKShareCount,\r\n  RedditShareCount,\r\n  TumblrShareCount,\r\n} from 'react-share';\r\n\r\nimport {\r\n  FacebookShareButton,\r\n  GooglePlusShareButton,\r\n  LinkedinShareButton,\r\n  TwitterShareButton,\r\n  TelegramShareButton,\r\n  WhatsappShareButton,\r\n  PinterestShareButton,\r\n  VKShareButton,\r\n  OKShareButton,\r\n  RedditShareButton,\r\n  TumblrShareButton,\r\n  LivejournalShareButton,\r\n  MailruShareButton,\r\n  ViberShareButton,\r\n  WorkplaceShareButton,\r\n  EmailShareButton,\r\n} from 'react-share';\r\n\r\nimport {\r\n  FacebookIcon,\r\n  TwitterIcon,\r\n  TelegramIcon,\r\n  WhatsappIcon,\r\n  GooglePlusIcon,\r\n  LinkedinIcon,\r\n  PinterestIcon,\r\n  VKIcon,\r\n  OKIcon,\r\n  RedditIcon,\r\n  TumblrIcon,\r\n  LivejournalIcon,\r\n  MailruIcon,\r\n  ViberIcon,\r\n  WorkplaceIcon,\r\n  EmailIcon,\r\n} from 'react-share';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport ColorLensOutlinedIcon from '@material-ui/icons/ColorLensOutlined';\r\n\r\n\r\n\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport API from '../services/API';\r\nimport { AddIcCallOutlined } from '@material-ui/icons';\r\n\r\nconst icon_left = <span className=\"fa fa-chevron-left\" />;\r\nconst icon_right = <span className=\"fa fa-chevron-right\" />;\r\n\r\nconst default_image1 = API.GetDummyImageCarousel(1);\r\nconst default_image2 = API.GetDummyImageCarousel(2);\r\nconst default_image3 = API.GetDummyImageCarousel(3);\r\nclass MyProfile extends Component {\r\n\r\n  url = '';\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      JM_Email: localStorage.getItem('JM_Email'),\r\n      JM_ID: parseInt(localStorage.getItem('JM_ID')),\r\n      linkMaster: [],\r\n      userDetailsAll: [],\r\n      directAccess: [],\r\n      productList: [],\r\n      category_master: [],\r\n      socialWidget: [],\r\n      category_links: [],\r\n      embed_content: [],\r\n      gifts: [],\r\n      isLoggedIn: false,\r\n      JM_Name: '',\r\n      JM_Email: '',\r\n      JM_Url: '',\r\n      JM_Profile_Pic: '',\r\n      JM_User_Profile_Url: localStorage.getItem('JM_User_Profile_Url'),\r\n      base_url: process.env.REACT_APP_API_URL,\r\n      root_url: process.env.REACT_APP_ROOT_URL,\r\n      ProfilePath: 'Profile/',\r\n      linkPath: '',\r\n      ProfileimagePath: '',\r\n      open: false,\r\n      isChecked: false,\r\n      value: '',\r\n      copied: false,\r\n      checkedBoxes: [],\r\n      colapseBoxes: [],\r\n      checkedBoxesFolder: [],\r\n      title: '',\r\n      msg: '',\r\n      logo: '',\r\n      show: false,//for toast\r\n      confirm: false,\r\n      selectedFile: null,\r\n      openEditURLModal: false,\r\n      Validation: true,\r\n      openDynamic: false,\r\n      isLoading: false,\r\n      openMoveLinkModel: false,\r\n      radio: 0,\r\n      LM_ID_Move: 0,\r\n      JM_ID_Move: 0,\r\n      CM_ID_Move: 0,\r\n      uploadPercentage: 0,\r\n      avatar: '',\r\n      isBlocked: 0,\r\n      inProgess: true,\r\n\r\n      src: null,\r\n      crop: {\r\n        unit: \"%\",\r\n        width: 30,\r\n        aspect: 1 / 1\r\n      },\r\n      croppedImageUrl: null,\r\n      openCropModal: false,\r\n      openSocialModal: false,\r\n      referralCode: [],\r\n      old_url: '',\r\n      //MS2\r\n      activeNameBio_color: '#0000',\r\n      isCompletedUrlProcessing: false,\r\n      btnRequest: 'Change',\r\n\r\n      JM_NewsLetter_Active: 0,\r\n      JM_NewsLetter_Title: '',\r\n      showNewsModal: false,\r\n      //walk thrrough\r\n      JM_Steps: 1,\r\n      openRefModal: false,\r\n      isValidRefCode: false,\r\n      JM_Referral_Code: '',\r\n      leftIcon: '<',\r\n      rightIcon: '>',\r\n      selected:[],\r\n    }\r\n    //console.log(this.props.location.search)\r\n\r\n  }\r\n  componentDidMount() {\r\n    //$('#JM_Description').on('input', function() {\r\n    // $('#res').html(this.value.replace(/\\r?\\n/g, '<br>'));\r\n    //})\r\n    this.validateSession();\r\n    this.Get_User_Details();\r\n  }\r\n  //===starting of crop image\r\n\r\n  handleFile = e => {\r\n    const fileReader = new FileReader()\r\n    if (e.target.files !== null && e.target.files.length > 0) {\r\n      fileReader.onloadend = () => {\r\n        this.setState({ src: fileReader.result })\r\n      }\r\n      fileReader.readAsDataURL(e.target.files[0])\r\n      this.setState({ openCropModal: true })\r\n    }\r\n  }\r\n\r\n  onImageLoaded = image => {\r\n    this.imageRef = image\r\n  }\r\n\r\n  onCropChange = (crop) => {\r\n    this.setState({ crop });\r\n  }\r\n\r\n  onCropComplete = crop => {\r\n    if (this.imageRef && crop.width && crop.height) {\r\n      const croppedImageUrl = this.getCroppedImg(this.imageRef, crop)\r\n      this.setState({ croppedImageUrl })\r\n    }\r\n  }\r\n\r\n  getCroppedImg(image, crop) {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    )\r\n\r\n    const reader = new FileReader()\r\n    canvas.toBlob(blob => {\r\n\r\n      let r = cryptoRandomString({ length: 30 });\r\n      //console.log(\"random\", r);\r\n      reader.readAsDataURL(blob)\r\n      reader.onloadend = () => {\r\n        this.dataURLtoFile(reader.result, r + '.jpg')\r\n      }\r\n    })\r\n  }\r\n  dataURLtoFile(dataurl, filename) {\r\n    let arr = dataurl.split(','),\r\n      mime = arr[0].match(/:(.*?);/)[1],\r\n      bstr = atob(arr[1]),\r\n      n = bstr.length,\r\n      u8arr = new Uint8Array(n);\r\n\r\n    while (n--) {\r\n      u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    let croppedImage = new File([u8arr], filename, { type: mime });\r\n    this.setState({ croppedImage: croppedImage })\r\n  }\r\n  //===end of crop image\r\n\r\n\r\n  validateSession() {\r\n\r\n    const urlParams = queryString.parse(window.location.search);\r\n    const code = urlParams.code;\r\n    //console.log(urlParams)\r\n    //console.log(\"insta token id\")\r\n    //console.log(code)\r\n    localStorage.setItem('token', code);\r\n    var JM_ID = parseInt(localStorage.getItem('JM_ID'));\r\n    if (isNaN(JM_ID) || JM_ID === 0 || JM_ID === null) {\r\n      // if (typeof code === \"undefined\") \r\n      // {\r\n      localStorage.setItem('JM_Email', \"\");\r\n      localStorage.setItem('JM_ID', 0);\r\n      window.location.href = '/';\r\n      // }\r\n      // else \r\n      // {\r\n      // let token = this.getAccessTokenFromCode(code);\r\n      //this.getFacebookUserData(token);\r\n\r\n      // }\r\n\r\n\r\n    }\r\n    //else  if (code !== 'undefined') \r\n    //{\r\n    //     axios.post('https://api.instagram.com/oauth/access_token', queryString.stringify({\r\n    //     client_id: '480886739775031',\r\n    //     client_secret: '8208035d75f168409c41a05a1d81fe77',\r\n    //     grant_type: 'authorization_code',\r\n    //     redirect_uri: process.env.REACT_APP_API_URL+'me',\r\n    //     code: code\r\n    //     }))\r\n    //     .then(response => {\r\n    //         //console.log(response.data) \r\n    //         var token=response.data.access_token;\r\n    //         var user_id=response.data.user_id;\r\n    //         var url=\"https://graph.instagram.com/\"+user_id+\"?fields=id,username&access_token=\"+token;\r\n\r\n    //               axios.get(url)\r\n    //               .then(function (response) {                 \r\n    //                 //console.log(response);\r\n    //               })\r\n    //               .catch(function (error) {        \r\n    //                 //console.log(error);\r\n    //               })\r\n    //               .then(function () {               \r\n    //               });\r\n    //       })\r\n    //     .catch(error => {\r\n    //         //console.log(error)\r\n    //     })\r\n    // }\r\n\r\n\r\n\r\n  }\r\n\r\n  async getAccessTokenFromCode(code) {\r\n\r\n    const { data } = await axios({\r\n      url: 'https://graph.facebook.com/v4.0/oauth/access_token',\r\n      method: 'get',\r\n      params: {\r\n        client_id: process.env.REACT_APP_FACEBOOK_APP_ID,\r\n        client_secret: process.env.REACT_APP_Secret_Key,\r\n        redirect_uri: process.env.REACT_APP_API_URL + 'me',\r\n        code,\r\n      },\r\n    });\r\n    //console.log(data); // { access_token, token_type, expires_in }\r\n    //return data.access_token;\r\n    this.getFacebookUserData(data.access_token);\r\n  }\r\n  async getFacebookUserData(access_token) {\r\n    //console.log(access_token);\r\n\r\n    const { data } = await axios({\r\n      url: 'https://graph.facebook.com/me',\r\n      method: 'get',\r\n      params: {\r\n        fields: ['id', 'email', 'first_name', 'last_name'].join(','),\r\n        access_token: access_token,\r\n      },\r\n    });\r\n    //console.log(data.email); // { id, email, first_name, last_name }\r\n\r\n\r\n    if (data != null && data.email.length > 0 && data.id.length > 0) {\r\n      let API_url = process.env.REACT_APP_API_URL + \"admin/socialLogin\";\r\n      // var JSONdata  = {           \r\n      //     JM_Email:this.state.JM_Email,\r\n      //     JM_Password:this.state.JM_Password              \r\n      //   };\t\r\n      fetch(API_url, {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(data)\r\n      }).then(function (response) {\r\n        return response.json();\r\n      }).then(result => {\r\n        if (result.status === 1) {\r\n          //console.log(data.msg);\r\n          localStorage.setItem('JM_ID', result.JM_ID);\r\n          localStorage.setItem('JM_Email', data.email);\r\n          this.Get_User_Details();\r\n        }\r\n        else {\r\n          //console.log(\"failed to insert or fetch\")\r\n          localStorage.setItem('JM_Email', \"\");\r\n          localStorage.setItem('JM_ID', 0);\r\n          window.location.href = '/';\r\n        }\r\n      });\r\n\r\n    }\r\n\r\n    // return data;\r\n  };\r\n\r\n  async Get_User_Details() {\r\n    var id = parseInt(localStorage.getItem('JM_ID'));\r\n    var JSONdata = {\r\n      JM_ID: id\r\n    };\r\n    const API_url = this.state.base_url + \"admin/userDetailsAll\";\r\n    const response = await fetch(API_url, {\r\n      method: 'post',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(JSONdata)\r\n    });\r\n    const data = await response.json();\r\n\r\n    if (data != null && data.status > 0) \r\n    {\r\n\r\n      this.setState({\r\n        userDetailsAll: data.data,\r\n        userDetails: data.userDetails,\r\n        themeMasterUser: data.themeMasterUser,\r\n        socialWidget: data.socialWidget,\r\n        gifts: data.gifts,\r\n        category_master: data.category_master,\r\n        JM_Name: data.userDetails[0].JM_Name,\r\n        JM_Description: data.userDetails[0].JM_Description,\r\n        isBlocked: data.userDetails[0].isBlocked,\r\n        Ref_Code: data.userDetails[0].JM_User_Profile_Url + \"-\" + data.userDetails[0].JM_ID,\r\n        old_url: data.userDetails[0].JM_User_Profile_Url,\r\n        TM_Bio_Color: data.themeMasterUser[0].TM_Bio_Color,\r\n        TM_Name_Color: data.themeMasterUser[0].TM_Name_Color,\r\n        TM_Footer_Color: data.themeMasterUser[0].TM_Footer_Color,\r\n        activeNameBio_color: data.themeMasterUser[0].TM_Bio_Color,\r\n        JM_NewsLetter_Title: data.userDetails[0].JM_NewsLetter_Title,\r\n        JM_NewsLetter_Active: data.userDetails[0].JM_NewsLetter_Active,\r\n        JM_Steps: data.userDetails[0].JM_Steps\r\n      });\r\n\r\n      this.Update_ReferralCode(this.state.Ref_Code);\r\n\r\n      console.log(\"myprofile2\")\r\n\r\n      console.log(data)\r\n      const  userDetailsAll = data.data;\r\n      var selected = [];\r\n      if (userDetailsAll && userDetailsAll.length > 0) \r\n      {\r\n        for (let i = 0; i < userDetailsAll.length; i++) \r\n        {\r\n          if (userDetailsAll[i].folderId > 0) \r\n          {\r\n            selected.push(userDetailsAll[i]);\r\n          }\r\n        }  \r\n        this.setState({\r\n          selected\r\n        })\r\n      }\r\n    }\r\n    \r\n    if (this.state.isBlocked === 1) {\r\n      window.location.href = process.env.REACT_APP_ROOT_URL;\r\n    }\r\n    this.setCheckBoxes();\r\n    //console.log(data);\r\n\r\n  }\r\n  //MS2\r\n  Update_ReferralCode = (original_code) => {\r\n    var id = parseInt(localStorage.getItem('JM_ID'));\r\n\r\n    var JSONdata = {\r\n      JM_ID: id,\r\n      Code: this.state.Ref_Code\r\n    };\r\n    const API_url = process.env.REACT_APP_API_URL + \"admin/Update_ReferralCode\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        //console.log(data)\r\n      });\r\n\r\n  }\r\n  openModal = () => {\r\n    !this.state.open ?\r\n      this.setState({ open: true })\r\n      :\r\n      this.setState({ open: false })\r\n\r\n  }\r\n\r\n  doDeleteLink = e => {\r\n    // var id=document.getElementById('hidden').value;\r\n    const LM_ID = e.currentTarget.dataset.remove;\r\n    var JSONdata = {\r\n      LM_ID: LM_ID\r\n    };\r\n    const API_url = this.state.base_url + \"admin/deleteLink\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.Get_User_Details();\r\n          this.refreshMobileView();\r\n        }\r\n        else\r\n          alert('not fetch');\r\n      });\r\n  }\r\n  //doDeleteLinkSocial\r\n  doDeleteLinkSocial = e => {\r\n    // var id=document.getElementById('hidden').value;\r\n    const SWM_ID = e.currentTarget.dataset.remove;\r\n    var JSONdata = {\r\n      SWM_ID: SWM_ID\r\n    };\r\n    const API_url = this.state.base_url + \"admin/deleteLinkSocial\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.Get_User_Details();\r\n          this.refreshMobileView();\r\n        }\r\n        else\r\n          alert('not fetch');\r\n      });\r\n  }\r\n\r\n  doDeleteCategory = e => {\r\n    // var id=document.getElementById('hidden').value;\r\n    const CM_ID = e.currentTarget.dataset.remove;\r\n    var JSONdata = {\r\n      CM_ID: CM_ID,\r\n      JM_ID: this.state.JM_ID\r\n    };\r\n    const API_url = this.state.base_url + \"admin/deleteCategory\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.Get_User_Details();\r\n          this.refreshMobileView();\r\n        }\r\n        else\r\n          alert('not fetch');\r\n      });\r\n  }\r\n  doDeleteEmbed = e => {\r\n    const EC_ID = e.currentTarget.dataset.remove;\r\n    var JSONdata = {\r\n      EC_ID: EC_ID\r\n    };\r\n    const API_url = this.state.base_url + \"admin/deleteEmbed\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.Get_User_Details();\r\n          this.refreshMobileView();\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'profile is updated',\r\n            // isLoading:true   \r\n          });\r\n        }\r\n        else\r\n          alert('not fetch');\r\n      });\r\n  }\r\n\r\n  setStateAfterInsert = (currentState) => {\r\n    this.setState({\r\n      userDetailsAll: currentState.userDetailsAll,\r\n      themeMasterUser: currentState.themeMasterUser,\r\n      userDetails: currentState.userDetails,\r\n      socialWidget: currentState.socialWidget,\r\n      gifts: currentState.gifts,\r\n      category_master: currentState.category_master,\r\n      show: true,\r\n      title: currentState.title,\r\n      msg: currentState.msg,\r\n    });\r\n    this.refreshMobileView();\r\n    this.setCheckBoxes();\r\n  }\r\n  setCheckBoxes = () => {\r\n    var checkedBoxes = [];\r\n    if (this.state.userDetailsAll != null && this.state.userDetailsAll.length > 0) {\r\n      let len = this.state.userDetailsAll.length;\r\n      for (var j = 0; j < len; j++) {\r\n        if (this.state.userDetailsAll[j].ItemType === 'customlink') {\r\n          if (this.state.userDetailsAll[j].activeInactive === 1) {\r\n            checkedBoxes.push(this.state.userDetailsAll[j]);\r\n          }\r\n          else {\r\n            // const index = checkedBoxes.findIndex((ch) => (ch.tableId === this.state.userDetailsAll[j].tableId && ch.ItemType= === 'customlink');     \r\n            const index = checkedBoxes.findIndex(element => element.tableId === this.state.userDetailsAll[j].tableId && element.ItemType === 'customlink');\r\n            // document.getElementById('lnk_item_' + this.state.userDetailsAll[j].tableId +\"_\"+ this.state.userDetailsAll[j].ItemType).style.opacity = '0.5';\r\n          }\r\n        }\r\n        if (this.state.userDetailsAll[j].ItemType === 'category') {\r\n          if (this.state.userDetailsAll[j].activeInactive === 1) {\r\n            checkedBoxes.push(this.state.userDetailsAll[j]);\r\n          }\r\n          else {\r\n            // const index = checkedBoxes.findIndex((ch) => (ch.tableId === this.state.userDetailsAll[j].tableId && ch.ItemType= === 'customlink');     \r\n            const index = checkedBoxes.findIndex(element => element.tableId === this.state.userDetailsAll[j].tableId && element.ItemType === 'category');\r\n            // document.getElementById('lnk_item_' + this.state.userDetailsAll[j].tableId +\"_\"+ this.state.userDetailsAll[j].ItemType).style.opacity = '0.5';\r\n          }\r\n        }\r\n        if (this.state.userDetailsAll[j].ItemType === 'embedcontent') {\r\n          if (this.state.userDetailsAll[j].activeInactive === 1) {\r\n            checkedBoxes.push(this.state.userDetailsAll[j]);\r\n          }\r\n          else {\r\n            // const index = checkedBoxes.findIndex((ch) => (ch.tableId === this.state.userDetailsAll[j].tableId && ch.ItemType= === 'customlink');     \r\n            const index = checkedBoxes.findIndex(element => element.tableId === this.state.userDetailsAll[j].tableId && element.ItemType === 'embedcontent');\r\n            // document.getElementById('lnk_item_' + this.state.userDetailsAll[j].tableId +\"_\"+ this.state.userDetailsAll[j].ItemType).style.opacity = '0.5';\r\n          }\r\n        }\r\n        if (this.state.userDetailsAll[j].ItemType === 'premium' || this.state.userDetailsAll[j].ItemType === 'carousel') {\r\n          if (this.state.userDetailsAll[j].activeInactive === 1) {\r\n            checkedBoxes.push(this.state.userDetailsAll[j]);\r\n          }\r\n          else {\r\n            const index = checkedBoxes.findIndex(element => element.tableId === this.state.userDetailsAll[j].tableId && element.ItemType === 'premium');\r\n          }\r\n        }\r\n        if (this.state.userDetailsAll[j].ItemType === 'socialBar') {\r\n          if (this.state.userDetailsAll[j].activeInactive === 1) {\r\n            checkedBoxes.push(this.state.userDetailsAll[j]);\r\n          }\r\n          else {\r\n            const index = checkedBoxes.findIndex(element => element.tableId === this.state.userDetailsAll[j].tableId && element.ItemType === 'socialBar');\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (this.state.socialWidget != null && this.state.socialWidget.length > 0) {\r\n      let len = this.state.socialWidget.length;\r\n      for (var k = 0; k < len; k++) {\r\n        if (this.state.socialWidget[k].SWM_Active === 1 && this.state.socialWidget[k].SWM_Style_Type === 'W') {\r\n          checkedBoxes.push(this.state.socialWidget[k]);\r\n\r\n        }\r\n        else {\r\n          const index = checkedBoxes.findIndex((ch) => ch.SWM_ID === this.state.socialWidget[k].SWM_ID);\r\n          //document.getElementById('lnk_item_' + this.state.socialWidget[k].SWM_ID).style.opacity = '0.5';\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n\r\n    if (this.state.JM_NewsLetter_Active === 1) {\r\n      checkedBoxes.push({ creatorId: this.state.JM_ID, JM_NewsLetter_Title: this.state.JM_NewsLetter_Title });\r\n    }\r\n\r\n    else {\r\n      const index = checkedBoxes.findIndex((ch) => ch.creatorId === this.state.JM_ID);\r\n    }\r\n    this.setState({\r\n      checkedBoxes\r\n    });\r\n\r\n    //console.log(this.state.checkedBoxes)\r\n  }\r\n\r\n  doCopy = () => {\r\n    /* Get the text field */\r\n    var copyText = document.getElementById(\"copy_text\").innerText;\r\n    alert(\"Copied the text: \" + copyText);\r\n  }\r\n  doOut = () => {\r\n    var tooltip = document.getElementById(\"myTooltip\");\r\n    tooltip.innerHTML = \"Copy to clipboard\";\r\n  }\r\n  doActive = item => e => {\r\n\r\n    const checkedBoxes = [...this.state.checkedBoxes];\r\n    let LM_Active = 0;\r\n    if (e.target.checked) {\r\n      checkedBoxes.push(item);\r\n      LM_Active = 1;\r\n      // document.getElementById('lnk_item_' + item.tableId+\"_\"+item.ItemType).style.opacity = '1';\r\n    } else {\r\n      const index = checkedBoxes.findIndex((ch) => ch.tableId === item.tableId);\r\n      checkedBoxes.splice(index, 1);\r\n      //document.getElementById('lnk_item_' + item.tableId+\"_\"+item.ItemType).style.opacity = '0.5';\r\n    }\r\n    this.setState({ checkedBoxes });\r\n\r\n    var JSONdata = {\r\n      LM_ID: item.tableId,\r\n      LM_Active: LM_Active\r\n    };\r\n\r\n    const API_url = this.state.base_url + \"admin/updateActiveLink\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Profile is updated',\r\n            // isLoading:true   \r\n          });\r\n          this.refreshMobileView();\r\n\r\n\r\n        }\r\n        else {\r\n          this.setState({\r\n            show: true,\r\n            title: 'error!!!',\r\n            msg: 'Profile is not updated',\r\n            // isLoading:true   \r\n          });\r\n        }\r\n      });\r\n\r\n\r\n  }\r\n  doActiveCategoryMaster = item => e => {\r\n\r\n    const checkedBoxes = [...this.state.checkedBoxes];\r\n    let CM_Active_Status = 0;\r\n    if (e.target.checked) {\r\n      checkedBoxes.push(item);\r\n      CM_Active_Status = 1;\r\n      // document.getElementById('lnk_item_' + item.tableId+\"_\"+item.ItemType).style.opacity = '1';\r\n    } else {\r\n      const index = checkedBoxes.findIndex((ch) => ch.tableId === item.tableId);\r\n      checkedBoxes.splice(index, 1);\r\n      //  document.getElementById('lnk_item_' + item.tableId+\"_\"+item.ItemType).style.opacity = '0.5';\r\n    }\r\n    this.setState({ checkedBoxes });\r\n\r\n    var JSONdata = {\r\n      CM_ID: item.tableId,\r\n      CM_Active_Status: CM_Active_Status\r\n    };\r\n\r\n    const API_url = this.state.base_url + \"admin/updateActiveCategory\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Profile is updated',\r\n            // isLoading:true   \r\n          });\r\n          this.refreshMobileView();\r\n\r\n\r\n        }\r\n        else {\r\n          this.setState({\r\n            show: true,\r\n            title: 'error!!!',\r\n            msg: 'Profile is not updated',\r\n            // isLoading:true   \r\n          });\r\n        }\r\n      });\r\n\r\n\r\n  }\r\n  doActiveEmbed = item => e => {\r\n\r\n    const checkedBoxes = [...this.state.checkedBoxes];\r\n    let LM_Active = 0;\r\n    if (e.target.checked) {\r\n      checkedBoxes.push(item);\r\n      LM_Active = 1;\r\n      // document.getElementById('lnk_item_' + item.tableId).style.opacity = '1';\r\n    } else {\r\n      const index = checkedBoxes.findIndex((ch) => ch.tableId === item.tableId);\r\n      checkedBoxes.splice(index, 1);\r\n      //document.getElementById('lnk_item_' + item.tableId).style.opacity = '0.5';\r\n    }\r\n    this.setState({ checkedBoxes });\r\n\r\n    var JSONdata = {\r\n      EC_ID: item.tableId,\r\n      LM_Active: LM_Active\r\n    };\r\n\r\n    const API_url = this.state.base_url + \"admin/updateActiveEmbed\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Profile is updated',\r\n            // isLoading:true   \r\n          });\r\n          this.refreshMobileView();\r\n\r\n\r\n        }\r\n        else {\r\n          this.setState({\r\n            show: true,\r\n            title: 'error!!!',\r\n            msg: 'Profile is not updated',\r\n            // isLoading:true   \r\n          });\r\n        }\r\n      });\r\n\r\n\r\n  }\r\n  doActiveSocialWidget = item => e => {\r\n    this.setState({\r\n      // isLoading:true   \r\n    });\r\n    const checkedBoxes = [...this.state.checkedBoxes];\r\n    let SWM_Active = 0;\r\n    if (e.target.checked) {\r\n      checkedBoxes.push(item);\r\n      SWM_Active = 1;\r\n    } else {\r\n      const index = checkedBoxes.findIndex((ch) => ch.SWM_ID === item.SWM_ID);\r\n      checkedBoxes.splice(index, 1);\r\n    }\r\n    this.setState({ checkedBoxes });\r\n\r\n    var JSONdata = {\r\n      SWM_ID: item.SWM_ID,\r\n      SWM_Active: SWM_Active\r\n    };\r\n\r\n    const API_url = this.state.base_url + \"admin/updateActiveLinkSocial\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Profile is updated',\r\n            // isLoading:true   \r\n          });\r\n          this.refreshMobileView();\r\n\r\n          //this.reload();\r\n          // alert(data.msg);\r\n          this.setState({\r\n            // isLoading:false   \r\n          });\r\n        }\r\n        else {\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Failed to Update'\r\n          });\r\n\r\n        }\r\n      });\r\n  }\r\n\r\n  //MS2\r\n  doActiveSocialBar = item => e => {\r\n\r\n    const checkedBoxes = [...this.state.checkedBoxes];\r\n    let SWM_Active = 0;\r\n    if (e.target.checked) {\r\n      checkedBoxes.push(item);\r\n      SWM_Active = 1;\r\n    } else {\r\n      const index = checkedBoxes.findIndex((ch) => ch.tableId === item.tableId);\r\n      checkedBoxes.splice(index, 1);\r\n    }\r\n    this.setState({ checkedBoxes });\r\n\r\n    var JSONdata = {\r\n      SWM_ID: item.tableId,\r\n      SWM_Active: SWM_Active\r\n    };\r\n\r\n    const API_url = this.state.base_url + \"admin/updateActiveLinkSocial\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Profile is updated',\r\n            // isLoading:true   \r\n          });\r\n          this.refreshMobileView();\r\n\r\n          //this.reload();\r\n          // alert(data.msg);\r\n          this.setState({\r\n            // isLoading:false   \r\n          });\r\n        }\r\n        else {\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Failed to Update'\r\n          });\r\n\r\n        }\r\n      });\r\n  }\r\n  //newsletter\r\n  doActiveNewsLetter = id => e => {\r\n    const checkedBoxes = [...this.state.checkedBoxes];\r\n    let JM_NewsLetter_Active = 0;\r\n    if (e.target.checked) {\r\n      checkedBoxes.push({ JM_ID: id, JM_NewsLetter_Active: 1 });\r\n      JM_NewsLetter_Active = 1;\r\n    }\r\n    else {\r\n      const index = checkedBoxes.findIndex((ch) => ch.JM_ID === id);\r\n      checkedBoxes.splice(index, 1);\r\n    }\r\n    this.setState({ checkedBoxes });\r\n    var JSONdata = {\r\n      JM_ID: id,\r\n      JM_NewsLetter_Active: JM_NewsLetter_Active,\r\n      JM_NewsLetter_Title: '',\r\n      type: 'active'\r\n    };\r\n\r\n    const API_url = this.state.base_url + \"admin/updateActiveNewsLetter\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Profile is updated',\r\n          });\r\n          this.refreshMobileView();\r\n        }\r\n        else {\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Failed to Update'\r\n          });\r\n\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  doActivePremium = item => e => {\r\n\r\n    const checkedBoxes = [...this.state.checkedBoxes];\r\n    let DA_Active = 0;\r\n    if (e.target.checked) {\r\n      checkedBoxes.push(item);\r\n      DA_Active = 1;\r\n      //document.getElementById('lnk_item_' + item.tableId).style.opacity = '1';\r\n    } else {\r\n      const index = checkedBoxes.findIndex((ch) => ch.tableId === item.tableId);\r\n      checkedBoxes.splice(index, 1);\r\n      //document.getElementById('lnk_item_' + item.tableId).style.opacity = '0.5';\r\n    }\r\n    this.setState({ checkedBoxes });\r\n\r\n    var JSONdata = {\r\n      DA_ID: item.tableId,\r\n      DA_Active: DA_Active\r\n    };\r\n\r\n    const API_url = this.state.base_url + \"admin/updateActivePremium\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Profile is updated',\r\n            // isLoading:true   \r\n          });\r\n          this.refreshMobileView();\r\n\r\n\r\n        }\r\n        else {\r\n          this.setState({\r\n            show: true,\r\n            title: 'error!!!',\r\n            msg: 'Profile is not updated',\r\n            // isLoading:true   \r\n          });\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  showToast = () => {\r\n    this.setState({ show: true })\r\n  }\r\n  hideToast = () => {\r\n    this.setState({ show: false })\r\n  }\r\n\r\n  DirectAccess = () => {\r\n\r\n    let JM_ID = 0; let JM_User_Profile_Url = \"\"; let JM_Referral = \"NA\";\r\n    if (this.state.userDetails != null && this.state.userDetails.length > 0) {\r\n      JM_ID = this.state.userDetails[0].JM_ID;\r\n      JM_User_Profile_Url = this.state.userDetails[0].JM_User_Profile_Url;\r\n      JM_Referral = this.state.userDetails[0].JM_Referral;\r\n    }\r\n    // if(JM_Referral==='NA')\r\n    // {\r\n    //   this.setState({\r\n    //     openRefModal:true\r\n    //   })\r\n    //   return false;\r\n    // }\r\n    //if(JM_Referral!=='NA')\r\n    // {\r\n    this.props.history.push(\"/premium-feature\");\r\n    this.props.history.push({\r\n      state: {\r\n        directAccess: this.state.directAccess,\r\n        JM_ID: JM_ID,\r\n        JM_User_Profile_Url: JM_User_Profile_Url,\r\n      }\r\n    })\r\n    //}\r\n\r\n    //console.log(this.props);\r\n  }\r\n  //23-jun-2021\r\n  ImageCarousel = (e) => {\r\n    let JM_ID = 0; let JM_User_Profile_Url = \"\"; let JM_Referral = \"NA\";\r\n    if (this.state.userDetails != null && this.state.userDetails.length > 0) {\r\n      JM_ID = this.state.userDetails[0].JM_ID;\r\n      JM_User_Profile_Url = this.state.userDetails[0].JM_User_Profile_Url;\r\n      JM_Referral = this.state.userDetails[0].JM_Referral;\r\n    }\r\n    this.props.history.push(\"/create-carousel\");\r\n    this.props.history.push({\r\n      state: {\r\n        directAccess: this.state.directAccess,\r\n        JM_ID: JM_ID,\r\n        JM_User_Profile_Url: JM_User_Profile_Url,\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  EmbedContent = () => {\r\n\r\n  }\r\n  doCopied = (e) => {\r\n    //  document.getElementById(\"copy_icon\").compareDocumentPosition\r\n    //e.target.innerHTML = 'Copied';\r\n    //  e.target.style.background = 'black';\r\n    document.getElementById(\"copy_icon\").style.color = 'black';\r\n\r\n  }\r\n\r\n  deleteGift = (e) => {\r\n    const DA_ID = e.currentTarget.dataset.remove;\r\n    const type = e.currentTarget.dataset.type;\r\n    let ProfileUrl = e.currentTarget.dataset.profileurl;\r\n    var JSONdata;\r\n    var fileName = e.currentTarget.dataset.filename;\r\n\r\n    JSONdata = {\r\n      DA_ID: DA_ID,\r\n      profileName: ProfileUrl,\r\n      fileName: fileName\r\n    };\r\n    const API_url = this.state.base_url + \"admin/deleteProduct\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.Get_User_Details();\r\n          this.refreshMobileView();\r\n        }\r\n        else\r\n          alert('not fetch');\r\n      });\r\n  }\r\n  deleteProduct = (e) => {\r\n    //DA_Type\r\n    let fileNameArr = JSON.parse(e.currentTarget.dataset.filename);\r\n    let fileName = \"\";\r\n    const DA_ID = e.currentTarget.dataset.remove;\r\n    const type = e.currentTarget.dataset.type;\r\n    let ProfileUrl = e.currentTarget.dataset.profileurl;\r\n\r\n    var JSONdata;\r\n    if (type === \"video\") {\r\n      if (fileNameArr !== null && fileNameArr.length > 0)\r\n        fileName = fileNameArr[0]\r\n      JSONdata = {\r\n        DA_ID: DA_ID,\r\n        profileName: ProfileUrl,\r\n        fileName: fileName\r\n      };\r\n    }\r\n    if (type === \"audio\") {\r\n      if (fileNameArr !== null && fileNameArr.length > 0)\r\n        fileName = fileNameArr[0]\r\n      JSONdata = {\r\n        DA_ID: DA_ID,\r\n        profileName: ProfileUrl,\r\n        fileName: fileName\r\n      };\r\n    }\r\n    if (type === \"image\") {\r\n      if (fileNameArr !== null && fileNameArr.length > 0)\r\n        fileName = fileNameArr[0]\r\n      JSONdata = {\r\n        DA_ID: DA_ID,\r\n        profileName: ProfileUrl,\r\n        fileName: fileName\r\n      };\r\n    }\r\n    if (type === \"NA\") {\r\n      JSONdata = {\r\n        DA_ID: DA_ID,\r\n        profileName: ProfileUrl,\r\n        fileName: \"\"\r\n      };\r\n    }\r\n    if (type === \"album\") {\r\n      if (fileNameArr !== null && fileNameArr.length > 0)\r\n        fileName = fileNameArr\r\n      JSONdata = {\r\n        DA_ID: DA_ID,\r\n        profileName: ProfileUrl,\r\n        fileName: fileName\r\n      };\r\n    }\r\n    if (type === \"carousel\") {\r\n      if (fileNameArr !== null && fileNameArr.length > 0)\r\n        fileName = fileNameArr\r\n      JSONdata = {\r\n        DA_ID: DA_ID,\r\n        profileName: ProfileUrl,\r\n        fileName: fileName\r\n      };\r\n    }\r\n    const API_url = this.state.base_url + \"admin/deleteProduct\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.setState({\r\n            title: 'info !!!',\r\n            msg: 'Imgage carousel is deleted successfully',\r\n            show: true\r\n          })\r\n          this.Get_User_Details();\r\n          this.refreshMobileView();\r\n        }\r\n        else {\r\n          //alert('not fetch');\r\n          this.setState({\r\n            title: 'info !!!',\r\n            msg: data.msg,\r\n            show: true\r\n          })\r\n        }\r\n      });\r\n\r\n\r\n  }\r\n  isConfirm = () => {\r\n\r\n    confirmAlert({\r\n      title: 'Confirm Change',\r\n      message: 'Are you sure you want to change your username? You will be able to change it again upon page refresh.',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => this.doEditUrl()\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => console.log(\"cancel is clicked\")\r\n        }\r\n      ],\r\n      closeOnEscape: false,\r\n      closeOnClickOutside: false,\r\n    });\r\n\r\n\r\n\r\n  };\r\n\r\n  uploadProfilePic = (e) => {\r\n\r\n    const file = e.target.files[0];\r\n    this.setState({ selectedFile: e.target.files[0] });\r\n    this.setState({\r\n      selectedFile: file\r\n    }, () => {\r\n      //console.log(this.state.selectedFile);\r\n      this.uploadPic();\r\n\r\n    });\r\n    this.setState({\r\n      JM_Profile_Pic: URL.createObjectURL(file)\r\n    });\r\n\r\n  }\r\n  uploadPic = (e) => {\r\n    e.preventDefault();\r\n\r\n    let JM_User_Profile_Url = \"\";\r\n    if (this.state.userDetails != null && this.state.userDetails.length > 0) {\r\n      JM_User_Profile_Url = this.state.userDetails[0].JM_User_Profile_Url;\r\n    }\r\n    const formData = new FormData();\r\n\r\n    let Api_url = this.state.base_url + 'admin/profileImageFromProfile';\r\n    formData.append('sampleFile', this.state.croppedImage)\r\n    formData.append('JM_ID', this.state.JM_ID)\r\n    formData.append('JM_User_Profile_Url', JM_User_Profile_Url)\r\n\r\n    const options = {\r\n      onUploadProgress: (progressEvent) => {\r\n        const { loaded, total } = progressEvent;\r\n        let percent = Math.floor((loaded * 100) / total)\r\n        //console.log(`${loaded}kb of ${total}kb | ${percent}%`);\r\n\r\n        if (percent < 100) {\r\n          this.setState({ uploadPercentage: percent })\r\n        }\r\n      }\r\n    }\r\n\r\n    axios.post(Api_url, formData, options).then(res => {\r\n      if (res.data.status === 1) {\r\n        var userDetails = res.data.userDetails;\r\n        if (userDetails != null && userDetails.length > 0) {\r\n          this.setState({ avatar: res.data.url, uploadPercentage: 100 }, () => {\r\n            setTimeout(() => {\r\n              this.setState({ uploadPercentage: 0 })\r\n            }, 1000);\r\n          })\r\n          this.setState({ userDetails });\r\n          this.Get_User_Details();\r\n          this.setState({\r\n            openCropModal: false\r\n          })\r\n          this.refreshMobileView();\r\n\r\n        }\r\n      }\r\n      else {\r\n        alert(\"internal error occered\");\r\n      }\r\n      //console.log(res.data)\r\n\r\n    })\r\n  }\r\n\r\n  doEditUrl = (e) => {\r\n    //e.preventDefault();\r\n    if (this.state.Validation) {\r\n      console.log(this.state.Validation)\r\n    }\r\n    else {\r\n\r\n      const formData = new FormData();\r\n      let Api_url = this.state.base_url + 'admin/changeUrlByAdmin';\r\n      let old_url = this.state.old_url;\r\n      formData.append('old_url', old_url)\r\n      formData.append('JM_ID', this.state.JM_ID)\r\n      formData.append('new_url', this.state.JM_User_Profile_Url)\r\n\r\n      this.setState({\r\n        isCompletedUrlProcessing: true,\r\n        btnRequest: \"Processing...don't refresh the page!!!\"\r\n      });\r\n      fetch(Api_url, {\r\n        method: 'POST',\r\n        body: formData\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          //console.log(data);\r\n          if (data.status === 1) {\r\n            document.getElementById(\"req_msg\").style.color = 'green';\r\n            document.getElementById(\"req_msg\").innerHTML = \"Your requested username has been applied!!\";\r\n            localStorage.setItem('JM_User_Profile_Url', this.state.JM_User_Profile_Url);\r\n            setTimeout(function () {\r\n              window.location.reload(true);\r\n            }, 2000);\r\n            //this.Get_User_Details();\r\n          }\r\n          else {\r\n            this.setState({\r\n              isCompletedUrlProcessing: false,\r\n              btnRequest: \"Change\"\r\n            });\r\n            document.getElementById(\"req_msg\").innerHTML = 'internal error, try again later';\r\n          }\r\n        })\r\n        .catch(error => {\r\n          this.setState({\r\n            isCompletedUrlProcessing: false,\r\n            btnRequest: \"Change\"\r\n          });\r\n          document.getElementById(\"req_msg\").innerHTML = 'internal error, try again later';\r\n          console.error(error)\r\n        })\r\n\r\n    }\r\n  }\r\n  onEditChangeUrl = (e) => {\r\n    //this.setState({[e.target.name]:e.target.value});  \r\n\r\n    let Url = e.target.value.replace(/[^a-z0-9\\-\\_]/gi, \"\");\r\n    this.setState({ [e.target.name]: Url });\r\n    this.setState({ Validation: true });\r\n\r\n    if (this.state.old_url === Url) {\r\n      document.getElementById(\"msg\").innerHTML = '';\r\n      this.setState({ Validation: true });\r\n      return false;\r\n    }\r\n\r\n    if (Url.length > 0) {\r\n      let API_url = this.state.base_url + \"admin/ValidateURL_Profile\";\r\n      fetch(API_url, {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ JM_User_Profile_Url: Url, JM_ID: this.state.JM_ID })\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          if (data.status === 1 || data.status === 2) {\r\n            //console.log(data.msg);\r\n            document.getElementById(\"msg\").innerHTML = data.msg;\r\n            this.setState({ Validation: true });\r\n          }\r\n          else {\r\n            document.getElementById(\"msg\").innerHTML = '';\r\n            this.setState({ Validation: false });\r\n          }\r\n\r\n        });\r\n\r\n    }\r\n    else {\r\n      document.getElementById(\"msg\").innerHTML = 'enter url';\r\n      this.setState({ Validation: true });\r\n      return false;\r\n    }\r\n  }\r\n\r\n  openModalDynamic = id => e => {\r\n    // !this.state.openDynamic ?\r\n    //   this.setState({ openDynamic: true })\r\n    //   :\r\n    //   this.setState({ openDynamic: false })\r\n    //console.log(e)\r\n  }\r\n  reload = (e) => {\r\n    document.getElementById('iframeid').src += '';\r\n    //console.log(\"ok\")\r\n  }\r\n\r\n  onDragEndSocialWidget = (result) => {\r\n    //console.log(result)\r\n    const { destination, source, reason } = result;\r\n    if (!destination || reason === 'CANCEL') {\r\n      return;\r\n    }\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\r\n      return;\r\n    }\r\n    const socialWidget = Object.assign([], this.state.socialWidget);\r\n    const droppedUser = this.state.socialWidget[source.index];\r\n    socialWidget.splice(source.index, 1);\r\n    socialWidget.splice(destination.index, 0, droppedUser);\r\n\r\n    this.setState({ socialWidget })\r\n    //console.log(socialWidget)\r\n    this.UpdateOrderBySocialWidget(socialWidget);\r\n  }\r\n  UpdateOrderBySocialWidget = (socialWidget) => {\r\n\r\n    let JSONdata = {\r\n      socialWidget: socialWidget\r\n    };\r\n    const API_url = this.state.base_url + \"admin/updateOrderBySocialWidget\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.Get_User_Details();\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Profile is updated',\r\n            // isLoading:true   \r\n          });\r\n          this.refreshMobileView();\r\n        }\r\n        else {\r\n          this.setState({\r\n            show: false,\r\n            title: 'Failed!!!',\r\n            msg: 'Failed to updated',\r\n            // isLoading:true   \r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  onDragEndCategory = (result) => {\r\n    console.log(result)\r\n    const { destination, source, reason } = result;\r\n    if (!destination || reason === 'CANCEL') {\r\n      return;\r\n    }\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\r\n      return;\r\n    }\r\n    const linkMaster = Object.assign([], this.state.linkMaster);\r\n    const droppedUser = this.state.linkMaster[source.index];\r\n    linkMaster.splice(source.index, 1);\r\n    linkMaster.splice(destination.index, 0, droppedUser);\r\n\r\n    this.setState({ linkMaster })\r\n   // this.updateOrderByCustomLink(linkMaster);\r\n  }\r\n\r\n  updateOrderByCustomLink = (customLink) => {\r\n    let JSONdata = {\r\n      customLink: customLink\r\n    };\r\n    const API_url = this.state.base_url + \"admin/updateOrderByCustomLink\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.Get_User_Details();\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Profile is updated',\r\n            // isLoading:true   \r\n          });\r\n          this.refreshMobileView();\r\n        }\r\n        else {\r\n          this.setState({\r\n            show: false,\r\n            title: 'Failed!!!',\r\n            msg: 'Failed to updated',\r\n            // isLoading:true   \r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  onDragProductList = (result) => {\r\n    //console.log(result)\r\n    const { destination, source, reason } = result;\r\n    if (!destination || reason === 'CANCEL') {\r\n      return;\r\n    }\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\r\n      return;\r\n    }\r\n    const productList = Object.assign([], this.state.productList);\r\n    const droppedUser = this.state.productList[source.index];\r\n    productList.splice(source.index, 1);\r\n    productList.splice(destination.index, 0, droppedUser);\r\n\r\n    this.setState({ productList })\r\n    //console.log(productList)\r\n    this.UpdateOrderProductList(productList);\r\n  }\r\n\r\n  UpdateOrderProductList = (productList) => {\r\n    let JSONdata = {\r\n      productList: productList\r\n    };\r\n    const API_url = this.state.base_url + \"admin/updateOrderByProductList\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.Get_User_Details();\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Profile is updated',\r\n            // isLoading:true   \r\n          });\r\n          this.refreshMobileView();\r\n        }\r\n        else {\r\n          this.setState({\r\n            show: false,\r\n            title: 'Failed!!!',\r\n            msg: 'Failed to updated',\r\n            // isLoading:true   \r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  refreshMobileView = () => {\r\n    this.refs.livepreview2.UpdateMobileView();\r\n  }\r\n\r\n  updateUserName = (e) => {\r\n    document.getElementById('userName').value = e.target.value;\r\n    //console.log(e.target.value)\r\n  }\r\n  onChangeNameDesc = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    if (e.target.name === 'JM_Name') {\r\n      var JM_Name = e.target.value.replace(/'/g, \"\\\\'\");\r\n      this.updateProfile('JM_Name', JM_Name);\r\n\r\n    }\r\n    else {\r\n\r\n      var JM_Description = e.target.value.replace(/'/g, \"\\\\'\");\r\n      this.updateProfile('JM_Description', JM_Description);\r\n    }\r\n\r\n  }\r\n  updateProfile = (name, value) => {\r\n    const API_url = process.env.REACT_APP_API_URL + \"admin/updateProfileNameDescription\";\r\n    var JSONdata = {};\r\n    if (name === 'JM_Name')\r\n      JSONdata = {\r\n        name: name,\r\n        JM_Name: value,\r\n        JM_ID: this.state.JM_ID\r\n      };\r\n    else\r\n      JSONdata = {\r\n        name: name,\r\n        JM_Description: value,\r\n        JM_ID: this.state.JM_ID\r\n      };\r\n\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          // this.setState({\r\n          //   show: true,\r\n          //   title: 'Success!!!',\r\n          //   msg: 'Profile is updated',        \r\n          // });\r\n          this.refreshMobileView();\r\n        }\r\n        else {\r\n          // this.setState({\r\n          //   show: false,\r\n          //   title: 'Failed!!!',\r\n          //   msg: 'Failed to updated',          \r\n          // });\r\n        }\r\n      });\r\n  }\r\n\r\n  collapseHandleClick = id => e => {\r\n    const colapseBoxes = [...this.state.colapseBoxes];\r\n    if (colapseBoxes != null) {\r\n\r\n      if (colapseBoxes.filter(item => item.tableId === id).length === 0) {\r\n        colapseBoxes.push({ id: id, isOpen: true });\r\n      }\r\n      colapseBoxes.map((item, i) => {\r\n        (item.tableId !== id) ? item.isOpen = false : item.isOpen = true;\r\n      });\r\n    }\r\n\r\n    //console.log(colapseBoxes);\r\n    this.setState({ colapseBoxes });\r\n    let element = document.getElementById(\"Collapse_\" + id);\r\n    var className = element.classList.value;\r\n    //console.log(element.classList.value)\r\n    if (className.includes('show')) {\r\n      element.classList.remove(\"show\");\r\n      document.getElementById(\"hide_show_text_\" + id).innerText = 'Show';\r\n      document.getElementById(\"plus_icon_\" + id).style.display = 'inline-block';\r\n      document.getElementById(\"minus_icon_\" + id).style.display = 'none';\r\n    }\r\n    else {\r\n      element.classList.add(\"show\");\r\n      document.getElementById(\"hide_show_text_\" + id).innerText = 'Hide';\r\n      document.getElementById(\"plus_icon_\" + id).style.display = 'none';\r\n      document.getElementById(\"minus_icon_\" + id).style.display = 'inline-block';\r\n    }\r\n    //element.classList.add(\"myNewClass\") \r\n    //Collapse_7\r\n    this.createCategoryLinks(id);\r\n  }\r\n  onChangeRadio = (event) => {\r\n    //setSelectedValue(event.target.value);\r\n    this.setState({ radio: event.target.value });\r\n    //console.log(event.target.value)\r\n  };\r\n  moveCustomLinks = () => {\r\n    //console.log(this.state.radio)\r\n    //console.log(this.state.LM_ID_Move)\r\n    //console.log(this.state.JM_ID_Move)\r\n    //if(this.state.radio > 0)\r\n    //{\r\n    let folderId = this.state.radio;\r\n    let type = 'customLink';\r\n    this.MoveLinkToFolder(folderId, this.state.JM_ID_Move, this.state.LM_ID_Move, type);\r\n    // }\r\n\r\n  }\r\n  MoveLinkToFolder = (folderId, JM_ID, LinkId, type) => {\r\n    let JSONdata = [];\r\n    if (type === 'customLink') {\r\n      JSONdata = {\r\n        type: type,\r\n        CM_ID: folderId,\r\n        JM_ID: JM_ID,\r\n        LM_ID: LinkId\r\n      };\r\n    }\r\n    const API_url = process.env.REACT_APP_API_URL + \"admin/moveLinkToFolder\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.Get_User_Details();\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Link is Moved Successfully',\r\n            // isLoading:true   \r\n          });\r\n          this.refreshMobileView();\r\n        }\r\n        else {\r\n          this.setState({\r\n            show: false,\r\n            title: 'Failed!!!',\r\n            msg: 'Failed to Move',\r\n            // isLoading:true   \r\n          });\r\n        }\r\n      });\r\n\r\n  }\r\n  createCategoryLinks = id => e => {\r\n    let category_links;\r\n    category_links = this.state.userDetailsAll.map((link, i) => {\r\n      return (\r\n        link.folderId > 0 && id === link.folderId ?\r\n          <div className=\"item\" id={'lnk_item_' + link.tableId}>\r\n            <p style={{ fontWeight: 'bold', color: '#ff6f6e' }}>Custom Link</p>\r\n            <div className=\"move\"><MoreVertIcon /></div>\r\n            <div className=\"top-part\">\r\n              {\r\n                link.image === '' ?\r\n                  <div className=\"icon\"><img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} /></div>\r\n                  :\r\n                  <div className=\"icon\"><img style={{ width: '100%' }} src={process.env.REACT_APP_UPLOAD_URL + link.image} /></div>\r\n              }\r\n\r\n              <h4> {link.title}</h4>\r\n            </div>\r\n            <div className=\"bottom-part\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-2\">\r\n                  <label className=\"switch\" for={'lnk_' + link.tableId}>\r\n                    <input type=\"checkbox\" id={'lnk_' + link.tableId} name={'lnk_' + link.tableId}\r\n                      checked={this.state.checkedBoxes.find((ch) => ch.tableId === link.tableId)}\r\n                      onClick={this.doActive(link)}\r\n                    />\r\n                    <div className=\"slider round\" ></div>\r\n                  </label>\r\n                </div>\r\n                <div className=\"col-lg-10 text-right\">\r\n                  {/* <button><ShareIcon /></button> */}\r\n                  <button data-remove={link.folderId} onClick={() => { this.setState({ openMoveLinkModel: true, LM_ID_Move: link.tableId, JM_ID_Move: link.JM_ID, CM_ID_Move: link.folderId }) }}><OpenWithSharpIcon /></button>\r\n                  <EditLinks data={this.state.userDetailsAll[i]} setStateAfterInsert={this.setStateAfterInsert} />\r\n                  <input type=\"hidden\" name=\"hidden\" value={link.tableId}></input>\r\n                  <button data-remove={link.tableId} onClick={this.doDeleteLink}><DeleteForeverIcon /></button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          :\r\n          null\r\n      )\r\n\r\n    })\r\n    return category_links;\r\n  }\r\n\r\n  doRequestVerify = (e) => {\r\n    var JSONdata = {\r\n      JM_ID: this.state.JM_ID\r\n    };\r\n    const API_url = process.env.REACT_APP_API_URL + \"admin/doRequestVerify\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.Get_User_Details();\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Request is Sent',\r\n            // isLoading:true   \r\n          });\r\n          document.getElementById(\"btn_Request\").style.background = '#228e52';\r\n          document.getElementById(\"btn_Request\").innerHTML = 'Request sent';\r\n          this.refreshMobileView();\r\n\r\n        }\r\n        else {\r\n          this.setState({\r\n            show: false,\r\n            title: 'Failed!!!',\r\n            msg: 'Failed to Send Request, wait sometimes and  try again',\r\n            // isLoading:true   \r\n          });\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  onDragEnd = (result) => {\r\n    //console.log(\"drag and drop\")\r\n    //console.log(result)\r\n    const { destination, source, reason } = result;\r\n    if (!destination || reason === 'CANCEL') {\r\n      return;\r\n    }\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\r\n      return;\r\n    }\r\n    const userDetailsAll = Object.assign([], this.state.userDetailsAll);\r\n    const droppedUser = this.state.userDetailsAll[source.index];\r\n    userDetailsAll.splice(source.index, 1);\r\n    userDetailsAll.splice(destination.index, 0, droppedUser);\r\n\r\n\r\n    if (source.droppableId === 'dropLink2Folder') \r\n    {\r\n      const selected = Object.assign([], this.state.selected);\r\n      const droppedUser = this.state.selected[source.index];\r\n      selected.splice(source.index, 1);\r\n      selected.splice(destination.index, 0, droppedUser);\r\n      this.setState({ selected })\r\n    }\r\n    this.setState({ userDetailsAll })\r\n\r\n    //console.log(userDetailsAll)\r\n    this.updateOrderByForEachTable(userDetailsAll);\r\n  }\r\n  updateOrderByForEachTable = (userDetailsAll) => {\r\n    let JSONdata = {\r\n      userDetailsAll: userDetailsAll\r\n    };\r\n    const API_url = this.state.base_url + \"admin/updateOrderByForEachTable\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.Get_User_Details();\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Profile is updated',\r\n            // isLoading:true   \r\n          });\r\n          this.refreshMobileView();\r\n        }\r\n        else {\r\n          this.setState({\r\n            show: false,\r\n            title: 'Failed!!!',\r\n            msg: 'Failed to updated',\r\n            // isLoading:true   \r\n          });\r\n        }\r\n      });\r\n\r\n  }\r\n  //MS2 =========================================\r\n  ModalSocialOpen = () => {\r\n\r\n    if (this.state.referralCode && this.state.referralCode.length === 0) {\r\n      this.Update_ReferralCode(this.state.Ref_Code);\r\n    }\r\n    this.setState({ openModel: true, show: true });\r\n  }\r\n\r\n  updateColor = (e) => {\r\n    let color = e.target.value;\r\n    //console.log(color)\r\n    let JSONdata = {};\r\n\r\n    this.setState({ activeNameBio_color: color });\r\n    JSONdata = {\r\n      TM_Bio_Color: 'TM_Bio_Color',\r\n      JM_ID: this.state.JM_ID,\r\n      TM_Bio_Color: color,\r\n    }\r\n    this.updateNameBioColor(JSONdata);\r\n  }\r\n\r\n  updateNameBioColor = (JSONdata) => {\r\n\r\n    const API_url = process.env.REACT_APP_API_URL + \"admin/updateNameBioColor\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: \"Name, Bio, Footer's, Static  text color has been changed successfully\",\r\n            themeMasterUser: data.themeMasterUser,\r\n            TM_Bio_Color: data.themeMasterUser[0].TM_Bio_Color,\r\n            TM_Name_Color: data.themeMasterUser[0].TM_Name_Color,\r\n            TM_Footer_Color: data.themeMasterUser[0].TM_Footer_Color,\r\n            activeNameBio_color: data.themeMasterUser[0].TM_Footer_Color\r\n          });\r\n\r\n          // this.getApper();\r\n          this.refreshMobileView();\r\n\r\n        }\r\n        else {\r\n          this.setState({\r\n            show: true,\r\n            title: 'error!!!',\r\n            msg: 'Profile is not updated',\r\n            // isLoading:true   \r\n          });\r\n        }\r\n      });\r\n\r\n  }\r\n  //\r\n  closeEditUrlModal = (e) => {\r\n    if (this.state.isCompletedUrlProcessing === false)\r\n      this.setState({ openEditURLModal: false })\r\n    else\r\n      return false;\r\n  }\r\n\r\n  //news letter modal\r\n  openNewsModal = () => {\r\n    this.setState({ showNewsModal: true })\r\n  }\r\n  updateNewsLetterTitle = (e) => {\r\n\r\n    if (this.state.JM_NewsLetter_Title.length === 0) {\r\n      document.getElementById(\"msg_news\").innerHTML = 'Enter Title';\r\n      return false;\r\n    }\r\n    var JSONdata = {\r\n      JM_ID: this.state.JM_ID,\r\n      JM_NewsLetter_Active: this.state.JM_NewsLetter_Active,\r\n      JM_NewsLetter_Title: this.state.JM_NewsLetter_Title,\r\n      type: 'title'\r\n    };\r\n\r\n    const API_url = this.state.base_url + \"admin/updateActiveNewsLetter\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if (data.status === 1) {\r\n\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Profile is updated',\r\n            showNewsModal: false\r\n          });\r\n          this.Get_User_Details();\r\n          this.refreshMobileView();\r\n        }\r\n        else {\r\n          this.setState({\r\n            show: true,\r\n            title: 'Success!!!',\r\n            msg: 'Failed to Update'\r\n          });\r\n\r\n        }\r\n      });\r\n\r\n\r\n  }\r\n\r\n  //MS 2\r\n  updateSteps = id => e => {\r\n    API.updateToolStep(id);\r\n  }\r\n  updateStepsClose = id => e => {\r\n    API.updateStepsClose(id);\r\n  }\r\n  onRefCodeChange = (e) => {\r\n\r\n  }\r\n  getListStyle = isDraggingOver => ({\r\n    background: isDraggingOver ? 'lightblue' : 'lightgrey',\r\n    padding: 8,\r\n    width: 250\r\n  });\r\n\r\n  render() {\r\n    const { uploadPercentage } = this.state;\r\n    const { crop, profile_pic, src } = this.state\r\n    let timeInterval = API.GetSlidingInterval();\r\n    //const urlParams = queryString.parse(window.location.search);\r\n\r\n    ////console.log(`The code is: ${urlParams.code}`);\r\n    //console.log(this.state.userDetails)\r\n\r\n    let imagePath = this.state.base_url + this.state.ProfilePath;\r\n    let base_url = this.state.base_url;\r\n    let linkPath = \"\";\r\n    let JM_User_Profile_Url_plus_JM_ID = \"\", JM_ID = 0;\r\n    let JM_Profile_Pic = \"\"; let JM_User_Profile_Url = \"\", JM_Payout_Details = 0, JM_Verified = 0, isRequested = 1, isRequestForChangeUrl = 0;\r\n    let JM_NewsLetter_Active = 0, JM_NewsLetter_Title = '';\r\n    let JM_Steps = 0;\r\n    if (this.state.userDetails != null && this.state.userDetails.length > 0) {\r\n      let len = this.state.userDetails.length;\r\n      for (var i = 0; i < len; i++) {\r\n        linkPath = base_url + \"Profile/\" + this.state.userDetails[i].JM_User_Profile_Url + \"_\" + this.state.userDetails[i].JM_ID + \"/\";\r\n        JM_User_Profile_Url_plus_JM_ID = this.state.userDetails[i].JM_User_Profile_Url + \"_\" + this.state.userDetails[i].JM_ID;\r\n        JM_Profile_Pic = this.state.userDetails[i].JM_Profile_Pic;\r\n        JM_User_Profile_Url = this.state.userDetails[i].JM_User_Profile_Url;\r\n        JM_Payout_Details = this.state.userDetails[i].JM_Payout_Details;\r\n        JM_Verified = this.state.userDetails[i].JM_Verified;\r\n        isRequested = this.state.userDetails[i].isRequested;\r\n        isRequestForChangeUrl = this.state.userDetails[i].isRequestForChangeUrl;\r\n        JM_ID = this.state.userDetails[i].JM_ID;\r\n        JM_NewsLetter_Title = this.state.userDetails[i].JM_NewsLetter_Title;\r\n        JM_NewsLetter_Active = this.state.userDetails[i].JM_NewsLetter_Active;\r\n        JM_Steps = this.state.userDetails[i].JM_Steps;\r\n        console.log(\"JM_Steps\")\r\n        console.log(JM_Steps)\r\n        break;\r\n      }\r\n\r\n      localStorage.setItem('JM_Profile_Pic', JM_Profile_Pic);\r\n      if (JM_Steps === 0) {\r\n\r\n        localStorage.setItem('tool_bio', 'block');\r\n        localStorage.setItem('tool_new_item', 'none');\r\n        localStorage.setItem('tool_drag_part', 'none');\r\n        localStorage.setItem('tool_preview', 'none');\r\n        localStorage.setItem('tool_design', 'none');\r\n        localStorage.setItem('tool_stat', 'none');\r\n        localStorage.setItem('tool_setting', 'none');\r\n        localStorage.setItem('tool_notify', 'none');\r\n        localStorage.setItem('tool_page_link', 'none');\r\n      }\r\n      else {\r\n        localStorage.setItem('tool_bio', 'none');\r\n        localStorage.setItem('tool_new_item', 'none');\r\n        localStorage.setItem('tool_drag_part', 'none');\r\n        localStorage.setItem('tool_preview', 'none');\r\n        localStorage.setItem('tool_design', 'none');\r\n        localStorage.setItem('tool_stat', 'none');\r\n        localStorage.setItem('tool_setting', 'none');\r\n        localStorage.setItem('tool_notify', 'none');\r\n        localStorage.setItem('tool_page_link', 'none');\r\n      }\r\n      var root_url = this.state.root_url;\r\n    }\r\n\r\n\r\n    const messageBar = {\r\n      backgroundColor: \"#fff\",\r\n      paddingTop: \"10px\",\r\n      paddingBottom: \" 0\",\r\n      borderBottom: \" 1px solid rgba(0,0,0,.1)\",\r\n      zIndex: \"9999\",\r\n      textAlign: \"center\",\r\n      width: \"100%\",\r\n    }\r\n    const ColorNameBio = {\r\n      color: this.state.TM_Bio_Color\r\n    }\r\n\r\n    let socialWidget;\r\n    socialWidget = this.state.socialWidget && this.state.socialWidget.map((link, i) => (\r\n      link.SWM_Url !== \"\" && link.SWM_Style_Type === 'W' ?\r\n        <Draggable key={i} draggableId={i + \" \"} index={i}>\r\n          {(provided) => (\r\n            <div className=\"item\" id={'lnk_item_' + link.SWM_ID} ref={provided.innerRef}  {...provided.draggableProps} {...provided.dragHandleProps}>\r\n              {/* <p style={{fontWeight:'bold',color:'#ff6f6e'}}>Social widgets</p> */}\r\n              <div className=\"move\"><MoreVertIcon /></div>\r\n              <div className=\"top-part\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-4\">\r\n                    <h4>Social widgets</h4>\r\n                  </div>\r\n                  <div className=\"col-md-8\">\r\n                    <label className=\"switch\" for={'lnk_' + link.SWM_ID}>\r\n                      <input type=\"checkbox\" id={'lnk_' + link.SWM_ID} name={'lnk_' + link.SWM_ID}\r\n                        checked={this.state.checkedBoxes.find((ch) => ch.SWM_ID === link.SWM_ID)}\r\n                        onClick={this.doActiveSocialWidget(link)}\r\n\r\n                      />\r\n                      <div className=\"slider round\" ></div>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"bottom-part\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-2\">\r\n                    <div className=\"icon\" data-id={link.SWM_Icon} style={{ fontSize: '25px' }}>\r\n                      {/* <img style={{ width: '100%' }} src={process.env.REACT_APP_UPLOAD_URL + link.SWM_Icon} /> */}\r\n\r\n                      {\r\n                        link.SWM_Icon === 'faHandPaper' ?\r\n                          <FontAwesomeIcon icon={API.SocialIcons(link.SWM_Icon)} className=\"rotateCls\" />\r\n                          :\r\n                          <FontAwesomeIcon icon={API.SocialIcons(link.SWM_Icon)} />\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"text\">\r\n                      <h4>{link.SWM_Title}</h4>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-4 text-right\">\r\n                    {/* <button><ShareIcon /></button> */}\r\n                    <EditSocialWidget2 socialWidget={this.state.socialWidget[i]} setStateAfterInsert={this.setStateAfterInsert} />\r\n                    <input type=\"hidden\" name=\"hidden\" value={link.SWM_ID}></input>\r\n                    <button data-remove={link.SWM_ID} onClick={this.doDeleteLinkSocial}><DeleteForeverIcon /></button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Draggable>\r\n        :\r\n        null\r\n    ))\r\n\r\n    let gifts;\r\n    gifts = this.state.gifts.map((link, i) => {\r\n      return (\r\n        <div className=\"gift-item\">\r\n          <img src={link.DA_Collection} />\r\n          {\r\n            link.DA_Price > 0 ?\r\n              <p>{\"Rs. \" + link.DA_Price}</p>\r\n              :\r\n              <p>{\"Support\"}</p>\r\n          }\r\n          <div className=\"row\">\r\n            <EditPopGift2 src={link.DA_Collection} gift={this.state.gifts[i]} setStateAfterInsert={this.setStateAfterInsert} />\r\n            <input type=\"hidden\" name=\"hidden\" value={link.DA_ID}></input>\r\n            <button data-remove={link.DA_ID} data-ProfileUrl={JM_User_Profile_Url_plus_JM_ID}\r\n              data-ProfileUrl={JM_User_Profile_Url_plus_JM_ID} data-fileName={link.DA_Collection}\r\n              data-type={link.DA_Type}\r\n              onClick={this.deleteGift}>\r\n              <DeleteForeverIcon />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n\r\n\r\n\r\n\r\n    // MS2\r\n    let newsLetter;\r\n    newsLetter = (\r\n      <div className=\"item\">\r\n        <div className=\"move\"><MoreVertIcon />\r\n        </div>\r\n        <div className=\"top-part\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <label className=\"switch\" for={'jm_' + JM_ID}>\r\n                <input type=\"checkbox\" id={'jm_' + JM_ID} name={'jm_' + JM_ID}\r\n                  checked={this.state.checkedBoxes.find((ch) => ch.creatorId === JM_ID)}\r\n                  onClick={this.doActiveNewsLetter(JM_ID)}\r\n                />\r\n                <div className=\"slider round\" ></div>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"bottom-part\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-2\">\r\n              <div className=\"icon\"><img style={{ width: '100%' }} src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} /></div>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <div className=\"text\">\r\n                <h4> {JM_NewsLetter_Title}</h4>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4 text-right\">\r\n              <button onClick={this.openNewsModal}><CreateIcon />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    let LiveMobile = (\r\n      <>\r\n        <LivePreview2 state={this.state} ref=\"livepreview2\" />\r\n        <button onClick={this.refreshMobileView} style={{ display: 'none' }}>Click</button>\r\n      </>\r\n    )\r\n\r\n    //23-jun-2021\r\n    let carousel;\r\n    carousel = this.state.gifts.map((link, i) => {\r\n      return (\r\n        <div className=\"gift-item\">\r\n          <img src={link.DA_Collection} />\r\n          {\r\n            link.DA_Price > 0 ?\r\n              <p>{\"Rs. \" + link.DA_Price}</p>\r\n              :\r\n              <p>{\"Support\"}</p>\r\n          }\r\n          <div className=\"row\">\r\n            <EditPopGift2 src={link.DA_Collection} gift={this.state.gifts[i]} setStateAfterInsert={this.setStateAfterInsert} />\r\n            <input type=\"hidden\" name=\"hidden\" value={link.DA_ID}></input>\r\n            <button data-remove={link.DA_ID} data-ProfileUrl={JM_User_Profile_Url_plus_JM_ID}\r\n              data-ProfileUrl={JM_User_Profile_Url_plus_JM_ID} data-fileName={link.DA_Collection}\r\n              data-type={link.DA_Type}\r\n              onClick={this.deleteGift}>\r\n              <DeleteForeverIcon />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n    const { selected } = this.state.selected;\r\n   \r\n    console.log(\"i am here\")\r\n    console.log(selected)\r\n\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <title>Profile | Expy </title>\r\n          <meta name=\"description\" content=\"Use Expy to SHARE all your important links, content and OFFER paid, personalized, premium features under one beautiful Bio-Link page. FREE and FAST to set up.\"></meta>\r\n        </Helmet>\r\n        <ProfileHeader JM_Profile_Pic={this.state.JM_Profile_Pic} JM_User_Profile_Url={this.state.JM_User_Profile_Url} />\r\n\r\n        <div className=\"profile-tab\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <ProfileNav userDetails={this.state.userDetails} JM_User_Profile_Url={JM_User_Profile_Url} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"myprofile\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8\">\r\n                <div className=\"profilePart\" id=\"profilePart\">\r\n                  {/* {              \r\n                          this.state.userDetails &&  this.state.userDetails.map((user,i) =>(                     */}\r\n\r\n                  <div className=\"prop-box\">\r\n                    <div className=\"prop-part\">\r\n\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-3\">\r\n                          <div className=\"prop-pic\">\r\n                            {\r\n                              JM_Verified === 1 ?\r\n                                <span className=\"verify-tick\"><img src=\"/images/verifyIcon.png\" /></span>\r\n                                :\r\n                                null\r\n                            }\r\n\r\n                            <label htmlFor=\"prop_up\" className=\"up_pic\">Click to Upload</label>\r\n                            <img src={process.env.REACT_APP_UPLOAD_URL + JM_Profile_Pic} />\r\n\r\n                            <input type=\"file\" id=\"prop_up\" style={{ display: \"none\" }} accept=\"image/png, image/jpeg,image/gif\" onChange={this.handleFile} />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6\">\r\n                          <div className=\"name\">\r\n                            <input type=\"text\" className=\"form-control\" id=\"userName\" name=\"JM_Name\" style={ColorNameBio} value={this.state.JM_Name} onChange={this.onChangeNameDesc} />\r\n                            <textarea type=\"text\" className=\"form-control\" id=\"tagLine\" name=\"JM_Description\" style={ColorNameBio} value={this.state.JM_Description === 'NA' || this.state.JM_Description === 'Write your tagline' ? '' : this.state.JM_Description} onChange={this.onChangeNameDesc} placeholder=\"Your Bio\" />\r\n\r\n                            {/* walk-through-bio */}\r\n                            {\r\n\r\n                              this.state.JM_Steps === 0 ?\r\n                                <div className=\"tooltips\" style={{ width: '100%' }} >\r\n                                  <div className=\"tooltip-bottom\" id=\"tool_bio\" style={{ display: localStorage.getItem('tool_bio') }}>\r\n                                    <h6>Bio description</h6>\r\n                                    <p> Add your Bio here. Short, sweet, easy to read. You can also choose the color of your name + bio.</p>\r\n                                    <i></i>\r\n                                    <span className=\"cls\" onClick={this.updateStepsClose('tool_bio')}>x</span>\r\n                                    <span className=\"step\">Step 1 out of 9</span>\r\n                                    <button className=\"nxtbtun\" onClick={this.updateSteps(2)}>Next</button>\r\n                                  </div>\r\n                                </div>\r\n                                :\r\n                                null\r\n                            }\r\n\r\n                          </div>\r\n\r\n\r\n                          <input id=\"input-color\" style={{ visibility: 'hidden', position: 'absolute' }} type=\"color\" value={this.state.activeNameBio_color} onChange={this.updateColor} />\r\n                          <label for=\"input-color\" className=\"colorPickerBioName\"> <ColorLensOutlinedIcon /> Choose color for Name and Bio </label>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-md-3\">\r\n                          <NavLink className=\"set-btn\"\r\n                            to={{ pathname: \"/settings\", userDetails: this.state.userDetails }} >\r\n                            <SettingsOutlinedIcon /> Settings\r\n                          </NavLink>\r\n                          {\r\n                            this.state.JM_Steps === 0 ?\r\n                              <div className=\"tooltips\" style={{ margin: 'auto' }} >\r\n\r\n                                <div className=\"tooltip-left\" id=\"tool_setting\" style={{ display: localStorage.getItem('tool_setting') }}>\r\n                                  <h6>Settings</h6>\r\n                                  <p>Update your account settings here.</p>\r\n                                  <i></i>\r\n                                  <span className=\"cls\" onClick={this.updateStepsClose('tool_setting')}>x</span>\r\n                                  <span className=\"step\">Step 7 out of 9</span>\r\n                                  <button className=\"nxtbtun\" onClick={this.updateSteps(8)}>Next</button>\r\n                                </div>\r\n                              </div>\r\n                              : null\r\n                          }\r\n                        </div>\r\n\r\n                      </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </div>\r\n                    <div className=\"prop-link\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-3\">\r\n                          <p> Your expy.bio link: </p>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                          <span id=\"copy_text\" className=\"copy-text\">{root_url + JM_User_Profile_Url}</span>\r\n                          {/* TOOL TIP */}\r\n                          {\r\n                            this.state.JM_Steps === 0 ?\r\n                              <div className=\"tooltips\" >\r\n                                <div className=\"tooltip-bottom\" id=\"tool_page_link\" style={{ top: '45px', display: localStorage.getItem('tool_page_link') }} >\r\n                                  <h6> Expy page link</h6>\r\n                                  <p style={{ color: 'white' }}> You're all set! Copy this link and share it with the world.</p>\r\n                                  <i></i>\r\n                                  <span className=\"cls\" onClick={this.updateStepsClose('tool_page_link')}>x</span>\r\n                                  <span className=\"step\">Step 9 out of 9</span>\r\n                                  {/* <button className=\"nxtbtun\" onClick=\"\">Next</button> */}\r\n                                </div>\r\n                              </div>\r\n                              : null\r\n                          }\r\n                          <input type=\"hidden\" id=\"url\" value={JM_User_Profile_Url} />\r\n                        </div>\r\n\r\n                        <div className=\"col-md-3\">\r\n                          {/* <button onClick={()=> this.setState({openSocialModal:true}) } className=\"copybtn\"><ShareIcon/></button> */}\r\n                          <button onClick={() => this.setState({ openSocialModal: true })} className=\"copybtn\"><ShareIcon /></button>\r\n                          <CopyToClipboard text={root_url + JM_User_Profile_Url}>\r\n                            <button className=\"copybtn\" >  <FileCopyIcon onClick={this.doCopied} id=\"copy_icon\" /></button>\r\n\r\n                          </CopyToClipboard>\r\n                          <span className=\"copybtn\">\r\n                            <EditIcon onClick={() => this.setState({ openEditURLModal: true, JM_User_Profile_Url: JM_User_Profile_Url, Validation: true })} />\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <br />\r\n\r\n                      {\r\n                        isRequested === 0 ?\r\n                          <button onClick={this.doRequestVerify} id=\"btn_Request\" className=\"Requestbtn\" style={{ float: 'none', margin: 'auto', display: 'table' }}><i className=\"fa fa-check-circle\" aria-hidden=\"true\"></i> Request verification</button>\r\n                          : null\r\n                      }\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                  {/* ))\r\n                        } */}\r\n                  {/* add items */}\r\n                  <div className=\"prop-body\">\r\n                    <div className=\"addItemcard\">\r\n                      <Button onClick={this.openModal} className=\"btun\"\r\n                        aria-controls=\"example-collapse-text\"\r\n                        aria-expanded={this.state.open}\r\n                      >\r\n                        <AddCircleOutlineOutlinedIcon />Add New Item\r\n\r\n                      </Button>\r\n                      {\r\n                        this.state.JM_Steps === 0 ?\r\n                          <div className=\"tooltips\" style={{ width: '100%' }}>\r\n                            <div className=\"tooltip-bottom\" id=\"tool_new_item\" style={{ display: localStorage.getItem('tool_new_item') }}>\r\n                              <h6>Add new items to page</h6>\r\n                              <p> Add items for your page from here. A newsletter sign up item is automatically added for you, which you can activate at the bottom of the page.</p>\r\n                              <i></i>\r\n                              <span className=\"cls\" onClick={this.updateStepsClose('tool_new_item')}>x</span>\r\n                              <span className=\"step\">Step 2 out of 9</span>\r\n                              <button className=\"nxtbtun\" onClick={this.updateSteps(3)}>Next</button>\r\n                            </div>\r\n                          </div>\r\n                          : null\r\n                      }\r\n                      <Collapse in={this.state.open} style={{ padding: '20px' }}>\r\n\r\n                        <div id=\"example-collapse-text\">\r\n                          <div className=\"row justify-content-center\" >\r\n                            <div className=\"col-md-4\">\r\n                              <SocialWidget2 showToast={this.showToast}\r\n                                JM_ID={this.state.JM_ID}\r\n                                JM_User_Profile_Url_plus_JM_ID={JM_User_Profile_Url_plus_JM_ID} Get_User_Details={this.Get_User_Details} setStateAfterInsert={this.setStateAfterInsert} userDetails={this.state.userDetails} />\r\n\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                              <AddNewLink2 showToast={this.showToast}\r\n                                JM_ID={this.state.JM_ID}\r\n                                JM_User_Profile_Url_plus_JM_ID={JM_User_Profile_Url_plus_JM_ID} Get_User_Details={this.Get_User_Details} setStateAfterInsert={this.setStateAfterInsert} />\r\n\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                              <StackedLink2 JM_ID={this.state.JM_ID}\r\n                                JM_User_Profile_Url_plus_JM_ID={JM_User_Profile_Url_plus_JM_ID} setStateAfterInsert={this.setStateAfterInsert} />\r\n\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                              <EmbedContent2 showToast={this.showToast}\r\n                                JM_ID={this.state.JM_ID}\r\n                                JM_User_Profile_Url_plus_JM_ID={JM_User_Profile_Url_plus_JM_ID} Get_User_Details={this.Get_User_Details} setStateAfterInsert={this.setStateAfterInsert} />\r\n\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                              <div className=\"card-btun\" onClick={this.DirectAccess}>\r\n                                <AddCircleOutlineOutlinedIcon />\r\n                                <h4>Monetization Features</h4>\r\n                                <p>Sell & earn</p>\r\n                              </div>\r\n                            </div>\r\n                            {/* caresoul */}\r\n                            <div className=\"col-md-4\">\r\n                              <div className=\"card-btun\" onClick={this.ImageCarousel}>\r\n                                <AddCircleOutlineOutlinedIcon />\r\n                                <h4>Image Carousel</h4>\r\n                                <p>Add sliding images</p>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Collapse>\r\n                    </div>\r\n\r\n                    <DragDropContext onDragEnd={this.onDragEndSocialWidget}>\r\n                      <Droppable droppableId=\"dp1\" >\r\n                        {(provided) => (\r\n                          <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                            {socialWidget}\r\n                          </div>\r\n\r\n                        )}\r\n\r\n                      </Droppable>\r\n                    </DragDropContext>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    {\r\n                      this.state.JM_Steps === 0 ?\r\n                        <div className=\"tooltips\">\r\n                          <div className=\"tooltip-top\" id=\"tool_drag_part\" style={{ display: localStorage.getItem('tool_drag_part') }}>\r\n                            <h6>Click and drag widgets to move around</h6>\r\n                            <p> Organize your links and widgets by simply dragging and dropping items.</p>\r\n                            <i></i>\r\n                            <span className=\"cls\" onClick={this.updateStepsClose('tool_drag_part')}>x</span>\r\n                            <span className=\"step\">Step 3 out of 9</span>\r\n                            <button className=\"nxtbtun\" onClick={this.updateSteps(4)}>Next</button>\r\n                          </div>\r\n                        </div>\r\n                        : null\r\n                    }\r\n\r\n\r\n                    {/* main design drag and drop */}\r\n\r\n\r\n                    <DragDropContext onDragEnd={this.onDragEnd}>\r\n                      <Droppable droppableId=\"main_dp\" >\r\n                        {(provided) => (\r\n                          <ul className=\"characters\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                            {\r\n                              this.state.userDetailsAll.map((link, i) => {\r\n\r\n                                return (\r\n                                  <Draggable key={i} draggableId={i + \" \"} index={i}>\r\n                                    {(provided) => (\r\n\r\n                                      <div id={'lnk_' + link.tableId} ref={provided.innerRef}  {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                                        <DragDropContext onDragEnd={this.onDragEndCategory}> \r\n                                        {\r\n                                          link.ItemType === 'customlink' && link.folderId === 0 ?\r\n                                            // custom links\r\n                                            <div className=\"item\" id={'lnk_item_' + link.tableId + \"_\" + link.ItemType}>\r\n                                              <div className=\"move\"><MoreVertIcon /></div>\r\n                                              <div className=\"top-part\">\r\n\r\n                                                <div className=\"row\">\r\n                                                  <div className=\"col-md-4\">\r\n                                                    <h4>Custom Link</h4>\r\n                                                  </div>\r\n                                                  <div className=\"col-md-8\">\r\n                                                    <label className=\"switch\" for={'link_' + link.tableId}>\r\n                                                      <input type=\"checkbox\" id={'link_' + link.tableId} name={'link_' + link.tableId}\r\n                                                        checked={this.state.checkedBoxes.find((ch) => ch.tableId === link.tableId)}\r\n                                                        onClick={this.doActive(link)}\r\n                                                      />\r\n                                                      <div className=\"slider round\" ></div>\r\n                                                    </label>\r\n                                                  </div>\r\n                                                </div>\r\n\r\n                                              </div>\r\n                                              <div className=\"bottom-part\">\r\n                                                <div className=\"row\">\r\n                                                  <div className=\"col-lg-2\">\r\n                                                    {\r\n                                                      link.image === '' && (link.icon === '' || link.icon === null) ?\r\n                                                        <div className=\"icon\"><img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} /></div>\r\n                                                        : link.image !== '' && link.icon === '' ?\r\n                                                          <div className=\"icon\"><img style={{ width: '100%' }} src={process.env.REACT_APP_UPLOAD_URL + link.image} /></div>\r\n                                                          : link.icon !== '' && link.image === '' ?\r\n                                                            <div className=\"icon\"> <MDBIcon icon={link.icon} size=\"2x\" /></div>\r\n                                                            :\r\n                                                            <div className=\"icon\"><img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} /></div>\r\n                                                    }\r\n                                                  </div>\r\n                                                  <div className=\"col-md-6\">\r\n                                                    <div className=\"text\">\r\n                                                      <h4>{link.title}</h4>\r\n                                                    </div>\r\n                                                  </div>\r\n                                                  <div className=\"col-md-4 text-right\">\r\n                                                    <button onClick={() => { this.setState({ openMoveLinkModel: true, LM_ID_Move: link.tableId, JM_ID_Move: link.JM_ID }) }}><OpenWithSharpIcon /></button>\r\n                                                    <EditLinks2 data={this.state.userDetailsAll[i]} userDetails={this.state.userDetails[0]} setStateAfterInsert={this.setStateAfterInsert} />\r\n                                                    <input type=\"hidden\" name=\"hidden\" value={link.tableId}></input>\r\n                                                    <button data-remove={link.tableId} onClick={this.doDeleteLink}><DeleteForeverIcon /></button>\r\n                                                  </div>\r\n                                                </div>\r\n                                              </div>\r\n                                            </div>\r\n                                            : link.ItemType === 'category' ?\r\n                                             // folder                 \r\n                                               <Droppable droppableId=\"dropLink2Folder\">\r\n                                                 {(provided, snapshot) => (\r\n                                                   <div\r\n                                                     ref={provided.innerRef} className=\"item\" id={'lnk_item_' + link.tableId + \"_\" + link.ItemType}>\r\n                                                       <div className=\"top-part\">\r\n                                                           <div className=\"row\">\r\n                                                             <div className=\"col-md-4\">\r\n                                                               <h4>{link.title}</h4>\r\n                                                             </div>\r\n                                                             <div className=\"col-md-8\">\r\n                                                               <label className=\"switch\" for={'link_' + link.tableId}>\r\n                                                                 <input type=\"checkbox\" id={'link_' + link.tableId} name={'lnk_' + link.tableId}\r\n                                                                   checked={this.state.checkedBoxes.find((ch) => ch.tableId === link.tableId)}\r\n                                                                   onClick={this.doActiveCategoryMaster(link)}\r\n                                                                 />\r\n                                                                 <div className=\"slider round\" ></div>\r\n                                                               </label>\r\n                                                             </div>\r\n                                                           </div>\r\n                                                         </div>\r\n                                                         <div className=\"bottom-part\">\r\n                                                             <div className=\"row\">\r\n                                                               <div className=\"col-lg-2\">\r\n                                                                 {\r\n                                                                   (link.image === null || link.image === '') && (link.icon === '' || link.icon === null) ?\r\n                                                                     <div className=\"icon\"><img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} /></div>\r\n                                                                     : (link.image !== null || link.image !== '') && link.icon === '' ?\r\n                                                                       <div className=\"icon\"><img style={{ width: '100%' }} src={process.env.REACT_APP_UPLOAD_URL + link.image} /></div>\r\n                                                                       : (link.icon !== '' || link.icon !== null) ?\r\n                                                                         <div className=\"icon\"><MDBIcon icon={link.icon} size=\"2x\" /></div>\r\n                                                                         :\r\n                                                                         <div className=\"icon\"><img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} /></div>\r\n                                                                 }\r\n                                                               </div>\r\n                                                               <div className=\"col-md-6\">\r\n                                                                 <div className=\"text\">\r\n                                                                   <h4>{link.description} </h4>\r\n                                                                 </div>\r\n                                                               </div>\r\n\r\n                                                               <div className=\"col-md-4 text-right\">\r\n                                                                 <button onClick={this.collapseHandleClick(link.tableId)} style={{ display: 'none' }} id={\"minus_icon_\" + link.tableId}><IndeterminateCheckBoxOutlinedIcon /></button>\r\n                                                                 <button onClick={this.collapseHandleClick(link.tableId)} id={\"plus_icon_\" + link.tableId} style={{ display: 'inline-block' }} ><AddCircleOutlineOutlinedIcon /></button>\r\n                                                                 <EditStackedLink2 category_master={this.state.userDetailsAll[i]} CM_ID={link.tableId}\r\n                                                                   JM_User_Profile_Url_plus_JM_ID={JM_User_Profile_Url_plus_JM_ID} setStateAfterInsert={this.setStateAfterInsert} />\r\n                                                                 <input type=\"hidden\" name=\"hidden\" value={link.tableId}></input>\r\n                                                                 <button data-remove={link.tableId} onClick={this.doDeleteCategory}><DeleteForeverIcon /></button>\r\n                                                               </div>\r\n                                                             </div>\r\n                                                             <span id={\"hide_show_text_\" + link.tableId} style={{ display: 'none' }}> Show</span>\r\n\r\n                                                           </div>\r\n                                                           <div className=\"move\"><MoreVertIcon />\r\n                                                           </div>\r\n                                                               {this.state.selected && this.state.selected.map((item, index) => (                                                      \r\n                                                                 <Draggable\r\n                                                                   key={item.tableId}\r\n                                                                   draggableId={item.tableId + \"\"}\r\n                                                                   index={index}>\r\n                                                                   {(provided, snapshot) => (\r\n                                                                     <div ref={provided.innerRef}   {...provided.draggableProps} {...provided.dragHandleProps} >\r\n                                                                       <h1>{item.title}</h1>\r\n                                                                     </div>\r\n                                                                   )}\r\n                                                                 </Draggable>\r\n                                                               ))}\r\n\r\n\r\n                                                     {provided.placeholder}\r\n\r\n\r\n\r\n                                                   </div>\r\n                                                 )}\r\n                                               </Droppable>\r\n                                          \r\n                                             :  null\r\n                                            \r\n                                        }\r\n                                        </DragDropContext>\r\n                                      </div>\r\n\r\n                                    )}\r\n                                  </Draggable>\r\n                                );\r\n\r\n                              })\r\n                            }\r\n                            {provided.placeholder}\r\n                          </ul>\r\n                        )}\r\n                      </Droppable>\r\n\r\n                    \r\n\r\n\r\n\r\n                    </DragDropContext>\r\n\r\n                    {/* main design drag and drop */}\r\n\r\n\r\n\r\n\r\n\r\n                    <div className=\"item\">\r\n                      <div className=\"move\"><MoreVertIcon />\r\n                      </div>\r\n                      <div className=\"top-part\">\r\n                        <h4>Virtual Gifts</h4>\r\n\r\n                        {\r\n                          JM_Payout_Details === 1 ?\r\n                            <Link className=\"gift-add\" to={{ pathname: \"/gifts\", state: { JM_ID: this.state.JM_ID } }}>\r\n                              <AddCircleOutlineOutlinedIcon />\r\n                            </Link>\r\n                            :\r\n                            <Link to={{ pathname: \"/settings\", userDetails: this.state.userDetails, state: { openTabNo: 1 } }} > Add Payout Details</Link>\r\n\r\n                        }\r\n\r\n\r\n                      </div>\r\n                      <div className=\"bottom-part d-table\">\r\n                        {gifts}\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    {newsLetter}\r\n\r\n                  </div>\r\n                  <Modal\r\n                    size=\"sm\"\r\n                    show={this.state.openEditURLModal}\r\n                    onHide={this.closeEditUrlModal}\r\n                    aria-labelledby=\"example-modal-sizes-title-sm\"\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    centered\r\n                  >\r\n                    <Modal.Header closeButton>\r\n                      <Modal.Title id=\"example-modal-sizes-title-sm\" style={{ fontSize: '15px' }}>\r\n                        Change your profile username\r\n                      </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                      <input type=\"text\" disabled={this.state.isCompletedUrlProcessing} className=\"form-control\" placeholder=\"username\" name=\"JM_User_Profile_Url\" value={this.state.JM_User_Profile_Url} onChange={this.onEditChangeUrl} />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                      <p id=\"msg\" style={{ color: 'red' }}></p>\r\n                      <div className=\"btun-box\">\r\n                        {/* {\r\n                          isRequestForChangeUrl === 0 ?\r\n                            <Button onClick={this.doEditUrl} className=\"btun btun_1\">Request</Button>\r\n                            :\r\n                            <Button className=\"btun btun_1\" disabled >Request Sent</Button>\r\n                        } */}\r\n                        {\r\n                          this.state.Validation === false ?\r\n                            <Button onClick={this.isConfirm} disabled={this.state.isCompletedUrlProcessing} className=\"btun btun_1\">{this.state.btnRequest}</Button>\r\n                            :\r\n                            null\r\n                        }\r\n                        <p id='req_msg'></p>\r\n                        {/* <p style={{color:' #ea9515',fontWweight: 'bold',fontSsize: '12px'}}>\r\n                             Note: if you update this current username you will not able to see any data of earlier username. \r\n                         </p> */}\r\n                      </div>\r\n                    </Modal.Footer>\r\n                  </Modal>\r\n\r\n\r\n\r\n                  {/* Referral modal */}\r\n                  <Modal\r\n                    size=\"sm\"\r\n                    show={this.state.openRefModal}\r\n                    onHide={() => this.setState({ openRefModal: false })}\r\n                    aria-labelledby=\"example-modal-sizes-title-sm\"\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    centered\r\n                  >\r\n                    <Modal.Header closeButton>\r\n                      <Modal.Title id=\"example-modal-sizes-title-sm\" style={{ fontSize: '15px' }}>\r\n                        Monetization code\r\n                      </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Enter Monetization code\" name=\"JM_Referral_Code\" value={this.state.JM_Referral_Code} onChange={this.onChangeNameDesc} />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n\r\n                      <div className=\"btun-box\">\r\n                        <Button onClick={this.isConfirm} disabled={this.state.isValidRefCode} className=\"btun btun_1\" id=\"Request\">Request</Button>\r\n                      </div>\r\n                      <p id=\"msg\" style={{ color: 'red' }}></p>\r\n                    </Modal.Footer>\r\n                  </Modal>\r\n\r\n\r\n                </div>\r\n\r\n              </div>\r\n              {LiveMobile}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ToastAlert title={this.state.title} hideToast={this.hideToast} msg={this.state.msg} show={this.state.show} image={this.state.logo} showToast={this.showToast} />\r\n\r\n        <Modal\r\n          size=\"sm\"\r\n          show={this.state.openMoveLinkModel}\r\n          onHide={() => this.setState({ openMoveLinkModel: false })}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-sm\" style={{ fontSize: '15px' }}>\r\n              Move Custom Links\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"row\">\r\n              <div className=\"col-12\" onChange={this.onChangeRadio}>\r\n\r\n                <input type=\"radio\" className=\"radio-folder\"\r\n                  value={0} name=\"category\" onChange={this.onChangeRadio} />\r\n                <label>Keep in front</label>\r\n              </div>\r\n\r\n            </div>\r\n            <h5 >Your Desired Folder(s)</h5>\r\n            <br />\r\n            <div className=\"row\" style={{ marginTop: '-26px' }}>\r\n\r\n              {\r\n                this.state.category_master && this.state.category_master.map((option, i) => {\r\n                  return (\r\n                    <>\r\n                      <div className=\"col-12\" >\r\n                        <input type=\"radio\"\r\n                          className=\"radio-folder\" onChange={this.onChangeRadio} value={option.CM_ID} data-id={this.state.CM_ID_Move} name=\"category\" />\r\n                        <label> {option.CM_Folder_Title}</label>\r\n\r\n                      </div>\r\n\r\n                    </>\r\n                  )\r\n                })\r\n              }\r\n\r\n            </div>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <p id=\"msg\" style={{ color: 'red' }}></p>\r\n            <div className=\"btun-box\">\r\n              <Button onClick={this.moveCustomLinks} className=\"movebtun\">Move <SendSharpIcon /></Button>\r\n            </div>\r\n\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        {/* image crop modal */}\r\n        <Modal\r\n          show={this.state.openCropModal}\r\n          onHide={() => this.setState({ openCropModal: false })}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-sm\" style={{ fontSize: '15px' }}>\r\n              Crop and Save\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <form onSubmit={this.uploadPic}>\r\n              <div className=\"cropp-image\">\r\n                {src && (\r\n                  <ReactCrop\r\n                    src={src}\r\n                    crop={crop}\r\n                    onImageLoaded={this.onImageLoaded}\r\n                    onComplete={this.onCropComplete}\r\n                    onChange={this.onCropChange}\r\n                  />\r\n                )}\r\n\r\n              </div>\r\n\r\n              <button className=\"btnCropSave\">save</button>\r\n\r\n            </form>\r\n            {uploadPercentage > 0 && <ProgressBar animated variant=\"success\" style={{ width: '100%' }} now={uploadPercentage} active label={`${uploadPercentage}%`} />}\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        {/* social share */}\r\n        <Modal\r\n          show={this.state.openSocialModal}\r\n          onHide={() => this.setState({ openSocialModal: false })}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-sm\" style={{ fontSize: '15px' }}>\r\n              <h4>Share on Social Platform</h4>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-3 text-center\">\r\n                <FacebookShareButton\r\n                  url={root_url + JM_User_Profile_Url}\r\n                  quote={\"Hi Creator, \" + this.state.JM_Name + \" is Inviting you to create your own Expy Bio Link: Enter Code: \" + this.state.Ref_Code + \" or use \" + root_url + \"signin to sign up.\"}\r\n                >\r\n                  <FacebookIcon\r\n                    size={62}\r\n                    round />\r\n                </FacebookShareButton>\r\n                <p>Facebook</p>\r\n              </div>\r\n              <div className=\"col-md-3 text-center\">\r\n                <TwitterShareButton\r\n                  url={root_url + JM_User_Profile_Url}\r\n                  title={\"Hi Creator, \" + this.state.JM_Name + \" is Inviting you to create your own Expy Bio Link: Enter Code: \" + this.state.Ref_Code + \" or use \" + root_url + \"signin to sign up.\"}\r\n                >\r\n                  <TwitterIcon\r\n                    size={62}\r\n                    round />\r\n                </TwitterShareButton>\r\n                <p>Twitter</p>\r\n              </div>\r\n              <div className=\"col-md-3 text-center\">\r\n                <WhatsappShareButton\r\n                  url={root_url + JM_User_Profile_Url}\r\n                  title={\"Hi Creator, \" + this.state.JM_Name + \" is Inviting you to create your own Expy Bio Link: Enter Code: \" + this.state.Ref_Code + \" or use \" + root_url + \"signin to sign up.\"}\r\n                >\r\n                  <WhatsappIcon\r\n                    size={62}\r\n                    round />\r\n                </WhatsappShareButton>\r\n                <p>Whatsapp</p>\r\n              </div>\r\n\r\n\r\n\r\n              <div className=\"col-md-3 text-center\">\r\n                <LinkedinShareButton\r\n                  url={root_url + JM_User_Profile_Url}\r\n                  title={\"Hi Creator,\"}\r\n                  title={\"Hi Creator,\" + this.state.JM_Name + \" is Inviting you to create your own Expy Bio Link: Enter Code: \" + this.state.Ref_Code + \" or use \" + root_url + \"signin to sign up.\"}\r\n                >\r\n                  <LinkedinIcon\r\n                    size={62}\r\n                    round />\r\n                </LinkedinShareButton>\r\n                <p>Linkedin</p>\r\n              </div>\r\n\r\n              <div className=\"col-md-3 text-center\">\r\n                <TelegramShareButton\r\n                  url={root_url + JM_User_Profile_Url}\r\n                  title={\"Hi Creator, \" + this.state.JM_Name + \" is Inviting you to create your own Expy Bio Link: Enter Code: \" + this.state.Ref_Code + \" or use \" + root_url + \"signin to sign up.\"}\r\n                >\r\n                  <TelegramIcon\r\n                    size={62}\r\n                    round />\r\n                </TelegramShareButton>\r\n                <p>Telegram</p>\r\n              </div>\r\n              <div className=\"col-md-3 text-center\">\r\n                <RedditShareButton\r\n                  url={root_url + JM_User_Profile_Url}\r\n                  title={\"Hi Creator, \" + this.state.JM_Name + \" is Inviting you to create your own Expy Bio Link: Enter Code: \" + this.state.Ref_Code + \" or use \" + root_url + \"signin to sign up.\"}\r\n                >\r\n                  <RedditIcon\r\n                    size={62}\r\n                    round />\r\n                </RedditShareButton>\r\n                <p>Reddit</p>\r\n              </div>\r\n              <div className=\"col-md-3 text-center\">\r\n                <PinterestShareButton\r\n                  url={root_url + JM_User_Profile_Url}\r\n                  media={JM_Profile_Pic}\r\n                  description={\"Hi Creator, \" + this.state.JM_Name + \" is Inviting you to create your own Expy Bio Link: Enter Code: \" + this.state.Ref_Code + \" or use \" + root_url + \"signin to sign up.\"}\r\n                >\r\n                  <PinterestIcon\r\n                    size={62}\r\n                    round />\r\n                </PinterestShareButton>\r\n                <p>Pinterest</p>\r\n              </div>\r\n              <div className=\"col-md-3 text-center\">\r\n                <EmailShareButton\r\n                  url={root_url + JM_User_Profile_Url}\r\n                  title={\"Hi Creator, \" + this.state.JM_Name + \" is Inviting you to create your own Expy Bio Link: Enter Code: \" + this.state.Ref_Code + \" or use \" + root_url + \"signin to sign up.\"}\r\n                >\r\n                  <EmailIcon\r\n                    size={62}\r\n                    round />\r\n                </EmailShareButton>\r\n                <p>Email</p>\r\n              </div>\r\n\r\n            </div>\r\n\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n\r\n          </Modal.Footer>\r\n        </Modal>\r\n        {/* ========================= */}\r\n        {/* newsletter edit */}\r\n        <Modal\r\n          size=\"sm\"\r\n          show={this.state.showNewsModal}\r\n          onHide={() => this.setState({ showNewsModal: false })}\r\n          aria-labelledby=\"example-modal-sizes-title-sm\"\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-sm\" style={{ fontSize: '15px' }}>\r\n              Title\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Enter Title\" name=\"JM_NewsLetter_Title\" value={this.state.JM_NewsLetter_Title} onChange={(e) => this.setState({ JM_NewsLetter_Title: e.target.value })} />\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <p id=\"msg\" style={{ color: 'red' }}></p>\r\n            <div className=\"btun-box\">\r\n              <Button className=\"btun btun_1\" onClick={this.updateNewsLetterTitle}>Update</Button>\r\n              <p id='req_news'></p>\r\n            </div>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <FooterClass />\r\n      </>\r\n    )\r\n\r\n  }\r\n}\r\nexport default withRouter(MyProfile);\r\n\r\n","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\PrivacyPolicy.js",[],"E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\profile\\Sudipta.js",["2396","2397","2398","2399","2400","2401","2402","2403","2404","2405","2406","2407","2408","2409"],"import React, { Component } from 'react'\r\nimport {Link,Route,BrowserRouter as Router,Switch} from 'react-router-dom'\r\nimport {Nav,Navbar,Button} from 'react-bootstrap';\r\nimport JoinModal from '../JoinModal';\r\nimport SignInModal from '../SignInModal';\r\nimport ChatOutlinedIcon from '@material-ui/icons/ChatOutlined';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faYoutube,\r\n    faFacebook,\r\n    faTwitter,\r\n    faInstagram\r\n  } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nexport default class Sudipta extends Component {\r\n    constructor(props) {\r\n      super(props)\r\n  \r\n      this.state = {\r\n         data:{\"name\":\"sam\"},\r\n         logo:\"Logo.png\",\r\n         bgColor:'#333',\r\n         bgImage:\"url('../images/profile_back.jpg')\"\r\n\r\n      }\r\n    }\r\n    \r\n  render() {\r\n    return (\r\n      <>\r\n        \r\n        <div className=\"per-prop\" style={{backgroundImage:this.state.bgImage}}>\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                  <div className=\"per-prop-header\">\r\n                        <button className=\"btun\">Follow</button>\r\n                        <button className=\"btun_2\"><ChatOutlinedIcon style={{ fontSize: 35 }}/></button>\r\n                  </div>\r\n                  <div className=\"per-prop-body\">\r\n                    <div className=\"dtail-part\">\r\n                      <div className=\"prop-pic\">\r\n                        <img src={\"images/prop_2.png\"} />\r\n                      </div>\r\n                      <div className=\"name\">\r\n                        <h3>Your Name</h3>\r\n                        <p>Description</p>\r\n                      </div>\r\n                      <div className=\"button-part\">\r\n                        <div className=\"btun-box\">\r\n                          <button className=\"big-btun\">Follow me on Instagram </button>\r\n                          <div className=\"icon\"><img src={\"images/insta.png\"} /></div>\r\n                        </div>\r\n\r\n                        <div className=\"btun-box\">\r\n                          <button className=\"big-btun\">I'll send you a video message</button>\r\n                          <div className=\"icon\"><PlayCircleOutlineIcon style={{ fontSize: 35 }}/></div>\r\n                          <button className=\"buy\">Buy</button>\r\n                        </div>\r\n\r\n                        <div className=\"btun-box\">\r\n                          <button className=\"big-btun\">Follow me on Youtube </button>\r\n                          <div className=\"icon\"><img src={\"images/youtube.png\"} /></div>\r\n                        </div>\r\n\r\n                        <div className=\"reg-box\">\r\n                          <div className=\"heading\">\r\n                            <p>Get updates about me</p>\r\n                          </div>\r\n                          <input type=\"text\" className=\"form-control\" placeholder=\"Your Name...\"/>\r\n                          <div className=\"frm-btun\">\r\n                            <button className=\"next-btun\">Next</button>\r\n                            <a className=\"log-btun\">Log in now</a>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"per-prop-footer\">\r\n                    <ul className=\"Social-links\">\r\n                        <li><Link href=\"#\"> <FontAwesomeIcon icon={faYoutube}/></Link></li>\r\n                        <li><Link href=\"#\"><FontAwesomeIcon icon={faFacebook}/></Link></li>\r\n                        <li><Link href=\"#\"> <FontAwesomeIcon icon={faInstagram}/></Link></li>  \r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4 offset-md-2\">\r\n                  <div className=\"page-footer-logo\">\r\n                    <img src={\"images/logo_2.png\"} />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <ul className=\"page-footer-link\">\r\n                      <li><Link href=\"#\">Brouse</Link></li> | \r\n                      <li><Link href=\"#\">Create Page</Link></li>\r\n                    </ul>\r\n                </div>\r\n              </div>  \r\n            </div>\r\n        </div> \r\n        \r\n      </>\r\n    )\r\n  }\r\n}\r\n","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\Payout.js",["2410","2411","2412"],"import React, { Component }from 'react'\r\n\r\nimport FooterClass from '../header_footer/FooterClass';\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {faRupeeSign} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport API  from '../services/API'\r\nimport ProfileHeader from '../header_footer/ProfileHeader';\r\nimport Moment from 'react-moment';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nclass Payout extends Component\r\n{\r\n    \r\n\r\n    constructor(props) {\r\n        super(props)\r\n      \r\n        this.state = {\r\n           openModel:false,\r\n           show:false,\r\n           open:false,\r\n           amount:0,\r\n           bal:0,\r\n           lastPayout:0,\r\n           cancelBtn:true,\r\n           withdrawBtn:true,\r\n           type:'B',\r\n           withDrawableBalance:0,\r\n        }\r\n      }\r\n    \r\n      async componentDidMount()\r\n        {\r\n         //let sender_batch_id=API.randomString(100,'alphanumeric')\r\n          //console.log(sender_batch_id)\r\n            API.autoLogout();\r\n            this.getBal();\r\n        }\r\n    async getBal()\r\n      {\r\n        try\r\n        {\r\n     \r\n            const data=await API.postData({bal:0},'pay_balance');\r\n            //console.log(data)\r\n            if(data.status===1)\r\n            {\r\n                this.setState({\r\n                    bal:data.currentBalance,result:data.result,\r\n                    withDrawableBalance:data.withDrawableBalance,\r\n                })\r\n                \r\n            }\r\n         \r\n        }\r\n        catch(error)\r\n        {\r\n            //...\r\n        }\r\n \r\n        \r\n      }\r\n      ModalClose=()=>{\r\n        this.setState({openModel:false,show:false});\r\n      }\r\n      ModalOpen=()=>{\r\n        this.setState({\r\n            openModel:true,show:true,amount:0,type:'B'\r\n        \r\n        });\r\n      }\r\n      openCollapse = () => {\r\n        !this.state.open ?\r\n          this.setState({ open: true })\r\n          :\r\n          this.setState({ open: false })\r\n          \r\n      }\r\n   \r\ndoPayout=()=>{\r\n\r\n  \r\n    let msg=\"Minimum balance required of Rs. 1000\";\r\n    if(this.state.withDrawableBalance < 1000)\r\n    {\r\n      document.getElementById('msg').innerHTML=msg;\r\n      setTimeout(function() {     \r\n         document.getElementById(\"msg\").innerHTML='';       \r\n        }, 2000);   \r\n      return false;\r\n    }\r\n\r\n    this.ModalOpen();\r\n}\r\nwithdrawal=async (e)=>{\r\n    document.getElementById('msg_modal').innerHTML=\"\";\r\n    if(this.state.amount.length === 0)\r\n    {\r\n        document.getElementById('msg_modal').innerHTML=\"* Enter Amount\";\r\n        return false;\r\n    }\r\n    if(parseInt(this.state.amount) === 0)\r\n    {\r\n        document.getElementById('msg_modal').innerHTML=\"* Enter Amount\";\r\n        return false;\r\n    }\r\n    if(parseInt(this.state.amount) < 0)\r\n    {\r\n        document.getElementById('msg_modal').innerHTML=\"* Enter Amount\";\r\n        return false;\r\n    }\r\n    console.log(parseInt(this.state.amount))\r\n\r\n//btn_withdraw\r\n  \r\n    this.isConfirm();\r\n}\r\nconfirmPayout=async()=>\r\n{\r\n  document.getElementById('msg_modal').style.color='red';\r\n    document.getElementById('msg_modal').innerHTML=\"Processing..Don't refresh the page\";\r\n    this.setState({\r\n        cancelBtn:false,withdrawBtn:false\r\n    })\r\n    var JSONdata={\r\n        amount:this.state.amount,\r\n        type:this.state.type\r\n    }\r\n    if(this.state.type==='B')\r\n    {\r\n      let data=await API.postData(JSONdata,'payout');\r\n      if(data.status===1)\r\n      {\r\n         document.getElementById('msg_modal').style.color='green';\r\n          document.getElementById('msg_modal').innerHTML=\"Payout process is successfully completed\";\r\n          setTimeout(function() {\r\n             window.location.reload();        \r\n           }, 2000);   \r\n         \r\n      }\r\n      else\r\n      {\r\n          this.setState({\r\n              cancelBtn:true,withdrawBtn:true\r\n          })\r\n          document.getElementById('msg_modal').innerHTML=data.msg;\r\n          return false;\r\n      }\r\n    }\r\n    else // for paypal payout\r\n    {\r\n        \r\n      \r\n        var flagData={\r\n            amount:parseFloat(this.state.amount),\r\n            type:this.state.type\r\n        }\r\n        const flag=API.encryptData(flagData)\r\n        var  JSONdata={\r\n                flag:flag           \r\n            }\r\n        let data=await API.postData(JSONdata,'paypalPayout');\r\n      if(data.status===1)\r\n      {\r\n\r\n          document.getElementById('msg_modal').style.color='green';\r\n          document.getElementById('msg_modal').innerHTML=\"Payout process is successfully completed\";\r\n          setTimeout(function() {\r\n             window.location.reload();        \r\n           }, 2000);  \r\n      }\r\n      else\r\n      {\r\n          this.setState({\r\n              cancelBtn:true,withdrawBtn:true\r\n          })\r\n          document.getElementById('msg_modal').innerHTML=data.msg;\r\n          return false;\r\n      }\r\n    }\r\n \r\n}\r\nisConfirm =()=>\r\n{\r\n  confirmAlert({\r\n    title: 'Confirm withdrawal',\r\n    message: 'Are you sure you want to proceed the withdrawal?',\r\n    buttons: [\r\n        {\r\n        label: 'Yes',\r\n        onClick: () => this.confirmPayout() //this.postData(data,'payout')\r\n        },\r\n        {\r\n        label: 'No',\r\n        onClick: () => console.log(\"cancel\")\r\n        }\r\n    ],\r\n    closeOnEscape: false,\r\n    closeOnClickOutside: false,\r\n    });\r\n}\r\n\r\n\r\ncheckType=(e)=>{\r\n       if(e.target.checked===true && e.target.id==='B')\r\n       {\r\n         this.setState({\r\n            type:'B'\r\n         })\r\n       }\r\n       if(e.target.checked===true && e.target.id==='P')\r\n       {\r\n         this.setState({\r\n            type:'P'\r\n         })\r\n       }\r\n}\r\n\r\n\r\n  render(){\r\n    const {bal,result}=this.state;\r\n     let lastPayout=0;let itemtype='';\r\n     let recentActivity;let isActivity=false;\r\n     if(result)\r\n     {\r\n         for (let i = 0; i < result.length; i++) \r\n         {\r\n             if(i===0)\r\n                { \r\n                    \r\n                    itemtype=result[i].type;\r\n                    if(itemtype==='P')\r\n                       lastPayout= result[i].INR_USD;\r\n                    else\r\n                       lastPayout = result[i].amount;\r\n                    isActivity=true;\r\n                     break;\r\n                }\r\n             \r\n         }\r\n         recentActivity=result && result.map((item, i) => {\r\n            return (    \r\n              <p>\r\n                Payout to your bank account of\r\n                {\r\n                  item.type==='B' ?  <span> <FontAwesomeIcon icon={faRupeeSign} /> {item.amount} </span> \r\n                  :  <span> <i class=\"fas fa-dollar-sign\"></i> {item.INR_USD} </span> \r\n                }\r\n                on {<Moment date= {item.tranDate}  format=\"DD-MM-YYYY\"/> }              \r\n              </p>\r\n            )\r\n      \r\n          })\r\n      \r\n\r\n     }\r\n \r\n  return (\r\n    <>\r\n       <ProfileHeader />\r\n      \r\n      \r\n      <div className=\"wallet-sec\">\r\n          <div className=\"container\">\r\n              <div className=\"row\">\r\n                  <div className=\"col-md-5\">\r\n                      <div className=\"left-part\">\r\n                          <div className=\"balance-part\">\r\n                            \r\n                              <div className=\"amount-box\">\r\n                                <div className=\"amount\">\r\n                                  <p>Balance</p> \r\n                                  <h3><FontAwesomeIcon icon={faRupeeSign} />{bal}</h3>                               \r\n                                \r\n                                {/* <button className=\"btun\" onClick={this.doPayout} style={{cursor:'pointer'}}>Withdrawal</button> */}\r\n                              \r\n                                </div>\r\n                                <div className=\"amount\">\r\n                                  <p>Withdrawable Balance</p> \r\n                                  <h3><FontAwesomeIcon icon={faRupeeSign} />{this.state.withDrawableBalance}</h3>                               \r\n                                \r\n                                <button className=\"btun\" onClick={this.doPayout} style={{cursor:'pointer'}}>Withdrawal</button>\r\n                              \r\n                                </div>\r\n                                \r\n                              </div>\r\n                              \r\n                             \r\n                              {/* <p>Learn how to <a href=\"#\">earn more</a></p> */}\r\n                              <p><a href=\"#\" id=\"msg\"></a></p>\r\n                              \r\n                                 {\r\n                                    itemtype==='B' ?  \r\n                                    <p>Your last payout to your bank account was for  <span> <FontAwesomeIcon icon={faRupeeSign} /> {lastPayout}</span>  </p>\r\n                                    :  itemtype==='P' ?  \r\n                                   \r\n                                     <p>Your last payout to your bank account was for    <span> <i class=\"fas fa-dollar-sign\"></i> {lastPayout} </span>  </p>\r\n                                     :\r\n                                     null\r\n                                  }\r\n                              \r\n                              {/* <p>Your total earnings to date are  <span><FontAwesomeIcon icon={faRupeeSign} /> 0.00</span></p> */}\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"col-md-7\">\r\n                        {/* <div className=\"right-first-part\">\r\n                            <p>Earn more by <a href=\"#\">inviting your friends</a> to join expy.bio</p>\r\n                        </div> */}\r\n                        <div className=\"right-last-part\">\r\n                            <p className=\"lab\">Recent Activity</p>\r\n                            <div className=\"activity-area\">\r\n                                {/* dynamic activity */}                                \r\n                                {\r\n                                    isActivity ? \r\n                                        recentActivity \r\n                                    : <p>You have no recent transaction activity</p>                                \r\n                                }\r\n                                {/* <p>You are credited <span><FontAwesomeIcon icon={faRupeeSign} /> 150.00</span> from <span>xxxxx xxx</span> at 29-07-2021</p>\r\n                                <p>Payout to your bank account <span><FontAwesomeIcon icon={faRupeeSign} /> 9500.00</span> at 28-07-2021</p> */}\r\n                            </div>\r\n                        </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n\r\n      <Modal\r\n        show={this.state.show}\r\n        // onHide={this.ModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n        size=\"sm\"\r\n\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title>\r\n             <p className=\"addnew-title\">Payout </p>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n         <Modal.Body>\r\n           <div className=\"withdrow-pop\">\r\n            \r\n\r\n             <div className=\"form-group\">\r\n               <label>Select Payout Type</label> <br/>              \r\n               <input type=\"radio\" name=\"type\" id=\"B\" onChange={this.checkType} checked={this.state.type==='B'? true:false} style={{cursor:'pointer'}}/> To Bank\r\n               {/* <input type=\"radio\" name=\"type\" id=\"P\" onChange={this.checkType} checked={this.state.type==='P'? true:false}  style={{marginLeft:'15px',cursor:'pointer'}}/> To PayPal */}\r\n             </div> \r\n             <div className=\"form-group\">\r\n               <label>Enter Amount</label>\r\n               <input type=\"number\" min=\"0\" name=\"amount\" title=\"\" value={this.state.amount} className=\"form-control\" placeholder=\"Enter Amount\" onChange={(e)=>this.setState({[e.target.name]:e.target.value})}/>\r\n             </div>             \r\n             <div className=\"btun-box\">\r\n                 {\r\n                     this.state.withdrawBtn===true ?\r\n                     <button className=\"btun\" onClick={this.withdrawal} id=\"btn_withdraw\" style={{cursor:'pointer'}}>   Withdraw</button>\r\n                    :null\r\n                 }\r\n            \r\n               {/* <i class=\"fas fa-spinner fa-spin\"></i> */}\r\n               \r\n                  {\r\n                  this.state.cancelBtn===true?\r\n                  <button className=\"btun\" onClick={this.ModalClose} style={{cursor:'pointer'}}>Cancel</button>\r\n                  :null\r\n                  }\r\n            \r\n            </div>\r\n           \r\n           </div>\r\n           \r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n             <p id=\"msg_modal\" style={{color:'red'}}></p>\r\n        </Modal.Footer>\r\n\r\n      </Modal>\r\n\r\n    <FooterClass/>\r\n    </>\r\n  )\r\n}\r\n}\r\nexport default Payout\r\n","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\LiveVideoSessionPage.js",["2413","2414","2415","2416","2417","2418","2419","2420","2421","2422"],"import React, { Component } from 'react';\r\n\r\nimport FooterClass from '../header_footer/FooterClass';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport ProfileHeader from '../header_footer/ProfileHeader';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Popover from 'react-bootstrap/Popover'\r\nimport { TimePicker } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport moment from 'moment';\r\nimport API from '../services/API';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nclass LiveVideoSessionPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        if (!this.props.location.state) {\r\n            window.location.href = '/';\r\n        }\r\n        this.state = {\r\n            directAccess: this.props.location.state.directAccess,\r\n            JM_ID: this.props.location.state.JM_ID,\r\n            JM_User_Profile_Url: this.props.location.state.JM_User_Profile_Url,\r\n            showAlert: true,\r\n            EM_Title: '',\r\n            EM_Desc: '',\r\n            EM_Mail_Text: '',\r\n            EM_Duration: 15,\r\n            EM_Plan_Days: 7,\r\n            EM_Price: 0,\r\n            tableId: 0,\r\n            msg: '',\r\n            base_url: process.env.REACT_APP_API_URL,\r\n            root_url: process.env.REACT_APP_ROOT_URL,\r\n            schedule: [],\r\n            mon_checked: false, mon_start: '', mon_end: '',\r\n            tue_checked: false, tue_start: '', tue_end: '',\r\n            wed_checked: false, wed_start: \"\", wed_end: \"\",\r\n            thus_checked: false, thus_start: \"\", thus_end: \"\",\r\n            fry_checked: false, fry_start: \"\", fry_end: \"\",\r\n            sat_checked: false, sat_start: \"\", sat_end: \"\",\r\n            sun_checked: false, sun_start: \"\", sun_end: \"\",\r\n            btnDisabled: false,\r\n            btn_text: 'Add',\r\n            cover_Image_video: '', coverImageorVideo: null,\r\n            allowCustomertoPay: 0,\r\n            min_amt: '',\r\n            suggested_amt: '',\r\n            showDiv: false,\r\n            min_amt_message: 'You will receive 85% of the amount your follower pays for the product',\r\n            chargesInfo:'',\r\n            showIconCharges:'none',\r\n        }\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    startTime = (time, timeString, e) => {\r\n        ////console.log(timeString);\r\n        const stringTime = timeString.replace(\" \", ':')\r\n        ////console.log(stringTime);\r\n        // this.setState({\r\n        //     [e.target.name]:stringTime\r\n        // })\r\n\r\n    }\r\n    startTime2 = (time, timeString, e) => {\r\n        //console.log(timeString);\r\n        //console.log(moment(timeString[0], \"h:mm A\").format(\"HH:mm\"));\r\n\r\n        let startHr = moment(timeString[0], \"h:mm A\").format(\"HH\");\r\n        let startMin = moment(timeString[0], \"h:mm A\").format(\"mm\");\r\n\r\n        let endHr = moment(timeString[1], \"h:mm A\").format(\"HH\");\r\n        let endMin = moment(timeString[1], \"h:mm A\").format(\"mm\");\r\n\r\n        // let startTimeNumber=this.time_convert_number(start);\r\n        const startTime = timeString[0].replace(\" \", ':')\r\n        const endTime = timeString[1].replace(\" \", ':')\r\n        //console.log(startTime);       \r\n        //console.log(endTime);\r\n        // this.setState({\r\n        //     [e.target.name]:stringTime\r\n        // })\r\n\r\n    }\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        //console.log(this.state)\r\n        document.getElementById('msg_live').innerHTML = '';\r\n        document.getElementById(\"msg_live\").style.color = 'red';\r\n        if (this.state.EM_Title.length === 0) {\r\n            document.getElementById('msg_live').innerHTML = '* Enter Title';\r\n            return false;\r\n        }\r\n        // if(this.state.EM_Desc.length===0)\r\n        // {\r\n        //     document.getElementById('msg_live').innerHTML='* Enter Description';\r\n        //     return false;\r\n        // }\r\n        if (this.state.EM_Mail_Text.length === 0) {\r\n            document.getElementById('msg_live').innerHTML = '* Enter Mail Text';\r\n            return false;\r\n        }\r\n\r\n      \r\n\r\n        var days = this.state.mon_checked === true ? true :\r\n            this.state.tue_checked === true ? true :\r\n                this.state.wed_checked === true ? true :\r\n                    this.state.thus_checked === true ? true :\r\n                        this.state.fry_checked === true ? true :\r\n                            this.state.sat_checked === true ? true :\r\n                                this.state.sun_checked === true ? true\r\n                                    : false;\r\n        if (days === false) {\r\n            document.getElementById('msg_live').innerHTML = \"* Select atleast one day's schedule\";\r\n            return false;\r\n        }\r\n\r\n\r\n        //monday=========================================================================\r\n        let mon_start_time = document.getElementsByName('mon_start')[0].value;\r\n        let mon_end_time = document.getElementsByName('mon_end')[0].value;\r\n        let mon_start_time2 = document.getElementsByName('mon_start2')[0].value;\r\n        let mon_end_time2 = document.getElementsByName('mon_end2')[0].value;\r\n        let mon_start = -1;\r\n        let mon_end = -1;\r\n        let mon_start2 = -1;\r\n        let mon_end2 = -1;\r\n        if (this.state.mon_checked === true) {\r\n            if (\r\n                (\r\n                    (mon_start_time.length === 0 && mon_end_time.length === 0) || //1st\r\n                    (mon_start_time.length === 0 || mon_end_time.length === 0)\r\n                ) &&\r\n                ((mon_start_time2.length === 0 && mon_end_time2.length === 0) || //2nd\r\n                    (mon_start_time2.length === 0 || mon_end_time2.length === 0)\r\n                )\r\n            ) {\r\n                document.getElementById('msg_live').innerHTML = '* Select atleast one schedule for monday';\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if (this.state.mon_checked === true && (\r\n            (mon_start_time.length > 0 && mon_end_time.length > 0) ||\r\n            (mon_start_time2.length > 0 && mon_end_time2.length > 0))\r\n        ) {\r\n            mon_start = this.time_convert_number(mon_start_time);\r\n            if (mon_start_time === \"\") mon_start = -1;\r\n\r\n            mon_end = this.time_convert_number(mon_end_time);\r\n            if (mon_end_time === \"\") mon_end = -1;\r\n\r\n            mon_start2 = this.time_convert_number(mon_start_time2);\r\n            if (mon_start_time2 === \"\") mon_start2 = -1;\r\n\r\n            mon_end2 = this.time_convert_number(mon_end_time2);\r\n            if (mon_end_time2 === \"\") mon_end2 = -1;\r\n\r\n            if (mon_start > -1 && mon_end > -1 && mon_start2 > -1 && mon_end2 > -1) {\r\n                if ((mon_start >= mon_end)\r\n                    || (mon_start2 >= mon_end2)\r\n                    || API.inRange(mon_start2, mon_start, mon_end)\r\n                    || API.inRange(mon_end2, mon_start, mon_end)\r\n                    || API.inRange(mon_start, mon_start2, mon_end2)\r\n                    || API.inRange(mon_end, mon_start2, mon_end2)\r\n                    || (mon_start === mon_start2 && mon_end === mon_end2)\r\n                ) {\r\n                    alert(\"The time schedule for monday is incorrect. Please check and correct\");\r\n                    return false;\r\n                }\r\n            }\r\n            else if (mon_start > -1 && mon_end > -1 && mon_start2 === -1 && mon_end2 === -1) {\r\n                if (mon_start >= mon_end\r\n                ) {\r\n                    alert(\"The time schedule for monday is incorrect. Please check and correct\");\r\n                    return false;\r\n                }\r\n\r\n            }\r\n            else if (mon_start2 > -1 && mon_end2 > -1 && mon_start === -1 && mon_end === -1) {\r\n                if (mon_start2 >= mon_end2) {\r\n                    alert(\"The time schedule for monday is incorrect. Please check and correct\");\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                alert(\"The time schedule for monday is incorrect. Please check and correct\");\r\n                return false;\r\n            }\r\n        }\r\n\r\n        //=========================================================================end\r\n        //tue=========================================================================\r\n        let tue_start_time = document.getElementsByName('tue_start')[0].value;\r\n        let tue_end_time = document.getElementsByName('tue_end')[0].value;\r\n        let tue_start_time2 = document.getElementsByName('tue_start2')[0].value;\r\n        let tue_end_time2 = document.getElementsByName('tue_end2')[0].value;\r\n        let tue_start = -1;\r\n        let tue_end = -1;\r\n        let tue_start2 = -1;\r\n        let tue_end2 = -1;\r\n\r\n        if (this.state.tue_checked === true) {\r\n            if (\r\n                (\r\n                    (tue_start_time.length === 0 && tue_end_time.length === 0) || //1st\r\n                    (tue_start_time.length === 0 || tue_end_time.length === 0)\r\n                ) &&\r\n                ((tue_start_time2.length === 0 && tue_end_time2.length === 0) || //2nd\r\n                    (tue_start_time2.length === 0 || tue_end_time2.length === 0)\r\n                )\r\n            ) {\r\n                document.getElementById('msg_live').innerHTML = '* Select atleast one schedule for tuesday';\r\n                return false;\r\n            }\r\n        }\r\n\r\n\r\n        if (this.state.tue_checked === true && (\r\n            (tue_start_time.length > 0 && tue_end_time.length > 0) ||\r\n            (tue_start_time2.length > 0 && tue_end_time2.length > 0))\r\n        ) {\r\n            tue_start = this.time_convert_number(tue_start_time);\r\n            if (tue_start_time === \"\") tue_start = -1;\r\n\r\n            tue_end = this.time_convert_number(tue_end_time);\r\n            if (tue_end_time === \"\") tue_end = -1;\r\n\r\n            tue_start2 = this.time_convert_number(tue_start_time2);\r\n            if (tue_start_time2 === \"\") tue_start2 = -1;\r\n\r\n            tue_end2 = this.time_convert_number(tue_end_time2);\r\n            if (tue_end_time2 === \"\") tue_end2 = -1;\r\n\r\n            if (tue_start > -1 && tue_end > -1 && tue_start2 > -1 && tue_end2 > -1) {\r\n                if ((tue_start >= tue_end)\r\n                    || (tue_start2 >= tue_end2)\r\n                    || API.inRange(tue_start2, tue_start, tue_end)\r\n                    || API.inRange(tue_end2, tue_start, tue_end)\r\n                    || API.inRange(tue_start, tue_start2, tue_end2)\r\n                    || API.inRange(tue_end, tue_start2, tue_end2)\r\n                    || (tue_start === tue_start2 && tue_end === tue_end2)\r\n                ) {\r\n                    alert(\"The time schedule for tuesday is incorrect. Please check and correct\");\r\n                    return false;\r\n                }\r\n            }\r\n            else if (tue_start > -1 && tue_end > -1 && tue_start2 === -1 && tue_end2 === -1) {\r\n                if (tue_start >= tue_end\r\n                ) {\r\n                    alert(\"The time schedule for tuesday is incorrect. Please check and correct\");\r\n                    return false;\r\n                }\r\n\r\n            }\r\n            else if (tue_start2 > -1 && tue_end2 > -1 && tue_start === -1 && tue_end === -1) {\r\n                if (tue_start2 >= tue_end2) {\r\n                    alert(\"The time schedule for tuesday is incorrect. Please check and correct\");\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                alert(\"The time schedule for tuesday is incorrect. Please check and correct\");\r\n                return false;\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n        //============================================================================== end\r\n        //wed\r\n        let wed_start_time = document.getElementsByName('wed_start')[0].value;\r\n        let wed_end_time = document.getElementsByName('wed_end')[0].value;\r\n        let wed_start_time2 = document.getElementsByName('wed_start2')[0].value;\r\n        let wed_end_time2 = document.getElementsByName('wed_end2')[0].value;\r\n        let wed_start = -1;\r\n        let wed_end = -1;\r\n        let wed_start2 = -1;\r\n        let wed_end2 = -1;\r\n        if (this.state.wed_checked === true) {\r\n            if (\r\n                (\r\n                    (wed_start_time.length === 0 && wed_end_time.length === 0) || //1st\r\n                    (wed_start_time.length === 0 || wed_end_time.length === 0)\r\n                ) &&\r\n                ((wed_start_time2.length === 0 && wed_end_time2.length === 0) || //2nd\r\n                    (wed_start_time2.length === 0 || wed_end_time2.length === 0)\r\n                )\r\n            ) {\r\n                document.getElementById('msg_live').innerHTML = '* Select atleast one schedule for tuesday';\r\n                return false;\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n        if (this.state.wed_checked === true && (\r\n            (wed_start_time.length > 0 && wed_end_time.length > 0) ||\r\n            (wed_start_time2.length > 0 && wed_end_time2.length > 0))\r\n        ) {\r\n            wed_start = this.time_convert_number(wed_start_time);\r\n            if (wed_start_time === \"\") wed_start = -1;\r\n\r\n            wed_end = this.time_convert_number(wed_end_time);\r\n            if (wed_end_time === \"\") wed_end = -1;\r\n\r\n            wed_start2 = this.time_convert_number(wed_start_time2);\r\n            if (wed_start_time2 === \"\") wed_start2 = -1;\r\n\r\n            wed_end2 = this.time_convert_number(wed_end_time2);\r\n            if (wed_end_time2 === \"\") wed_end2 = -1;\r\n\r\n            if (wed_start > -1 && wed_end > -1 && wed_start2 > -1 && wed_end2 > -1) {\r\n                if ((wed_start >= wed_end)\r\n                    || (wed_start2 >= wed_end2)\r\n                    || API.inRange(wed_start2, wed_start, wed_end)\r\n                    || API.inRange(wed_end2, wed_start, wed_end)\r\n                    || API.inRange(wed_start, wed_start2, wed_end2)\r\n                    || API.inRange(wed_end, wed_start2, wed_end2)\r\n                    || (wed_start === wed_start2 && wed_end === wed_end2)\r\n                ) {\r\n                    alert(\"The time schedule for Wednesday is incorrect. Please check and correct\");\r\n                    return false;\r\n                }\r\n            }\r\n            else if (wed_start > -1 && wed_end > -1 && wed_start2 === -1 && wed_end2 === -1) {\r\n                if (wed_start >= wed_end\r\n                ) {\r\n                    alert(\"The time schedule for Wednesday is incorrect. Please check and correct\");\r\n                    return false;\r\n                }\r\n\r\n            }\r\n            else if (wed_start2 > -1 && wed_end2 > -1 && wed_start === -1 && wed_end === -1) {\r\n                if (wed_start2 >= wed_end2) {\r\n                    alert(\"The time schedule for Wednesday is incorrect. Please check and correct\");\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                alert(\"The time schedule for Wednesday is incorrect. Please check and correct\");\r\n                return false;\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n        //thus\r\n\r\n        let thus_start_time = document.getElementsByName('thus_start')[0].value;\r\n        let thus_end_time = document.getElementsByName('thus_end')[0].value;\r\n        let thus_start_time2 = document.getElementsByName('thus_start2')[0].value;\r\n        let thus_end_time2 = document.getElementsByName('thus_end2')[0].value;\r\n        let thus_start = -1;\r\n        let thus_end = -1;\r\n        let thus_start2 = -1;\r\n        let thus_end2 = -1;\r\n        if (this.state.thus_checked === true) {\r\n            if (\r\n                (\r\n                    (thus_start_time.length === 0 && thus_end_time.length === 0) || //1st\r\n                    (thus_start_time.length === 0 || thus_end_time.length === 0)\r\n                ) &&\r\n                ((thus_start_time2.length === 0 && thus_end_time2.length === 0) || //2nd\r\n                    (thus_start_time2.length === 0 || thus_end_time2.length === 0)\r\n                )\r\n            ) {\r\n                document.getElementById('msg_live').innerHTML = '* Select atleast one schedule for thursday';\r\n                return false;\r\n            }\r\n        }\r\n\r\n\r\n        if (this.state.thus_checked === true && (\r\n            (thus_start_time.length > 0 && thus_end_time.length > 0) ||\r\n            (thus_start_time2.length > 0 && thus_end_time2.length > 0))\r\n        ) {\r\n            thus_start = this.time_convert_number(thus_start_time);\r\n            if (thus_start_time === \"\") thus_start = -1;\r\n\r\n            thus_end = this.time_convert_number(thus_end_time);\r\n            if (thus_end_time === \"\") thus_end = -1;\r\n\r\n            thus_start2 = this.time_convert_number(thus_start_time2);\r\n            if (thus_start_time2 === \"\") thus_start2 = -1;\r\n\r\n            thus_end2 = this.time_convert_number(thus_end_time2);\r\n            if (thus_end_time2 === \"\") thus_end2 = -1;\r\n\r\n            if (thus_start > -1 && thus_end > -1 && thus_start2 > -1 && thus_end2 > -1) {\r\n                if ((thus_start >= thus_end)\r\n                    || (thus_start2 >= thus_end2)\r\n                    || API.inRange(thus_start2, thus_start, thus_end)\r\n                    || API.inRange(thus_end2, thus_start, thus_end)\r\n                    || API.inRange(thus_start, thus_start2, thus_end2)\r\n                    || API.inRange(thus_end, thus_start2, thus_end2)\r\n                    || (thus_start === thus_start2 && thus_end === thus_end2)\r\n                ) {\r\n                    alert(\"The time schedule for thursday is incorrect. Please check and correct\");\r\n                    return false;\r\n                }\r\n            }\r\n            else if (thus_start > -1 && thus_end > -1 && thus_start2 === -1 && thus_end2 === -1) {\r\n                if (thus_start >= thus_end\r\n                ) {\r\n                    alert(\"The time schedule for thursday is incorrect. Please check and correct\");\r\n                    return false;\r\n                }\r\n\r\n            }\r\n            else if (thus_start2 > -1 && thus_end2 > -1 && thus_start === -1 && thus_end === -1) {\r\n                if (thus_start2 >= thus_end2) {\r\n                    alert(\"The time schedule for thursday is incorrect. Please check and correct\");\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                alert(\"The time schedule for thursday is incorrect. Please check and correct\");\r\n                return false;\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        //==========================================================================\r\n        //friday\r\n        let fry_start_time = document.getElementsByName('fry_start')[0].value;\r\n        let fry_end_time = document.getElementsByName('fry_end')[0].value;\r\n        let fry_start_time2 = document.getElementsByName('fry_start2')[0].value;\r\n        let fry_end_time2 = document.getElementsByName('fry_end2')[0].value;\r\n        let fry_start = -1;\r\n        let fry_end = -1;\r\n        let fry_start2 = -1;\r\n        let fry_end2 = -1;\r\n        if (this.state.fry_checked === true) {\r\n            if (\r\n                (\r\n                    (fry_start_time.length === 0 && fry_end_time.length === 0) || //1st\r\n                    (fry_start_time.length === 0 || fry_end_time.length === 0)\r\n                ) &&\r\n                ((fry_start_time2.length === 0 && fry_end_time2.length === 0) || //2nd\r\n                    (fry_start_time2.length === 0 || fry_end_time2.length === 0)\r\n                )\r\n            ) {\r\n                document.getElementById('msg_live').innerHTML = '* Select atleast one schedule for fryday';\r\n                return false;\r\n            }\r\n        }\r\n\r\n\r\n        if (this.state.fry_checked === true && (\r\n            (fry_start_time.length > 0 && fry_end_time.length > 0) ||\r\n            (fry_start_time2.length > 0 && fry_end_time2.length > 0))\r\n        ) {\r\n            fry_start = this.time_convert_number(fry_start_time);\r\n            if (fry_start_time === \"\") fry_start = -1;\r\n\r\n            fry_end = this.time_convert_number(fry_end_time);\r\n            if (fry_end_time === \"\") fry_end = -1;\r\n\r\n            fry_start2 = this.time_convert_number(fry_start_time2);\r\n            if (fry_start_time2 === \"\") fry_start2 = -1;\r\n\r\n            fry_end2 = this.time_convert_number(fry_end_time2);\r\n            if (fry_end_time2 === \"\") fry_end2 = -1;\r\n\r\n            if (fry_start > -1 && fry_end > -1 && fry_start2 > -1 && fry_end2 > -1) {\r\n                if ((fry_start >= fry_end)\r\n                    || (fry_start2 >= fry_end2)\r\n                    || API.inRange(fry_start2, fry_start, fry_end)\r\n                    || API.inRange(fry_end2, fry_start, fry_end)\r\n                    || API.inRange(fry_start, fry_start2, fry_end2)\r\n                    || API.inRange(fry_end, fry_start2, fry_end2)\r\n                    || (fry_start === fry_start2 && fry_end === fry_end2)\r\n                ) {\r\n                    alert(\"The time schedule for friday is incorrect. Please check and correct\");\r\n                    return false;\r\n                }\r\n            }\r\n            else if (fry_start > -1 && fry_end > -1 && fry_start2 === -1 && fry_end2 === -1) {\r\n                if (fry_start >= fry_end\r\n                ) {\r\n                    alert(\"The time schedule for friday is incorrect. Please check and correct\");\r\n                    return false;\r\n                }\r\n\r\n            }\r\n            else if (fry_start2 > -1 && fry_end2 > -1 && fry_start === -1 && fry_end === -1) {\r\n                if (fry_start2 >= fry_end2) {\r\n                    alert(\"The time schedule for friday is incorrect. Please check and correct\");\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                alert(\"The time schedule for friday is incorrect. Please check and correct\");\r\n                return false;\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n        //sat\r\n\r\n        let sat_start_time = document.getElementsByName('sat_start')[0].value;\r\n        let sat_end_time = document.getElementsByName('sat_end')[0].value;\r\n        let sat_start_time2 = document.getElementsByName('sat_start2')[0].value;\r\n        let sat_end_time2 = document.getElementsByName('sat_end2')[0].value;\r\n        let sat_start = -1;\r\n        let sat_end = -1;\r\n        let sat_start2 = -1;\r\n        let sat_end2 = -1;\r\n        if (this.state.sat_checked === true) {\r\n            if (\r\n                (\r\n                    (sat_start_time.length === 0 && sat_end_time.length === 0) || //1st\r\n                    (sat_start_time.length === 0 || sat_end_time.length === 0)\r\n                ) &&\r\n                ((sat_start_time2.length === 0 && sat_end_time2.length === 0) || //2nd\r\n                    (sat_start_time2.length === 0 || sat_end_time2.length === 0)\r\n                )\r\n            ) {\r\n                document.getElementById('msg_live').innerHTML = '* Select atleast one schedule for saturday';\r\n                return false;\r\n            }\r\n        }\r\n\r\n\r\n        if (this.state.sat_checked === true && (\r\n            (sat_start_time.length > 0 && sat_end_time.length > 0) ||\r\n            (sat_start_time2.length > 0 && sat_end_time2.length > 0))\r\n        ) {\r\n            sat_start = this.time_convert_number(sat_start_time);\r\n            if (sat_start_time === \"\") sat_start = -1;\r\n\r\n            sat_end = this.time_convert_number(sat_end_time);\r\n            if (sat_end_time === \"\") sat_end = -1;\r\n\r\n            sat_start2 = this.time_convert_number(sat_start_time2);\r\n            if (sat_start_time2 === \"\") sat_start2 = -1;\r\n\r\n            sat_end2 = this.time_convert_number(sat_end_time2);\r\n            if (sat_end_time2 === \"\") sat_end2 = -1;\r\n\r\n            if (sat_start > -1 && sat_end > -1 && sat_start2 > -1 && sat_end2 > -1) {\r\n                if ((sat_start >= sat_end)\r\n                    || (sat_start2 >= sat_end2)\r\n                    || API.inRange(sat_start2, sat_start, sat_end)\r\n                    || API.inRange(sat_end2, sat_start, sat_end)\r\n                    || API.inRange(sat_start, sat_start2, sat_end2)\r\n                    || API.inRange(sat_end, sat_start2, sat_end2)\r\n                    || (sat_start === sat_start2 && sat_end === sat_end2)\r\n                ) {\r\n                    alert(\"The time schedule for saturday is incorrect. Please check and correct\");\r\n                    return false;\r\n                }\r\n            }\r\n            else if (sat_start > -1 && sat_end > -1 && sat_start2 === -1 && sat_end2 === -1) {\r\n                if (sat_start >= sat_end\r\n                ) {\r\n                    alert(\"The time schedule for saturday is incorrect. Please check and correct\");\r\n                    return false;\r\n                }\r\n\r\n            }\r\n            else if (sat_start2 > -1 && sat_end2 > -1 && sat_start === -1 && sat_end === -1) {\r\n                if (sat_start2 >= sat_end2) {\r\n                    alert(\"The time schedule for saturday is incorrect. Please check and correct\");\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                alert(\"The time schedule for saturday is incorrect. Please check and correct\");\r\n                return false;\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n        //sun\r\n\r\n\r\n\r\n        let sun_start_time = document.getElementsByName('sun_start')[0].value;\r\n        let sun_end_time = document.getElementsByName('sun_end')[0].value;\r\n        let sun_start_time2 = document.getElementsByName('sun_start2')[0].value;\r\n        let sun_end_time2 = document.getElementsByName('sun_end2')[0].value;\r\n        let sun_start = -1;\r\n        let sun_end = -1;\r\n        let sun_start2 = -1;\r\n        let sun_end2 = -1;\r\n\r\n        if (this.state.sun_checked === true) {\r\n            if (\r\n                (\r\n                    (sun_start_time.length === 0 && sun_end_time.length === 0) || //1st\r\n                    (sun_start_time.length === 0 || sun_end_time.length === 0)\r\n                ) &&\r\n                ((sun_start_time2.length === 0 && sun_end_time2.length === 0) || //2nd\r\n                    (sun_start_time2.length === 0 || sun_end_time2.length === 0)\r\n                )\r\n            ) {\r\n                document.getElementById('msg_live').innerHTML = '* Select atleast one schedule for sunday';\r\n                return false;\r\n            }\r\n        }\r\n\r\n\r\n        if (this.state.sun_checked === true && (\r\n            (sun_start_time.length > 0 && sun_end_time.length > 0) ||\r\n            (sun_start_time2.length > 0 && sun_end_time2.length > 0))\r\n        ) {\r\n            sun_start = this.time_convert_number(sun_start_time);\r\n            if (sun_start_time === \"\") sun_start = -1;\r\n\r\n            sun_end = this.time_convert_number(sun_end_time);\r\n            if (sun_end_time === \"\") sun_end = -1;\r\n\r\n            sun_start2 = this.time_convert_number(sun_start_time2);\r\n            if (sun_start_time2 === \"\") sun_start2 = -1;\r\n\r\n            sun_end2 = this.time_convert_number(sun_end_time2);\r\n            if (sun_end_time2 === \"\") sun_end2 = -1;\r\n\r\n            if (sun_start > -1 && sun_end > -1 && sun_start2 > -1 && sun_end2 > -1) {\r\n                if ((sun_start >= sun_end)\r\n                    || (sun_start2 >= sun_end2)\r\n                    || API.inRange(sun_start2, sun_start, sun_end)\r\n                    || API.inRange(sun_end2, sun_start, sun_end)\r\n                    || API.inRange(sun_start, sun_start2, sun_end2)\r\n                    || API.inRange(sun_end, sun_start2, sun_end2)\r\n                    || (sun_start === sun_start2 && sun_end === sun_end2)\r\n                ) {\r\n                    alert(\"The time schedule for sunday is incorrect. Please check and correct\");\r\n                    return false;\r\n                }\r\n            }\r\n            else if (sun_start > -1 && sun_end > -1 && sun_start2 === -1 && sun_end2 === -1) {\r\n                if (sun_start >= sun_end\r\n                ) {\r\n                    alert(\"The time schedule for sunday is incorrect. Please check and correct\");\r\n                    return false;\r\n                }\r\n\r\n            }\r\n            else if (sun_start2 > -1 && sun_end2 > -1 && sun_start === -1 && sun_end === -1) {\r\n                if (sun_start2 >= sun_end2) {\r\n                    alert(\"The time schedule for sunday is incorrect. Please check and correct\");\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                alert(\"The time schedule for sunday is incorrect. Please check and correct\");\r\n                return false;\r\n            }\r\n\r\n\r\n\r\n        }\r\n        var price = parseInt(this.state.EM_Price)\r\n\r\n        if (isNaN(price)) price = 0;\r\n        if (price < 0) {\r\n            document.getElementById('msg_live').innerHTML = '* Enter Price';\r\n            return false;\r\n        }\r\n        if (price === 0) {\r\n           // document.getElementById('msg_live').innerHTML = '* Enter Price';\r\n           // return false;\r\n        }\r\n      \r\n        //27-aug-2021 dynamic pricing\r\n        if(this.state.allowCustomertoPay===1)\r\n        {\r\n            if( isNaN(parseInt(this.state.min_amt)) || parseInt(this.state.min_amt) < 0 )\r\n            {\r\n                document.getElementById('msg_live').style.color='red';\r\n                document.getElementById('msg_live').innerHTML='* Enter minimum amount';\r\n                return false;\r\n            }\r\n        }\r\n\r\n\r\n        var JSONData = {\r\n            JM_ID: this.state.JM_ID,\r\n            EM_Title: this.state.EM_Title,\r\n            EM_Desc: this.state.EM_Desc,\r\n            EM_Mail_Text: this.state.EM_Mail_Text,\r\n            EM_Duration: this.state.EM_Duration,\r\n            EM_Plan_Days: this.state.EM_Plan_Days,\r\n            EM_Price: this.state.EM_Price,\r\n            days: [\r\n                {\r\n                    Day_ID: this.state.mon_checked === true ? 1 : 0,\r\n                    Slot_Start: mon_start, Slot_End: mon_end,\r\n                    Slot_Start2: mon_start2, Slot_End2: mon_end2,\r\n                },\r\n                {\r\n                    Day_ID: this.state.tue_checked === true ? 2 : 0,\r\n                    Slot_Start: tue_start, Slot_End: tue_end,\r\n                    Slot_Start2: tue_start2, Slot_End2: tue_end2\r\n                },\r\n                {\r\n                    Day_ID: this.state.wed_checked === true ? 3 : 0,\r\n                    Slot_Start: wed_start, Slot_End: wed_end,\r\n                    Slot_Start2: wed_start2, Slot_End2: wed_end2\r\n                },\r\n                {\r\n                    Day_ID: this.state.thus_checked === true ? 4 : 0,\r\n                    Slot_Start: thus_start, Slot_End: thus_end,\r\n                    Slot_Start2: thus_start2, Slot_End2: thus_end2\r\n                },\r\n                {\r\n                    Day_ID: this.state.fry_checked === true ? 5 : 0,\r\n                    Slot_Start: fry_start, Slot_End: fry_end,\r\n                    Slot_Start2: fry_start2, Slot_End2: fry_end2,\r\n\r\n                },\r\n                {\r\n                    Day_ID: this.state.sat_checked === true ? 6 : 0,\r\n                    Slot_Start: sat_start, Slot_End: sat_end,\r\n                    Slot_Start2: sat_start2, Slot_End2: sat_end2,\r\n\r\n                },\r\n                {\r\n                    Day_ID: this.state.sun_checked === true ? 7 : 0,\r\n                    Slot_Start: sun_start, Slot_End: sun_end,\r\n                    Slot_Start2: sun_start2, Slot_End2: sun_end2,\r\n                }\r\n            ]\r\n\r\n        }\r\n        const formData = new FormData();\r\n        for ( var key in JSONData ) \r\n        {\r\n            if(key!=='days')\r\n                 formData.append(key, JSONData[key]);\r\n            else\r\n               formData.append(key,JSON.stringify(JSONData[key]));\r\n        }\r\n        ////console.log(JSONData);\r\n        formData.append('JM_User_Profile_Url', localStorage.getItem('JM_User_Profile_Url'));\r\n    \r\n\r\n\r\n        formData.append('DA_Allow_Cust_Pay', this.state.allowCustomertoPay)\r\n        formData.append('DA_Min_Amount', parseInt(this.state.min_amt))\r\n        formData.append('DA_Suggested_Amont', parseInt(this.state.suggested_amt))\r\n        if (this.state.coverImageorVideo !== null && this.state.cover_Image_video !== '') \r\n        {\r\n            formData.append('sampleFile', this.state.coverImageorVideo)\r\n            formData.append('DA_Type', 'image');\r\n        }\r\n    \r\n\r\n\r\n        this.setState({ btn_text: 'Processing...', btnDisabled: true })\r\n        const data = await API.createScheduleFormData(formData);\r\n        if (data.status > 0) {\r\n            this.setState({ btn_text: 'Add', btnDisabled: false })\r\n            document.getElementById(\"msg_live\").style.color = 'green';\r\n            document.getElementById(\"msg_live\").innerHTML = \"Live video session is setup successfully. Please return to Profile to enable it\";\r\n            this.setState({\r\n                EM_Title: '',\r\n                EM_Desc: '',\r\n                EM_Mail_Text: '',\r\n                EM_Duration: 15,\r\n                EM_Plan_Days: 7,\r\n                EM_Price: 0,\r\n                mon_checked: false, mon_start: '', mon_end: '',\r\n                tue_checked: false, tue_start: '', tue_end: '',\r\n                wed_checked: false, wed_start: \"\", wed_end: \"\",\r\n                thus_checked: false, thus_start: \"\", thus_end: \"\",\r\n                fry_checked: false, fry_start: \"\", fry_end: \"\",\r\n                sat_checked: false, sat_start: \"\", sat_end: \"\",\r\n                sun_checked: false, sun_start: \"\", sun_end: \"\",\r\n            })\r\n            API.clearVideoField();\r\n            window.location.href = \"me\";\r\n        }\r\n        else {\r\n            API.minusResponse(data);\r\n            this.setState({ btn_text: 'Add', btnDisabled: false })\r\n            document.getElementById(\"msg_live\").innerHTML = data.msg;\r\n        }\r\n    }\r\n    inRange = (x, min, max) => {\r\n        return ((x - min) * (x - max) <= 0);\r\n    }\r\n    time_convert = (num) => {\r\n        const hours = Math.floor(num / 60);\r\n        let minutes = \"\";\r\n        minutes = (num % 60);\r\n        //console.log(minutes.toString().length);\r\n        if (minutes.toString().length === 2)\r\n            minutes = (num % 60);\r\n        else\r\n            minutes = \"0\" + (num % 60);\r\n\r\n        return `${hours}:${minutes}`;\r\n    }\r\n    time_convert_number = (time) => {\r\n        //1 : 7\r\n        let h = moment(time, \"h:mm A\").format(\"HH\");\r\n        let m = moment(time, \"h:mm A\").format(\"mm\");\r\n        if (isNaN(h)) h = 0;\r\n        if (isNaN(m)) m = 0;\r\n        const hours = Math.floor(h * 60);   //180\r\n        const minutes = Math.floor(m); // 55 * \r\n        //console.log(minutes)\r\n        return hours + minutes;\r\n    }\r\n\r\n\r\n    onChangeDays = (e) => {\r\n        //console.log(e.target.id)  \r\n        this.setState({\r\n            [e.target.name]: e.target.checked\r\n        })\r\n\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n        let val=isNaN(parseFloat(e.target.value)) ? 0 : parseFloat(e.target.value);\r\n        if(val > 0)\r\n        {\r\n            if(e.target.name==='EM_Price')\r\n            {\r\n                let fee=val * API.razorPayTax();\r\n                let gst=fee * API.razorPayGST();         \r\n                let razorPay=(fee+gst); // 1.65 + 0.297\r\n                let TenPer=(val - razorPay) * 10/100; // 10 if val is 100                  \r\n                let charges= val - razorPay - TenPer; // 100 - 1.65- 0.297                      \r\n                let chargesInfo=\"You'll receive INR \"+ charges.toFixed(2) + \" \";                \r\n              let showIconCharges = 'block';\r\n              this.setState({ chargesInfo, showIconCharges });\r\n            }\r\n          \r\n        }\r\n        else\r\n        {\r\n            if(e.target.name==='EM_Price')\r\n            {\r\n                let chargesInfo=\"\";\r\n                let showIconCharges = 'none';\r\n                this.setState({ chargesInfo, showIconCharges });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    imageonChange = (e) => {\r\n        const file = e.target.files[0];\r\n        this.setState({ coverImageorVideo: e.target.files[0] });\r\n        this.setState({\r\n            cover_Image_video: URL.createObjectURL(file),\r\n            videoFile: null,\r\n            videoData: ''\r\n        });\r\n\r\n    }\r\n    onchangeCheck=(e)=>{\r\n\r\n        if(e.target.checked===true)\r\n        {\r\n          this.setState({\r\n            allowCustomertoPay:1,\r\n            showDiv:true,\r\n            EM_Price:0\r\n          })\r\n         // document.getElementById(\"EM_Price\").value=0;\r\n          document.getElementById(\"EM_Price\").disabled=true;\r\n          let chargesInfo=\"\";\r\n          let showIconCharges = 'none';\r\n          this.setState({ chargesInfo, showIconCharges });\r\n        }\r\n        else\r\n        {\r\n          this.setState({\r\n            allowCustomertoPay:0,\r\n            showDiv:false\r\n          })\r\n          document.getElementById(\"EM_Price\").disabled=false;\r\n      \r\n        }\r\n      }\r\n      hidePopover=()=>{\r\n        document.getElementById(\"popover-basic\").style.display='none';\r\n    }\r\n      removeCover=(e)=>{\r\n        this.setState({cover_Image_video:'',coverImageorVideo:null })\r\n        document.getElementById('prop_up').value='';\r\n      }\r\n\r\n      DirectAccess = () => {\r\n\r\n     \r\n        this.props.history.push(\"/premium-feature\");\r\n        this.props.history.push({\r\n          state: {\r\n            directAccess: this.props.location.state.directAccess           \r\n          }\r\n        })\r\n        //}\r\n    \r\n        //console.log(this.props);\r\n      }\r\n    render() {\r\n        console.log(this.time_convert(0));  \r\n        // //console.log(this.time_convert(235));  \r\n        //console.log(this.time_convert_number(\"1:07 am\")) //67\r\n        //console.log(this.time_convert_number('3:55 pm')) //235\r\n\r\n        const longText = `\r\n            Aliquam eget finibus ante, non facilisis lectus. Sed vitae dignissim est, vel aliquam tellus.\r\n            Praesent non nunc mollis, fermentum neque at, semper arcu.\r\n            Nullam eget est sed sem iaculis gravida eget vitae justo.\r\n        `;\r\n        \r\n        const useStyles = {\r\n          button: {\r\n            margin: '5px',\r\n          },\r\n          customWidth: {\r\n            maxWidth: 500,\r\n            fontSize:'25px',\r\n           \r\n          },\r\n          noMaxWidth: {\r\n            maxWidth: 'none',\r\n          },\r\n        };\r\n        //let chargesMessage=\"You receive 90% of the transaction value minus a 2% transaction fee that is collected by our payment provider.\";\r\n        let chargesMessage = API.chargesMessage();\r\n        \r\n        const HtmlTooltip = withStyles((theme) => ({\r\n          arrow: {\r\n            color: theme.palette.common.black,\r\n          },\r\n          tooltip: {\r\n            backgroundColor: '#212529',\r\n            color: 'white',\r\n            maxWidth: '50%',\r\n            fontSize: theme.typography.pxToRem(10),\r\n            // border: '1px solid #dadde9',\r\n          },\r\n        }))(Tooltip);\r\n        \r\n        const iconStyle={\r\n            display:this.state.showIconCharges,\r\n            fontSize: \"23px\",\r\n            color: \"gray\"\r\n        }\r\n        const chargesStyle={\r\n          fontFamily: \"consolas\",\r\n          fontSize: \"13px\",\r\n          textTransform: \"capitalize\",\r\n          marginTop: \"9%\",\r\n          fontWeight: \"bold\",\r\n          color: \"gray\",\r\n        }\r\n\r\n\r\n\r\n\r\n        const popover2 = (\r\n            <Popover id=\"popover-basic\" style={{zIndex:'99999',background: 'black',color:'#fff'}}  >\r\n               <button type=\"button\" className=\"pop-close\"><span aria-hidden=\"true\" onClick={this.hidePopover}>×</span>\r\n                <span className=\"sr-only\">Close</span>\r\n              </button>       \r\n              <Popover.Content style={{background: 'black',color:'#fff'}}>\r\n              {chargesMessage}\r\n                \r\n              </Popover.Content>    \r\n             \r\n            </Popover>\r\n          );\r\n\r\n        return (\r\n            <>\r\n                <ProfileHeader />\r\n                <div>\r\n                    <div className=\"direct-access\">\r\n                              \r\n                        <div className=\"container\">\r\n                            <form onSubmit={this.handleSubmit}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-8 offset-md-2\">\r\n                                        <div className=\"heading text-center\">\r\n                                            <h3>Add live video session</h3>\r\n                                            <input type=\"hidden\" id=\"hiddenText\" />\r\n                                            <button  onClick={this.DirectAccess} className=\"btnCropSave\" style={{margin:'auto',marginTop:'10px'}}>\r\n                                                <ArrowBackIcon/>\r\n                                                Back to monetization features                             \r\n                                            </button>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className=\"col-md-8 offset-md-2\">\r\n                                        <div className=\"direct-access-pop\" style={{ backgroundColor: '#fff', padding: '20px',border:'1px solid #f0f0f0' }}>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-12\">\r\n                                                    <label class=\"up-ico\" for=\"prop_up\">Upload cover photo</label>\r\n                                                    <input type=\"file\" id=\"prop_up\" accept=\"image/*\" name=\"photo\" style={{ display: 'none' }}  onChange={this.imageonChange}/>\r\n\r\n                                                </div>\r\n                                          \r\n                                                                {/* <img src={\"images/template_2.jpg\"} /> */}\r\n                                                                {\r\n                                                                 this.state.cover_Image_video!=='NA' && this.state.cover_Image_video!=='' ?    \r\n                                                                     <div className=\"col-md-12\">\r\n                                                                             <div className=\"img-grid\">  \r\n                                                                                <img className=\"img-thumbnail-custom\" width=\"200px\"  src={this.state.cover_Image_video} type=\"image/*\" >                                   \r\n                                                                                </img>\r\n                                                                                <div className=\"cls\" onClick={this.removeCover}>x</div>\r\n                                                                                </div>          \r\n                                                                         </div>\r\n                                                                        : null\r\n                                                                }\r\n                                                               \r\n                                            \r\n\r\n\r\n\r\n\r\n                                                <div className=\"col-md-6\">\r\n                                                    <label className=\"lab\">Title</label>\r\n                                                    <input type=\"text\" className=\"form-control\" name=\"EM_Title\" value={this.state.EM_Title} placeholder=\"Set Title\" onChange={this.handleChange} />\r\n                                                </div>\r\n\r\n                                                <div className=\"col-md-6\">\r\n                                                    <label className=\"lab\">Description</label>\r\n                                                    <input type=\"text\" className=\"form-control\" name=\"EM_Desc\" value={this.state.EM_Desc} placeholder=\"Write a description\" onChange={this.handleChange} />\r\n                                                </div>\r\n\r\n                                                <div className=\"col-md-12\">\r\n                                                    <label className=\"lab\">Automated Email Message</label>\r\n                                                    <textarea className=\"form-control area\" name=\"EM_Mail_Text\" value={this.state.EM_Mail_Text} placeholder=\"Write a brief message to be shown in the email confirmation.\" onChange={this.handleChange} />\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <label className=\"lab\">Time duration</label>\r\n                                                    <select className=\"form-control\" name=\"EM_Duration\" value={this.state.EM_Duration} onChange={this.handleChange}>\r\n                                                        <option value=\"15\">15 mins</option>\r\n                                                        <option value=\"30\">30 mins</option>\r\n                                                        <option value=\"45\">45 mins</option>\r\n                                                        <option value=\"60\">60 mins</option>\r\n                                                        <option value=\"90\">90 mins</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <label className=\"lab\">Date Range</label>\r\n                                                    <select className=\"form-control\" name=\"EM_Plan_Days\" value={this.state.EM_Plan_Days} onChange={this.handleChange}>\r\n                                                        <option value=\"7\">7 Days</option>\r\n                                                        <option value=\"30\">30 Days</option>\r\n                                                        <option value=\"60\">60 Days</option>\r\n                                                        <option value=\"90\">90 Days</option>\r\n                                                        <option value=\"180\">180 Days</option>\r\n                                                        <option value=\"365\">365 Days</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                                {/* <div className=\"col-md-6\">\r\n                                                    <label className=\"lab\">Select Time Zone</label>\r\n\r\n                                                    <select name=\"EM_Time_Zone\" id=\"EM_Time_Zone\" className=\"form-control\" value={this.state.EM_Time_Zone} onChange={this.handleChange}>\r\n                                                        <option value=\"-12:00\">(GMT -12:00) Eniwetok, Kwajalein</option>\r\n                                                        <option value=\"-11:00\">(GMT -11:00) Midway Island, Samoa</option>\r\n                                                        <option value=\"-10:00\">(GMT -10:00) Hawaii</option>\r\n                                                        <option value=\"-09:50\">(GMT -9:30) Taiohae</option>\r\n                                                        <option value=\"-09:00\">(GMT -9:00) Alaska</option>\r\n                                                        <option value=\"-08:00\">(GMT -8:00) Pacific Time (US &amp; Canada)</option>\r\n                                                        <option value=\"-07:00\">(GMT -7:00) Mountain Time (US &amp; Canada)</option>\r\n                                                        <option value=\"-06:00\">(GMT -6:00) Central Time (US &amp; Canada), Mexico City</option>\r\n                                                        <option value=\"-05:00\">(GMT -5:00) Eastern Time (US &amp; Canada), Bogota, Lima</option>\r\n                                                        <option value=\"-04:50\">(GMT -4:30) Caracas</option>\r\n                                                        <option value=\"-04:00\">(GMT -4:00) Atlantic Time (Canada), Caracas, La Paz</option>\r\n                                                        <option value=\"-03:50\">(GMT -3:30) Newfoundland</option>\r\n                                                        <option value=\"-03:00\">(GMT -3:00) Brazil, Buenos Aires, Georgetown</option>\r\n                                                        <option value=\"-02:00\">(GMT -2:00) Mid-Atlantic</option>\r\n                                                        <option value=\"-01:00\">(GMT -1:00) Azores, Cape Verde Islands</option>\r\n                                                        <option value=\"+00:00\">(GMT) Western Europe Time, London, Lisbon, Casablanca</option>\r\n                                                        <option value=\"+01:00\">(GMT +1:00) Brussels, Copenhagen, Madrid, Paris</option>\r\n                                                        <option value=\"+02:00\">(GMT +2:00) Kaliningrad, South Africa</option>\r\n                                                        <option value=\"+03:00\">(GMT +3:00) Baghdad, Riyadh, Moscow, St. Petersburg</option>\r\n                                                        <option value=\"+03:50\">(GMT +3:30) Tehran</option>\r\n                                                        <option value=\"+04:00\">(GMT +4:00) Abu Dhabi, Muscat, Baku, Tbilisi</option>\r\n                                                        <option value=\"+04:50\">(GMT +4:30) Kabul</option>\r\n                                                        <option value=\"+05:00\">(GMT +5:00) Ekaterinburg, Islamabad, Karachi, Tashkent</option>\r\n                                                        <option value=\"+05:50\">(GMT +5:30) Bombay, Calcutta, Madras, New Delhi</option>\r\n                                                        <option value=\"+05:75\">(GMT +5:45) Kathmandu, Pokhara</option>\r\n                                                        <option value=\"+06:00\">(GMT +6:00) Almaty, Dhaka, Colombo</option>\r\n                                                        <option value=\"+06:50\">(GMT +6:30) Yangon, Mandalay</option>\r\n                                                        <option value=\"+07:00\">(GMT +7:00) Bangkok, Hanoi, Jakarta</option>\r\n                                                        <option value=\"+08:00\">(GMT +8:00) Beijing, Perth, Singapore, Hong Kong</option>\r\n                                                        <option value=\"+08:75\">(GMT +8:45) Eucla</option>\r\n                                                        <option value=\"+09:00\">(GMT +9:00) Tokyo, Seoul, Osaka, Sapporo, Yakutsk</option>\r\n                                                        <option value=\"+09:50\">(GMT +9:30) Adelaide, Darwin</option>\r\n                                                        <option value=\"+10:00\">(GMT +10:00) Eastern Australia, Guam, Vladivostok</option>\r\n                                                        <option value=\"+10:50\">(GMT +10:30) Lord Howe Island</option>\r\n                                                        <option value=\"+11:00\">(GMT +11:00) Magadan, Solomon Islands, New Caledonia</option>\r\n                                                        <option value=\"+11:50\">(GMT +11:30) Norfolk Island</option>\r\n                                                        <option value=\"+12:00\">(GMT +12:00) Auckland, Wellington, Fiji, Kamchatka</option>\r\n                                                        <option value=\"+12:75\">(GMT +12:45) Chatham Islands</option>\r\n                                                        <option value=\"+13:00\">(GMT +13:00) Apia, Nukualofa</option>\r\n                                                        <option value=\"+14:00\">(GMT +14:00) Line Islands, Tokelau</option>\r\n                                                    </select>\r\n                                                </div> */}\r\n\r\n\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n\r\n                                                <div className=\"col-md-12\">\r\n                                                    <label className=\"lab\">Set Hours</label>\r\n                                                    <label className=\"lab\" style={{ float: 'right' }}>(Time Zone : IST)</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"row timebook\">\r\n                                                    <div className=\"col-md-2 daycheck\">\r\n                                                        <input type=\"checkbox\" id=\"mon\" name=\"mon_checked\" value=\"1\" onChange={this.onChangeDays} />\r\n                                                        <label for=\"mon\">\r\n                                                            MON\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-5\">\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-md-12\">\r\n                                                                <label className=\"lab2\">First Slot</label>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <TimePicker defaultOpenValue={moment('00:00 am', 'HH:mm a')}   minuteStep={15} format=\"h:mm a\" name=\"mon_start\" placeholder=\"Start Time\" />\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <TimePicker defaultOpenValue={moment('00:00 am', 'HH:mm a')}   minuteStep={15} format=\"h:mm a\" name=\"mon_end\" placeholder=\"End Time\" onChange={this.startTime} />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-md-5\">\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-md-12\">\r\n                                                                <label className=\"lab2\">Second Slot</label>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <TimePicker defaultOpenValue={moment('00:00 am', 'HH:mm a')}   minuteStep={15} format=\"h:mm a\" name=\"mon_start2\" placeholder=\"Start Time\" />\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <TimePicker defaultOpenValue={moment('00:00 am', 'HH:mm a')}   minuteStep={15} format=\"h:mm a\" name=\"mon_end2\" placeholder=\"End Time\" onChange={this.startTime} />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {/* tue */}\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"row timebook\">\r\n                                                    <div className=\"col-md-2 daycheck\">\r\n                                                        <input type=\"checkbox\" id=\"tue\" name=\"tue_checked\" value=\"2\" onChange={this.onChangeDays} />\r\n                                                        <label for=\"tue\">\r\n                                                            TUE\r\n                                                        </label>\r\n\r\n                                                    </div>\r\n                                                    <div className=\"col-md-5\">\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-md-12\">\r\n                                                                <label className=\"lab2\">First Slot</label>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <TimePicker defaultOpenValue={moment('00:00 am', 'HH:mm a')}   minuteStep={15} format=\"h:mm a\" name=\"tue_start\" placeholder=\"Start Time\" onChange={this.startTime} />\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <TimePicker defaultOpenValue={moment('00:00 am', 'HH:mm a')}   minuteStep={15} format=\"h:mm a\" name=\"tue_end\" placeholder=\"End Time\" onChange={this.startTime} />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-5\">\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-md-12\">\r\n                                                                <label className=\"lab2\">Second Slot</label>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <TimePicker defaultOpenValue={moment('00:00 am', 'HH:mm a')}   minuteStep={15} format=\"h:mm a\" name=\"tue_start2\" placeholder=\"Start Time\" onChange={this.startTime} />\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <TimePicker defaultOpenValue={moment('00:00 am', 'HH:mm a')}   minuteStep={15} format=\"h:mm a\" name=\"tue_end2\" placeholder=\"End Time\" onChange={this.startTime} />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* wed */}\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"row timebook\">\r\n                                                    <div className=\"col-md-2 daycheck\">\r\n\r\n                                                        <input type=\"checkbox\" id=\"wed\" name=\"wed_checked\" value={3} onChange={this.onChangeDays} />\r\n                                                        <label for=\"wed\">\r\n                                                            WED\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-5\">\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-md-12\">\r\n                                                                <label className=\"lab2\">First Slot</label>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <TimePicker defaultOpenValue={moment('00:00 am', 'HH:mm a')}   minuteStep={15} format=\"h:mm a\" name=\"wed_start\" placeholder=\"Start Time\" onChange={this.startTime} />\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <TimePicker defaultOpenValue={moment('00:00 am', 'HH:mm a')}   minuteStep={15} format=\"h:mm a\" name=\"wed_end\" placeholder=\"End Time\" onChange={this.startTime} />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-5\">\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-md-12\">\r\n                                                                <label className=\"lab2\">Second Slot</label>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <TimePicker defaultOpenValue={moment('00:00 am', 'HH:mm a')}   minuteStep={15} format=\"h:mm a\" name=\"wed_start2\" placeholder=\"Start Time\" onChange={this.startTime} />\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <TimePicker defaultOpenValue={moment('00:00 am', 'HH:mm a')}   minuteStep={15} format=\"h:mm a\" name=\"wed_end2\" placeholder=\"End Time\" onChange={this.startTime} />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* THUS */}\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"row timebook\">\r\n                                                    <div className=\"col-md-2 daycheck\">\r\n                                                        <input type=\"checkbox\" id=\"thus\" name=\"thus_checked\" value=\"4\" onChange={this.onChangeDays} />\r\n                                                        <label for=\"thus\">\r\n                                                            THURS\r\n                                                        </label>\r\n                                                    </div>\r\n\r\n\r\n\r\n                                                    <div className=\"col-md-5\">\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-md-12\">\r\n                                                                <label className=\"lab2\">First Slot</label>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <TimePicker defaultOpenValue={moment('00:00 am', 'HH:mm a')}   minuteStep={15} format=\"h:mm a\" name=\"thus_start\" placeholder=\"Start Time\" onChange={this.startTime} />\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <TimePicker defaultOpenValue={moment('00:00 am', 'HH:mm a')}   minuteStep={15} format=\"h:mm a\" name=\"thus_end\" placeholder=\"End Time\" onChange={this.startTime} />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-5\">\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-md-12\">\r\n                                                                <label className=\"lab2\">Second Slot</label>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <TimePicker defaultOpenValue={moment('00:00 am', 'HH:mm a')}   minuteStep={15} format=\"h:mm a\" name=\"thus_start2\" placeholder=\"Start Time\" onChange={this.startTime} />\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <TimePicker defaultOpenValue={moment('00:00 am', 'HH:mm a')}   minuteStep={15} format=\"h:mm a\" name=\"thus_end2\" placeholder=\"End Time\" onChange={this.startTime} />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* Fri */}\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"row timebook\">\r\n                                                    <div className=\"col-md-2 daycheck\">\r\n                                                        <input type=\"checkbox\" id=\"fry\" name=\"fry_checked\" value=\"5\" onChange={this.onChangeDays} />\r\n                                                        <label for=\"fry\">\r\n                                                            FRI\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-5\">\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-md-12\">\r\n                                                                <label className=\"lab2\">First Slot</label>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <TimePicker defaultOpenValue={moment('00:00 am', 'HH:mm a')}   minuteStep={15} format=\"h:mm a\" name=\"fry_start\" placeholder=\"Start Time\" onChange={this.startTime} />\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <TimePicker defaultOpenValue={moment('00:00 am', 'HH:mm a')}   minuteStep={15} format=\"h:mm a\" name=\"fry_end\" placeholder=\"End Time\" onChange={this.startTime} />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-5\">\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-md-12\">\r\n                                                                <label className=\"lab2\">Second Slot</label>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <TimePicker defaultOpenValue={moment('00:00 am', 'HH:mm a')}   minuteStep={15} format=\"h:mm a\" name=\"fry_start2\" placeholder=\"Start Time\" onChange={this.startTime} />\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <TimePicker defaultOpenValue={moment('00:00 am', 'HH:mm a')}   minuteStep={15} format=\"h:mm a\" name=\"fry_end2\" placeholder=\"End Time\" onChange={this.startTime} />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* sat */}\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"row timebook\">\r\n                                                    <div className=\"col-md-2 daycheck\">\r\n                                                        <input type=\"checkbox\" id=\"sat\" name=\"sat_checked\" value=\"6\" onChange={this.onChangeDays} />\r\n                                                        <label for=\"sat\">\r\n                                                            SAT\r\n                                                        </label>\r\n                                                    </div>\r\n\r\n\r\n                                                    <div className=\"col-md-5\">\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-md-12\">\r\n                                                                <label className=\"lab2\">First Slot</label>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <TimePicker defaultOpenValue={moment('00:00 am', 'HH:mm a')}   minuteStep={15} format=\"h:mm a\" name=\"sat_start\" placeholder=\"Start Time\" onChange={this.startTime} />\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <TimePicker defaultOpenValue={moment('00:00 am', 'HH:mm a')}   minuteStep={15} format=\"h:mm a\" name=\"sat_end\" placeholder=\"End Time\" onChange={this.startTime} />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-5\">\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-md-12\">\r\n                                                                <label className=\"lab2\">Second Slot</label>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <TimePicker defaultOpenValue={moment('00:00 am', 'HH:mm a')}   minuteStep={15} format=\"h:mm a\" name=\"sat_start2\" placeholder=\"Start Time\" onChange={this.startTime} />\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <TimePicker defaultOpenValue={moment('00:00 am', 'HH:mm a')}   minuteStep={15} format=\"h:mm a\" name=\"sat_end2\" placeholder=\"End Time\" onChange={this.startTime} />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* sun */}\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"row timebook\">\r\n                                                    <div className=\"col-md-2 daycheck\">\r\n                                                        <input type=\"checkbox\" id=\"sun\" name=\"sun_checked\" value=\"7\" onChange={this.onChangeDays} />\r\n                                                        <label for=\"sun\">\r\n                                                            SUN\r\n                                                        </label>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-md-5\">\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-md-12\">\r\n                                                                <label className=\"lab2\">First Slot</label>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <TimePicker defaultOpenValue={moment('00:00 am', 'HH:mm a')}   minuteStep={15} format=\"h:mm a\" name=\"sun_start\" placeholder=\"Start Time\" onChange={this.startTime} />\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <TimePicker defaultOpenValue={moment('00:00 am', 'HH:mm a')}   minuteStep={15} format=\"h:mm a\" name=\"sun_end\" placeholder=\"End Time\" onChange={this.startTime} />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-5\">\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-md-12\">\r\n                                                                <label className=\"lab2\">Second Slot</label>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <TimePicker defaultOpenValue={moment('00:00 am', 'HH:mm a')}    minuteStep={15} format=\"h:mm a\" name=\"sun_start2\" placeholder=\"Start Time\" onChange={this.startTime} />\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-6\">\r\n                                                                <TimePicker defaultOpenValue={moment('00:00 am', 'HH:mm a')}    minuteStep={15} format=\"h:mm a\" name=\"sun_end2\" placeholder=\"End Time\" onChange={this.startTime} />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-6\">\r\n                                                    <label className=\"lab\">Price</label>\r\n                                                    <input type=\"text\"  className=\"form-control\" title=\"\" id=\"EM_Price\" name=\"EM_Price\" value={this.state.EM_Price} placeholder=\"Set Price\" onChange={this.handleChange}\r\n                                                        onKeyPress={(event) => {\r\n                                                            if (!/[0-9]/.test(event.key)) {\r\n                                                                event.preventDefault();\r\n                                                            }\r\n                                                        }}\r\n                                                    />\r\n                                                </div>\r\n                                                           \r\n                                              {/* message info */}\r\n                                                            <div className=\"col-md-6 desktopCharge\">\r\n                                                                <HtmlTooltip arrow\r\n                                                                    title={\r\n                                                                        <React.Fragment>\r\n                                                                        <Typography color=\"inherit\">Transaction Info</Typography>                \r\n                                                                        <p style={{fontFamily:'monospace',fontSize:'12px'}}>{chargesMessage}</p>\r\n                                                                        </React.Fragment>\r\n                                                                    } placement=\"top-start\"\r\n                                                                    >\r\n                                                                <Button style={chargesStyle}>{this.state.chargesInfo}<i class=\"fa fa-question-circle\" aria-hidden=\"true\" \r\n                                                                style={iconStyle}></i></Button>\r\n                                                                </HtmlTooltip>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 mobileCharge\" style={{fontFamily: 'consolas', fontSize: '13px',textTransform: 'capitalize'}}>\r\n                                                                    &nbsp;{this.state.chargesInfo}\r\n                                                                    <OverlayTrigger  className=\"mobile\" style={chargesStyle} trigger=\"click\" placement=\"top\" overlay={popover2}>           \r\n                                                                        <i class=\"fa fa-question-circle\" aria-hidden=\"true\"  style={iconStyle}></i>                     \r\n                                                                    </OverlayTrigger >  \r\n                                                                </div>\r\n                                             </div>\r\n\r\n                                           \r\n\r\n\r\n                                            <div className=\"btun-box row\">\r\n                                                    <div className=\"col-md-12\">\r\n                                                <label >\r\n                                                    <strong>\r\n                                                        Settings\r\n                                                    </strong>\r\n                                                </label>\r\n                                            </div>\r\n\r\n                                                    <div className=\"col-md-8 col-9\">\r\n                                                        <label >\r\n                                                            Let your followers pay what they want\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-4 col-3\">\r\n                                                        <label className=\"switch\" for=\"allowCustomertoPay\">\r\n                                                            <input type=\"checkbox\" id=\"allowCustomertoPay\" onChange={this.onchangeCheck} />\r\n                                                            <div className=\"slider round\"></div>\r\n                                                        </label>\r\n                                                    </div>\r\n                                            {\r\n                                                this.state.showDiv === true ?\r\n                                                    <>\r\n                                                        <div className=\"col-md-6\">\r\n                                                            <label >\r\n                                                                <strong>\r\n                                                                    Minimum Amount\r\n                                                                </strong>\r\n                                                            </label>\r\n                                                            <input type=\"text\" name=\"min_amt\"\r\n                                                                value={this.state.min_amt} onChange={this.handleChange}\r\n                                                                className=\"form-control\" placeholder=\"Enter Price\"\r\n                                                                onKeyPress={(event) => {\r\n                                                                    if (!/[0-9]/.test(event.key)) {\r\n                                                                        event.preventDefault();\r\n                                                                    }\r\n                                                                }}\r\n                                                            />\r\n                                                            <p style={{ fontSize: '12px', fontWeight: '600' }}>{API.dynamicPriceMessage()}</p>\r\n                                                        </div>\r\n                                                        <div className=\"col-md-6\" style={{ display: 'none' }}>\r\n                                                            <label >\r\n                                                                <strong>\r\n                                                                    Suggested Amount\r\n                                                                </strong>\r\n                                                            </label>\r\n                                                            <input type=\"text\" name=\"suggested_amt\"\r\n                                                                value={this.state.suggested_amt} onChange={this.handleChange}\r\n                                                                className=\"form-control\" placeholder=\"Enter Price\"\r\n                                                                onKeyPress={(event) => {\r\n                                                                    if (!/[0-9]/.test(event.key)) {\r\n                                                                        event.preventDefault();\r\n                                                                    }\r\n                                                                }}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </>\r\n                                                    :\r\n                                                    null\r\n                                            }\r\n                                            </div>\r\n                                            <div className=\"btun-box\">\r\n                                                <button className=\"btun\" disabled={this.state.btnDisabled}>{this.state.btn_text}</button>\r\n                                                <a href=\"/me\" className=\"btun\" style={{ textDecoration: 'none' }}>Cancel</a>\r\n                                                <p id=\"msg_live\" style={{ color: 'red' }}></p>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <Toast className=\"m-1 alertBootstrap\" bg={'danger'} \r\n                        id=\"div_toats\" style={{display:'block'}}>\r\n                        <Toast.Header style={{justifyContent:'space-between'}}>\r\n                        <img src=\"holder.js/20x20?text=%20\" className=\"rounded me-2\" alt=\"\" onClick={(e)=>document.getElementById().style.display='none'}/>\r\n                        <div>\r\n                        <strong className=\"me-auto\">Message</strong>\r\n         \r\n                        </div>\r\n                        </Toast.Header>\r\n                        <Toast.Body className={'danger' === 'Dark' && 'text-white'}>\r\n                        <span id=\"msg_toast\"></span>\r\n                        </Toast.Body>\r\n                    </Toast> */}\r\n\r\n\r\n                {/* <ToastAlert title={this.state.title} hideToast={this.hideToast}\r\n                    msg={this.state.msg} show={this.state.showAlert}\r\n                    image={this.state.logo} showToast={this.showToast} />\r\n               */}\r\n\r\n                <FooterClass />\r\n\r\n\r\n\r\n\r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default LiveVideoSessionPage;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\Gifts.js",["2423","2424","2425","2426","2427","2428","2429","2430","2431","2432","2433","2434"],"import React, { Component } from 'react';\r\n// import {Button} from 'react-bootstrap'\r\n\r\n\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport FooterClass from '../header_footer/FooterClass';\r\nimport ProfileHeader from '../header_footer/ProfileHeader';\r\n\r\nimport * as queryString from 'query-string';\r\n\r\nimport Loader from '../pages/Loader';\r\nimport PopGift from './PopGift';\r\nimport ToastAlert from '../pages/ToastAlert';\r\nimport { faAssistiveListeningSystems } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport SupportMe from './SupportMe';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nclass Gifts extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            islogged:faAssistiveListeningSystems,\r\n            showAlert:false,\r\n            show:false,   \r\n            title:\"\",\r\n            msg:\"\",\r\n            JM_ID : parseInt(localStorage.getItem('JM_ID'))\r\n        }\r\n            //console.log(this.props.location.state)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.validateSession();\r\n        window.scrollTo(500, 0);\r\n      }\r\n      validateSession()\r\n      {\r\n      \r\n        const urlParams = queryString.parse(window.location.search);\r\n        const code=urlParams.code;\r\n        var JM_ID = parseInt(localStorage.getItem('JM_ID'));\r\n        if (isNaN(JM_ID) || JM_ID === 0 || JM_ID===null)  \r\n        {\r\n            localStorage.setItem('JM_Email', \"\");\r\n            localStorage.setItem('JM_ID', 0);\r\n            window.location.href = '/';\r\n        }\r\n        else{\r\n            this.setState({islogged:true});\r\n        }\r\n      }\r\n      showToast =(title,msg) =>{\r\n        this.setState({showAlert:true})\r\n        this.setState({      \r\n          show:true,   \r\n          title:title,\r\n          msg:msg,\r\n        // isLoading:true   \r\n        });  \r\n      }\r\n      hideToast = (e) => {\r\n        this.setState({ showAlert: false })\r\n      }\r\n      DirectAccess = () => {\r\n\r\n     \r\n        this.props.history.push(\"/premium-feature\");\r\n        this.props.history.push({\r\n          state: {\r\n            directAccess: this.props.location.state.state.directAccess,\r\n            JM_ID: this.props.JM_ID,\r\n            JM_User_Profile_Url: this.props.JM_User_Profile_Url,\r\n          }\r\n        })\r\n        //}\r\n    \r\n        //console.log(this.props);\r\n      }\r\n    render() {\r\n\r\n        const {uploadPercentage} = this.state;\r\n        const longText = `\r\n        Aliquam eget finibus ante, non facilisis lectus. Sed vitae dignissim est, vel aliquam tellus.\r\n        Praesent non nunc mollis, fermentum neque at, semper arcu.\r\n        Nullam eget est sed sem iaculis gravida eget vitae justo.\r\n        `;\r\n        \r\n        const useStyles = {\r\n          button: {\r\n            margin: '5px',\r\n          },\r\n          customWidth: {\r\n            maxWidth: 500,\r\n            fontSize:'25px',\r\n           \r\n          },\r\n          noMaxWidth: {\r\n            maxWidth: 'none',\r\n          },\r\n        };\r\n        //let chargesMessage=\"You receive a 90% share of the transaction value minus 10% transaction fee which is collected by our payment provider.\";\r\n        let chargesMessage=\"You receive 90% of the transaction value. We take care of the rest.\";\r\n      \r\n        const HtmlTooltip = withStyles((theme) => ({\r\n          arrow: {\r\n            color: theme.palette.common.black,\r\n          },\r\n          tooltip: {\r\n            backgroundColor: '#212529',\r\n            color: 'white',\r\n            maxWidth: '50%',\r\n            fontSize: theme.typography.pxToRem(10),\r\n            // border: '1px solid #dadde9',\r\n          },\r\n        }))(Tooltip);\r\n        \r\n        const iconStyle={\r\n            display:this.state.showIconCharges,\r\n            fontSize: \"23px\",\r\n            color: \"gray\"\r\n        }\r\n        const chargesStyle={\r\n          fontFamily: \"consolas\",\r\n          fontSize: \"13px\",\r\n          textTransform: \"capitalize\",\r\n          marginTop: \"-6%\",\r\n          fontWeight: \"bold\",\r\n          color: \"gray\",\r\n        }\r\n        \r\n        return (\r\n            <>\r\n                {\r\n                  this.state.islogged ?   \r\n                  <>               \r\n                    <ProfileHeader/>\r\n                  \r\n                    <div className=\"virtual-gift\">\r\n                        <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                            <div className=\"heading\">\r\n                                <h3>Let your fans send you virtual gifts</h3>\r\n                                <p>Pick which gifts (and prices) your fans could send you!.</p>\r\n                                <button  onClick={this.DirectAccess} className=\"btnCropSave\" style={{marginTop:'10px'}}>\r\n                                  <ArrowBackIcon/>\r\n                                  Back to monetization features                             \r\n                               </button>\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"col-md-3\">\r\n                                    <div className=\"item\">\r\n                                        <h3>Kulhad Chai</h3>\r\n                                        <div className=\"image\">\r\n                                            <img src={\"images/gifts/kulhad_chai.gif\"} />\r\n                                        </div>\r\n                                        <PopGift src={\"images/gifts/kulhad_chai.gif\"} state={this.props.location.state} showToast={this.showToast}/>\r\n                                    </div>\r\n                            </div>\r\n                            <div className=\"col-md-3\">\r\n                                 <div className=\"item\">\r\n                                      <h3> Masala Chai</h3>\r\n                                    <div className=\"image\">\r\n                                            <img src={\"images/gifts/masala_chai.gif\"} />\r\n                                    </div>\r\n\r\n                                         <PopGift src={\"images/gifts/masala_chai.gif\"} state={this.props.location.state} showToast={this.showToast}/>\r\n                                  </div>\r\n                            </div>\r\n                            <div className=\"col-md-3\">\r\n                                  <div className=\"item\">\r\n                                      <h3> Special  Chai</h3>\r\n                                      <div className=\"image\">\r\n                                          <img src={\"images/gifts/special_chai.gif\"} />\r\n                                      </div>\r\n                                  \r\n                                      <PopGift src={\"images/gifts/special_chai.gif\"} state={this.props.location.state} showToast={this.showToast}/>\r\n                                </div>\r\n                            </div>\r\n              \r\n                            <div className=\"col-md-3\">\r\n                                  <div className=\"item\">\r\n                                      <h3> Support Me</h3>\r\n                                      <div className=\"image\">\r\n                                      <img src={\"images/gifts/support.gif\"} />\r\n                                      </div>\r\n                                  \r\n                                      <SupportMe src={\"images/gifts/support.gif\"} state={this.props.location.state} showToast={this.showToast}/>\r\n                                </div>\r\n                            </div>\r\n                        \r\n                        </div>\r\n                        </div>\r\n                \r\n                    </div>\r\n                    <ToastAlert title={this.state.title} hideToast={this.hideToast} \r\n                        msg={this.state.msg} show={this.state.showAlert} \r\n                        image={this.state.logo} showToast={this.showToast}/>\r\n                        \r\n                     <FooterClass/>\r\n                     </>\r\n                :\r\n                    <Loader/>\r\n                }\r\n            </>\r\n          );\r\n    }\r\n}\r\n\r\nGifts.propTypes = {\r\n\r\n};\r\n\r\nexport default Gifts;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\EditLiveVideoSessionPage.js",[],"E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\RND\\pexel.js",["2435"],"import React from 'react';\r\n\r\nexport default function Pexel() {\r\n  return (\r\n    <>\r\n    \r\n    This <a href=\"https://www.pexels.com/photo/food-dinner-lunch-meal-4147875\">Photo</a> was taken by <a href=\"https://www.pexels.com/@daria\">Daria</a> on Pexels.\r\n             <a href=\"https://www.pexels.com\">\r\n                  <img src=\"https://images.pexels.com/lib/api/pexels-white.png\" />\r\n        </a>\r\n\r\n    </>\r\n  );\r\n}\r\n","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\Loader.js",[],"E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\ProfileNav.js",["2436","2437"],"import React, { Component } from 'react';\r\nimport { NavLink} from 'react-router-dom';\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\r\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\r\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\r\nimport API from '../services/API';\r\nclass ProfileNav extends Component \r\n{\r\n    constructor(props) {\r\n        super(props);       \r\n    }\r\n    updateSteps=id=>e=>{\r\n\r\n    }\r\n    updateStepsClose=id=>e=>{\r\n     \r\n      var JSONdata={\r\n        JM_ID:this.state.JM_ID\r\n      }\r\n      //let data=API.updateStepStatus(JSONdata);\r\n     // e.target.css(\"display\", \"none\");\r\n      document.getElementById(id).style.display = 'none';\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                    <NavLink to=\"/me\" className=\"btun\"><PersonOutlineIcon/>Profile</NavLink>\r\n\r\n                    \r\n                         <div className=\"tooltips\" style={{display:'inline'}}>                                          \r\n                                 <NavLink to={{pathname:\"/appear\",userDetails:this.props.userDetails}} className=\"btun\"><ColorLensIcon/>Design</NavLink>\r\n\r\n                \r\n                                          <div className=\"tooltip-bottom\" id=\"tool_design\" style={{display: 'none'}}>\r\n                                            <h6>Page design</h6>\r\n                                            <p> Change how your page looks here.</p>\r\n                                            <i></i>\r\n                                            <span className=\"cls\" onClick={()=> API.updateStepsClose('tool_design')}>x</span>\r\n                                            <span className=\"step\">Step 5 out of 9</span>\r\n                                            <button className=\"nxtbtun\" onClick={()=> API.updateToolStep(6)}>Next</button>\r\n                                        </div>\r\n                              </div>   \r\n                              \r\n\r\n                              <div className=\"tooltips\" style={{display:'inline'}}>                                          \r\n                                        <NavLink to=\"/statis\" className=\"btun\"><TrendingUpIcon/>Stats</NavLink>\r\n                                          <div className=\"tooltip-bottom\" id=\"tool_stat\" style={{display:'none'}}>\r\n                                            <h6>Page stats</h6>\r\n                                            <p> View rich statistics of your page from page views, visitors, to click-through-rate on links</p>\r\n                                            <i></i>\r\n                                            <span className=\"cls\" onClick={()=>API.updateStepsClose('tool_stat')}>x</span>\r\n                                            <span className=\"step\">Step 6 out of 9</span>\r\n                                            <button className=\"nxtbtun\"  onClick={()=>API.updateToolStep(7)}>Next</button>\r\n                                        </div>\r\n                              </div>\r\n                 \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ProfileNav;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\HomeExplore.js",["2438","2439"],"import React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Loader from './Loader';\r\nimport API  from '../services/API';\r\nimport OwlCarousel from 'react-owl-carousel2';\r\n class HomeExplore extends Component {\r\n     constructor(props) {\r\n       super(props)\r\n     \r\n       this.state = {\r\n          tab:0,\r\n          tab_item:false,\r\n          tab_people:true,\r\n          exploreData:[],\r\n          JM_ID:parseInt(localStorage.getItem('JM_ID')),\r\n          JM_Name: '',\r\n          JM_Email: '',\r\n          JM_Url: '',\r\n          JM_Profile_Pic: '',\r\n          JM_User_Profile_Url: '',\r\n          base_url: process.env.REACT_APP_API_URL,\r\n          root_url: process.env.REACT_APP_ROOT_URL,\r\n          ProfilePath: 'Profile/',\r\n          linkPath: '',\r\n          ProfileimagePath: '',\r\n          limitData:4,\r\n          isLoading:false\r\n       }\r\n     }\r\n     handleChange =tab=>e=> {\r\n      this.setState({tab});\r\n        if(tab===0)\r\n        {\r\n          this.setState({tab_people:true,tab_item:false});\r\n           // alert(1);           \r\n        }\r\n        if(tab===1)\r\n        {\r\n          this.setState({tab_people:false,tab_item:true});\r\n            //alert(2);\r\n        }\r\n      };\r\n      componentDidMount() {\r\n        this.validateSession();     \r\n           \r\n      }\r\n      validateSession()\r\n      {\r\n        var JM_ID =this.state.JM_ID;\r\n        if (isNaN(JM_ID) || JM_ID === 0 || JM_ID===null)  \r\n        {\r\n          localStorage.setItem('JM_Email', \"\");\r\n          localStorage.setItem('JM_ID', 0);\r\n          //window.location.href = '/';\r\n          this.Get_All_Users();  \r\n          return false;\r\n        }\r\n        else\r\n        {\r\n          this.Get_All_Users();  \r\n        }\r\n      \r\n      }\r\n      Get_All_Users=()=>{\r\n        this.setState({isLoading: true})  \r\n        const API_url = process.env.REACT_APP_API_URL+ \"admin/Get_Four_Users\";\r\n        let flagData = {\r\n            JM_ID: this.state.JM_ID,\r\n            limit:this.state.limitData        \r\n          };\r\n\r\n               \r\n            const flag=API.encryptData(flagData);\r\n            var JSONdata = {\r\n            flag: flag\r\n          };\r\n\r\n\r\n        fetch(API_url,\r\n            {\r\n                method: 'post',\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(JSONdata)\r\n            })\r\n        .then((response) => response.json())\r\n        .then(async data1 => {\r\n            if(data1.status===1)\r\n            {\r\n              const data=await API.decryptJson(data1.flag);\r\n              ////console.log(data.exploreData)\r\n              this.setState({exploreData:data.exploreData})\r\n              this.setState({isLoading: false})  \r\n            }           \r\n        });\r\n\r\n      }\r\n      seeMore=(prevState)=>{\r\n          let limitData=this.state.limitData;\r\n          limitData=limitData+2;\r\n          //this.Get_All_Users();         \r\n          this.setState({\r\n            limitData:limitData\r\n            },() => {\r\n                ////console.log(this.state.limitData);\r\n               this.Get_All_Users();\r\n            });\r\n         \r\n      }\r\n      gotoProfile=()=>{\r\n        this.props.history.push(\"/direct-access\");\r\n      }\r\n  render() {\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          flexGrow: 1,\r\n          maxWidth: 500,\r\n        },\r\n      });\r\n\r\n      let tabView=(\r\n        <Paper square className={useStyles.root}>\r\n        <Tabs\r\n            value={this.state.tab}       \r\n            variant=\"fullWidth\"\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            aria-label=\"icon label tabs example\"\r\n            centered\r\n        >\r\n           <Tab  aria-label=\"phone\" label=\"People\" onClick={this.handleChange(0)}/>\r\n            <Tab  aria-label=\"favorite\" label=\"Items\" onClick={this.handleChange(1)}/>\r\n           \r\n        </Tabs>\r\n        </Paper>\r\n      );\r\n\r\n        let root_url=process.env.REACT_APP_ROOT_URL;\r\n     let profileCard;\r\n     profileCard=this.state.exploreData.map((user,i) =>{\r\n          return (\r\n                  user.isForLandingPage===1 ?                    \r\n                          <div className=\"item\">\r\n                               <a href={root_url+user.JM_User_Profile_Url} target=\"_blank\" rel=\"noreferrer\">    \r\n                                <div className=\"abtar\">\r\n                                  <div className={\r\n                                        i===0 ? \"circle\" \r\n                                      : i===1 ? \"circle yellow\"\r\n                                      : i===2 ? \"circle pink\" \r\n                                      : i===3 ? \"circle skyblue\" \r\n                                      : i===4 ? \"circle purple\" \r\n                                      :  \"circle\"\r\n                                     } ></div>\r\n                                    {\r\n                                        \r\n                                        user.Landing_Image!==null && user.Landing_Image!==''?\r\n                                        <img src={process.env.REACT_APP_UPLOAD_URL+user.Landing_Image} alt=\"\"/>\r\n                                        :\r\n                                        <img src={\"images/abtar.png\"} alt=\"\"/>\r\n                                      }    \r\n                                </div>\r\n                                <div className=\"text\">\r\n                                  <h3>{user.JM_Name}</h3>\r\n                                  <p>{user.JM_Description}</p>\r\n                                </div>\r\n                              </a>\r\n\r\n                           \r\n                          </div>   \r\n\r\n\r\n                    :\r\n                  null\r\n              ) \r\n        })\r\n      let exploreContent=(\r\n        <div className=\"profile-sec dash\">                \r\n\r\n                <div className=\"container\"> \r\n                     <div className=\"row\">\r\n          \t\t\t    <div className=\"col-md-8 offset-md-2\">\r\n                    <div className=\"title\">\r\n                        <h3>Connect with your Favorite Creators</h3>\r\n                      </div>\r\n                      <div className=\"sub-title\">\r\n                        <p>Find and engage with your favorite people who are already using Expy.</p>\r\n                      </div>\r\n          \t\t\t</div>\r\n          \t        </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"profile-box\">                 \r\n                            {profileCard}                 \r\n                        </div>\r\n                    </div>                   \r\n                    </div>\r\n        </div>\r\n        )\r\n\r\n        const expertoptions = {\r\n          items: 5,\r\n          nav: false,\r\n          margin: 20,\r\n          navText : [\"<i class='fa fa-angle-left'></i>\",\"<i class='fa fa-angle-right'></i>\"],\r\n          rewind: true,\r\n          dots: false,\r\n          autoplay: false,\r\n          responsive: {\r\n              0: {\r\n                  items: 1,\r\n                  margin: 0,\r\n                  nav: true,\r\n                  dots: true,\r\n                  autoplay: true,\r\n              },\r\n              460: {\r\n                  items: 1,\r\n                  margin: 0,\r\n                  nav: true,\r\n                  dots: true,\r\n                  autoplay: true,\r\n              },\r\n              576: {\r\n                  items: 2,\r\n                  margin: 15,\r\n                  nav: true,\r\n                  dots: true,\r\n                  autoplay: true,\r\n              },\r\n              992: {\r\n                  items: 5,\r\n                  \r\n                  \r\n              }\r\n          }\r\n      };\r\n\r\n\r\n    return (\r\n      <>     \r\n        {\r\n            this.state.isLoading ?           \r\n            <Loader/>\r\n            : \r\n            <>\r\n               \r\n                {\r\n                 this.state.tab_people ? \r\n                  \r\n                 <div className=\"profile-sec\">\r\n                 <div className=\"container\">\r\n                   <div className=\"row\">\r\n                     <div className=\"col-md-8 offset-md-2\">\r\n                         <div className=\"title\">\r\n                           <h2>Who is using Expy?</h2>\r\n                           <h6>Anyone who creates and earns on the Internet. Expy is your digital identity. From creators to educators, entrepreneurs, freelancers to communities.</h6>\r\n                         </div>\r\n                       </div>\r\n                   </div>\r\n                   <div className=\"row\">\r\n                   <div className=\"col-md-12\">\r\n                         <div className=\"slider\">\r\n                             <OwlCarousel options={expertoptions}>\r\n                                   {profileCard}\r\n                             </OwlCarousel>\r\n                         </div>\r\n                       </div>\r\n                   </div>\r\n                 </div>\r\n               </div>\r\n\r\n\r\n\r\n\r\n                 :                  \r\n                    null  \r\n                }\r\n                \r\n         \r\n            </>  \r\n             \r\n        }        \r\n     \r\n    \r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default HomeExplore;\r\n","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\ContactUs.js",["2440"],"import React, { Component } from 'react';\r\n// import {Button} from 'react-bootstrap'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\n\r\nclass ContactUs extends Component\r\n{\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       openModel:false,\r\n       show:false,\r\n       open:false,\r\n       Email:'',\r\n       Name:'',\r\n       Message:'',\r\n       errorMessage:'',\r\n    }\r\n  }\r\n  ModalClose=()=>{\r\n    this.setState({openModel:false,show:false});\r\n  }\r\n  ModalOpen=()=>{\r\n    this.setState({\r\n      openModel:true,show:true,\r\n      errorMessage:'',\r\n      Email:'',\r\n      Name:'',\r\n      Message:''\r\n    });\r\n  }\r\n  openCollapse = () => {\r\n    !this.state.open ?\r\n      this.setState({ open: true })\r\n      :\r\n      this.setState({ open: false })\r\n      \r\n  }\r\n  onChangeHandle=(e)=>{\r\n    this.setState({\r\n        [e.target.name]:e.target.value\r\n    })\r\n  }\r\n  ContactUs=(e)=>{\r\n             this.setState({errorMessage:''});\r\n           if(this.state.Name.length===0)\r\n            {\r\n                this.setState({errorMessage:'Name is Empty'});\r\n                return false;\r\n            }\r\n            if(this.state.Email.length===0)\r\n            {\r\n                this.setState({errorMessage:'Name is Empty'});\r\n                return false;\r\n            }\r\n            if(this.state.Email.includes(\".\")===false && this.state.Email.includes(\"@\")===false )\r\n            {\r\n                this.setState({errorMessage:'Not a valid Email ID'});\r\n                return false;\r\n            }\r\n            if(this.state.Message.length===0)\r\n            {\r\n                this.setState({errorMessage:'Message is Empty'});\r\n                return false;\r\n            }\r\n                var JSONdata = {};            \r\n                 JSONdata = {                 \r\n                    Email:this.state.Email,\r\n                    Name:this.state.Name,\r\n                    Message:this.state.Message,\r\n                };\r\n                const API_url = process.env.REACT_APP_API_URL + \"admin/contactUsMail\";       \r\n                fetch(API_url,\r\n                {\r\n                    method: 'post',\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify(JSONdata)\r\n                })\r\n                .then((response) => response.json())\r\n                .then(data => {                    \r\n                        this.setState({\r\n                            errorMessage:data.msg,                          \r\n                            Email:'',\r\n                            Name:'',\r\n                            Message:''\r\n                        });\r\n                        \r\n                });\r\n            \r\n\r\n  }\r\n  render(){\r\n  return (\r\n    <>\r\n      {\r\n        this.props.for==='Home'?\r\n        <div className=\"chatbot\" onClick={this.ModalOpen}>\r\n         <span>Contact Us</span>\r\n       </div>\r\n      :\r\n         <a href=\"#\"  onClick={this.ModalOpen}>Contact Us</a>\r\n      }\r\n      \r\n\r\n\r\n      <Modal\r\n        show={this.state.show}\r\n        onHide={this.ModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <p className=\"addnew-title\">Contact Us</p>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"direct-access-pop\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Name\" name=\"Name\" value={this.state.Name} onChange={this.onChangeHandle}/>\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Email\" name=\"Email\" value={this.state.Email} onChange={this.onChangeHandle}/>\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <textarea className=\"form-control area\" placeholder=\"Message\" name=\"Message\" value={this.state.Message} onChange={this.onChangeHandle}/>\r\n              </div>\r\n            </div>\r\n            <div className=\"btun-box\">\r\n              <button className=\"btun pull-right\" onClick={this.ContactUs}>Send</button>\r\n              <p id=\"msg\">{this.state.errorMessage}</p>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n}\r\n\r\nexport default ContactUs;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\SearchItemNextPrev.js",["2441","2442","2443","2444","2445","2446","2447","2448","2449","2450","2451","2452","2453","2454","2455","2456","2457","2458","2459","2460","2461","2462","2463","2464","2465","2466","2467"],"import React, { Component } from 'react';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nclass SearchItemNextPrev extends Component\r\n{\r\n\r\n  componentDidMount() \r\n  {\r\n        const navScroller = function ({\r\n                  wrapperSelector: wrapperSelector = \".nav-scroller-wrapper\",\r\n                  selector: selector = \".nav-scroller\",\r\n                  contentSelector: contentSelector = \".nav-scroller-content\",\r\n                  buttonLeftSelector: buttonLeftSelector = \".nav-scroller-btn--left\",\r\n                  buttonRightSelector: buttonRightSelector = \".nav-scroller-btn--right\",\r\n                  scrollStep: scrollStep = 75\r\n    } = {}) {\r\n  let scrolling = false;\r\n  let scrollingDirection = \"\";\r\n  let scrollOverflow = \"\";\r\n  let timeout;\r\n\r\n  let navScrollerWrapper;\r\n\r\n  if (wrapperSelector.nodeType === 1) {\r\n    navScrollerWrapper = wrapperSelector;\r\n  } else {\r\n    navScrollerWrapper = document.querySelector(wrapperSelector);\r\n  }\r\n  if (navScrollerWrapper === undefined || navScrollerWrapper === null) return;\r\n\r\n  let navScroller = navScrollerWrapper.querySelector(selector);\r\n  let navScrollerContent = navScrollerWrapper.querySelector(contentSelector);\r\n  let navScrollerLeft = navScrollerWrapper.querySelector(buttonLeftSelector);\r\n  let navScrollerRight = navScrollerWrapper.querySelector(buttonRightSelector);\r\n\r\n  // Sets overflow\r\n  const setOverflow = function () {\r\n    scrollOverflow = getOverflow(navScrollerContent, navScroller);\r\n    toggleButtons(scrollOverflow);\r\n  };\r\n\r\n  // Debounce setting the overflow with requestAnimationFrame\r\n  const requestSetOverflow = function () {\r\n    if (timeout) {\r\n      window.cancelAnimationFrame(timeout);\r\n    }\r\n\r\n    timeout = window.requestAnimationFrame(() => {\r\n      setOverflow();\r\n    });\r\n  };\r\n\r\n  // Get overflow value on scroller\r\n  const getOverflow = function (content, container) {\r\n    let containerMetrics = container.getBoundingClientRect();\r\n    let containerWidth = containerMetrics.width;\r\n    let containerMetricsLeft = Math.floor(containerMetrics.left);\r\n\r\n    let contentMetrics = content.getBoundingClientRect();\r\n    let contentMetricsRight = Math.floor(contentMetrics.right);\r\n    let contentMetricsLeft = Math.floor(contentMetrics.left);\r\n\r\n    // Offset the values by the left value of the container\r\n    let offset = containerMetricsLeft;\r\n    containerMetricsLeft -= offset;\r\n    contentMetricsRight -= offset + 1; // Due to an off by one bug in iOS\r\n    contentMetricsLeft -= offset;\r\n\r\n    // console.log (containerMetricsLeft, contentMetricsLeft, containerWidth, contentMetricsRight);\r\n\r\n    if (\r\n      containerMetricsLeft > contentMetricsLeft &&\r\n      containerWidth < contentMetricsRight\r\n    ) {\r\n      return \"both\";\r\n    } else if (contentMetricsLeft < containerMetricsLeft) {\r\n      return \"left\";\r\n    } else if (contentMetricsRight > containerWidth) {\r\n      return \"right\";\r\n    } else {\r\n      return \"none\";\r\n    }\r\n  };\r\n\r\n  // Move the scroller with a transform\r\n  const moveScroller = function (direction) {\r\n    if (scrolling === true) return;\r\n\r\n    setOverflow();\r\n\r\n    let scrollDistance = scrollStep;\r\n    let scrollAvailable;\r\n\r\n    if (scrollOverflow === direction || scrollOverflow === \"both\") {\r\n      if (direction === \"left\") {\r\n        scrollAvailable = navScroller.scrollLeft;\r\n      }\r\n\r\n      if (direction === \"right\") {\r\n        let navScrollerRightEdge = navScroller.getBoundingClientRect().right;\r\n        let navScrollerContentRightEdge = navScrollerContent.getBoundingClientRect()\r\n          .right;\r\n\r\n        scrollAvailable = Math.floor(\r\n          navScrollerContentRightEdge - navScrollerRightEdge\r\n        );\r\n      }\r\n\r\n      // If there is less that 1.5 steps available then scroll the full way\r\n      if (scrollAvailable < scrollStep * 1.5) {\r\n        scrollDistance = scrollAvailable;\r\n      }\r\n\r\n      if (direction === \"right\") {\r\n        scrollDistance *= -1;\r\n      }\r\n\r\n      navScrollerContent.classList.remove(\"no-transition\");\r\n      navScrollerContent.style.transform =\r\n        \"translateX(\" + scrollDistance + \"px)\";\r\n\r\n      scrollingDirection = direction;\r\n      scrolling = true;\r\n    }\r\n  };\r\n\r\n  // Set the scroller position and removes transform, called after moveScroller()\r\n  const setScrollerPosition = function () {\r\n    var style = window.getComputedStyle(navScrollerContent, null);\r\n    var transform = style.getPropertyValue(\"transform\");\r\n    var transformValue = Math.abs(parseInt(transform.split(\",\")[4]) || 0);\r\n\r\n    if (scrollingDirection === \"left\") {\r\n      transformValue *= -1;\r\n    }\r\n\r\n    navScrollerContent.classList.add(\"no-transition\");\r\n    navScrollerContent.style.transform = \"\";\r\n    navScroller.scrollLeft = navScroller.scrollLeft + transformValue;\r\n    navScrollerContent.classList.remove(\"no-transition\");\r\n\r\n    scrolling = false;\r\n  };\r\n\r\n  // Toggle buttons depending on overflow\r\n  const toggleButtons = function (overflow) {\r\n    navScrollerLeft.classList.remove(\"active\");\r\n    navScrollerRight.classList.remove(\"active\");\r\n\r\n    if (overflow === \"both\" || overflow === \"left\") {\r\n      navScrollerLeft.classList.add(\"active\");\r\n    }\r\n\r\n    if (overflow === \"both\" || overflow === \"right\") {\r\n      navScrollerRight.classList.add(\"active\");\r\n    }\r\n  };\r\n\r\n  const init = function () {\r\n    // Determine scroll overflow\r\n    setOverflow();\r\n\r\n    // Scroll listener\r\n    navScroller.addEventListener(\"scroll\", () => {\r\n      requestSetOverflow();\r\n    });\r\n\r\n    // Resize listener\r\n    window.addEventListener(\"resize\", () => {\r\n      requestSetOverflow();\r\n    });\r\n\r\n    // Button listeners\r\n    navScrollerLeft.addEventListener(\"click\", () => {\r\n      moveScroller(\"left\");\r\n    });\r\n\r\n    navScrollerRight.addEventListener(\"click\", () => {\r\n      moveScroller(\"right\");\r\n    });\r\n\r\n    // Set scroller position\r\n    navScrollerContent.addEventListener(\"transitionend\", () => {\r\n      setScrollerPosition();\r\n    });\r\n  };\r\n\r\n  // Init is called by default\r\n  init();\r\n\r\n  // Reveal API\r\n  return {\r\n    init\r\n  };\r\n};\r\n\r\nconst navScrollerTest = navScroller();\r\n\r\n  }\r\n  render(){\r\n  return (\r\n    <>\r\n      \r\n   \r\n\r\n      <div className=\"nav-scroller-wrapper nav-box\">\r\n        <nav className=\"nav-scroller\">\r\n\r\n            <div className=\"nav-scroller-content\">\r\n              <a href=\"#\" className=\"nav-scroller-item butn\">Chairs</a>\r\n              <a href=\"#\" className=\"nav-scroller-item butn\">Tables</a>\r\n              <a href=\"#\" className=\"nav-scroller-item butn\">Cookware</a>\r\n              <a href=\"#\" className=\"nav-scroller-item butn\">Beds</a>\r\n              <a href=\"#\" className=\"nav-scroller-item butn\">Desks</a>\r\n              <a href=\"#\" className=\"nav-scroller-item butn\">Flooring</a>\r\n              <a href=\"#\" className=\"nav-scroller-item butn\">Lighting</a>\r\n              <a href=\"#\" className=\"nav-scroller-item butn\">Mattresses</a>\r\n              <a href=\"#\" className=\"nav-scroller-item butn\">Solar Panels</a>\r\n              <a href=\"#\" className=\"nav-scroller-item butn\">Bookcases</a>\r\n              <a href=\"#\" className=\"nav-scroller-item butn\">Mirrors</a>\r\n              <a href=\"#\" className=\"nav-scroller-item butn\">Rugs</a>\r\n              <a href=\"#\" className=\"nav-scroller-item butn\">Curtains &amp; Blinds</a>\r\n              <a href=\"#\" className=\"nav-scroller-item butn\">Frames &amp; Pictures</a>\r\n              <a href=\"#\" className=\"nav-scroller-item butn\">Wardrobes</a>\r\n              <a href=\"#\" className=\"nav-scroller-item butn\">Storage</a>\r\n              <a href=\"#\" className=\"nav-scroller-item butn\">Decoration</a>\r\n              <a href=\"#\" className=\"nav-scroller-item butn\">Appliances</a>\r\n              <a href=\"#\" className=\"nav-scroller-item butn\">Racks</a>\r\n              <a href=\"#\" className=\"nav-scroller-item butn\">Worktops</a>\r\n            </div>\r\n\r\n        </nav>\r\n\r\n\r\n          <button className=\"previous nav-scroller-btn nav-scroller-btn--left\"><NavigateBeforeIcon style={{fontSize: '50px'}}/></button>\r\n        \r\n          <button className=\"next nav-scroller-btn nav-scroller-btn--right\"><NavigateNextIcon style={{fontSize: '50px'}}/></button>\r\n\r\n</div>\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n\r\n}\r\n\r\nexport default  SearchItemNextPrev ","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\Items.js",["2468","2469","2470","2471","2472","2473","2474"],"import React, { Component } from 'react';\r\n\r\nimport ChatOutlinedIcon from '@material-ui/icons/ChatOutlined';\r\n\r\n\r\nclass Items extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n               \r\n              <div className=\"row\">\r\n                <div className=\"profile-box\">\r\n                  <div className=\"browseitem\">\r\n                    <div className=\"cards\">\r\n                      <img src={\"images/prop.png\"} />\r\n                      <div className=\"top-part\">\r\n                        <div className=\"icon\">\r\n                          <img src={\"images/prop.png\"} />\r\n                        </div>\r\n                        <div className=\"name\">\r\n                          <h4>Prosant Banu</h4>\r\n                          <p>Senior Developer</p>\r\n                        </div>  \r\n                      </div>\r\n                      <div className=\"bottom-part\">\r\n                        <div className=\"left\">\r\n                          <button><ChatOutlinedIcon/></button>\r\n                        </div>\r\n                        <div className=\"middle\">\r\n                          <h4>Get a video message from me</h4>\r\n                        </div>\r\n                        <div className=\"right\">\r\n                          <button>Buy</button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"browseitem\">\r\n                    <div className=\"cards\">\r\n                      <img src={\"images/prop_2.png\"} />\r\n                      <div className=\"top-part\">\r\n                        <div className=\"icon\">\r\n                          <img src={\"images/prop_2.png\"} />\r\n                        </div>\r\n                        <div className=\"name\">\r\n                          <h4>Prosant Banu</h4>\r\n                          <p>Senior Developer</p>\r\n                        </div>  \r\n                      </div>\r\n                      <div className=\"bottom-part\">\r\n                        <div className=\"left\">\r\n                          <button><ChatOutlinedIcon/></button>\r\n                        </div>\r\n                        <div className=\"middle\">\r\n                          <h4>Get a video message from me</h4>\r\n                        </div>\r\n                        <div className=\"right\">\r\n                          <button>Buy</button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"browseitem\">\r\n                    <div className=\"cards\">\r\n                      <img src={\"images/prop.png\"} />\r\n                      <div className=\"top-part\">\r\n                        <div className=\"icon\">\r\n                          <img src={\"images/prop.png\"} />\r\n                        </div>\r\n                        <div className=\"name\">\r\n                          <h4>Prosant Banu</h4>\r\n                          <p>Senior Developer</p>\r\n                        </div>  \r\n                      </div>\r\n                      <div className=\"bottom-part\">\r\n                        <div className=\"left\">\r\n                          <button><ChatOutlinedIcon/></button>\r\n                        </div>\r\n                        <div className=\"middle\">\r\n                          <h4>Get a video message from me</h4>\r\n                        </div>\r\n                        <div className=\"right\">\r\n                          <button>Buy</button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Items;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\SignInModal.js",["2475","2476"],"import React, { Component,useState,Form } from 'react';\r\nimport {Button} from 'react-bootstrap'\r\nimport Modal from 'react-bootstrap/Modal'\r\n// import './MyStyle.css'\r\n// import './animate.css'\r\n// import './bootstrap.css'\r\n// import './resonsive.css'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\n\r\nexport default function SignInModal(prop) {\r\n  const [show, setShow] = useState(false);\r\n  const [email, setName] = useState('');\r\n  const [pass, setPassword]=useState('');\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n \r\n  const SaveData=(e)=> {\r\n    console.warn(email)\r\n    console.warn(pass)\r\n\r\n          fetch('https://api.github.com/gists', {\r\n            method: 'post',\r\n            body: JSON.stringify({username:email})\r\n          }).then(function(response) {\r\n            return response.json();\r\n          }).then(function(data) {\r\n            console.log('Created Gist:', data.html_url);\r\n          });\r\n  }\r\n \r\n  return (\r\n    <>\r\n      <button className=\"\" onClick={handleShow}>\r\n      Sign in\r\n      </button>\r\n\r\n      <Modal \r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n     \r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n         Expy\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n              \r\n        <div className=\"form-box\">\r\n                <div className=\"heading\">\r\n                  <h3 style={{textAlign:\"center\",color:\"blue\",fontSize:\"24\",fontWeight:\"bold\"}}>Sign In!</h3>\r\n                </div>\r\n                <div className=\"join-box\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                   \r\n               \r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\"><i className=\"fa fa-envelope\"></i></InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <FormControl aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" \r\n                      value={email} onInput={e => setName(e.target.value)} placeholder=\"Enter Email/Phone Number\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\"><i className=\"fa fa-phone\"></i></InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <FormControl aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" \r\n                      value={pass} onInput={e => setPassword(e.target.value)} placeholder=\"Enter Password\" type=\"password\"/>\r\n                    </InputGroup>\r\n                   \r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"join-box\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                    </div>\r\n                    {/* <div className=\"col-md-6\">\r\n                      <input type=\"radio\" name=\"select_temp\"/>\r\n                    </div> */}\r\n                  </div>\r\n                </div>                \r\n            </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n         \r\n          <Button variant=\"outline-primary\" onClick={SaveData}>\r\n          launch!\r\n          </Button>\r\n          <Button variant=\"outline-danger\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n      \r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\JoinModal.js",["2477","2478","2479","2480"],"import React, { Component,useState,Form } from 'react';\r\n// import {Button} from 'react-bootstrap'\r\nimport Modal from 'react-bootstrap/Modal'\r\n// import './MyStyle.css'\r\n// import './animate.css'\r\n// import './bootstrap.css'\r\n// import './resonsive.css'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function JoinInModal(prop) {\r\n  const [show, setShow] = useState(false);\r\n \r\n  const [name, setName] = useState('');\r\n  const [email, setEmail]=useState('');\r\n  const [phone, setPhone]=useState('');\r\n  const [getState, setAllState]=useState({});\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  let base_url=\"http://127.0.0.1:8080/expy/API/\";\r\n\r\n \r\n  const  doJoin=()=>{\r\n      console.warn(email)\r\n      console.warn(name)\r\n      if(name===\"\")\r\n        {\r\n          alert(\"empty name\");\r\n          return false;\r\n        }\r\n        var obj={};\r\n        obj.name=name;\r\n        obj.email=email;\r\n        obj.phone=phone;\r\n        setAllState(obj);\r\n        console.warn(getState);\r\n        let url=base_url+\"JoinIn\";\r\n\r\n        let data = {\r\n          email,\r\n          name,phone\r\n        }\r\n    \r\n\r\n        let form = new FormData()\r\n        form.append('data', data)\r\n        axios.post(url,form)\r\n                .then(response=>{\r\n                    console.warn(response)\r\n                }).catch(error=>{\r\n                    console.warn(error)\r\n                })\r\n\r\n\r\n\r\n    }\r\n  return (\r\n    <>\r\n      <button className=\"\" onClick={handleShow}>\r\n      Join\r\n      </button>\r\n\r\n      <Modal \r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n     \r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n         Expy\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n              \r\n        <div className=\"form-box\">\r\n                <div className=\"heading\">\r\n                  <h3 style={{textAlign:\"center\",color:\"blue\",fontSize:\"24\",fontWeight:\"bold\"}}>Join Now!</h3>\r\n                </div>\r\n                <div className=\"join-box\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12\">     \r\n\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\"><i className=\"fa fa-user\"></i></InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <FormControl aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" placeholder=\"Enter Business Name\" \r\n                       value={name} onInput={e => setName(e.target.value)}/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\"><i className=\"fa fa-envelope\"></i></InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <FormControl aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" placeholder=\"Enter Email\" \r\n                      value={email} onInput={e => setEmail(e.target.value)} />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\"><i className=\"fa fa-phone\"></i></InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <FormControl aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" placeholder=\"Enter Phone Number\"\r\n                       value={phone} onInput={e => setPhone(e.target.value)}/>\r\n                    </InputGroup>\r\n                   \r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"join-box\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                    </div>\r\n                    {/* <div className=\"col-md-6\">\r\n                      <input type=\"radio\" name=\"select_temp\"/>\r\n                    </div> */}\r\n                  </div>\r\n                </div>                \r\n            </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n         \r\n          <Button variant=\"contained\" color=\"primary\"  onClick={doJoin}>\r\n            launch!\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n      \r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\SupportMe.js",["2481","2482","2483","2484"],"import React, { Component } from 'react';\r\n// import {Button} from 'react-bootstrap'\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport API  from '../services/API';\r\nclass SupportMe extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n      \r\n        this.state = {\r\n           openModel:false,\r\n           show:false,\r\n           open:false,\r\n           DA_Title:'',\r\n           price:0,\r\n           chargesInfo:'',\r\n           showIconCharges:'none',\r\n           isPriceDisabled:false,\r\n           showDiv:false,\r\n           min_amt:0,\r\n\r\n        }\r\n      }\r\n      ModalClose=()=>{\r\n        this.setState({\r\n          openModel:false,\r\n          show:false,\r\n          DA_Title:'',\r\n          price:0\r\n        });\r\n    \r\n      }\r\n      ModalOpen=()=>{\r\n        this.setState({openModel:true,show:true,\r\n          showDiv:false,allowCustomertoPay:0, price: 0,showIconCharges:'none',chargesInfo:'',  isPriceDisabled:false,\r\n        });\r\n      }\r\n      openCollapse = () => {\r\n        !this.state.open ?\r\n          this.setState({ open: true })\r\n          :\r\n          this.setState({ open: false })\r\n          \r\n      }\r\n      \r\n      handleChange=(e)=>{\r\n         let val=parseFloat(e.target.value);\r\n         this.setState({[e.target.name]:e.target.value})\r\n         if(e.target.name==='price' && val > 0)\r\n         {\r\n          let fee=val * API.razorPayTax();\r\n          let gst=fee * API.razorPayGST();         \r\n          let razorPay=(fee+gst); // 1.65 + 0.297\r\n          let TenPer=(val - razorPay) * 10/100; // 10 if val is 100                  \r\n          let charges= val - razorPay - TenPer; // 100 - 1.65- 0.297                      \r\n          let chargesInfo=\"You'll receive INR \"+ charges.toFixed(2) + \" \";\r\n\r\n          let showIconCharges='block';\r\n          this.setState({chargesInfo,showIconCharges});\r\n         }\r\n         else\r\n         {\r\n          this.setState({chargesInfo:'',showIconCharges:'none'});\r\n         }\r\n     }\r\n     SaveItem=e=>\r\n     {\r\n    \r\n       var flagData = {  \r\n         DA_DA_ID:999,\r\n         JM_ID:this.props.state.JM_ID,\r\n         DA_Title:this.state.DA_Title,\r\n         DA_Price:this.state.price,\r\n         DA_Type:'gifts',\r\n         image:this.props.src ,\r\n         DA_Allow_Cust_Pay: this.state.allowCustomertoPay,\r\n         DA_Min_Amount: parseInt(this.state.min_amt),\r\n         DA_Suggested_Amont: parseInt(this.state.suggested_amt)\r\n       };\r\n\r\n\r\n       const flag=API.encryptData(flagData);\r\n       var JSONdata = {\r\n         flag: flag\r\n       };\r\n\r\n       \r\n       //console.log(JSONdata)\r\n             const API_url = process.env.REACT_APP_API_URL + \"admin/addGifts\";\r\n           fetch(API_url,\r\n             {\r\n               method: 'post',\r\n               headers: { \"Content-Type\": \"application/json\",  \"authorization\": API.getAuth(),\"id\":API.getId()},\r\n               body: JSON.stringify(JSONdata)\r\n             })\r\n           .then((response) => response.json())\r\n           .then(data => {\r\n             \r\n        \r\n            if(data.status===1)\r\n            {\r\n              this.props.showToast('success', 'A Gift is added to profile');\r\n              this.ModalClose();         \r\n               this.setState({            \r\n                 DA_Title:'',\r\n                 price:0\r\n               });\r\n            }         \r\n            else\r\n            {\r\n              API.minusResponse(data);\r\n              this.props.showToast('failed', 'internal error');\r\n            }\r\n              \r\n             //this.ModalClose();         \r\n            \r\n           }).catch(error=>{\r\n                document.getElementById(\"msg\").innerText='Network error occured';\r\n           });\r\n     }\r\n     hidePopover=()=>{\r\n      document.getElementById(\"popover-basic\").style.display='none';\r\n    }\r\n\r\n    onchangeCheck=(e)=>{\r\n      if(e.target.checked===true)\r\n      {\r\n        this.setState({\r\n          allowCustomertoPay:1,\r\n          showDiv:true,\r\n          price:0,\r\n          chargesInfo:'',showIconCharges:'none',\r\n          isPriceDisabled:true,\r\n        })\r\n     \r\n        \r\n      }\r\n      else\r\n      {\r\n        this.setState({\r\n          allowCustomertoPay:0,\r\n          showDiv:false,\r\n          isPriceDisabled:false,\r\n        })\r\n        \r\n      }\r\n    }\r\n      render(){\r\n        const {uploadPercentage} = this.state;\r\n        const longText = `\r\n        Aliquam eget finibus ante, non facilisis lectus. Sed vitae dignissim est, vel aliquam tellus.\r\n        Praesent non nunc mollis, fermentum neque at, semper arcu.\r\n        Nullam eget est sed sem iaculis gravida eget vitae justo.\r\n        `;\r\n        \r\n        const useStyles = {\r\n          button: {\r\n            margin: '5px',\r\n          },\r\n          customWidth: {\r\n            maxWidth: 500,\r\n            fontSize:'25px',\r\n           \r\n          },\r\n          noMaxWidth: {\r\n            maxWidth: 'none',\r\n          },\r\n        };\r\n        //let chargesMessage=\"You receive 90% of the transaction value minus a 2% transaction fee that is collected by our payment provider.\";\r\n        let chargesMessage=API.chargesMessage();\r\n        const HtmlTooltip = withStyles((theme) => ({\r\n          arrow: {\r\n            color: theme.palette.common.black,\r\n          },\r\n          tooltip: {\r\n            backgroundColor: '#212529',\r\n            color: 'white',\r\n            maxWidth: '50%',\r\n            fontSize: theme.typography.pxToRem(10),\r\n            // border: '1px solid #dadde9',\r\n          },\r\n        }))(Tooltip);\r\n        \r\n        const iconStyle={\r\n            display:this.state.showIconCharges,\r\n            fontSize: \"23px\",\r\n            color: \"gray\"\r\n        }\r\n        const chargesStyle={\r\n          fontFamily: \"consolas\",\r\n          fontSize: \"13px\",\r\n          textTransform: \"capitalize\",\r\n          marginTop: \"-6%\",\r\n          fontWeight: \"bold\",\r\n          color: \"gray\",\r\n        }\r\n        const popover2 = (\r\n          <Popover id=\"popover-basic\" style={{zIndex:'99999',background: 'black',color:'#fff'}}  >\r\n             <button type=\"button\" className=\"pop-close\"><span aria-hidden=\"true\" onClick={this.hidePopover}>×</span>\r\n              <span className=\"sr-only\">Close</span>\r\n            </button>       \r\n            <Popover.Content style={{background: 'black',color:'#fff'}}>\r\n            {chargesMessage}\r\n              \r\n            </Popover.Content>    \r\n           \r\n          </Popover>\r\n        );\r\n      return (\r\n        <>\r\n          <button class=\"btun\"  onClick={this.ModalOpen}><AddCircleOutlineIcon/> Add This</button>\r\n          <Modal\r\n            show={this.state.show}\r\n            onHide={this.ModalClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            centered\r\n    \r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>\r\n                <p className=\"addnew-title\">Support Me</p>\r\n                <p>Let your followers decide how much to tip you!</p>\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <div className=\"direct-access-pop\">\r\n                <div className=\"row\">\r\n                  \r\n                  <div className=\"col-md-6 offset-md-3\">\r\n                    <div className=\"image\">\r\n                        <img src={this.props.src}/>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <input type=\"text\" name=\"DA_Title\" value={this.state.DA_Title} onChange={this.handleChange} className=\"form-control\" placeholder=\"Set Title\" />\r\n                  </div>\r\n                     <div className=\"col-md-12\">\r\n                    <input type=\"text\"  style={{display:'block'}} name=\"price\" \r\n                    value={this.state.price} onChange={this.handleChange}  \r\n                    className=\"form-control\" disabled={this.state.isPriceDisabled}\r\n                    onKeyPress={(event) => {\r\n                      if (!/[0-9]/.test(event.key)) {\r\n                        event.preventDefault();\r\n                      }\r\n                    }}\r\n                    \r\n                    placeholder=\"Set Price\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-12 desktopCharge\">\r\n                      <HtmlTooltip arrow\r\n                          title={\r\n                            <React.Fragment>\r\n                              <Typography color=\"inherit\">Transaction Info</Typography>                \r\n                              <p style={{fontFamily:'monospace',fontSize:'12px'}}>{chargesMessage}</p>\r\n                            </React.Fragment>\r\n                          } placement=\"top-start\"\r\n                        >\r\n                      <Button style={chargesStyle}>{this.state.chargesInfo}<i class=\"fa fa-question-circle\" aria-hidden=\"true\" \r\n                      style={iconStyle}></i></Button>\r\n                    </HtmlTooltip>\r\n                  </div>\r\n    \r\n                  <div className=\"col-md-12 mobileCharge\" style={{fontFamily: 'consolas', fontSize: '13px',textTransform: 'capitalize'}}>\r\n                          &nbsp;{this.state.chargesInfo}\r\n                         <OverlayTrigger  className=\"mobile\" style={chargesStyle} trigger=\"click\" placement=\"top\" overlay={popover2}>           \r\n                             <i class=\"fa fa-question-circle\" aria-hidden=\"true\"  style={iconStyle}></i>                     \r\n                          </OverlayTrigger >  \r\n                    </div>    \r\n    \r\n            \r\n               \r\n            \r\n\r\n\r\n                <div className=\"btun-box\">\r\n                  <button className=\"btun\" onClick={this.SaveItem}>Save Item</button>   \r\n                  <span id=\"msg\"></span>\r\n                </div>\r\n              </div>\r\n            </Modal.Body>\r\n    \r\n          </Modal>\r\n        </>\r\n      );\r\n    }\r\n    \r\n    }\r\n    \r\n    export default SupportMe;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\EditPopGift2.js",["2485","2486","2487","2488"],"import React, { Component } from 'react';\r\n// import {Button} from 'react-bootstrap'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport Popover from 'react-bootstrap/Popover'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport API  from '../services/API';\r\nclass EditPopGift2 extends Component\r\n{\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       openModel:false,\r\n       show:false,\r\n       open:false,\r\n       DA_Title:'',\r\n       price:0,\r\n       chargesInfo:'',\r\n       JM_ID: 0,\r\n       showIconCharges:'none',\r\n       title:'',\r\n       msg:'',\r\n\r\n       allowCustomertoPay: 0,\r\n       min_amt: '',\r\n       suggested_amt: '',\r\n       showDiv: false,\r\n       isPriceDisabled:false,\r\n    }\r\n    //console.log(this.props.gift)\r\n  }\r\n\r\n\r\n  ModalClose=()=>{\r\n    this.setState({\r\n      openModel:false,\r\n      show:false,\r\n      DA_Title:'',\r\n      price:0\r\n    });\r\n\r\n  }\r\n  ModalOpen=(e)=>{\r\n    this.setState({\r\n        openModel:true,\r\n        show:true,\r\n        DA_Title:this.props.gift.DA_Title,     \r\n        price:this.props.gift.DA_Price,\r\n        JM_ID: this.props.gift.JM_ID,\r\n        allowCustomertoPay: this.props.gift.DA_Allow_Cust_Pay,                       \r\n        min_amt: this.props.gift.DA_Min_Amount,   \r\n        suggested_amt: this.props.gift.DA_Suggested_Amont,   \r\n        showDiv:this.props.gift.DA_Allow_Cust_Pay===1 ? true : false,\r\n        isPriceDisabled:this.props.gift.DA_Allow_Cust_Pay===1 ? true : false,\r\n    });\r\n  }\r\n\r\n  \r\n  handleChange=(e)=>{\r\n     let val=parseFloat(e.target.value);\r\n     this.setState({[e.target.name]:e.target.value})\r\n     if(e.target.name==='price' && val > 0)\r\n     {\r\n              let fee=val * API.razorPayTax();\r\n              let gst=fee * API.razorPayGST();         \r\n              let razorPay=(fee+gst); // 1.65 + 0.297\r\n              let TenPer=(val - razorPay) * 10/100; // 10 if val is 100                  \r\n              let charges= val - razorPay - TenPer; // 100 - 1.65- 0.297                      \r\n              let chargesInfo=\"You'll receive INR \"+ charges.toFixed(2) + \" \";\r\n\r\n\r\n        let showIconCharges='block';\r\n         this.setState({chargesInfo,showIconCharges});\r\n     }\r\n     else\r\n     {\r\n      let chargesInfo=\"\";\r\n      let showIconCharges='none';\r\n       this.setState({chargesInfo,showIconCharges});\r\n     }\r\n }\r\n SaveItem=e=>\r\n {\r\n\r\n\r\n\r\n   document.getElementById('msg').innerHTML='';\r\n   document.getElementById('msg').style.color='red';\r\n   \r\n   if ((isNaN(parseInt(this.state.price)) || parseInt(this.state.price) === 0 ) && this.state.allowCustomertoPay === 0)   \r\n   {\r\n     document.getElementById('msg').style.color='red';\r\n     document.getElementById('msg').innerHTML='* Enter Price';\r\n     return false;\r\n   }\r\n       //23-aug-2021 dynamic pricing\r\n   if(this.state.allowCustomertoPay===1)\r\n   {\r\n     if( isNaN(parseInt(this.state.min_amt)) || parseInt(this.state.min_amt) === 0 )\r\n     {            \r\n       document.getElementById('msg').style.color='red';\r\n       document.getElementById('msg').innerHTML='* Enter minimum amount';\r\n       return false;              \r\n     }\r\n   }\r\n   //console.log(JSONdata)\r\n   var flagData = {  \r\n    DA_ID:this.props.gift.DA_ID,\r\n     JM_ID:this.props.gift.JM_ID,\r\n     DA_Title:this.state.DA_Title,\r\n     DA_Price:this.state.price,\r\n     DA_Type:'gifts',\r\n     image:this.props.src ,\r\n     DA_Allow_Cust_Pay:this.state.allowCustomertoPay,\r\n     DA_Min_Amount:parseInt(this.state.min_amt),\r\n     DA_Suggested_Amont:parseInt(this.state.suggested_amt)\r\n\r\n   };\r\n\r\n   const flag=API.encryptData(flagData);\r\n\r\n   var JSONdata = {\r\n     flag: flag\r\n   };\r\n\r\n\r\n\r\n         const API_url = process.env.REACT_APP_API_URL + \"admin/updateGifts\";\r\n       fetch(API_url,\r\n         {\r\n           method: 'post',\r\n           headers: { \"Content-Type\": \"application/json\", \"authorization\": API.getAuth(),\"id\":API.getId()},    \r\n           body: JSON.stringify(JSONdata)\r\n         })\r\n       .then((response) => response.json())\r\n       .then(data => {\r\n         \r\n         //console.log(data)\r\n         if(data.status ===1)\r\n         {\r\n            \r\n            this.setState({            \r\n              DA_Title:'',\r\n              price:0\r\n            });\r\n            this.ModalClose();  \r\n            this.Get_User_Details();            \r\n         }\r\n         else\r\n         {\r\n          API.minusResponse(data);\r\n          this.setState({\r\n            show:true,\r\n            title:'info !!!',\r\n            msg:'Network error, try later',\r\n          });\r\n         }\r\n       \r\n          \r\n         //this.ModalClose();         \r\n        \r\n       }).catch(error=>{\r\n            document.getElementById(\"msg\").innerText='Network error occured';\r\n       });\r\n }\r\n Get_User_Details = () => {\r\n        var JSONdata = {\r\n          JM_ID: this.state.JM_ID\r\n        };\r\n        const API_url =process.env.REACT_APP_API_URL + \"admin/userDetailsAll\";\r\n      fetch(API_url,\r\n        {\r\n          method: 'post',\r\n          headers: { \"Content-Type\": \"application/json\",\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n          body: JSON.stringify(JSONdata)\r\n        })\r\n      .then((response) => response.json())\r\n      .then(data1 => {\r\n        if (data1 != null && data1.status > 0)\r\n        {\r\n          const data=API.decryptJson(data1.flag);\r\n          this.setState({\r\n            userDetailsAll: data.data,\r\n            userDetails:data.userDetails,\r\n            themeMasterUser:data.themeMasterUser,\r\n            socialWidget:data.socialWidget,\r\n            gifts:data.gifts,\r\n            title:'Success!!!',\r\n            msg:'Profile is updated',\r\n          });\r\n          this.props.setStateAfterInsert(this.state);\r\n        }      \r\n        else\r\n          this.setState({showPage:false})\r\n      //console.log(data)\r\n      });\r\n}\r\nhidePopover=()=>{\r\n  document.getElementById(\"popover-basic\").style.display='none';\r\n}\r\n\r\nonchangeCheck=(e)=>{\r\n\r\n  if(e.target.checked===true)\r\n  {\r\n\r\n    this.setState({\r\n      allowCustomertoPay:1,\r\n      showDiv:true,  \r\n      isPriceDisabled:true,\r\n      chargesInfo:'', showIconCharges:'none'\r\n    })\r\n\r\n\r\n  }\r\n  else\r\n  {\r\n    this.setState({\r\n      allowCustomertoPay:0,\r\n      showDiv:false, isPriceDisabled:false\r\n    })\r\n  }\r\n}\r\n  render(){\r\n    const {uploadPercentage} = this.state;\r\n    const longText = `\r\n    Aliquam eget finibus ante, non facilisis lectus. Sed vitae dignissim est, vel aliquam tellus.\r\n    Praesent non nunc mollis, fermentum neque at, semper arcu.\r\n    Nullam eget est sed sem iaculis gravida eget vitae justo.\r\n    `;\r\n    \r\n    const useStyles = {\r\n      button: {\r\n        margin: '5px',\r\n      },\r\n      customWidth: {\r\n        maxWidth: 500,\r\n        fontSize:'25px',\r\n       \r\n      },\r\n      noMaxWidth: {\r\n        maxWidth: 'none',\r\n      },\r\n    };\r\n   // let chargesMessage=\"You receive 90% of the transaction value minus a 2% transaction fee that is collected by our payment provider.\";\r\n    let chargesMessage=API.chargesMessage();\r\n  \r\n    const HtmlTooltip = withStyles((theme) => ({\r\n      arrow: {\r\n        color: theme.palette.common.black,\r\n      },\r\n      tooltip: {\r\n        backgroundColor: '#212529',\r\n        color: 'white',\r\n        maxWidth: '50%',\r\n        fontSize: theme.typography.pxToRem(10),\r\n        // border: '1px solid #dadde9',\r\n      },\r\n    }))(Tooltip);\r\n    \r\n    const iconStyle={\r\n        display:this.state.showIconCharges,\r\n        fontSize: \"23px\",\r\n        color: \"gray\"\r\n    }\r\n    const chargesStyle={\r\n      fontFamily: \"consolas\",\r\n      fontSize: \"13px\",\r\n      textTransform: \"capitalize\",\r\n      marginTop: \"-6%\",\r\n      fontWeight: \"bold\",\r\n      color: \"gray\",\r\n    }\r\n    const popover2 = (\r\n      <Popover id=\"popover-basic\" style={{zIndex:'99999',background: 'black',color:'#fff'}}  >\r\n         <button type=\"button\" className=\"pop-close\"><span aria-hidden=\"true\" onClick={this.hidePopover}>×</span>\r\n          <span className=\"sr-only\">Close</span>\r\n        </button>       \r\n        <Popover.Content style={{background: 'black',color:'#fff'}}>\r\n        {chargesMessage}\r\n          \r\n        </Popover.Content>    \r\n       \r\n      </Popover>\r\n    );\r\n  return (\r\n    <>\r\n      <button onClick={this.ModalOpen}><CreateIcon />     \r\n      </button>\r\n      <Modal\r\n        show={this.state.show}\r\n        onHide={this.ModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <p className=\"addnew-title\">Update {this.props.gift.DA_DA_ID=== 0 ? \"Gift Options\" : \"Support Options\"}</p>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"direct-access-pop\">\r\n            <div className=\"row\">\r\n              \r\n              <div className=\"col-md-6 offset-md-3\">\r\n                <div className=\"image\">\r\n                   <img src={this.props.src} />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <input type=\"text\" name=\"DA_Title\" value={this.state.DA_Title} onChange={this.handleChange} className=\"form-control\" placeholder=\"Set Title\" />\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <input type=\"text\" name=\"price\" value={this.state.price}  disabled={this.state.isPriceDisabled}\r\n                 onKeyPress={(event) => {\r\n                  if (!/[0-9]/.test(event.key)) {\r\n                    event.preventDefault();\r\n                  }\r\n                }}\r\n                onChange={this.handleChange}  className=\"form-control\" placeholder=\"Set Price\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-12 desktopCharge\">\r\n                  <HtmlTooltip arrow\r\n                      title={\r\n                        <React.Fragment>\r\n                          <Typography color=\"inherit\">Transaction Info</Typography>                \r\n                          <p style={{fontFamily:'monospace',fontSize:'12px'}}>{chargesMessage}</p>\r\n                        </React.Fragment>\r\n                      } placement=\"top-start\"\r\n                    >\r\n                  <Button style={chargesStyle}>{this.state.chargesInfo}<i class=\"fa fa-question-circle\" aria-hidden=\"true\" \r\n                  style={iconStyle}></i></Button>\r\n                </HtmlTooltip>\r\n              </div>\r\n              <div className=\"col-md-12 mobileCharge\" style={{fontFamily: 'consolas', fontSize: '13px',textTransform: 'capitalize'}}>\r\n                      &nbsp;{this.state.chargesInfo}\r\n                     <OverlayTrigger  className=\"mobile\" style={chargesStyle} trigger=\"click\" placement=\"top\" overlay={popover2}>           \r\n                         <i class=\"fa fa-question-circle\" aria-hidden=\"true\"  style={iconStyle}></i>                     \r\n                      </OverlayTrigger >  \r\n                </div>\r\n\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                        <label>\r\n                               <strong>  \r\n                                  Settings \r\n                              </strong>     \r\n                       </label>\r\n                </div>                  \r\n                <div className=\"col-md-8 col-9\">\r\n                    <label >\r\n                    Let your followers pay what they want     \r\n                      </label>\r\n                </div>  \r\n                <div className=\"col-md-4 col-3\">                    \r\n                    <label class=\"switch\"  for=\"allowCustomertoPay\">\r\n                        <input type=\"checkbox\" id=\"allowCustomertoPay\" checked={this.state.allowCustomertoPay===1?true:false} onChange={this.onchangeCheck} />\r\n                        <div class=\"slider round\"></div>\r\n                      </label>\r\n                </div>\r\n                {\r\n                  this.state.showDiv===true ?      \r\n                  <>            \r\n                        <div className=\"col-md-6\">\r\n                        <label >\r\n                               <strong>  \r\n                                  Minimum Amount \r\n                              </strong>     \r\n                       </label>\r\n                        <input type=\"text\" name=\"min_amt\" \r\n                        value={this.state.min_amt}  onChange={this.handleChange} \r\n                        className=\"form-control\" placeholder=\"Enter Price\" \r\n                        onKeyPress={(event) => {\r\n                          if (!/[0-9]/.test(event.key)) {\r\n                            event.preventDefault();\r\n                          }\r\n                        }}\r\n                        />       \r\n                        <p style={{fontSize:'12px',fontWeight:'600'}}>{API.dynamicPriceMessage()}</p>\r\n                      </div>\r\n                    <div className=\"col-md-6\" style={{display:'none'}}>\r\n                       <label>\r\n                               <strong>  \r\n                                  Suggested Amount \r\n                              </strong>     \r\n                       </label>\r\n                      <input type=\"text\" name=\"suggested_amt\" \r\n                      value={this.state.suggested_amt} onChange={this.handleChange} \r\n                      className=\"form-control\" placeholder=\"Enter Price\" \r\n                      onKeyPress={(event) => {\r\n                        if (!/[0-9]/.test(event.key)) {\r\n                          event.preventDefault();\r\n                        }\r\n                      }}\r\n                      />       \r\n                    </div>\r\n                  </>\r\n                  :\r\n                  null\r\n                }\r\n              </div> \r\n            <div className=\"btun-box\">\r\n              <button className=\"btun\" onClick={this.SaveItem}>Update Item</button>   \r\n              <span id=\"msg\"></span>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n}\r\n\r\nexport default EditPopGift2;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\ToastAlert.js",[],"E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\EditUnlockContent2.js",["2489","2490","2491","2492","2493","2494","2495","2496","2497","2498","2499","2500","2501","2502","2503","2504","2505","2506","2507","2508","2509","2510"],"import React, { Component } from 'react';\r\n\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\nimport {ProgressBar} from 'react-bootstrap';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Popover from 'react-bootstrap/Popover'\r\n\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n\r\nimport PersonalVideoIcon from '@material-ui/icons/PersonalVideo';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport FileViewer from 'react-file-viewer';\r\nimport { CustomErrorComponent } from 'custom-error';\r\nimport API  from '../services/API';\r\nclass EditUnlockContent2 extends Component \r\n{\r\n    fileObj = [];\r\n    fileArray = [];\r\n    albumArray=[];\r\n     Files = [];\r\n     cancelFileUpload=null;\r\n        constructor(props) {\r\n            super(props)\r\n        \r\n            this.state = {\r\n              base_url: process.env.REACT_APP_API_URL,\r\n              root_url: process.env.REACT_APP_ROOT_URL,\r\n            openModel:false,\r\n            show:false,\r\n            open:false,\r\n            directAccess:this.props.data,\r\n            userDetails:[],\r\n            confirm:false,\r\n            videoFile:null,\r\n            imageFile:null,\r\n            selectedFile:null,\r\n            coverImageorVideo:null,\r\n            title:'',\r\n            description:'',\r\n            price:0,\r\n            handleDisabled:true,\r\n            toolTip:false,\r\n            chargesInfo:'',\r\n            showIconCharges:'none',\r\n            videoData:'NA',\r\n            audioData:'',\r\n            album:[null],\r\n            cover_Image_video:'',\r\n            audioFile:null,\r\n            showAlert:true,\r\n            title:'',\r\n            msg:'',\r\n            logo:'',\r\n            textFileUrl:'',\r\n            textFile:[],\r\n            uploadPercentage: 0,\r\n            avatar: '',\r\n\r\n            disabledBtn:false,\r\n            BtnName:'Save',\r\n            pdfFileUrl:'',\r\n            pdfFile:null,\r\n\r\n            chooseType_1:false,\r\n            chooseType_2:false,\r\n            chooseType_3:false,\r\n            chooseType_4:false,\r\n            errMsg:''\r\n\r\n            }\r\n            ////console.log(this.state.userDetails)\r\n            this.imageonMultiChange = this.imageonMultiChange.bind(this)\r\n        \r\n        }\r\n        ModalClose=()=>\r\n        {    \r\n\r\n            this.setState({openModel:false,show:false});\r\n            this.setState({ \r\n              audioFile: null ,\r\n              audioData: '',\r\n              textFile: null ,\r\n              textFileUrl: '',\r\n              videoData:'',\r\n              videoFile:null,\r\n            }); \r\n            this.albumArray=[];\r\n\r\n        }\r\n        ModalOpen=()=>{\r\n                this.setState({openModel:true,show:true,chargesInfo:'',showIconCharges:'none'});\r\n\r\n                ////console.log(this.props.data)\r\n                this.setState({ \r\n                  title:this.props.data.title,\r\n                  description:this.props.data.description,\r\n                  JM_ID:this.props.data.JM_ID,\r\n                  DA_Type:this.props.data.prodType,\r\n                  DA_ID:this.props.data.tableId,\r\n                  DA_Collection:'',\r\n                  price: this.props.data.price,   \r\n                  allowCustomertoPay: this.props.data.DA_Allow_Cust_Pay,                       \r\n                  min_amt: this.props.data.DA_Min_Amount,   \r\n                  suggested_amt: this.props.data.DA_Suggested_Amont,   \r\n                  showDiv:this.props.data.DA_Allow_Cust_Pay===1 ? true : false,\r\n                  isPriceDisabled: this.props.data.DA_Allow_Cust_Pay===1 ? true : false,                        \r\n              });\r\n\r\n             var files = JSON.parse(this.props.data.collection); \r\n            \r\n            if(this.props.data.prodType===\"album\")    \r\n              {  \r\n                for (var i = 0, numFiles = files.length; i < numFiles; i++) \r\n                { \r\n                var file =files[i];\r\n                this.albumArray.push(file);           \r\n                \r\n                }\r\n                this.setState({ \r\n                  chooseType_1:true,\r\n                  chooseType_2:false,\r\n                  chooseType_3:false,\r\n                  chooseType_4:false,     \r\n                  radioStyle1:{fontWeight:'600',color:'#ff746e'},\r\n                  radioStyle2:'',\r\n                  radioStyle3:'',\r\n                  radioStyle4:'',              \r\n                });\r\n            }\r\n            if(this.props.data.prodType===\"image\")    \r\n            {  \r\n              this.albumArray=[];\r\n              for (var i = 0, numFiles = files.length; i < numFiles; i++) \r\n              { \r\n              var file =files[i];\r\n\r\n              this.albumArray.push(file);           \r\n              \r\n              }\r\n              this.setState({ \r\n                  chooseType_1:true,\r\n                  chooseType_2:false,\r\n                  chooseType_3:false,\r\n                  chooseType_4:false,     \r\n                  radioStyle1:{fontWeight:'600',color:'#ff746e'},\r\n                  radioStyle2:{},\r\n                  radioStyle3:{},\r\n                  radioStyle4:{},\r\n                      \r\n              });\r\n          }\r\n            if(this.props.data.prodType===\"video\")    \r\n            {   \r\n                \r\n                if(files!=null && files.length > 0)                \r\n                    this.setState({ \r\n                        videoData:files[0],\r\n                        chooseType_1:false,\r\n                        chooseType_2:true,\r\n                        chooseType_3:false,\r\n                        chooseType_4:false,  \r\n                        radioStyle1:{},\r\n                        radioStyle2:{fontWeight:'600',color:'#ff746e'},\r\n                        radioStyle3:{},\r\n                        radioStyle4:{},                    \r\n                    });\r\n            }\r\n            if(this.props.data.prodType===\"audio\")    \r\n                   { \r\n                     \r\n                    this.setState({ \r\n                        chooseType_1:false,\r\n                        chooseType_2:false,\r\n                        chooseType_3:true,\r\n                        chooseType_4:false, \r\n                        audioData:files[0],  \r\n                        radioStyle1:{},\r\n                        radioStyle2:{},\r\n                        radioStyle3:{fontWeight:'600',color:'#ff746e'},\r\n                        radioStyle4:{},  \r\n                    });\r\n                  \r\n                  }\r\n               if(this.props.data.prodType===\"txt\")    \r\n                  {  \r\n          \r\n\r\n                    this.setState({ \r\n                        chooseType_1:false,\r\n                        chooseType_2:false,\r\n                        chooseType_3:false,\r\n                        chooseType_4:true,  \r\n                        textFileUrl:files[0],  \r\n                        type:'docx',\r\n                        radioStyle1:{},\r\n                        radioStyle2:{},\r\n                        radioStyle3:{},\r\n                        radioStyle4:{fontWeight:'600',color:'#ff746e'},                      \r\n                    });\r\n                         \r\n                  }\r\n                  if(this.props.data.prodType===\"pdf\")    \r\n                  {  \r\n            \r\n                    this.setState({ \r\n                        chooseType_1:false,\r\n                        chooseType_2:false,\r\n                        chooseType_3:false,\r\n                        chooseType_4:true,  \r\n                        pdfFileUrl:files[0],  \r\n                        type:'pdf',\r\n                        radioStyle1:{},\r\n                        radioStyle2:{},\r\n                        radioStyle3:{},\r\n                        radioStyle4:{fontWeight:'600',color:'#ff746e'},                      \r\n                    });                   \r\n        \r\n                  }\r\n            \r\n\r\n        }\r\n        openCollapse = () => {\r\n            !this.state.open ?\r\n            this.setState({ open: true })\r\n            :\r\n            this.setState({ open: false })\r\n            \r\n        }\r\n        isConfirm = () => {\r\n            confirmAlert({\r\n            title: 'Confirm !!!',\r\n            message: 'Are you sure to Exit',\r\n            buttons: [\r\n                {\r\n                label: 'Yes',\r\n                onClick: () => this.setState({confirm:true})\r\n                },\r\n                {\r\n                label: 'No',\r\n                onClick: () => this.setState({confirm:false})\r\n                }\r\n            ]\r\n            });\r\n        };\r\n        popOver=(data)=>{\r\n\r\n        }\r\n        videoonChange=(e)=>{\r\n\r\n\r\n           this.setState({ \r\n              audioFile: null ,\r\n              audioData: '',\r\n              textFile: null ,\r\n              textFileUrl: '',\r\n            }); \r\n            this.albumArray=[];\r\n\r\n            const file = e.target.files[0];\r\n\r\n            var filePath = e.target.value;            \r\n            // Allowing file type\r\n            var allowedExtensions = /(\\.mp4)$/i;                \r\n            if (!allowedExtensions.exec(filePath)) \r\n            {\r\n                alert('Invalid file type');\r\n                e.target.value = '';\r\n                return false;\r\n            } \r\n\r\n            if(typeof file!=='undefined')\r\n            {\r\n              var fileUrl = window.URL.createObjectURL(file);\r\n              this.setState({ imageFile: e.target.files[0] }); \r\n              this.setState({\r\n              videoFile: file,\r\n              videoData:fileUrl\r\n              });\r\n              \r\n           \r\n            }\r\n        }\r\n\r\n      \r\n\r\n        audioChange=(e)=>\r\n        {\r\n\r\n          this.setState({\r\n            videoFile: null,\r\n            videoData:'NA'\r\n            });\r\n            const file = e.target.files[0];\r\n            var filePath = e.target.value;            \r\n            // Allowing file type  .ogv\r\n            var allowedExtensions = /(\\.mp3|\\.ogv)$/i;             \r\n            if (!allowedExtensions.exec(filePath)) \r\n            {\r\n                alert('Invalid file type');\r\n                e.target.value = '';\r\n                return false;\r\n            } \r\n  \r\n            if(typeof file!=='undefined')\r\n            {\r\n              this.setState({ audioFile: e.target.files[0] }); \r\n              this.getBase64(file).then(\r\n                data =>{                \r\n                  this.setState({ audioData: data }); \r\n                } \r\n              );\r\n            }\r\n            \r\n        }\r\n        onClickResetAudioFile (e) {\r\n            this.setState({audioData:''});             \r\n           }\r\n\r\n           //12-mar-2021\r\n           getBase64=(file)=> {\r\n            return new Promise((resolve, reject) => {\r\n              const reader = new FileReader();\r\n              reader.readAsDataURL(file);\r\n              reader.onload = () => resolve(reader.result);\r\n              reader.onerror = error => reject(error);\r\n            });\r\n          }\r\n\r\n        imageonChange=(e)=>{\r\n            const file = e.target.files[0];\r\n            this.setState({ coverImageorVideo: e.target.files[0] }); \r\n            this.setState({\r\n            cover_Image_video: URL.createObjectURL(file)\r\n            });\r\n          \r\n        }\r\n        nextClick=(event)=>{\r\n            event.preventDefault();\r\n            let isValid=this.validation();\r\n            if(isValid)\r\n            {\r\n              var errMsg='';\r\n              this.setState({\r\n                errMsg\r\n              })   \r\n              if(this.state.title.length ===0)\r\n              {\r\n                var errMsg=\"* Enter Title\";\r\n                    this.setState({\r\n                      errMsg\r\n                    })                                       \r\n                return true;\r\n              }\r\n              if(this.state.description.length===0)\r\n              {\r\n              \r\n                    var errMsg='* Enter Description';\r\n                    this.setState({\r\n                      errMsg\r\n                    })                                       \r\n                    return true;\r\n              }\r\n              if(isNaN(parseInt(this.state.price)) || parseInt(this.state.price) < 0)\r\n              {\r\n               \r\n                  var errMsg='* Enter Price';\r\n                  this.setState({\r\n                    errMsg\r\n                  })                                       \r\n                  return true;\r\n              \r\n              }\r\n                  //23-aug-2021 dynamic pricing\r\n              if(this.state.allowCustomertoPay===1)\r\n              {\r\n                if( isNaN(parseInt(this.state.min_amt)) || parseInt(this.state.min_amt) < 0 )\r\n                {            \r\n                    var errMsg='* Enter minimum amount';\r\n                    this.setState({\r\n                      errMsg\r\n                    })                                       \r\n                    return true;                          \r\n                }\r\n              }\r\n            \r\n\r\n\r\n\r\n                const formData = new FormData(); \r\n\r\n                formData.append('DA_Allow_Cust_Pay', this.state.allowCustomertoPay )  \r\n                formData.append('DA_Min_Amount',parseInt(this.state.min_amt))\r\n                formData.append('DA_Suggested_Amont', parseInt(this.state.suggested_amt))  \r\n\r\n                let Api_url=this.state.base_url+'admin/updateProduct';          \r\n                if(this.state.videoFile !==null && this.state.videoData!=='NA' && this.state.videoData!=='')\r\n                  {  \r\n                      formData.append('sampleFile', this.state.videoFile);\r\n                      formData.append('DA_Type', 'video'); \r\n                      this.albumArray=[]; \r\n                      this.setState({\r\n                        audioFile:null,album:null,textFile:null\r\n                      });\r\n                  }\r\n             else  if(this.state.audioFile !==null && this.state.audioData!=='')\r\n                 {   \r\n                    formData.append('sampleFile', this.state.audioFile)\r\n                    formData.append('DA_Type', 'audio'); \r\n                    this.albumArray=[];                 \r\n                    this.setState({\r\n                     album:null,textFile:null,videoFile:[]\r\n                    });\r\n                 }\r\n              else  if(this.state.album!==null && this.albumArray!==null && this.albumArray.length > 0)\r\n                {\r\n                        // formData.append('DA_Type', 'album');                \r\n                        // const ins = this.Files.length;\r\n                        // //console.log(this.Files)\r\n                        // const arr=[];\r\n                        //    for (var x = 0; x < ins; x++)\r\n                        //   {                        \r\n                 \r\n                        //        formData.append('img_multiple',this.Files[x]);\r\n                                \r\n                        //    }\r\n\r\n                           formData.append('DA_Type', 'image'); \r\n                           formData.append('sampleFile', this.state.coverImageorVideo) \r\n             \r\n                \r\n                }\r\n               else if(this.state.pdfFile !==null && this.state.pdfFileUrl!=='')\r\n                 {   \r\n                    formData.append('sampleFile', this.state.pdfFile)\r\n                    formData.append('DA_Type', 'pdf'); \r\n                    this.albumArray=[];                 \r\n                    this.setState({\r\n                     album:null,textFile:null,videoFile:null,audioFile:null,\r\n                    });\r\n                 }\r\n               else  if(this.state.textFile !==null && this.state.textFileUrl!=='')\r\n                 {   \r\n                    formData.append('sampleFile', this.state.textFile)\r\n                    formData.append('DA_Type', 'txt'); \r\n                    this.albumArray=[];                 \r\n                    this.setState({\r\n                     album:null,videoFile:null,audioFile:null,pdfFile:null\r\n                    });\r\n                 }\r\n                 else   if(this.state.pdfFile !==null && this.state.pdfFileUrl!=='')\r\n                 {   \r\n                    formData.append('sampleFile', this.state.pdfFile)\r\n                    formData.append('DA_Type', 'pdf'); \r\n                    this.albumArray=[];                 \r\n                    this.setState({\r\n                     album:null,textFile:null,videoFile:null,audioFile:null,\r\n                    });\r\n                 }\r\n               \r\n                \r\n                formData.append('DA_DA_ID', 2) // for premium featured id\r\n                formData.append('JM_ID', this.props.data.JM_ID)       \r\n                formData.append('DA_ID', this.props.data.tableId)     \r\n                formData.append('DA_Title', this.state.title)  \r\n                formData.append('DA_Description', this.state.description)  \r\n                formData.append('DA_Cover', \"\") \r\n                formData.append('DA_Price', this.state.price)      \r\n                formData.append('JM_User_Profile_Url_plus_JM_ID',this.props.JM_User_Profile_Url_plus_JM_ID)\r\n                this.setState({BtnName:'Uploading..',disabledBtn:true});\r\n\r\n                fetch(Api_url, {\r\n                  method: 'POST',      \r\n                  headers: { \"authorization\": API.getAuth(),\"id\":API.getId()},   \r\n                  body: formData\r\n                  })\r\n                  .then(response => response.json())\r\n                  .then(data => \r\n                  {                   \r\n                      ////console.log(data);   \r\n                     if(data.status > 0)\r\n                     {\r\n                          this.setState({\r\n                                videoFile:null,\r\n                                videoData:'NA',\r\n                                audioFile:null,\r\n                                audioData:''\r\n                          });\r\n                          this.fileArray=[];     \r\n                          this.setState({disabledBtn:false,BtnName:'Save'});\r\n                          this.ModalClose();                     \r\n                          this.Get_User_Details();   \r\n                         \r\n                     }\r\n                      else\r\n                      {\r\n                        API.minusResponse(data);\r\n                        var errMsg=\"Internal error occered, Try later\";\r\n                        this.setState({disabledBtn:false,BtnName:'Save',errMsg}); \r\n                      }                     \r\n                  })\r\n                  .catch(error => \r\n                  {\r\n\r\n                   // this.props.showToast('error','internal error occered'); \r\n                     var errMsg=\"Network error occered, Try later\";\r\n                    this.setState({disabledBtn:false,BtnName:'Save',errMsg});                  \r\n                    \r\n                  })\r\n\r\n\r\n            }\r\n            else\r\n            {\r\n              var errMsg=\"fill all the neceessary fields and upload a file\";\r\n              this.setState({\r\n                errMsg\r\n              })           \r\n            }\r\n           \r\n        }\r\n\r\n        Get_User_Details = () => \r\n        {\r\n              var JSONdata = {\r\n                JM_ID: this.state.JM_ID\r\n              };\r\n              const API_url = this.state.base_url + \"admin/userDetailsAll\";\r\n            fetch(API_url,\r\n              {\r\n                method: 'post',\r\n                headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n                body: JSON.stringify(JSONdata)\r\n              })\r\n            .then((response) => response.json())\r\n            .then(data1 => {\r\n              if (data1 != null && data1.status > 0)\r\n              {\r\n                const data=API.decryptJson(data1.flag);\r\n                this.setState({\r\n                  userDetailsAll: data.data,\r\n                  userDetails:data.userDetails,\r\n                  themeMasterUser:data.themeMasterUser,\r\n                  socialWidget:data.socialWidget,\r\n                  gifts:data.gifts,\r\n                  title:'Success!!!',\r\n                  msg:'Profile is updated',\r\n                });\r\n                this.props.setStateAfterInsert(this.state);\r\n              }      \r\n              else\r\n                this.setState({showPage:false})\r\n\r\n            });\r\n        }       \r\n        validation =()=>\r\n        {            \r\n              \r\n          // if(this.state.description.length > 0 && this.state.title.length > 0 && (this.state.audioFile!==null || this.state.videoFile!==null||  (this.albumArray!==null &&  this.albumArray.length > 0) || this.state.textFile!==null  || this.state.pdfFile!==null ))\r\n          //     return true;\r\n          // else\r\n          //     return false;        \r\n\r\n          return true;\r\n         \r\n        }\r\n        handleChange=(e)=>{\r\n            let val=parseFloat(e.target.value);\r\n        this.setState({[e.target.name]:e.target.value})\r\n        let chargesInfo=\"\";\r\n        if(e.target.name==='price' && val > 0)\r\n            {\r\n              let fee=val * API.razorPayTax();\r\n              let gst=fee * API.razorPayGST();         \r\n              let razorPay=(fee+gst); // 1.65 + 0.297\r\n              let TenPer=(val - razorPay) * 10/100; // 10 if val is 100                  \r\n              let charges= val - razorPay - TenPer; // 100 - 1.65- 0.297                      \r\n              let chargesInfo=\"You'll receive INR \"+ charges.toFixed(2) + \" \";\r\n\r\n\r\n              let showIconCharges='block';         \r\n              this.setState({chargesInfo,showIconCharges});\r\n            }\r\n            else\r\n            {      \r\n                let chargesInfo=\"\";\r\n                let showIconCharges='none';\r\n                this.setState({chargesInfo,showIconCharges});\r\n            }\r\n            \r\n        }\r\n        hidePopover=()=>{\r\n            document.getElementById(\"popover-basic\").style.display='none';\r\n        }\r\n        handleClose=()=>{\r\n            this.setState({toolTip:true});\r\n        }\r\n        handleOpen=()=>{\r\n            this.setState({toolTip:false});\r\n        }\r\n        \r\n\r\n\r\n        imageonMultiChange(e) {\r\n\r\n\r\n            \r\n          var filePath = e.target.value;            \r\n          // Allowing file type\r\n          var allowedExtensions = /(\\.jpg|\\.jpeg|\\.png)$/i;                \r\n          if (!allowedExtensions.exec(filePath)) \r\n          {\r\n              alert('Invalid file type');\r\n              e.target.value = '';\r\n              return false;\r\n          } \r\n\r\n\r\n\r\n          var numFiles = e.target.files.length; \r\n          for (var i = 0, numFiles = e.target.files.length; i < numFiles; i++) \r\n          { \r\n            var file = e.target.files[i];\r\n            this.albumArray.push(URL.createObjectURL(file));              \r\n            this.Files.push(file);\r\n          }\r\n      \r\n          this.setState({ album: this.albumArray })\r\n\r\n          const fileMain = e.target.files[0];\r\n          this.setState({ coverImageorVideo: e.target.files[0] }); \r\n          this.setState({\r\n          cover_Image_video: URL.createObjectURL(fileMain)\r\n          });\r\n         ////console.log(this.state.cover_Image_video)\r\n      \r\n      }\r\n\r\n        hideToast=()=>{\r\n          this.setState({showAlert:false})\r\n        }\r\n        showToast =() =>{\r\n          this.setState({showAlert:true})\r\n        }\r\n\r\n        openBrowsFile=id=>e=>{\r\n            document.getElementById(id).click();\r\n         \r\n\r\n           this.setState({ \r\n            audioFile: null ,\r\n            audioData: '',\r\n            textFile: null ,\r\n            textFileUrl: '',\r\n            albumArray:null,\r\n            videoData:'',\r\n            videoFile:null,\r\n          }); \r\n        }\r\n        cancelAlbum=id=>e=>\r\n        {\r\n            ////console.log(this.albumArray) \r\n            ////console.log(id)\r\n            const i = id\r\n            if(this.albumArray!==null)\r\n            {\r\n                const filteredItems = this.albumArray.slice(0, i).concat(this.albumArray.slice(i + 1, this.albumArray.length))\r\n                this.albumArray=filteredItems;\r\n                this.setState({ album: null })\r\n                const ins = document.getElementById('upImage').files.length;\r\n                this.Files.splice(id, 1);\r\n            }\r\n            ////console.log(this.Files);\r\n            this.setState({\r\n              cover_Image_video: '',\r\n              coverImageorVideo:null\r\n              });\r\n        }\r\n\r\n        textFileChange=e=>{\r\n\r\n          if (!e || !e.target || !e.target.files || e.target.files.length === 0) {\r\n            return;\r\n          }\r\n        \r\n          var filePath = e.target.value;            \r\n          // Allowing file type  .ogv\r\n          var allowedExtensions = /(\\.docx|\\.pdf)$/i;             \r\n          if (!allowedExtensions.exec(filePath)) \r\n          {\r\n              alert('Invalid file type');\r\n              e.target.value = '';\r\n              return false;\r\n          } \r\n\r\n            const name = e.target.files[0].name;\r\n            const lastDot = name.lastIndexOf('.');        \r\n            const fileName = name.substring(0, lastDot);\r\n            const ext = name.substring(lastDot + 1);\r\n\r\n            const file = e.target.files[0];\r\n            const type=  e.currentTarget.dataset.filetype; \r\n            ////console.log( e.target.files[0].type)   \r\n          if(ext==='docx')\r\n          {\r\n            this.setState({ textFile: e.target.files[0] }); \r\n            this.setState({\r\n                textFileUrl: URL.createObjectURL(file),\r\n                type:ext\r\n            });\r\n\r\n          }\r\n         else if(ext==='pdf')\r\n          {\r\n            this.setState({ pdfFile: e.target.files[0] }); \r\n            this.setState({\r\n                pdfFileUrl: URL.createObjectURL(file),\r\n                type:ext\r\n            });\r\n            ////console.log(URL.createObjectURL(file))\r\n          }   \r\n           \r\n   \r\n        }\r\n        onError(e) {\r\n           ////console.log('error in file-viewer');\r\n          }\r\n          onInputClick = (event) => {\r\n            if(event.target.name==='upImage' || event.target.name==='upVideo' || event.target.name==='upAudio' || event.target.name==='upText')\r\n                event.target.value = ''\r\n\r\n                this.setState({ \r\n                  audioFile: null ,\r\n                  audioData: '',\r\n                  textFile: null ,\r\n                  textFileUrl: '',\r\n                  videoData:'',\r\n                  videoFile:null,\r\n                  pdfFile:null,pdfFileUrl:''\r\n                }); \r\n                this.albumArray=[];\r\n        }\r\n         \r\n        onchangeCheck=(e)=>{\r\n\r\n          if(e.target.checked===true)\r\n          {\r\n            this.setState({\r\n              allowCustomertoPay:1,\r\n              showDiv:true,\r\n              price:0,isPriceDisabled:true\r\n            })\r\n            let chargesInfo=\"\";\r\n            let showIconCharges='none';\r\n            this.setState({chargesInfo,showIconCharges});\r\n          }\r\n          else\r\n          {\r\n            this.setState({\r\n              allowCustomertoPay:0,\r\n              showDiv:false,\r\n              isPriceDisabled:false\r\n            })\r\n\r\n            let chargesInfo=\"\";\r\n            let showIconCharges='none';\r\n            this.setState({chargesInfo,showIconCharges});\r\n          }\r\n        }\r\n    render() {\r\n      const {uploadPercentage} = this.state;\r\n        const longText = `\r\n        Aliquam eget finibus ante, non facilisis lectus. Sed vitae dignissim est, vel aliquam tellus.\r\n        Praesent non nunc mollis, fermentum neque at, semper arcu.\r\n        Nullam eget est sed sem iaculis gravida eget vitae justo.\r\n        `;\r\n        \r\n        const useStyles = {\r\n          button: {\r\n            margin: '5px',\r\n          },\r\n          customWidth: {\r\n            maxWidth: 500,\r\n            fontSize:'25px',\r\n           \r\n          },\r\n          noMaxWidth: {\r\n            maxWidth: 'none',\r\n          },\r\n        };\r\n        //let chargesMessage=\"You receive 90% of the transaction value minus a 2% transaction fee that is collected by our payment provider.\";\r\n        let chargesMessage=API.chargesMessage();\r\n        \r\n        const HtmlTooltip = withStyles((theme) => ({\r\n          arrow: {\r\n            color: theme.palette.common.black,\r\n          },\r\n          tooltip: {\r\n            backgroundColor: '#212529',\r\n            color: 'white',\r\n            maxWidth: '50%',\r\n            fontSize: theme.typography.pxToRem(10),\r\n            // border: '1px solid #dadde9',\r\n          },\r\n        }))(Tooltip);\r\n        \r\n        const iconStyle={\r\n            display:this.state.showIconCharges,\r\n            fontSize: \"23px\",\r\n            color: \"gray\"\r\n        }\r\n        const chargesStyle={\r\n          fontFamily: \"consolas\",\r\n          fontSize: \"13px\",\r\n          textTransform: \"capitalize\",\r\n          marginTop: \"-6%\",\r\n          fontWeight: \"bold\",\r\n          color: \"gray\",\r\n        }\r\n        const radioStyle={\r\n          color: \"#ff626f\",\r\n          fontWeight: \"600\",        \r\n        }\r\n\r\n        let typeOfProduct;\r\n        \r\n          typeOfProduct= <> <div className=\"col-md-8\">\r\n                              <label for=\"upImage\" style={{    marginTop: \"10px\"}}>\r\n                                Upload a Video or Audio             \r\n                              </label>\r\n                          </div>  \r\n                          <div className=\"col-md-10 offset-md-1\">           \r\n                            {\r\n                            this.state.videoData!=='NA' && this.state.videoData!=='' ?              \r\n                                    <video className=\"img-thumbnail-custom\" width=\"100%\" controls src={this.state.videoData} type=\"video/mp4\" >                                   \r\n                                    </video>\r\n                                    : null\r\n                            }\r\n                            {\r\n                            this.state.audioData!=='' ?     \r\n                                <audio autoplay controls src={this.state.audioData}>\r\n                                  The “audio tag is not supported by your browser.\r\n                                </audio>\r\n                                : \r\n                                null\r\n                            }\r\n                                  \r\n                           </div>  \r\n                          </>\r\n      \r\n\r\n    let type='video';\r\n    const popover = (\r\n      <Popover id=\"popover-basic\">\r\n         <button type=\"button\" className=\"pop-close\"><span aria-hidden=\"true\" onClick={this.hidePopover}>×</span>\r\n          <span className=\"sr-only\">Close</span>\r\n        </button>\r\n        <Popover.Title as=\"h6\"><h6>Select  video or Audio</h6>\r\n       \r\n        </Popover.Title>\r\n        <Popover.Content>\r\n          {           \r\n            type==='video' ?   \r\n            <>         \r\n             <label htmlFor=\"video\" style={{cursor:'pointer'}}><h6>Video</h6></label> <PersonalVideoIcon/>  <br/>\r\n             <label htmlFor=\"audio\" style={{cursor:'pointer'}}><h6>Audio</h6></label> <AudiotrackIcon/>  \r\n             </>            \r\n            : null\r\n          \r\n          }\r\n          \r\n        </Popover.Content>    \r\n       \r\n      </Popover>\r\n    );\r\n    const popover2 = (\r\n      <Popover id=\"popover-basic\" style={{zIndex:'99999',background: 'black',color:'#fff'}}  >\r\n         <button type=\"button\" className=\"pop-close\"><span aria-hidden=\"true\" onClick={this.hidePopover}>×</span>\r\n          <span className=\"sr-only\">Close</span>\r\n        </button>       \r\n        <Popover.Content style={{background: 'black',color:'#fff'}}>\r\n        {chargesMessage}\r\n          \r\n        </Popover.Content>    \r\n       \r\n      </Popover>\r\n    );\r\n        return (\r\n            <>\r\n                                          \r\n                            {/* <button class=\"btun\"  onClick={this.ModalOpen}><AddCircleOutlineIcon/> Add This</button> */}\r\n                            <button onClick={this.ModalOpen}><CreateIcon />     \r\n      </button>\r\n                          \r\n                 \r\n       <Modal\r\n        show={this.state.show}\r\n        onHide={this.ModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}         \r\n        size=\"lg\"\r\n        contentClassName=\"modal-radius\"\r\n        centered\r\n\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <p className=\"addnew-title\">Unlock content</p>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"direct-access-pop\" id=\"myform\">\r\n            <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n                <label>Choose Your File Type</label>\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <div className=\"choose-part\">\r\n                  <input type=\"radio\" id=\"chooseType_1\"  name=\"chooseType\" onClick={this.openBrowsFile('upImage')}/><label for=\"chooseType_1\"   style={this.state.radioStyle1}>Images</label>\r\n                </div>\r\n                <div className=\"choose-part\">\r\n                  <input type=\"radio\" id=\"chooseType_2\"  name=\"chooseType\" onClick={this.openBrowsFile('upVideo')}/><label for=\"chooseType_2\"  style={this.state.radioStyle2}>Video</label>\r\n                </div>\r\n                <div className=\"choose-part\">\r\n                  <input type=\"radio\" id=\"chooseType_3\"  name=\"chooseType\" onClick={this.openBrowsFile('upAudio')}/><label for=\"chooseType_3\"  style={this.state.radioStyle3}>Audio</label>\r\n                </div>\r\n                <div className=\"choose-part\">\r\n                  <input type=\"radio\" id=\"chooseType_4\"  name=\"chooseType\" onClick={this.openBrowsFile('upText')}/><label for=\"chooseType_4\"  style={this.state.radioStyle4}>Text or PDF</label>\r\n                </div>\r\n               \r\n                \r\n              </div>\r\n              <div className=\"col-md-12\" >                    \r\n                      <input type=\"file\" id=\"upImage\" name=\"upImage\" style={{ display: \"none\" }} accept=\"image/png, image/jpeg,image/gif\" onClick={this.onInputClick} onChange={this.imageonMultiChange}/>       \r\n                      <input type=\"file\" id=\"upVideo\" name=\"upVideo\" style={{ display: \"none\" }} accept=\"video/mp4\" onClick={this.onInputClick} onChange={this.videoonChange}/>       \r\n                      <input type=\"file\" id=\"upAudio\" name=\"upAudio\" style={{ display: \"none\" }} accept=\"audio/mp3\" onClick={this.onInputClick} onChange={this.audioChange} />\r\n                      <input type=\"file\" id=\"upText\" name=\"upText\"  data-filetype=\"docx\" style={{ display: \"none\" }}  onClick={this.onInputClick} accept=\".docx,.pdf\" onChange={this.textFileChange}/>       \r\n              </div>\r\n              \r\n              <div className=\"col-md-12\">\r\n                <div className=\"row\">\r\n                            {\r\n                              this.albumArray!==null &&  this.albumArray.length > 0 ?\r\n                                (this.albumArray || []).map((url,i) => (\r\n                                  <>                                  \r\n                                    <div className=\"col-md-3\">\r\n                                          <div className=\"img-grid\">                                                                             \r\n                                          <img src={url.includes('blob') ? url : process.env.REACT_APP_UPLOAD_URL+\"Profile/\"+this.props.JM_User_Profile_Url_plus_JM_ID+\"/\"+url} />\r\n                                          <div className=\"cls\"  onClick={this.cancelAlbum(i)}>x</div>\r\n                                          </div>\r\n                                      </div>\r\n                                    </>\r\n                                ))\r\n                                :\r\n                                null\r\n                            }\r\n                             <div className=\"col-md-8 offset-md-2\">\r\n                            {\r\n                               \r\n                                this.state.videoData!=='NA' && this.state.videoData!=='' ?              \r\n                                        <video className=\"img-thumbnail-custom\" width=\"100%\" controls \r\n                                        src={this.state.videoData.includes('blob') ? this.state.videoData : process.env.REACT_APP_UPLOAD_URL+\"Profile/\"+this.props.JM_User_Profile_Url_plus_JM_ID+\"/\"+this.state.videoData} type=\"video/mp4\" >                                   \r\n                                        </video>\r\n                                        : null\r\n                               \r\n                            }  \r\n                            {\r\n                            this.state.audioData!=='' ?     \r\n                                <audio autoplay controls src={this.state.audioData.includes('blob') ? this.state.audioData : process.env.REACT_APP_UPLOAD_URL+\"Profile/\"+this.props.JM_User_Profile_Url_plus_JM_ID+\"/\"+ this.state.audioData}>\r\n                                  The “audio tag is not supported by your browser.\r\n                                </audio>\r\n                                : \r\n                                null\r\n                            }\r\n                             </div>\r\n                             <div className=\"col-md-12\">\r\n                                {\r\n                                      this.state.textFileUrl!=='' && this.state.textFileUrl.includes('blob')===false?                           \r\n                                      \r\n                                          <a  target=\"_blank\" href={process.env.REACT_APP_UPLOAD_URL+\"Profile/\"+this.props.JM_User_Profile_Url_plus_JM_ID+\"/\"+ this.state.textFileUrl}>\r\n                                              View file\r\n                                          </a>\r\n                                        : this.state.textFileUrl!=='' && this.state.textFileUrl.includes('blob') ? \r\n                                          <FileViewer\r\n                                            fileType={this.state.type}\r\n                                            filePath={this.state.textFileUrl}\r\n                                            errorComponent={CustomErrorComponent}\r\n                                            onError={this.onError}/>    \r\n                                        :\r\n                                           null \r\n                                    \r\n                                  }\r\n\r\n                                {\r\n                                  this.state.pdfFileUrl!=='' && this.state.pdfFileUrl.includes('blob')===false?                                \r\n                                      \r\n                                        <a  target=\"_blank\" href={process.env.REACT_APP_UPLOAD_URL+\"Profile/\"+this.props.JM_User_Profile_Url_plus_JM_ID+\"/\"+ this.state.pdfFileUrl}>\r\n                                            View PDF file\r\n                                        </a>\r\n                                      : this.state.pdfFileUrl!=='' && this.state.pdfFileUrl.includes('blob') ? \r\n                                        <FileViewer\r\n                                        fileType={this.state.type}\r\n                                        filePath={this.state.pdfFileUrl}\r\n                                        errorComponent={CustomErrorComponent}\r\n                                        onError={this.onError}/>    \r\n                                        :\r\n                                        null \r\n                                    \r\n                                  }\r\n                                  \r\n                            </div>\r\n                          \r\n                        \r\n                </div>\r\n              </div>\r\n              <form>                          \r\n                <input type=\"file\" id=\"video\" accept=\".mp4\" style={{display:'none'}} onChange={this.videoonChange}/>      \r\n             </form>   \r\n             <form>                          \r\n                <input type=\"file\" id=\"audio\" accept=\"audio/*\" style={{display:'none'}} onChange={this.audioChange}/>      \r\n             </form>\r\n              <div className=\"col-md-12\">\r\n                <input type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleChange} className=\"form-control\" placeholder=\"Title\" />       \r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <textarea className=\"form-control area\" name=\"description\" value={this.state.description}  onChange={this.handleChange} \r\n                placeholder=\"enter description\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <input type=\"text\" name=\"price\" \r\n                value={this.state.price} \r\n                onChange={this.handleChange} \r\n                className=\"form-control\" placeholder=\" Price\"  disabled={this.state.isPriceDisabled}\r\n                onKeyPress={(event) => {\r\n                  if (!/[0-9]/.test(event.key)) {\r\n                    event.preventDefault();\r\n                  }\r\n                }}\r\n                \r\n                />       \r\n              </div>\r\n              <div className=\"col-md-12 desktopCharge\">\r\n                  <HtmlTooltip arrow\r\n                      title={\r\n                        <React.Fragment>\r\n                          <Typography color=\"inherit\">Transaction Info</Typography>                \r\n                          <p style={{fontFamily:'monospace',fontSize:'12px'}}>{chargesMessage}</p>\r\n                        </React.Fragment>\r\n                      } placement=\"top-start\"\r\n                    >\r\n                  <Button style={chargesStyle}>{this.state.chargesInfo}<i class=\"fa fa-question-circle\" aria-hidden=\"true\" \r\n                  style={iconStyle}></i></Button>\r\n                </HtmlTooltip>\r\n              </div>\r\n              <div className=\"col-md-12 mobileCharge\" style={{fontFamily: 'consolas', fontSize: '13px',textTransform: 'capitalize'}}>\r\n                      &nbsp;{this.state.chargesInfo}\r\n                     <OverlayTrigger  className=\"mobile\" style={chargesStyle} trigger=\"click\" placement=\"top\" overlay={popover2}>           \r\n                         <i class=\"fa fa-question-circle\" aria-hidden=\"true\"  style={iconStyle}></i>                     \r\n                      </OverlayTrigger >  \r\n                </div>    \r\n\r\n                \r\n                <div className=\"col-md-12\">\r\n                        <label>\r\n                               <strong>  \r\n                                  Settings \r\n                              </strong>     \r\n                       </label>\r\n                </div>                  \r\n                <div className=\"col-md-8 col-9\">\r\n                    <label >\r\n                    Let your followers pay what they want     \r\n                      </label>\r\n                </div>  \r\n              <div className=\"col-md-4 col-3\">\r\n                    \r\n                    <label class=\"switch\"  for=\"allowCustomertoPay\">\r\n                    <input type=\"checkbox\" id=\"allowCustomertoPay\" checked={this.state.allowCustomertoPay===1?true:false} onChange={this.onchangeCheck} />\r\n                        <div class=\"slider round\"></div>\r\n                      </label>\r\n                </div>\r\n                {\r\n                  this.state.showDiv===true ?      \r\n                  <>            \r\n                        <div className=\"col-md-6\">\r\n                        <label >\r\n                               <strong>  \r\n                                  Minimum Amount \r\n                              </strong>     \r\n                       </label>\r\n                        <input type=\"text\" name=\"min_amt\" \r\n                        value={this.state.min_amt}  onChange={this.handleChange} \r\n                        className=\"form-control\" placeholder=\"Enter Price\" \r\n                        onKeyPress={(event) => {\r\n                          if (!/[0-9]/.test(event.key)) {\r\n                            event.preventDefault();\r\n                          }\r\n                        }}\r\n                        />       \r\n                          <p style={{fontSize:'12px',fontWeight:'600'}}>{API.dynamicPriceMessage()}</p>    \r\n                      </div>\r\n                      <div className=\"col-md-6\" style={{display:'none'}}>\r\n                    <label >\r\n                               <strong>  \r\n                                  Suggested Amount \r\n                              </strong>     \r\n                       </label>\r\n                      <input type=\"text\" name=\"suggested_amt\" \r\n                      value={this.state.suggested_amt} onChange={this.handleChange} \r\n                      className=\"form-control\" placeholder=\"Enter Price\" \r\n                      onKeyPress={(event) => {\r\n                        if (!/[0-9]/.test(event.key)) {\r\n                          event.preventDefault();\r\n                        }\r\n                      }}\r\n                      />       \r\n                    </div>\r\n                  </>\r\n                  :\r\n                  null\r\n                }\r\n              { uploadPercentage > 0 && \r\n                  <>\r\n                        <ProgressBar animated  variant=\"success\" style={{width:'80%',margin: '15px'}} now={uploadPercentage} active label={`${uploadPercentage}%`} /> \r\n                                   \r\n                                   <span\r\n                                        style={{cursor:'pointer'}}\r\n                                        onClick={this.cancelUpload}\r\n                                    >\r\n                                        <i className=\"fa fa-close\" style={{fontSize:'22px',marginTop: '56%'}}></i>\r\n                                    </span>\r\n                   </>\r\n              }\r\n            </div>\r\n            <div className=\"btun-box\">\r\n              <button className=\"btun\" id=\"btn_save\" disabled={this.state.disabledBtn} onClick={this.nextClick}> {this.state.BtnName} <NavigateNextIcon/></button>\r\n          \r\n            </div>\r\n            <p style={{fontSize: '15px',color: '#ff746e',padding:'5px'}}>{this.state.errMsg}</p>\r\n          </div>\r\n        </Modal.Body>\r\n\r\n      </Modal>\r\n\r\n    \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nEditUnlockContent2.propTypes = {\r\n\r\n};\r\n\r\nexport default EditUnlockContent2;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\PopGift.js",["2511","2512","2513","2514"],"import React, { Component } from 'react';\r\n// import {Button} from 'react-bootstrap'\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport API from '../services/API';\r\nclass PopGift extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      openModel: false,\r\n      show: false,\r\n      open: false,\r\n      DA_Title: '',\r\n      price: 0,\r\n      chargesInfo: '',\r\n      showIconCharges: 'none',\r\n      allowCustomertoPay: 0,\r\n      min_amt: '',\r\n      suggested_amt: '',\r\n      showDiv: false,\r\n      isPriceDisabled:false,\r\n    }\r\n  }\r\n  ModalClose = () => {\r\n    this.setState({\r\n      openModel: false,\r\n      show: false,\r\n      DA_Title: '',\r\n      price: 0\r\n    });\r\n\r\n  }\r\n  ModalOpen = () => {\r\n    this.setState({ openModel: true, show: true,\r\n      showDiv:false,allowCustomertoPay:0, price: 0,showIconCharges:'none',chargesInfo:'',  isPriceDisabled:false,\r\n    \r\n    });\r\n  }\r\n  openCollapse = () => {\r\n    !this.state.open ?\r\n      this.setState({ open: true })\r\n      :\r\n      this.setState({ open: false })\r\n\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    let val = parseFloat(e.target.value);\r\n    this.setState({ [e.target.name]: e.target.value })\r\n    if (e.target.name === 'price' && val > 0)\r\n    {\r\n              let fee=val * API.razorPayTax();\r\n              let gst=fee * API.razorPayGST();         \r\n              let razorPay=(fee+gst); // 1.65 + 0.297\r\n              let TenPer=(val - razorPay) * 10/100; // 10 if val is 100                  \r\n              let charges= val - razorPay - TenPer; // 100 - 1.65- 0.297                      \r\n              let chargesInfo=\"You'll receive INR \"+ charges.toFixed(2) + \" \";\r\n\r\n\r\n      let showIconCharges = 'block';\r\n      this.setState({ chargesInfo, showIconCharges });\r\n    }\r\n    else{\r\n      this.setState({ chargesInfo:'', showIconCharges:'none' });\r\n    }\r\n  }\r\n  SaveItem = e => {\r\n\r\n\r\n\r\n    if ((isNaN(parseInt(this.state.price)) || parseInt(this.state.price) === 0 ) && this.state.allowCustomertoPay === 0)\r\n    {\r\n      document.getElementById('msg').style.color = 'red';\r\n      document.getElementById('msg').innerHTML = '* Enter Price';\r\n      return false;\r\n    }\r\n    //23-aug-2021 dynamic pricing\r\n    if (this.state.allowCustomertoPay === 1) \r\n    {\r\n      if (isNaN(parseInt(this.state.min_amt)) || parseInt(this.state.min_amt) === 0) {\r\n        document.getElementById('msg').style.color = 'red';\r\n        document.getElementById('msg').innerHTML = '* Enter minimum amount';\r\n        return false;\r\n      }\r\n    }\r\n\r\n\r\n\r\n   \r\n  \r\n          let flagData = {\r\n            DA_DA_ID: 0,\r\n            JM_ID: this.props.state.JM_ID,\r\n            DA_Title: this.state.DA_Title,\r\n            DA_Price: this.state.price,\r\n            DA_Type: 'gifts',\r\n            image: this.props.src,\r\n            DA_Allow_Cust_Pay: this.state.allowCustomertoPay,\r\n            DA_Min_Amount: parseInt(this.state.min_amt),\r\n            DA_Suggested_Amont: parseInt(this.state.suggested_amt)\r\n      };\r\n      const flag=API.encryptData(flagData);\r\n\r\n\r\n      var JSONdata = {\r\n        flag: flag\r\n      };\r\n\r\n\r\n    const API_url = process.env.REACT_APP_API_URL + \"admin/addGifts\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\", \"authorization\": API.getAuth(), \"id\": API.getId() },\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n\r\n        console.log(data)\r\n        if (data.status === 1) \r\n        {\r\n          this.props.showToast('success', 'A Gift is added to profile');\r\n          this.ModalClose();\r\n          this.setState({\r\n            DA_Title: '',\r\n            price: 0\r\n          });\r\n\r\n        }\r\n        else {\r\n\r\n          API.minusResponse(data);\r\n          this.props.showToast('failed', 'internal error');\r\n        }\r\n      }).catch(error => {\r\n        document.getElementById(\"msg\").innerText = 'Network error occured';\r\n      });\r\n  }\r\n  hidePopover = () => {\r\n    document.getElementById(\"popover-basic\").style.display = 'none';\r\n  }\r\n\r\n  //dunamic price\r\n\r\n  onCheckChange = (e) => {\r\n\r\n    if (e.target.checked === true) {\r\n      this.setState({\r\n        allowCustomertoPay: 1,\r\n        showDiv: true,      \r\n        isPriceDisabled:true,chargesInfo:'', showIconCharges:'none'\r\n      })\r\n  \r\n    }\r\n    else {\r\n      this.setState({\r\n        allowCustomertoPay: 0,\r\n        showDiv: false,isPriceDisabled:false\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    const { uploadPercentage } = this.state;\r\n    const longText = `\r\n    Aliquam eget finibus ante, non facilisis lectus. Sed vitae dignissim est, vel aliquam tellus.\r\n    Praesent non nunc mollis, fermentum neque at, semper arcu.\r\n    Nullam eget est sed sem iaculis gravida eget vitae justo.\r\n    `;\r\n\r\n    const useStyles = {\r\n      button: {\r\n        margin: '5px',\r\n      },\r\n      customWidth: {\r\n        maxWidth: 500,\r\n        fontSize: '25px',\r\n\r\n      },\r\n      noMaxWidth: {\r\n        maxWidth: 'none',\r\n      },\r\n    };\r\n    //let chargesMessage=\"You receive 90% of the transaction value minus a 2% transaction fee that is collected by our payment provider.\";\r\n    let chargesMessage = API.chargesMessage();\r\n\r\n    const HtmlTooltip = withStyles((theme) => ({\r\n      arrow: {\r\n        color: theme.palette.common.black,\r\n      },\r\n      tooltip: {\r\n        backgroundColor: '#212529',\r\n        color: 'white',\r\n        maxWidth: '50%',\r\n        fontSize: theme.typography.pxToRem(10),\r\n        // border: '1px solid #dadde9',\r\n      },\r\n    }))(Tooltip);\r\n\r\n    const iconStyle = {\r\n      display: this.state.showIconCharges,\r\n      fontSize: \"23px\",\r\n      color: \"gray\"\r\n    }\r\n    const chargesStyle = {\r\n      fontFamily: \"consolas\",\r\n      fontSize: \"13px\",\r\n      textTransform: \"capitalize\",\r\n      marginTop: \"-6%\",\r\n      fontWeight: \"bold\",\r\n      color: \"gray\",\r\n    }\r\n    const popover2 = (\r\n      <Popover id=\"popover-basic\" style={{ zIndex: '99999', background: 'black', color: '#fff' }}  >\r\n        <button type=\"button\" className=\"pop-close\"><span aria-hidden=\"true\" onClick={this.hidePopover}>×</span>\r\n          <span className=\"sr-only\">Close</span>\r\n        </button>\r\n        <Popover.Content style={{ background: 'black', color: '#fff' }}>\r\n          {chargesMessage}\r\n\r\n        </Popover.Content>\r\n\r\n      </Popover>\r\n    );\r\n    return (\r\n      <>\r\n        <button class=\"btun\" onClick={this.ModalOpen}><AddCircleOutlineIcon /> Add This</button>\r\n        <Modal\r\n          show={this.state.show}\r\n          onHide={this.ModalClose}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n          centered\r\n\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              <p className=\"addnew-title\">Add Gift Options</p>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"direct-access-pop\">\r\n              <div className=\"row\">\r\n\r\n                <div className=\"col-md-6 offset-md-3\">\r\n                  <div className=\"image\">\r\n                    <img src={this.props.src} />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <input type=\"text\" name=\"DA_Title\" value={this.state.DA_Title} onChange={this.handleChange} className=\"form-control\" placeholder=\"Set Title\" />\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <input type=\"text\" name=\"price\" value={this.state.price} disabled={this.state.isPriceDisabled}\r\n                    onKeyPress={(event) => {\r\n                      if (!/[0-9]/.test(event.key)) {\r\n                        event.preventDefault();\r\n                      }\r\n                    }}\r\n                    onChange={this.handleChange} className=\"form-control\" placeholder=\"Set Price\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-12 desktopCharge\">\r\n                <HtmlTooltip arrow\r\n                  title={\r\n                    <React.Fragment>\r\n                      <Typography color=\"inherit\">Transaction Info</Typography>\r\n                      <p style={{ fontFamily: 'monospace', fontSize: '12px' }}>{chargesMessage}</p>\r\n                    </React.Fragment>\r\n                  } placement=\"top-start\"\r\n                >\r\n                  <Button style={chargesStyle}>{this.state.chargesInfo}<i class=\"fa fa-question-circle\" aria-hidden=\"true\"\r\n                    style={iconStyle}></i></Button>\r\n                </HtmlTooltip>\r\n              </div>\r\n\r\n              <div className=\"col-md-12 mobileCharge\" style={{ fontFamily: 'consolas', fontSize: '13px', textTransform: 'capitalize' }}>\r\n                &nbsp;{this.state.chargesInfo}\r\n                <OverlayTrigger className=\"mobile\" style={chargesStyle} trigger=\"click\" placement=\"top\" overlay={popover2}>\r\n                  <i class=\"fa fa-question-circle\" aria-hidden=\"true\" style={iconStyle}></i>\r\n                </OverlayTrigger >\r\n              </div>\r\n\r\n\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                  <label >\r\n                    <strong>\r\n                      Settings\r\n                    </strong>\r\n                  </label>\r\n                </div>\r\n                <div className=\"col-md-8 col-9\">\r\n                  <label >\r\n                    Let your followers pay what they want\r\n                  </label>\r\n\r\n                </div>\r\n                <div className=\"col-md-4 col-3\">\r\n                  <label className=\"switch\" for=\"allowCustomertoPay\">\r\n                    <input type=\"checkbox\" id=\"allowCustomertoPay\" onChange={this.onCheckChange} />\r\n                    <div className=\"slider round\"></div>\r\n                  </label>\r\n                </div>\r\n                {\r\n                this.state.showDiv === true ?\r\n                  <>\r\n                    <div className=\"col-md-6\">\r\n                      <label >\r\n                        <strong>\r\n                          Minimum Amount\r\n                        </strong>\r\n                      </label>\r\n                      <input type=\"text\" name=\"min_amt\"\r\n                        value={this.state.min_amt} onChange={this.handleChange}\r\n                        className=\"form-control\" placeholder=\"Enter Price\"\r\n                        onKeyPress={(event) => {\r\n                          if (!/[0-9]/.test(event.key)) {\r\n                            event.preventDefault();\r\n                          }\r\n                        }}\r\n                      />\r\n                      <p style={{ fontSize: '12px', fontWeight: '600' }}>{API.dynamicPriceMessage()}</p>\r\n                    </div>\r\n                    <div className=\"col-md-6\" style={{ display: 'none' }}>\r\n                      <label >\r\n                        <strong>\r\n                          Suggested Amount\r\n                        </strong>\r\n                      </label>\r\n                      <input type=\"text\" name=\"suggested_amt\"\r\n                        value={this.state.suggested_amt} onChange={this.handleChange}\r\n                        className=\"form-control\" placeholder=\"Enter Price\"\r\n                        onKeyPress={(event) => {\r\n                          if (!/[0-9]/.test(event.key)) {\r\n                            event.preventDefault();\r\n                          }\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                  :\r\n                  null\r\n              }\r\n              </div>\r\n           \r\n              <div className=\"btun-box\">\r\n                <button className=\"btun\" onClick={this.SaveItem}>Save Item</button>\r\n                <span id=\"msg\"></span>\r\n              </div>\r\n            </div>\r\n\r\n            {/* <BootstrapSwitchButton\r\n                checked={false}\r\n                onlabel='Admin User'\r\n                offlabel='Regular User'\r\n                onChange={(checked: boolean) => {\r\n                    this.setState({ showDiv: checked })\r\n                }}\r\n            /> */}\r\n\r\n          </Modal.Body>\r\n\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default PopGift;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\header_footer\\ProfileHeader.js",[],"E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\header_footer\\FooterClass.js",[],"E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\header_footer\\MainHeader.js",["2515","2516"],"import React,{Component} from 'react'\r\n\r\nimport { NavLink,   } from 'react-router-dom'\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n//import $ from 'jquery'\r\n\r\nimport Header_Updation from './Header_Updation';\r\nclass MainHeader extends Component\r\n {\r\n     constructor(props) {\r\n       super(props)\r\n     \r\n       this.state = {\r\n          Email:sessionStorage.getItem('JM_Email'),\r\n          JM_ID:sessionStorage.getItem('JM_ID')\r\n       }\r\n     }\r\n     componentDidMount()\r\n     {\r\n        // var height = window.innerHeight;\r\n        // var width = window.innerWidth; \r\n        // $('#sidebar-btn').on('click', function() {\r\n        //     $('#sidebar').addClass('visible');\r\n        //   });\r\n        //    $('#cls').on('click', function() {\r\n        //     $('#sidebar').removeClass('visible');\r\n        //   });\r\n     }\r\n     render(){\r\n         if(this.state.JM_ID > 0 && this.state.JM_ID !==\"\")\r\n         {\r\n             return (\r\n\r\n                    <div className=\"main-header\">  \r\n                        <Header_Updation/>\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <div className=\"logo\">\r\n                                            <NavLink to=\"/\"><img src=\"Logo.png\" alt=\"\"></img></NavLink>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-8\">\r\n                                        <div className=\"header-button\">\r\n                                         <NavLink to=\"/logout\" className=\"btun\">Logout</NavLink>                                            \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                        </div>\r\n                    </div>       \r\n             \r\n             );\r\n         }\r\n         else\r\n         {\r\n            return (\r\n                <>\r\n                    <div className=\"main-header navbar-expand-sm\">\r\n                         <Header_Updation/>\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                            <button className=\"navbar-toggler toggle-bar\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n                                                 <MenuIcon/>\r\n                                            </button>\r\n                             \r\n                                            \r\n\r\n                                        <div className=\"logo\">\r\n                                            <NavLink to=\"/\"><img src=\"Logo.png\" alt=\"\"></img></NavLink>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-8\">\r\n                                        <div className=\"header-button collapse navbar-collapse\" id=\"collapsibleNavbar\"> \r\n                                            <a href=\"/how-it-work\" className=\"btun\">How it Works</a>\r\n                                            {/* <NavLink to=\"/browse\" className=\"btun\">Browse</NavLink> */}\r\n                                            {/* <a href=\"/signin\" className=\"btun\">Login</a> */}\r\n                                            <NavLink to=\"/signin\" className=\"btun\">Login</NavLink> \r\n                                            <NavLink to=\"/join\" className=\"btun btn-1\">Sign Up</NavLink> \r\n\r\n                                          \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            );\r\n         }\r\n  \r\n    }\r\n\r\n }\r\nexport default MainHeader\r\n\r\n\r\n","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\services\\API.js",["2517","2518","2519","2520","2521","2522","2523","2524","2525","2526","2527","2528","2529","2530","2531","2532","2533"],"\r\n//,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n//import API  from '../services/API';\r\n\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport cryptoRandomString from 'crypto-random-string';\r\nimport CryptoJS  from \"crypto-js\"\r\nimport validator from 'validator';\r\nimport isWebview from 'is-ua-webview'\r\n\r\n\r\nimport {\r\n  faInstagram,\r\n  faFacebookF,\r\n  faYoutube,\r\n  faSnapchatGhost,\r\n  faLinkedinIn,\r\n  faTwitch,\r\n  faTwitter,\r\n  faPinterestP,\r\n  faSpotify,\r\n  faDiscord,\r\n  faMedium,\r\n  faWhatsapp\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {\r\n  faGlobe,\r\n  faShoppingCart,\r\n  faEnvelope,\r\n  faHandPaper\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst API={\r\n  postData:async function(JSONdata,apiName,ext=\"\")\r\n  {\r\n    try \r\n    {\r\n      let response; \r\n      const API_url =  process.env.REACT_APP_API_URL + \"admin/\"+apiName;  \r\n        response = await fetch(API_url, {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" ,\"authorization\": this.getAuth(),\"id\":this.getId(),'ext':ext},\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      const data = await response.json();\r\n      return data;\r\n      \r\n    } \r\n    catch (error) \r\n    {\r\n      //alert(\"network error, try later\");\r\n    }\r\n  },\r\n \r\n  doClick: function(JSONdata) \r\n  {      \r\n    const API_url = process.env.REACT_APP_API_URL + \"admin/updateClick\";   \r\n      return  fetch(API_url,\r\n        {\r\n          method: 'post',\r\n          headers: { \"Content-Type\": \"application/json\" ,\"authorization\": this.getAuth(),\"id\":this.getId()},\r\n          body: JSON.stringify(JSONdata)\r\n        })\r\n        .then((response) => response.json())\r\n        .then(data => {\r\n          //console.log(data);\r\n          return data;  \r\n        }).catch(error => console.warn(error));\r\n  },\r\n  updateStepStatus: async function(JSONdata)\r\n  {\r\n    if(JSONdata.JM_ID > 0)\r\n    {\r\n      const API_url = process.env.REACT_APP_API_URL + \"admin/updateStepStatus\";   \r\n      return  fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" ,\"authorization\": this.getAuth(),\"id\":this.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        ////console.log(data);\r\n        return data;  \r\n      }).catch(error => console.warn(error));\r\n    }\r\n    \r\n  },\r\n  updateToolStep: function(id)\r\n  {\r\n\r\n        if(id===2)\r\n        {              \r\n          document.getElementById('tool_bio').style.display='none';\r\n      \r\n          document.getElementById('tool_drag_part').style.display='none';   \r\n          document.getElementById('tool_preview').style.display='none';\r\n          // document.getElementById('tool_design').style.display='none';\r\n          // document.getElementById('tool_stat').style.display='none';\r\n          document.getElementById('tool_setting').style.display='none';   \r\n          //document.getElementById('tool_notify').style.display='none';\r\n          document.getElementById('tool_page_link').style.display='none';\r\n          \r\n          document.getElementById('tool_new_item').style.display='block';\r\n          this.scrollDiv('profilePart',id);\r\n        }\r\n        if(id===3)\r\n        {\r\n          document.getElementById('tool_new_item').style.display='none';\r\n          document.getElementById('tool_drag_part').style.display='block';   \r\n          this.scrollDiv('profilePart',id);\r\n        }\r\n        if(id===4)\r\n        {          \r\n\r\n          document.getElementById('tool_drag_part').style.display='none';  \r\n          document.getElementById('tool_preview').style.display='block';   \r\n        \r\n        }\r\n        if(id===5)\r\n        {      \r\n          document.getElementById('tool_preview').style.display='none';         \r\n          document.getElementById('tool_design').style.display='block';   \r\n          this.scrollDiv('profilePart',id);\r\n        }\r\n        if(id===6)\r\n        {            \r\n          document.getElementById('tool_design').style.display='none';  \r\n          document.getElementById('tool_stat').style.display='block';  \r\n        }\r\n        if(id===7)\r\n        {          \r\n          document.getElementById('tool_stat').style.display='none';  \r\n          document.getElementById('tool_setting').style.display='block'; \r\n          this.scrollDiv('profilePart',id); \r\n        }\r\n        if(id===8)\r\n        {\r\n          var h=window.screen.height;\r\n          var w=window.screen.width;\r\n          if(w >= 480) \r\n          {\r\n            document.getElementById('tool_setting').style.display='none'; \r\n            document.getElementById('tool_notify').style.display='block'; \r\n          }\r\n          else\r\n          {\r\n            document.getElementById('sidemenu').click();\r\n            document.getElementById('tool_setting').style.display='none'; \r\n            document.getElementById('tool_notify_top').style.display='block'; \r\n          }\r\n    \r\n          \r\n          // this.scrollDiv('profilePart',id); \r\n        }\r\n        if(id===9)\r\n        {          \r\n\r\n          var h=window.screen.height;\r\n          var w=window.screen.width;\r\n          if(w >= 480) \r\n          {\r\n            document.getElementById('tool_notify').style.display='none'; \r\n            document.getElementById('tool_page_link').style.display='block'; \r\n          }\r\n          else\r\n          {\r\n              document.getElementById('cls').click();                \r\n              document.getElementById('tool_notify_top').style.display='none'; \r\n              document.getElementById('tool_page_link').style.display='block';\r\n              this.scrollDiv('profilePart',id); \r\n          }\r\n        }\r\n        \r\n  },\r\n  updateStepsClose: async function(id)\r\n  { \r\n  let JM_Email=localStorage.getItem('JM_Email');\r\n  let JM_ID=parseInt(localStorage.getItem('JM_ID'));\r\n  var JSONdata={\r\n    JM_ID:JM_ID\r\n  }\r\n  let data=await API.updateStepStatus(JSONdata);\r\n // console.log(data)    \r\n  document.getElementById(id).style.display = data.status===1 ? 'none' : 'block';\r\n\r\n  },\r\n  scrollDiv:function(divId,id)\r\n  {\r\n  var div = document.getElementById(divId);\r\n  var scrollHeight = div.scrollHeight;\r\n  // var scrollTop = div.scrollTop;\r\n  var h=window.screen.height;\r\n  var w=window.screen.width;\r\n  if(w >= 480)  // web\r\n  {\r\n    if(id===2) \r\n    {\r\n        document.getElementById(divId).scrollTop = 200;\r\n    }  \r\n    if(id===3) \r\n    {\r\n      document.getElementById(divId).scrollTop = 500;           \r\n    }  \r\n    if(id===7) \r\n    {\r\n      document.getElementById(divId).scrollTop = 0;           \r\n    }  \r\n  }  \r\n  else // mobile\r\n  {\r\n    if(id===2) \r\n    {           \r\n      window.scroll(0, 500)\r\n    }  \r\n    if(id===3) \r\n    {\r\n      window.scroll(0, 800)      \r\n    }  \r\n    if(id===5) \r\n    {\r\n      window.scroll(0, 0)                     \r\n    }  \r\n    if(id===7) \r\n    {\r\n      window.scroll(0, 150)                     \r\n    }  \r\n    if(id===9) \r\n    {\r\n      window.scroll(0, 500)                     \r\n    }  \r\n  }  \r\n    \r\n  },\r\n  updateSeen: async function()\r\n  {\r\n       try {\r\n        \r\n              const API_url = process.env.REACT_APP_API_URL+ \"admin/updateSeen\";\r\n              const response=await fetch(API_url,{\r\n                  method: 'post',\r\n                  headers: { \"Content-Type\": \"application/json\" ,\"authorization\": this.getAuth(),\"id\":this.getId()},               \r\n                });\r\n              const data=await response.json();             \r\n              //window.location.href='/view-notification'\r\n            \r\n       } \r\n       catch (error) \r\n       {\r\n         alert('internal error')\r\n       }\r\n     \r\n  },\r\n  ShowNotification: async function()\r\n  {\r\n          var id = parseInt(localStorage.getItem('JM_ID'));  \r\n          var JSONdata = {\r\n            JM_ID: id\r\n          };   \r\n            const API_url = process.env.REACT_APP_API_URL+ \"admin/GetAllRequest\";\r\n            const response=await fetch(API_url,{\r\n                method: 'post',\r\n                headers: { \"Content-Type\": \"application/json\" ,\"authorization\": this.getAuth(),\"id\":this.getId()},\r\n                body: JSON.stringify(JSONdata)\r\n              });\r\n            const data=await response.json();\r\n            return data;\r\n        \r\n  },\r\n  makeOrderBy: function(type,arr,key)\r\n  {\r\n    if(type==='desc')\r\n    {\r\n      arr.sort( function ( a, b ) { return b.key - a.key; } );\r\n    }\r\n    if(type==='asec')\r\n    {\r\n      arr.sort( function ( a, b ) { return a.key - b.key; } );\r\n    }\r\n    return arr;\r\n  },\r\n  validatePhone:async function(phone)\r\n  {\r\n          try {\r\n            var id = parseInt(localStorage.getItem('JM_ID'));\r\n            var JSONdata = {\r\n              JM_Phone : phone,\r\n              JM_ID:id\r\n            };   \r\n            const API_url = process.env.REACT_APP_API_URL+ \"admin/isAvailablePhone\";\r\n            const response=await fetch(API_url,{\r\n                method: 'post',\r\n                headers: { \"Content-Type\": \"application/json\" ,\"authorization\": this.getAuth(),\"id\":this.getId()},\r\n                body: JSON.stringify(JSONdata)\r\n              });\r\n            const data=await response.json();             \r\n            // console.log(data)\r\n            if(data.status===1)\r\n              return true; // available\r\n            else\r\n              return false; // not available\r\n          \r\n      } \r\n      catch (error) \r\n      {\r\n       alert('internal error')\r\n       return false;\r\n      }\r\n  },\r\n  validatePhoneBank:async function(phone)\r\n  {\r\n          try {\r\n            var id = parseInt(localStorage.getItem('JM_ID'));\r\n            var JSONdata = {\r\n              JM_Phone_Bank : phone,\r\n              JM_ID:id\r\n            };   \r\n            const API_url = process.env.REACT_APP_API_URL+ \"admin/isAvailablePhoneBank\";\r\n            const response=await fetch(API_url,{\r\n                method: 'post',\r\n                headers: { \"Content-Type\": \"application/json\" ,\"authorization\": this.getAuth(),\"id\":this.getId()},\r\n                body: JSON.stringify(JSONdata)\r\n              });\r\n            const data=await response.json();             \r\n            // console.log(data)\r\n            if(data.status===1)\r\n              return true; // available\r\n            else\r\n              return false; // not available\r\n          \r\n      } \r\n      catch (error) \r\n      {\r\n       alert('internal error')\r\n       return false;\r\n      }\r\n  },\r\n\r\n  updatePhone : async function(JSONdata)\r\n  {\r\n        try {\r\n            \r\n          const API_url = process.env.REACT_APP_API_URL+ \"admin/updatePhone\";\r\n          const response=await fetch(API_url,{\r\n              method: 'post',\r\n              headers: { \"Content-Type\": \"application/json\" ,\"authorization\": this.getAuth(),\"id\":this.getId()},\r\n              body: JSON.stringify(JSONdata)\r\n            });\r\n          const data=await response.json();             \r\n          //console.log(data)\r\n          if(data.status===1)\r\n            return true; // available\r\n          else\r\n            return false; // not available\r\n        \r\n    } \r\n    catch (error) \r\n    {\r\n      alert('internal error')\r\n      return false;\r\n    }\r\n  },\r\n  matchNumberPattern:function(input_str)\r\n  {\r\n    var re = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,10}$/im;\r\n    return re.test(input_str);\r\n  },\r\n  GetDummyImageCarousel:function(param)\r\n  {\r\n    const default_image1=\"images/no_img_carousel.jpg\";\r\n    const default_image2=\"images/no_img_carousel.jpg\";\r\n    const default_image3=\"images/no_img_carousel.jpg\";\r\n    if(param===1)\r\n      return default_image1;\r\n    if(param===2)\r\n      return default_image2;\r\n    if(param===3)\r\n      return default_image3;\r\n  },\r\n  GetDummyChoosImageCarousel:function(param)\r\n  {\r\n    const default_image1='images/choose_img1.jpg';\r\n    const default_image2='images/choose_img2.jpg';\r\n    const default_image3='images/choose_img3.jpg';\r\n    if(param===1)\r\n      return default_image1;\r\n    if(param===2)\r\n      return default_image2;\r\n    if(param===3)\r\n      return default_image3;\r\n  },\r\n  GetSlidingInterval:function()\r\n  {\r\n    const time=10000;\r\n    return time;\r\n  },\r\n  updateNotiPref:async function(JSONdata)\r\n  {\r\n        \r\n        try {\r\n                \r\n          const API_url = process.env.REACT_APP_API_URL+ \"admin/updateNotiPref\";\r\n          const response=await fetch(API_url,{\r\n              method: 'post',\r\n              headers: { \"Content-Type\": \"application/json\" ,\"authorization\": this.getAuth(),\"id\":this.getId()},\r\n              body: JSON.stringify(JSONdata)\r\n            });\r\n          const data=await response.json();             \r\n         return data;\r\n        \r\n    } \r\n    catch (error) \r\n    {\r\n      alert('internal error')\r\n      return false;\r\n    }\r\n  },\r\n  EmailValidation:async function(email)\r\n  {\r\n    if (email.length > 0 && email.includes('@') && email.includes('.')) \r\n    {   \r\n      try {\r\n       const JSONdata={\r\n          JM_Email: email\r\n        }\r\n              const API_url = process.env.REACT_APP_API_URL+ \"admin/ValidateEmail\";\r\n              const response=await fetch(API_url,{\r\n                  method: 'post',\r\n                  headers: { \"Content-Type\": \"application/json\" ,\"authorization\": this.getAuth(),\"id\":this.getId()},\r\n                  body: JSON.stringify(JSONdata)\r\n                });\r\n              const data=await response.json();             \r\n             return data;\r\n            \r\n        } \r\n        catch (error) \r\n        {\r\n          alert('internal error')\r\n          return false;\r\n        }\r\n    }\r\n    else\r\n    {\r\n      var data={\r\n        status:2\r\n      }\r\n      return data;\r\n    }\r\n  },\r\n  validReferralCode:async function(JM_Referral)\r\n  {\r\n    if (JM_Referral.length > 0 ) \r\n    {   \r\n      try {\r\n            var JSONdata = {\r\n              code: JM_Referral,\r\n            };\r\n              const API_url = process.env.REACT_APP_API_URL+ \"admin/validReferralCode\";\r\n              const response=await fetch(API_url,{\r\n                  method: 'post',\r\n                  headers: { \"Content-Type\": \"application/json\" ,\"authorization\": this.getAuth(),\"id\":this.getId()},\r\n                  body: JSON.stringify(JSONdata)\r\n                });\r\n              const data=await response.json();             \r\n              return data;\r\n            \r\n        } \r\n        catch (error) \r\n        {\r\n          var data={\r\n            status:0\r\n          }\r\n          return data;\r\n        }\r\n    }   \r\n  },\r\n  isAvailablePhone_by_phone:async function(phone)\r\n  {\r\n          try {      \r\n            var JSONdata = {\r\n              JM_Phone : phone,          \r\n            };   \r\n            const API_url = process.env.REACT_APP_API_URL+ \"admin/isAvailablePhone_by_phone\";\r\n            const response=await fetch(API_url,{\r\n                method: 'post',\r\n                headers: { \"Content-Type\": \"application/json\" ,\"authorization\": this.getAuth(),\"id\":this.getId()},\r\n                body: JSON.stringify(JSONdata)\r\n              });\r\n            const data=await response.json();             \r\n            //console.log(data)\r\n            if(data.status===1)\r\n              return true; // available\r\n            else\r\n              return false; // not available\r\n          \r\n      } \r\n      catch (error) \r\n      {\r\n          alert('internal error')\r\n         return false;\r\n      }\r\n  },\r\n  SocialIcons:function(iconName)\r\n  {\r\n    \r\n    var componentLookup = {\r\n      faInstagram,\r\n      faFacebookF,\r\n      faYoutube,\r\n      faSnapchatGhost,\r\n      faLinkedinIn,\r\n      faTwitch,\r\n      faTwitter,\r\n      faPinterestP,\r\n      faSpotify,\r\n      faGlobe,\r\n      faShoppingCart,\r\n      faEnvelope,\r\n      faHandPaper,\r\n      faDiscord,\r\n      faMedium,\r\n      faWhatsapp\r\n      \r\n    }\r\n\r\n     return componentLookup[iconName]\r\n  },\r\n  GetCurDate:function(min=1)\r\n  {\r\n    var utc = new  Date(Date.now() + min * 24 * 60 * 60 * 1000).toJSON().slice(0,10).replace(/-/g,'-');\r\n    return utc;\r\n  },\r\n  ConvertTimeTo12 : function(time){\r\n\r\n    var parts = time.split(':');\r\n    var hours = parseInt(parts[0]);\r\n    var minutes = parts[1];\r\n  \r\n    if(hours >= 12){\r\n      var newhours = parseInt(hours) - 12;\r\n      var meridiem = \"pm\";\r\n    }else{\r\n      var newhours = parseInt(hours);\r\n      var meridiem = \"am\";\r\n    }\r\n  \r\n    if(newhours == 0) newhours = \"12\";\r\n    var newtime = newhours + \":\" + minutes + \" \" + meridiem;\r\n  \r\n    return newtime;\r\n  },\r\n  WaitForSecond:function(second)\r\n  {\r\n    setTimeout(function() {            \r\n     }, second); \r\n  },\r\n  SplitCarouselTitle:function(carousel)\r\n  {\r\n    var data;\r\n    if(carousel.length > 2 )\r\n    {\r\n        var description = carousel.description.replace(/\\'/g, '\"');\r\n         data=JSON.parse(description);\r\n         if(data.length===3)\r\n         {\r\n            this.setState({\r\n                carousel_title_1:data[0],\r\n                carousel_title_2:data[1],\r\n                carousel_title_3:data[2],\r\n            })\r\n         }\r\n    }\r\n  },\r\n  razorpay_x:async function(JSONdata)\r\n  {\r\n    try {                      \r\n            const API_url = process.env.REACT_APP_API_URL+ \"admin/createContact\";\r\n            const response=await fetch(API_url,{\r\n                method: 'post',\r\n                headers: { \"Content-Type\": \"application/json\" ,\"authorization\": this.getAuth(),\"id\":this.getId()},\r\n                body: JSON.stringify(JSONdata)\r\n              });\r\n            const data=await response.json();             \r\n            return data;\r\n          \r\n      } \r\n      catch (error) \r\n      {\r\n        alert('internal error')\r\n        return false;\r\n      }\r\n  },\r\n  updateJoiningMaster:async function(value,colName,tableId)\r\n  {\r\n    //var funName=this.getFuncName();\r\n   // //console.log(funName)\r\n    var JSONdata={\r\n      value,colName,tableId\r\n    }\r\n    try {                      \r\n      const API_url = process.env.REACT_APP_API_URL+ \"admin/updateJoiningMaster\";\r\n      const response=await fetch(API_url,{\r\n                method: 'post',\r\n                headers: { \"Content-Type\": \"application/json\" ,\"authorization\": this.getAuth(),\"id\":this.getId()},\r\n                body: JSON.stringify(JSONdata)\r\n              });\r\n            const data=await response.json();             \r\n            return data;\r\n          \r\n      } \r\n      catch (error) \r\n      {\r\n        alert('internal error')\r\n        return false;\r\n      }\r\n  },\r\n getFuncName:function() \r\n {\r\n   // return arguments.callee.name;\r\n },\r\n //22-jul-2021\r\n createSchedule:async function(JSONdata)\r\n {\r\n  try {                      \r\n    const API_url = process.env.REACT_APP_API_URL+ \"admin/createSchedule\";\r\n    const response=await fetch(API_url,{\r\n              method: 'post',\r\n              headers: { \"Content-Type\": \"application/json\" ,\"authorization\": this.getAuth(),\"id\":this.getId()},\r\n              body: JSON.stringify(JSONdata)\r\n            });\r\n          const data=await response.json();             \r\n          return data;\r\n        \r\n    } \r\n    catch (error) \r\n    {\r\n      //alert('internal error')\r\n      return false;\r\n    }\r\n },\r\n createScheduleFormData:async function(formData)\r\n {\r\n  try {                      \r\n    const API_url = process.env.REACT_APP_API_URL+ \"admin/createSchedule\";\r\n    const response=await fetch(API_url,{\r\n              method: 'post',\r\n              headers: { \"authorization\": this.getAuth(),\"id\":this.getId()},\r\n              body: formData\r\n            });\r\n          const data=await response.json();             \r\n          return data;\r\n        \r\n    } \r\n    catch (error) \r\n    {\r\n      //alert('internal error')\r\n      return false;\r\n    }\r\n },\r\n updateSchedule:async function(formData)\r\n {\r\n  try {                      \r\n    const API_url = process.env.REACT_APP_API_URL+ \"admin/updateSchedule\";\r\n    const response=await fetch(API_url,{\r\n              method: 'post',\r\n              headers: {\"authorization\": this.getAuth(),\"id\":this.getId()},\r\n              body: formData\r\n            });\r\n          const data=await response.json();             \r\n          return data;\r\n        \r\n    } \r\n    catch (error) \r\n    {\r\n      //alert('internal error')\r\n      return false;\r\n    }\r\n },\r\n isNumber:function(n)\r\n {\r\n    if(!isNaN(n))\r\n        return 0;\r\n    else\r\n        return n;\r\n },\r\n inRange:function(x, min, max)\r\n  {\r\n      return ((x-min)*(x-max) <= 0);\r\n  },\r\n  clearVideoField:function()\r\n  {  \r\n\r\n        document.getElementsByName('mon_start')[0].value='';\r\n        document.getElementsByName('mon_end')[0].value='';\r\n        document.getElementsByName('mon_start2')[0].value='';\r\n        document.getElementsByName('mon_end2')[0].value='';\r\n        document.getElementsByName('mon_checked')[0].checked=false;\r\n\r\n        document.getElementsByName('tue_start')[0].value='';\r\n        document.getElementsByName('tue_end')[0].value='';\r\n        document.getElementsByName('tue_start2')[0].value='';\r\n        document.getElementsByName('tue_end2')[0].value='';\r\n        document.getElementsByName('tue_checked')[0].checked=false;\r\n\r\n        document.getElementsByName('wed_start')[0].value='';\r\n        document.getElementsByName('wed_end')[0].value='';\r\n        document.getElementsByName('wed_start2')[0].value='';\r\n        document.getElementsByName('wed_end2')[0].value='';\r\n        document.getElementsByName('wed_checked')[0].checked=false;\r\n\r\n        document.getElementsByName('thus_start')[0].value='';\r\n        document.getElementsByName('thus_end')[0].value='';\r\n        document.getElementsByName('thus_start2')[0].value='';\r\n        document.getElementsByName('thus_end2')[0].value='';\r\n        document.getElementsByName('thus_checked')[0].checked=false;\r\n\r\n        document.getElementsByName('fry_start')[0].value='';\r\n        document.getElementsByName('fry_end')[0].value='';\r\n        document.getElementsByName('fry_start2')[0].value='';\r\n        document.getElementsByName('fry_end2')[0].value='';\r\n        document.getElementsByName('fry_checked')[0].checked=false;\r\n\r\n        document.getElementsByName('sat_start')[0].value='';\r\n        document.getElementsByName('sat_end')[0].value='';\r\n        document.getElementsByName('sat_start2')[0].value='';\r\n        document.getElementsByName('sat_end2')[0].value='';\r\n        document.getElementsByName('sat_checked')[0].checked=false;\r\n\r\n        document.getElementsByName('sun_start')[0].value='';\r\n        document.getElementsByName('sun_end')[0].value='';\r\n        document.getElementsByName('sun_start2')[0].value='';\r\n        document.getElementsByName('sun_end2')[0].value='';\r\n        document.getElementsByName('sun_checked')[0].checked=false;\r\n  },\r\n    time_convert:function(num)\r\n    { \r\n        const hours = Math.floor(num / 60);  \r\n        let minutes=\"\";\r\n        minutes = (num % 60);\r\n        //console.log(minutes.toString().length);\r\n        if(minutes.toString().length === 2)\r\n        minutes = (num % 60);\r\n        else \r\n        minutes = \"0\"+ (num % 60);    \r\n      return `${hours}:${minutes}`;  \r\n    },\r\n    Get_Config:async function(JSONdata)\r\n    {     \r\n      try {                      \r\n        const API_url = process.env.REACT_APP_API_URL+ \"admin/Get_Config\";\r\n        const response=await fetch(API_url,{\r\n                  method: 'post',\r\n                  headers: { \"Content-Type\": \"application/json\" ,\"authorization\": this.getAuth(),\"id\":this.getId()},\r\n                  body: JSON.stringify(JSONdata)\r\n                });\r\n              const data=await response.json();             \r\n              return data;\r\n            \r\n        } \r\n        catch (error) \r\n        {\r\n          //alert('internal error')\r\n          return false;\r\n        }\r\n   \r\n    },\r\n    tConvert24To12 : function(time)\r\n    {\r\n      // Check correct time format and split into components\r\n      time = time.toString ().match (/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n    \r\n      if (time.length > 1) { // If time format correct\r\n        time = time.slice (1);  // Remove full string match value\r\n        time[5] = +time[0] < 12 ? ' AM' : ' PM'; // Set AM/PM\r\n        time[0] = +time[0] % 12 || 12; // Adjust hours\r\n      }\r\n      return time.join (''); // return adjusted time or original string\r\n    },\r\n    getAuth:function()\r\n    {\r\n      const auth= localStorage.getItem('auth');    \r\n      return auth;\r\n    },\r\n    getId:function()\r\n    {\r\n      const id= localStorage.getItem('JM_ID');    \r\n      return id;\r\n    },\r\n    autoLogout:function()\r\n    {\r\n      const auth= localStorage.getItem('auth');   \r\n//      console.log(auth)     \r\n      if(auth.length ===0)\r\n      {\r\n          var arr=[]    \r\n          let keepLogin=localStorage.getItem('keepLogin');\r\n          localStorage.clear();\r\n          localStorage.setItem('keepLogin', keepLogin);   \r\n          localStorage.setItem('JM_ID', 0);\r\n          localStorage.setItem('JM_Email', '');\r\n          localStorage.setItem('userDetails', arr); \r\n          localStorage.setItem('directAccess', arr);  \r\n          localStorage.setItem('JM_Profile_Pic', '');              \r\n          localStorage.setItem('auth', '');   \r\n          alert(\"Something went wrong, Please, re-login\");   //your session has expired\r\n          window.location.href='/';\r\n      }\r\n    }   ,\r\n\r\n    payout:async function(JSONdata)\r\n    {\r\n      //amount\r\n      try {                      \r\n        const API_url = process.env.REACT_APP_API_URL+ \"admin/payout\";\r\n        const response=await fetch(API_url,{\r\n                  method: 'post',\r\n                  headers: { \"Content-Type\": \"application/json\" ,\"authorization\": this.getAuth(),\"id\":this.getId()},\r\n                  body: JSON.stringify(JSONdata)\r\n                });\r\n              const data=await response.json();             \r\n              return data;\r\n            \r\n        } \r\n        catch (error) \r\n        {\r\n          //alert('internal error')\r\n          return false;\r\n        }\r\n    },\r\n    isConfirm : async function(id='')\r\n    {\r\n      confirmAlert({\r\n        title: 'Confirm withdrawal',\r\n        message: 'Are you sure you want to proceed the withdrawal?',\r\n        buttons: [\r\n            {\r\n            label: 'Yes',\r\n            onClick: () => console.log(\"ok\") //this.postData(data,'payout')\r\n            },\r\n            {\r\n            label: 'No',\r\n            onClick: () => console.log(\"cancel\")\r\n            }\r\n        ],\r\n        closeOnEscape: false,\r\n        closeOnClickOutside: false,\r\n        });\r\n    },\r\n    decryptJson:function(flag)\r\n    {\r\n      var bytes  = CryptoJS.AES.decrypt(flag, process.env.REACT_APP_Encrypt_Key);\r\n      var decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\n      return decryptedData;\r\n    },  \r\n    encryptData:function(data)\r\n    {\r\n      var ciphertext = CryptoJS.AES.encrypt(JSON.stringify(data), process.env.REACT_APP_Encrypt_Key).toString();   \r\n      return ciphertext;\r\n    \r\n    },\r\n    DoSleep:async function(ms){\r\n      return new Promise(resolve => setTimeout(resolve, ms));\r\n    },\r\n    randomString:function(length=250,type='numeric')\r\n    {\r\n      return  cryptoRandomString({length: length, type: type})\r\n    },    \r\n    isValidEmail:function(email)\r\n    {\r\n      if (validator.isEmail(email)===false)\r\n        return false;\r\n      else \r\n        return true;     \r\n    },\r\n  \r\n// for active users\r\n  isActive:async function()\r\n  {\r\n  //amount\r\n  try {                      \r\n    const API_url = process.env.REACT_APP_API_URL+ \"admin/isUserBlock\";\r\n    const response=await fetch(API_url,{\r\n              method: 'post',\r\n              headers: { \"Content-Type\": \"application/json\" ,\"authorization\": this.getAuth(),\"id\":this.getId()}           \r\n            });\r\n          const data1=await response.json();  \r\n          var data;\r\n          if(typeof data1.flag!=='undefined')   \r\n              data=this.decryptJson(data1.flag) \r\n          if(data1.status===1)        //active\r\n           {\r\n              \r\n              if(data.isValid===0)\r\n              {\r\n                var arr=[]    \r\n                let keepLogin=localStorage.getItem('keepLogin');\r\n                localStorage.clear();\r\n                localStorage.setItem('keepLogin', keepLogin);   \r\n                localStorage.setItem('JM_ID', 0);\r\n                localStorage.setItem('JM_Email', '');\r\n                localStorage.setItem('userDetails', arr); \r\n                localStorage.setItem('directAccess', arr);    \r\n                localStorage.setItem('auth', '');   \r\n                alert(\"Your session has expired. Please relogin\");   \r\n                window.location.href='/';      \r\n                return false;\r\n              }\r\n\r\n           }\r\n          else\r\n            {\r\n              if(typeof data!=='undefined')\r\n              {\r\n                if(data.isBlocked===1)\r\n                {\r\n                  var arr=[]    \r\n                  let keepLogin=localStorage.getItem('keepLogin');\r\n                  localStorage.clear();\r\n                  localStorage.setItem('keepLogin', keepLogin);   \r\n                  localStorage.setItem('JM_ID', 0);\r\n                  localStorage.setItem('JM_Email', '');\r\n                  localStorage.setItem('userDetails', arr); \r\n                  localStorage.setItem('directAccess', arr);    \r\n                  localStorage.setItem('auth', '');   \r\n                  alert(\"Your account has been blocked, contact admin\");   \r\n                  window.location.href='/';      \r\n                  return false;\r\n                }\r\n                if(data.isDeleted===1)\r\n                {\r\n                  var arr=[]    \r\n                  let keepLogin=localStorage.getItem('keepLogin');\r\n                  localStorage.clear();\r\n                  localStorage.setItem('keepLogin', keepLogin);   \r\n                  localStorage.setItem('JM_ID', 0);\r\n                  localStorage.setItem('JM_Email', '');\r\n                  localStorage.setItem('userDetails', arr); \r\n                  localStorage.setItem('directAccess', arr);    \r\n                  localStorage.setItem('auth', '');   \r\n                  alert(\"Your account has been removed, contact admin\");   \r\n                  window.location.href='/';      \r\n                  return false;\r\n                }\r\n               \r\n              }\r\n             \r\n              var arr=[]    \r\n              let keepLogin=localStorage.getItem('keepLogin');\r\n              localStorage.clear();\r\n              localStorage.setItem('keepLogin', keepLogin);   \r\n              localStorage.setItem('JM_ID', 0);\r\n              localStorage.setItem('JM_Email', '');\r\n              localStorage.setItem('userDetails', arr); \r\n              localStorage.setItem('directAccess', arr);    \r\n              localStorage.setItem('auth', '');   \r\n              alert(\"Your session has expired. Please relogin\");   \r\n              window.location.href='/';      \r\n              return false;\r\n            }\r\n            \r\n        \r\n    } \r\n    catch (error) \r\n    {\r\n     // alert('internal error')\r\n      return false;\r\n    }\r\n},\r\npaidMonitizationMsg:function()\r\n{\r\n  \r\n  const msg =\"Congratulations! Your transaction was successful. Please check your email for more details.\";\r\n  return msg;\r\n},\r\ndynamicPriceMessage:function()\r\n{\r\n  const dynamicPriceMessage='You receive 90% minus payment charges + taxes of the transaction value. We take care of the rest.';\r\n  return dynamicPriceMessage;\r\n},\r\n//Congratulations! Your request was successful. Please check your email for more details\r\nfreeMonitizationMsg:function()\r\n{  \r\n  const msg =\"Congratulations! Your request was successful. Please check your email for more details.\";\r\n  return msg;\r\n},\r\ngiftMonitizationMsg:function()\r\n{  \r\n  const msg =\"Congratulations! Your request was successful. Please check your email for more details.\";\r\n  return msg;\r\n},\r\nSupportMonitizationMsg:function()\r\n{  \r\n  const msg =\"Congratulations! Your request was successful. Please check your email for more details.\";\r\n  return msg;\r\n},\r\nchargesMessage:function()\r\n{\r\n  const chargesMessage=\"You receive 90% minus payment charges + taxes of the transaction value. We take care of the rest.\";\r\n  return chargesMessage;\r\n  //API.chargesMessage();\r\n},\r\nconsentLebel:function()\r\n{\r\n  const msg=\"Consent to providing your email to the Creator (optional)\";\r\n  return msg;\r\n},\r\nconsentLebel_GiftDonation:function()\r\n{\r\n  const msg=\"Keep my name and details hidden from the Creator (optional)\"; return msg;\r\n},\r\n\r\nserverMessage:async function()\r\n{\r\n    //amount\r\n    try {                      \r\n      const API_url = process.env.REACT_APP_API_URL+ \"admin/sever_update\";\r\n      const response=await fetch(API_url,{\r\n                method: 'post',\r\n                headers: { \"Content-Type\": \"application/json\" ,\"authorization\": this.getAuth(),\"id\":this.getId()},               \r\n              });\r\n            const data=await response.json();             \r\n            return data;\r\n          \r\n      } \r\n      catch (error) \r\n      {\r\n        //alert('internal error')\r\n        return false;\r\n      }\r\n},\r\n//16-sep-2021\r\nemail_Already_inContest:async function(JSONdata)\r\n{\r\n  try {                      \r\n    const API_url = process.env.REACT_APP_API_URL+ \"admin/email_Already_inContest\";\r\n    const response=await fetch(API_url,{\r\n              method: 'post',\r\n              headers: { \"Content-Type\": \"application/json\"},      \r\n              body: JSON.stringify(JSONdata)      \r\n            });\r\n          const data=await response.json();  \r\n          if(data.status===1)           \r\n             return true;\r\n          else \r\n            return false;\r\n        \r\n    } \r\n    catch (error) \r\n    {\r\n      //alert('internal error')\r\n      return false;\r\n    }\r\n},\r\n\r\ndataNotCaptured:async function(jsonData)\r\n{\r\n  \r\n},\r\nrazorPayTax:function()\r\n{\r\n  const tax=1.65/100;\r\n  return tax;\r\n},\r\nrazorPayGST:function()\r\n{\r\n  const tax=18/100;\r\n  return tax;\r\n},\r\nuserAgentType:function()\r\n{\r\n  var agentType = isWebview(navigator.userAgent);\r\n  return agentType;\r\n       \r\n},\r\nremoveSpecialChar:function(str)\r\n{\r\n  return str.replace(/[^a-zA-Z ]/g, \" \");\r\n},\r\nminusResponse:function(data)\r\n{ \r\n  if(data.status===-1)\r\n  {\r\n    var arr=[]    \r\n    let keepLogin=localStorage.getItem('keepLogin');\r\n    localStorage.clear();\r\n    localStorage.setItem('keepLogin', keepLogin);   \r\n    localStorage.setItem('JM_ID', 0);\r\n    localStorage.setItem('JM_Email', '');\r\n    localStorage.setItem('userDetails', arr); \r\n    localStorage.setItem('directAccess', arr);  \r\n    localStorage.setItem('JM_Profile_Pic', '');              \r\n    localStorage.setItem('auth', '');   \r\n    alert(data.msg);   //your session has expired\r\n    window.location.href='/';\r\n    return false;\r\n  }\r\n},\r\nGetProduct:function(id)\r\n{\r\n  const product={\r\n      0:\"Donation & Gifts\",\r\n      1:\"Personalizes Video or Audio\",\r\n      2:\"Unlock Content\",\r\n      3:\"Sell Digital Goods\",\r\n      4:\"Image Carousel\",\r\n      5:\"Live Video Session\",\r\n      6:\"Contests & Giveaways\",     \r\n      999:\"Donation & Gifts\"\r\n  }\r\n // console.log(product[0]);\r\n  return product[id]\r\n},\r\nGetProductIcon:function(id)\r\n{\r\n  const product={\r\n      0:\"images/request-icon_4.png\",\r\n      1:\"images/request-icon_2.png\",\r\n      2:\"images/request-icon_3.png\",\r\n      3:\"images/request-icon_5.png\",\r\n      4:\"Image Carousel\",\r\n      5:\"images/request-icon_1.png\",\r\n      6:\"images/request-icon_6.png\",     \r\n      999:\"images/request-icon_4.png\"\r\n  }\r\n // console.log(product[0]);\r\n  return product[id]\r\n}\r\n\r\n}\r\nexport default API;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\EditPremiumFeature2.js",["2534","2535","2536","2537","2538","2539","2540"],"import React, { Component } from 'react';\r\n\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport ImageIcon from '@material-ui/icons/Image';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Popover from 'react-bootstrap/Popover'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n\r\nimport PersonalVideoIcon from '@material-ui/icons/PersonalVideo';\r\n\r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport API  from '../services/API';\r\nclass EditPremiumFeature2 extends Component \r\n{\r\n        fileObj = [];\r\n        fileArray = [];\r\n        albumArray=[];\r\n        Files = [];\r\n        constructor(props) \r\n        {\r\n            super(props)\r\n        \r\n            this.state = {\r\n              base_url: process.env.REACT_APP_API_URL,\r\n              root_url: process.env.REACT_APP_ROOT_URL,\r\n              openModel:false,\r\n              show:false,\r\n              open:false,\r\n              directAccess:this.props.data,\r\n              userDetails:this.props.userDetails,\r\n              confirm:false,\r\n              videoFile:null,\r\n              imageFile:null,\r\n              selectedFile:null,\r\n          \r\n              title:'',\r\n              description:'',\r\n              price:0,\r\n              handleDisabled:true,\r\n              toolTip:false,\r\n              chargesInfo:'',\r\n              showIconCharges:'none',\r\n              videoData:'NA',\r\n              audioData:'',\r\n              album:[null],\r\n              cover_Image_video:'',\r\n              coverImageorVideo:null,\r\n              audioFile:null,\r\n              showAlert:true,\r\n              title:'',\r\n              msg:'',\r\n              logo:'',\r\n\r\n\r\n              DA_ID:0,\r\n              DA_Title:'',\r\n              DA_Description:'',\r\n              DA_Price:0.0,\r\n              JM_ID:0,\r\n              DA_Type:'',\r\n              DA_Collection:[],\r\n              videoData_Edit:'',\r\n              audioData_edit:'',\r\n              hideVideoAudio:false,\r\n\r\n              BtnName:'Save',\r\n              disabledBtn:false,\r\n\r\n              allowCustomertoPay:0,\r\n              min_amt:'',\r\n              suggested_amt:'',\r\n              showDiv:false,\r\n              isPriceDisabled:false\r\n            }\r\n\r\n            this.imageonMultiChange = this.imageonMultiChange.bind(this)\r\n        }\r\n        ModalClose=()=>\r\n        {    \r\n            this.setState({\r\n              openModel:false,show:false,\r\n              audioData:'',audioFile:null,\r\n              videoData:'NA',videoFile:null\r\n            \r\n            });\r\n\r\n        }\r\n        ModalOpen=()=>{\r\n                this.setState({openModel:true,show:true,chargesInfo:'',showIconCharges:'none'});\r\n                //console.log(this.props.data)\r\n                this.setState({ \r\n                  DA_Title:this.props.data.title,\r\n                  DA_Description:this.props.data.description,\r\n                  JM_ID:this.props.data.JM_ID,\r\n                  DA_Type:this.props.data.prodType,\r\n                  DA_ID:this.props.data.tableId,\r\n                  DA_Collection:'',\r\n                  DA_Price: this.props.data.price,   \r\n                  allowCustomertoPay: this.props.data.DA_Allow_Cust_Pay,                       \r\n                  min_amt: this.props.data.DA_Min_Amount,   \r\n                  suggested_amt: this.props.data.DA_Suggested_Amont,   \r\n                  showDiv:this.props.data.DA_Allow_Cust_Pay===1 ? true : false\r\n              });\r\n              if(this.props.data.DA_Allow_Cust_Pay === 1)\r\n              {           \r\n                  this.setState({\r\n                    isPriceDisabled:true \r\n                  })             \r\n              }\r\n              if(this.props.data.prodType==='video')\r\n              {\r\n                let arr=JSON.parse(this.props.data.collection);\r\n                if(arr!==null && arr.length >0)\r\n                {\r\n                  this.setState({ \r\n                    videoData_Edit:process.env.REACT_APP_API_URL+\"adm/uploads/Profile/\"+this.props.JM_User_Profile_Url_plus_JM_ID+\"/\"+arr[0],\r\n                    hideVideoAudio:false\r\n                  });\r\n                  //console.log(arr[0]);\r\n                }\r\n               \r\n              }\r\n            else  if(this.props.data.prodType==='audio')\r\n              {\r\n                let arr=JSON.parse(this.props.data.collection);\r\n                if(arr!==null && arr.length >0)\r\n                {\r\n                  this.setState({ \r\n                    audioData_edit:process.env.REACT_APP_API_URL+\"adm/uploads/Profile/\"+this.props.JM_User_Profile_Url_plus_JM_ID+\"/\"+arr[0],\r\n                    hideVideoAudio:false\r\n                  });\r\n                  //console.log(arr[0]);\r\n                }\r\n               \r\n              }\r\n              // else  if(this.props.data.prodType==='images')\r\n              // {\r\n              //   let arr=JSON.parse(this.props.data.collection);\r\n              //   if(arr!==null && arr.length >0)\r\n              //   {\r\n              //     this.setState({ \r\n              //       audioData_edit:process.env.REACT_APP_API_URL+\"adm/uploads/Profile/\"+this.props.JM_User_Profile_Url_plus_JM_ID+\"/\"+arr[0],\r\n              //       hideVideoAudio:false\r\n              //     });\r\n              //     //console.log(arr[0]);\r\n              //   }\r\n               \r\n              // }\r\n              else  if(this.props.data.prodType==='image')\r\n              {\r\n                let arr=JSON.parse(this.props.data.collection);\r\n                if(arr!==null && arr.length >0)\r\n                {\r\n                  this.setState({ \r\n                    cover_Image_video:process.env.REACT_APP_API_URL+\"adm/uploads/Profile/\"+this.props.JM_User_Profile_Url_plus_JM_ID+\"/\"+arr[0],\r\n               \r\n                  });\r\n                  //console.log(arr[0]);\r\n                }\r\n               \r\n              }\r\n\r\n\r\n\r\n        }\r\n        openCollapse = () => {\r\n            !this.state.open ?\r\n            this.setState({ open: true })\r\n            :\r\n            this.setState({ open: false })\r\n            \r\n        }\r\n        isConfirm = () => {\r\n            confirmAlert({\r\n            title: 'Confirm !!!',\r\n            message: 'Are you sure to Exit',\r\n            buttons: [\r\n                {\r\n                label: 'Yes',\r\n                onClick: () => this.setState({confirm:true})\r\n                },\r\n                {\r\n                label: 'No',\r\n                onClick: () => this.setState({confirm:false})\r\n                }\r\n            ]\r\n            });\r\n        };\r\n        popOver=(data)=>{\r\n        }\r\n        videoonChange=(e)=>{\r\n           this.setState({ audioData: ''  , audioFile:null}); \r\n            const file = e.target.files[0];\r\n            if(typeof file!=='undefined')\r\n            {\r\n              var fileUrl = window.URL.createObjectURL(file);\r\n              this.setState({ imageFile: e.target.files[0] }); \r\n              this.setState({\r\n              videoFile: file,\r\n              videoData:fileUrl,\r\n              hideVideoAudio:true,\r\n              audioFile:null,\r\n              audioData:'',\r\n              });\r\n              \r\n              this.hidePopover();\r\n            }\r\n        }\r\n        audioChange=(e)=>\r\n        {\r\n          this.setState({\r\n            videoFile: null,\r\n            videoData:'NA'\r\n            });\r\n            const file = e.target.files[0];\r\n            if(typeof file!=='undefined')\r\n            {\r\n              this.setState({ audioFile: e.target.files[0] }); \r\n              this.getBase64(file).then(\r\n                data =>{\r\n                  //console.log(data);\r\n                  this.setState({ audioData: data ,   hideVideoAudio:true,\r\n                    videoFile: null,\r\n                    videoData:'NA',\r\n                  \r\n                  }); \r\n                } \r\n              );\r\n            }\r\n        }\r\n        onClickResetAudioFile (e) {\r\n            this.setState({audioData:''}); // celears state\r\n            \r\n        }\r\n        //12-mar-2021\r\n        getBase64=(file)=> {\r\n          return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n          });\r\n        }\r\n\r\n        imageonChange=(e)=>{\r\n            const file = e.target.files[0];\r\n            this.setState({ coverImageorVideo: e.target.files[0] }); \r\n            this.setState({\r\n            cover_Image_video: URL.createObjectURL(file)\r\n            });\r\n            this.hidePopover();\r\n        }\r\n        nextClick=(event)=>{\r\n            event.preventDefault();\r\n           \r\n                \r\n              document.getElementById('msg').innerHTML='';\r\n              document.getElementById('msg').style.color='red';\r\n              if(this.state.DA_Title.length ===0)\r\n              {\r\n                document.getElementById('msg').style.color='red';\r\n                document.getElementById('msg').innerHTML='* Enter Title'; \r\n                return true;\r\n              }\r\n              if(this.state.DA_Description.length===0)\r\n              {\r\n                document.getElementById('msg').style.color='red';\r\n                document.getElementById('msg').innerHTML='* Enter Description';      \r\n                return false;\r\n              }\r\n              if(isNaN(parseInt(this.state.DA_Price)) || parseInt(this.state.DA_Price) < 0)\r\n              {\r\n                document.getElementById('msg').style.color='red';\r\n                document.getElementById('msg').innerHTML='* Enter Price';\r\n                return false;\r\n              }\r\n                  //23-aug-2021 dynamic pricing\r\n              if(this.state.allowCustomertoPay===1)\r\n              {\r\n                if( isNaN(parseInt(this.state.min_amt)) || parseInt(this.state.min_amt) < 0 )\r\n                {            \r\n                  document.getElementById('msg').style.color='red';\r\n                  document.getElementById('msg').innerHTML='* Enter minimum amount';\r\n                  return false;              \r\n                }\r\n              }\r\n            \r\n                  const formData = new FormData(); \r\n                  \r\n                  formData.append('DA_Allow_Cust_Pay', this.state.allowCustomertoPay )  \r\n                  formData.append('DA_Min_Amount',parseInt(this.state.min_amt))\r\n                  formData.append('DA_Suggested_Amont', parseInt(this.state.suggested_amt))  \r\n\r\n                  let Api_url=process.env.REACT_APP_API_URL+'admin/updateProduct';\r\n                  //const Api_url =\"http://localhost:9000/admin/updateProduct\";\r\n                  if(this.state.videoFile !==null && this.state.videoData!=='NA' && this.state.videoData!=='')\r\n                  {  \r\n                      formData.append('sampleFile', this.state.videoFile);\r\n                      formData.append('DA_Type', 'video'); \r\n                  }\r\n                  else  if(this.state.audioFile !==null && this.state.audioData!=='')\r\n                  {   \r\n                     formData.append('sampleFile', this.state.audioFile)\r\n                     formData.append('DA_Type', 'audio'); \r\n                  }\r\n                  else  if(this.state.coverImageorVideo !==null && this.state.cover_Image_video!=='')\r\n                  {   \r\n\r\n                     formData.append('sampleFile', this.state.coverImageorVideo)\r\n                     formData.append('DA_Type', 'image'); \r\n                  }\r\n                  else\r\n                  {\r\n                    let file=[];\r\n                    if(this.state.audioData_edit!=='')\r\n                    {\r\n                          formData.append('sampleFile', file)\r\n                          formData.append('DA_Type', 'audio');       \r\n                    }                  \r\n                    if(this.state.videoData_Edit!=='')\r\n                    {  \r\n                      formData.append('sampleFile', file);\r\n                      formData.append('DA_Type', 'video');                    \r\n                    }\r\n\r\n                  }\r\n            \r\n\r\n                \r\n                formData.append('DA_DA_ID', 1) // for premium featured id\r\n                formData.append('DA_ID', this.state.DA_ID) \r\n                formData.append('JM_ID', this.state.JM_ID)         \r\n                formData.append('DA_Title', this.state.DA_Title)  \r\n                formData.append('DA_Description', this.state.DA_Description)  \r\n                formData.append('DA_Cover', \"\") \r\n                formData.append('DA_Price', this.state.DA_Price)      \r\n                formData.append('JM_User_Profile_Url_plus_JM_ID',this.props.JM_User_Profile_Url_plus_JM_ID)\r\n                this.setState({BtnName:'Uploading..',disabledBtn:true});\r\n                    fetch(Api_url, {\r\n                    method: 'POST', \r\n                    headers: { \"authorization\": API.getAuth(),\"id\":API.getId()},        \r\n                    body: formData\r\n                    })\r\n                    .then(response => response.json())\r\n                    .then(data => \r\n                    {                   \r\n                        //console.log(data);   \r\n                       if(data.status > 0)\r\n                       {\r\n                            this.setState({\r\n                                  videoFile:null,\r\n                                  videoData:'NA',\r\n                                  audioFile:null,\r\n                                  audioData:'',\r\n                                  BtnName:'Save',disabledBtn:false\r\n                            });\r\n\r\n                       \r\n                            this.fileArray=[];     \r\n                            this.ModalClose();                     \r\n                            this.Get_User_Details();   \r\n                           \r\n                       }\r\n                       else\r\n                       {\r\n\r\n                        API.minusResponse(data);\r\n                        this.setState({BtnName:'Save',disabledBtn:false});\r\n                        this.props.showToast('Failed', 'Server Error');\r\n                   \r\n                       }\r\n                                             \r\n                    })\r\n                    .catch(error => {\r\n                      //console.error(error)\r\n                       this.setState({BtnName:'Save',disabledBtn:false});\r\n                        this.props.showToast('Failed', 'Network Error');\r\n                    })\r\n\r\n        }\r\n        //23-aug-2021\r\n        \r\n        onchangeCheck=(e)=>{\r\n\r\n          if(e.target.checked===true)\r\n          {\r\n            this.setState({\r\n              allowCustomertoPay:1,\r\n              showDiv:true,\r\n              DA_Price:0,\r\n              isPriceDisabled:true,\r\n            })\r\n            let chargesInfo=\"\";\r\n            let showIconCharges='none';\r\n            this.setState({chargesInfo,showIconCharges});    \r\n          }\r\n          else\r\n          {\r\n            this.setState({\r\n              allowCustomertoPay:0,\r\n              showDiv:false,\r\n              isPriceDisabled:false,\r\n            })\r\n                 \r\n          }\r\n        }\r\n        validation =()=>{\r\n             \r\n              \r\n                if(this.state.DA_Title.length > 0 && this.state.DA_Description.length > 0 && parseInt(this.state.DA_Price) > 0)\r\n                    return true;\r\n                else\r\n                    return false;         \r\n               \r\n        }\r\n        handleChange=(e)=>{\r\n            let val=parseFloat(e.target.value);\r\n        this.setState({[e.target.name]:e.target.value})\r\n        let chargesInfo=\"\";\r\n        if(e.target.name==='DA_Price' && val > 0)\r\n            {\r\n              let fee=val * API.razorPayTax();\r\n              let gst=fee * API.razorPayGST();         \r\n              let razorPay=(fee+gst); // 1.65 + 0.297\r\n              let TenPer=(val - razorPay) * 10/100; // 10 if val is 100                  \r\n              let charges= val - razorPay - TenPer; // 100 - 1.65- 0.297                      \r\n              let chargesInfo=\"You'll receive INR \"+ charges.toFixed(2) + \" \";\r\n\r\n              \r\n              let showIconCharges='block';         \r\n              this.setState({chargesInfo,showIconCharges});\r\n            }\r\n            else\r\n            {      \r\n                let chargesInfo=\"\";\r\n                let showIconCharges='none';\r\n                this.setState({chargesInfo,showIconCharges});\r\n            }\r\n            \r\n        }\r\n        hidePopover=()=>{\r\n            document.getElementById(\"popover-basic\").style.display='none';\r\n        }\r\n        handleClose=()=>{\r\n            this.setState({toolTip:true});\r\n        }\r\n        handleOpen=()=>{\r\n            this.setState({toolTip:false});\r\n        }\r\n        \r\n\r\n        imageonMultiChange(e) {\r\n            var numFiles = e.target.files.length; \r\n            for (var i = 0, numFiles = e.target.files.length; i < numFiles; i++) \r\n            { \r\n            var file = e.target.files[i];\r\n            this.albumArray.push(URL.createObjectURL(file));\r\n            //this.fileArray.push(URL.createObjectURL(this.fileObj[0][i]))\r\n            this.Files.push(file);\r\n            }\r\n\r\n            this.setState({ album: this.albumArray })\r\n\r\n        }\r\n\r\n        hideToast=()=>{\r\n          this.setState({showAlert:false})\r\n        }\r\n        showToast =() =>{\r\n          this.setState({showAlert:true})\r\n        }\r\n       \r\n        Get_User_Details = () => \r\n        {\r\n                var JSONdata = {\r\n                  JM_ID: this.state.JM_ID\r\n                };\r\n                const API_url = this.state.base_url + \"admin/userDetailsAll\";\r\n              fetch(API_url,\r\n                {\r\n                  method: 'post',\r\n                  headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n                  body: JSON.stringify(JSONdata)\r\n                })\r\n              .then((response) => response.json())\r\n              .then(data1 => {\r\n                if(data1.status===1)\r\n                {\r\n                  const data=API.decryptJson(data1.flag);\r\n                  this.setState({\r\n                    userDetailsAll: data.data,\r\n                    userDetails:data.userDetails,\r\n                    themeMasterUser:data.themeMasterUser,\r\n                    socialWidget:data.socialWidget,\r\n                    gifts:data.gifts, \r\n                    category_master:data.category_master,                    \r\n                    title:'Success!!!',\r\n                    msg:'Profile is updated',\r\n                  \r\n                  });\r\n                  this.props.setStateAfterInsert(this.state);\r\n                }   \r\n                  else\r\n                    alert('not fetch');\r\n              });\r\n        }\r\n    render() {\r\n\r\n        const longText = `\r\n        Aliquam eget finibus ante, non facilisis lectus. Sed vitae dignissim est, vel aliquam tellus.\r\n        Praesent non nunc mollis, fermentum neque at, semper arcu.\r\n        Nullam eget est sed sem iaculis gravida eget vitae justo.\r\n        `;\r\n        \r\n        const useStyles = {\r\n          button: {\r\n            margin: '5px',\r\n          },\r\n          customWidth: {\r\n            maxWidth: 500,\r\n            fontSize:'25px',\r\n           \r\n          },\r\n          noMaxWidth: {\r\n            maxWidth: 'none',\r\n          },\r\n        };\r\n       // let chargesMessage=\"You receive 90% of the transaction value minus a 2% transaction fee that is collected by our payment provider.\";\r\n        let chargesMessage=API.chargesMessage();\r\n      \r\n        const HtmlTooltip = withStyles((theme) => ({\r\n          arrow: {\r\n            color: theme.palette.common.black,\r\n          },\r\n          tooltip: {\r\n            backgroundColor: '#212529',\r\n            color: 'white',\r\n            maxWidth: '50%',\r\n            fontSize: theme.typography.pxToRem(10),\r\n            // border: '1px solid #dadde9',\r\n          },\r\n        }))(Tooltip);\r\n        \r\n        const iconStyle={\r\n            display:this.state.showIconCharges,\r\n            fontSize: \"23px\",\r\n            color: \"gray\"\r\n        }\r\n        const chargesStyle={\r\n          fontFamily: \"consolas\",\r\n          fontSize: \"13px\",\r\n          textTransform: \"capitalize\",\r\n          marginTop: \"-6%\",\r\n          fontWeight: \"bold\",\r\n          color: \"gray\",\r\n        }\r\n        \r\n        let typeOfProduct;        \r\n          typeOfProduct= <> <div className=\"col-md-8\">\r\n                              <label for=\"upImage\" style={{    marginTop: \"10px\"}}>\r\n                                Upload {this.state.DA_Type==='NA' ? 'an intro Photo or Video (optional)': this.state.DA_Type}         \r\n                              </label>\r\n                          </div>  \r\n                          <div className=\"col-md-10 offset-md-1\">           \r\n                            {\r\n                              this.state.videoData!=='NA' && this.state.videoData!=='' ?              \r\n                                    <video className=\"img-thumbnail-custom\" width=\"100%\" controls src={this.state.videoData} type=\"video/mp4\" >                                   \r\n                                    </video>\r\n                                    : null\r\n                            }\r\n                               {\r\n                                this.state.cover_Image_video!=='NA' && this.state.cover_Image_video!=='' ?              \r\n                                      <img className=\"img-thumbnail-custom\" width=\"200px\"  src={this.state.cover_Image_video} type=\"image/*\" >                                   \r\n                                      </img>\r\n                                      : null\r\n                              }\r\n                            {\r\n                            this.state.audioData!=='' ?     \r\n                                <audio autoplay controls src={this.state.audioData}>\r\n                                  The “audio tag is not supported by your browser.\r\n                                </audio>\r\n                                : \r\n                                null\r\n                            }\r\n                                  \r\n                           </div>  \r\n                          </>\r\n      \r\n\r\n    let type='video';\r\n    const popover = (\r\n      <Popover id=\"popover-basic\" style={{zIndex:'99999'}}>\r\n         <button type=\"button\" className=\"pop-close\"><span aria-hidden=\"true\" onClick={this.hidePopover}>×</span>\r\n          <span className=\"sr-only\">Close</span>\r\n        </button>\r\n        <Popover.Title as=\"h6\"><h6>Select  {this.state.DA_Type==='NA' ? \"video or Photo\" : this.state.DA_Type }</h6>\r\n       \r\n        </Popover.Title>\r\n        <Popover.Content>\r\n          {           \r\n            this.state.DA_Type==='video' ?   \r\n            <>         \r\n             <label htmlFor=\"video\" style={{cursor:'pointer'}} ><h6>Video</h6></label> <PersonalVideoIcon/>  <br/>\r\n            \r\n             </>            \r\n            : null\r\n          }\r\n          {/* {\r\n            this.state.DA_Type==='audio' ?   \r\n            <>     \r\n             <label htmlFor=\"audio\" style={{cursor:'pointer'}}><h6>Audio</h6></label> <AudiotrackIcon/>  \r\n             </>            \r\n            : null\r\n          } */}\r\n           {\r\n            this.state.DA_Type==='image' ?   \r\n            <>     \r\n             <label htmlFor=\"photo\" style={{cursor:'pointer'}}><h6>Photo</h6></label> <ImageIcon/>  \r\n             </>            \r\n            : null\r\n          }\r\n          {           \r\n            this.state.DA_Type==='NA' ?  \r\n            <>         \r\n            <label htmlFor=\"video\" style={{cursor:'pointer'}}><h6>Video</h6></label> <PersonalVideoIcon/>  <br/>  \r\n            <label htmlFor=\"photo\" style={{cursor:'pointer'}}><h6>Photo</h6></label> <ImageIcon/>  \r\n            </>                    \r\n            : null\r\n          }\r\n        </Popover.Content>  \r\n      </Popover>\r\n    );\r\n\r\n    const popover2 = (\r\n      <Popover id=\"popover-basic\" style={{zIndex:'99999',background: 'black',color:'#fff'}}  >\r\n         <button type=\"button\" className=\"pop-close\"><span aria-hidden=\"true\" onClick={this.hidePopover}>×</span>\r\n          <span className=\"sr-only\">Close</span>\r\n        </button>       \r\n        <Popover.Content style={{background: 'black',color:'#fff'}}>\r\n        {chargesMessage}\r\n          \r\n        </Popover.Content>    \r\n       \r\n      </Popover>\r\n    );\r\n        return (\r\n            <>\r\n               <button onClick={this.ModalOpen}><CreateIcon />     \r\n      </button>\r\n                 \r\n                 <Modal\r\n        show={this.state.show}\r\n        onHide={this.ModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}         \r\n        size=\"lg\"\r\n        contentClassName=\"modal-radius\"\r\n        centered\r\n\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <p className=\"addnew-title\">{\"Personalized video or audio message\"}</p>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"direct-access-pop\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-2 setCursor\">\r\n                    <center>\r\n                      <OverlayTrigger  trigger=\"click\" placement=\"bottom\" overlay={popover}>\r\n                        <div className=\"up-ico\" >\r\n                           <AddIcon style={{fontSize:'25px'}}/>\r\n                         </div>\r\n                      </OverlayTrigger >                       \r\n                    </center>     \r\n              </div>\r\n              {\r\n               typeOfProduct\r\n              }\r\n       \r\n              <form>                          \r\n                <input type=\"file\" id=\"video\" accept=\".mp4\" style={{display:'none'}} onChange={this.videoonChange}/>      \r\n             </form>   \r\n             <form>                          \r\n                <input type=\"file\" id=\"audio\" accept=\"audio/*\" style={{display:'none'}} onChange={this.audioChange}/>      \r\n             </form>\r\n             <form>                          \r\n                <input type=\"file\" id=\"photo\" accept=\"image/*\" style={{display:'none'}} onChange={this.imageonChange}/>      \r\n             </form>\r\n             <div className=\"col-md-12\">\r\n                  {           \r\n                    this.state.DA_Type==='video' && this.state.hideVideoAudio===false?\r\n                                    <video className=\"img-thumbnail-custom\" width=\"100%\" controls src={this.state.videoData_Edit} type=\"video/mp4\" >                                   \r\n                                    </video>\r\n                                :\r\n                                null\r\n                  \r\n                  }\r\n                  {            \r\n                               this.state.DA_Type==='audio' && this.state.hideVideoAudio===false?\r\n                                    <audio autoplay controls src={this.state.audioData_edit}>\r\n                                          The “audio tag is not supported by your browser.\r\n                                      </audio>\r\n                                :\r\n                                null\r\n                  \r\n                  }\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <input type=\"text\" name=\"DA_Title\" value={this.state.DA_Title} onChange={this.handleChange} className=\"form-control\" placeholder=\"Title\" />       \r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <textarea className=\"form-control area\" value={this.state.DA_Description} name=\"DA_Description\" onChange={this.handleChange} \r\n                  placeholder=\"enter description\"/>\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <input type=\"text\" name=\"DA_Price\" id=\"DA_Price\"  disabled={this.state.isPriceDisabled} onChange={this.handleChange} \r\n                value={this.state.DA_Price} className=\"form-control\" placeholder=\" Price\" \r\n                onKeyPress={(event) => {\r\n                  if (!/[0-9]/.test(event.key)) {\r\n                    event.preventDefault();\r\n                  }\r\n                }}\r\n                />       \r\n              </div>\r\n              <div className=\"col-md-12 desktopCharge\">\r\n                  <HtmlTooltip arrow\r\n                      title={\r\n                        <React.Fragment>\r\n                          <Typography color=\"inherit\">Transaction Info</Typography>                \r\n                          <p style={{fontFamily:'monospace',fontSize:'12px'}}>{chargesMessage}</p>\r\n                        </React.Fragment>\r\n                      } placement=\"top-start\"\r\n                    >\r\n                  <Button style={chargesStyle}>{this.state.chargesInfo}<i class=\"fa fa-question-circle\" aria-hidden=\"true\" \r\n                  style={iconStyle}></i></Button>\r\n                </HtmlTooltip>\r\n              </div>\r\n              <div className=\"col-md-12 mobileCharge\" style={{fontFamily: 'consolas', fontSize: '13px',textTransform: 'capitalize'}}>\r\n                      &nbsp;{this.state.chargesInfo}\r\n                     <OverlayTrigger  className=\"mobile\" style={chargesStyle} trigger=\"click\" placement=\"top\" overlay={popover2}>           \r\n                         <i class=\"fa fa-question-circle\" aria-hidden=\"true\"  style={iconStyle}></i>                     \r\n                      </OverlayTrigger >  \r\n                </div>        \r\n\r\n\r\n                <div className=\"col-md-12\">\r\n                        <label>\r\n                               <strong>  \r\n                                  Settings \r\n                              </strong>     \r\n                       </label>\r\n                </div>                  \r\n                <div className=\"col-md-8 col-9\">\r\n                    <label >\r\n                    Let your followers pay what they want     \r\n                      </label>\r\n                </div>  \r\n              <div className=\"col-md-4 col-3\">\r\n                    \r\n                    <label class=\"switch\"  for=\"allowCustomertoPay\">\r\n                    <input type=\"checkbox\" id=\"allowCustomertoPay\" checked={this.state.allowCustomertoPay===1?true:false} onChange={this.onchangeCheck} />\r\n                        <div class=\"slider round\"></div>\r\n                      </label>\r\n                </div>\r\n                {\r\n                  this.state.showDiv===true ?      \r\n                  <>            \r\n                        <div className=\"col-md-6\">\r\n                        <label >\r\n                               <strong>  \r\n                                  Minimum Amount \r\n                              </strong>     \r\n                       </label>\r\n                        <input type=\"text\" name=\"min_amt\" \r\n                        value={this.state.min_amt}  onChange={this.handleChange} \r\n                        className=\"form-control\" placeholder=\"Enter Price\" \r\n                        onKeyPress={(event) => {\r\n                          if (!/[0-9]/.test(event.key)) {\r\n                            event.preventDefault();\r\n                          }\r\n                        }}\r\n                        />       \r\n                        <p style={{fontSize:'12px',fontWeight:'600'}}>{API.dynamicPriceMessage()}</p>\r\n                      </div>\r\n                    <div className=\"col-md-6\" style={{display:'none'}}>\r\n                       <label>\r\n                               <strong>  \r\n                                  Suggested Amount \r\n                              </strong>     \r\n                       </label>\r\n                      <input type=\"text\" name=\"suggested_amt\" \r\n                      value={this.state.suggested_amt} onChange={this.handleChange} \r\n                      className=\"form-control\" placeholder=\"Enter Price\" \r\n                      onKeyPress={(event) => {\r\n                        if (!/[0-9]/.test(event.key)) {\r\n                          event.preventDefault();\r\n                        }\r\n                      }}\r\n                      />       \r\n                    </div>\r\n                  </>\r\n                  :\r\n                  null\r\n                }\r\n            </div>\r\n            <div className=\"btun-box\">\r\n              <button className=\"btun\"  onClick={this.nextClick} disabled={this.state.disabledBtn}> {this.state.BtnName} <NavigateNextIcon/></button>\r\n              <p id=\"msg\"></p> \r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n\r\n      </Modal>\r\n\r\n    \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nEditPremiumFeature2.propTypes = {\r\n\r\n};\r\n\r\nexport default EditPremiumFeature2;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\EditEmbedContent2.js",["2541","2542","2543"],"import React, { Component } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport API  from '../services/API';\r\nclass EditEmbedContent2 extends Component\r\n{\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       openModel:false,\r\n       base_url: process.env.REACT_APP_API_URL,\r\n       root_url: process.env.REACT_APP_ROOT_URL,\r\n       show:false,\r\n       open:false,\r\n       JM_ID:this.props.data.JM_ID,\r\n       LM_Title:this.props.data.title,\r\n       LM_Url:this.props.data.URL,\r\n       LM_Image:this.props.data.image,\r\n       LM_Who_Will_See:1,\r\n       selectedFile: null,\r\n       linkMaster:[],\r\n      userDetails:[],\r\n      fromEdit:true\r\n    }\r\n    //console.log(this.props.data.LM_Who_Will_See);\r\n\r\n  }\r\n  ModalClose=()=>{\r\n    this.setState({openModel:false,show:false});\r\n  }\r\n  ModalOpen=()=>{\r\n    this.setState({openModel:true,show:true});\r\n\r\n    //console.log(this.props.data);\r\n      this.setState({ \r\n        JM_ID:this.props.data.JM_ID,\r\n        EC_ID:this.props.data.tableId,\r\n        LM_Title:this.props.data.title,\r\n        LM_Url:this.props.data.URL,\r\n        LM_Image:this.props.data.image,\r\n        LM_Who_Will_See:1,\r\n        selectedFile: null,\r\n        linkMaster:[],\r\n        userDetails:[],\r\n        fromEdit:true\r\n    });\r\n  }\r\n  openCollapse = () => {\r\n    !this.state.open ?\r\n      this.setState({ open: true })\r\n      :\r\n      this.setState({ open: false })\r\n      \r\n  }\r\n\r\n  onChangeHandle=(e)=>{\r\n          this.setState({[e.target.name]:e.target.value});     \r\n}\r\n\r\nimageonChange=(e)=>{     \r\n  const file = e.target.files[0];\r\n  this.setState({ selectedFile: e.target.files[0] }); \r\n  this.setState({\r\n    LM_Image: URL.createObjectURL(file),\r\n    fromEdit:false\r\n  });\r\n}\r\nonChangeHandleURL=(e)=>\r\n{\r\n // let value = e.target.value\r\n  //value = value.replace(/[^A-Za-z]/ig, '')\r\n  this.setState({ JM_User_Profile_Url: e.target.value.replace(/[^\\w\\s]/gi, \"\") });     \r\n}\r\n\r\ndoUpdateLink=(event)=>{  \r\n      event.preventDefault();\r\n\r\n      var LM_Url=this.state.LM_Url;\r\n      var embedUrl='';\r\n      if(this.state.LM_Url.startsWith('https://youtu.be') || \r\n        this.state.LM_Url.startsWith('https://www.youtu.be') || \r\n        this.state.LM_Url.startsWith('https://www.youtube.com/watch?v=') || \r\n        this.state.LM_Url.startsWith('https://youtube.com/watch?v='))\r\n       {\r\n        if(LM_Url.includes('embed')===false && LM_Url.includes('youtu.be'))\r\n        {\r\n          embedUrl=LM_Url.replace('youtu.be','youtube.com/embed');    //https://youtu.be/wFQ9VQ5jyw8  \r\n       \r\n            //embed : https://www.youtube.com/embed/wFQ9VQ5jyw8\r\n            //https://www.youtube.com/embed/wFQ9VQ5jyw8\r\n        }\r\n        else if(LM_Url.includes('embed')===false && LM_Url.includes('watch?v='))\r\n        {\r\n         // embedUrl=LM_Url.replace('watch?v=','embed/'); //https://www.youtube.com/watch?v=sxxPuBDhHTM\r\n\r\n          //https://www.youtube.com/embed/sxxPuBDhHTM\r\n          embedUrl=LM_Url;  \r\n        }\r\n        else\r\n        {\r\n          embedUrl=LM_Url;    \r\n        }\r\n      }\r\n   else if(\r\n        this.state.LM_Url.startsWith('https://open.spotify.com/') || \r\n        this.state.LM_Url.startsWith('https://www.open.spotify.com/')\r\n        )\r\n      {\r\n        if(LM_Url.includes('embed')===false && LM_Url.includes('/album/'))\r\n        {\r\n          //https://open.spotify.com/album/1DFixLWuPkv3KT3TnV35m3?si=HIySgutBRQqwTWPyE_bPoA&dl_branch=1 //playlist\r\n          embedUrl=LM_Url.replace('/album/','/embed/album/');          \r\n          //https://open.spotify.com/embed/album/1DFixLWuPkv3KT3TnV35m3?si=HIySgutBRQqwTWPyE_bPoA&dl_branch=1\r\n        }\r\n       else if(LM_Url.includes('embed')===false && LM_Url.includes('/track/'))\r\n        {\r\n          //https://open.spotify.com/track/1Xu7rSdycX0Hri6ztWA5Wz?si=1745acd538434609  single alubum\r\n          embedUrl=LM_Url.replace('/track/','/embed/track/');    \r\n          //https://open.spotify.com/embed/track/1Xu7rSdycX0Hri6ztWA5Wz?si=1745acd538434609\r\n            \r\n        }\r\n        else if(LM_Url.includes('embed')===false && LM_Url.includes('/playlist/'))\r\n        {\r\n          //https://open.spotify.com/playlist/37i9dQZF1DXdpQPPZq3F7n?si=79QsPno4TteIPAl50dlBCQ&utm_source=copy-link&dl_branch=1 \r\n\r\n          embedUrl=LM_Url.replace('/playlist/','/embed/playlist/');    \r\n           //https://open.spotify.com/embed/playlist/37i9dQZF1DXdpQPPZq3F7n?si=79QsPno4TteIPAl50dlBCQ&utm_source=copy-link&dl_branch=1 \r\n  \r\n        }\r\n        else\r\n        {\r\n          embedUrl=LM_Url;    \r\n        }\r\n      }\r\n    else\r\n    {\r\n      embedUrl=LM_Url;    \r\n    }\r\n      const formData = new FormData(); \r\n      const files = event.target.files\r\n      let Api_url=this.state.base_url+'admin/UpdateEmbedContent';\r\n      formData.append('sampleFile', this.state.selectedFile)\r\n      formData.append('EC_ID', this.props.data.tableId) \r\n      formData.append('LM_Title', this.state.LM_Title) \r\n      formData.append('LM_Url', embedUrl) \r\n      formData.append('LM_Image', this.state.LM_Image)\r\n      formData.append('LM_Who_Will_See', this.state.LM_Who_Will_See)\r\n      formData.append('JM_User_Profile_Url_plus_JM_ID', this.props.JM_User_Profile_Url+\"_\"+this.props.data.JM_ID)\r\n      \r\n          fetch(Api_url, {\r\n            method: 'POST',     \r\n            headers: {\r\n              \"authorization\": API.getAuth(),\"id\":API.getId()\r\n            },     \r\n            body: formData\r\n          })\r\n          .then(response => response.json())\r\n          .then(data => \r\n            {                   \r\n               //console.log(data);   \r\n               this.ModalClose();\r\n               this.Get_User_Details();              \r\n          })\r\n          .catch(error => {\r\n            console.error(error)\r\n          })\r\n}\r\n\r\nGet_User_Details = () => {  \r\n  \r\n  var JSONdata = {\r\n    JM_ID: this.state.JM_ID\r\n  };\r\n  const API_url = this.state.base_url + \"admin/userDetailsAll\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\",\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n    .then((response) => response.json())\r\n    .then(data1 => {\r\n      if(data1.status===1)\r\n      {\r\n        const data=API.decryptJson(data1.flag);\r\n        this.setState({\r\n          LM_Title:'',\r\n          LM_Url:'',\r\n          LM_Image:'',\r\n          LM_Who_Will_See:1,\r\n          selectedFile: null,\r\n          title:'Success!!!',\r\n          msg:'Profile is updated',\r\n          userDetailsAll: data.data,\r\n          userDetails:data.userDetails,\r\n          themeMasterUser:data.themeMasterUser,\r\n          socialWidget:data.socialWidget,\r\n          gifts:data.gifts, \r\n          category_master:data.category_master\r\n        });\r\n\r\n        this.props.setStateAfterInsert(this.state);\r\n      }   \r\n        else\r\n          alert('not fetch');\r\n    });\r\n  \r\n\r\n}\r\n  render(){\r\n    var imagePath=process.env.REACT_APP_UPLOAD_URL+\"no_image.png\";\r\n  return (\r\n    <>\r\n     <button onClick={this.ModalOpen}><CreateIcon />     \r\n      </button>\r\n      <Modal\r\n        show={this.state.show}\r\n        onHide={this.ModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <p className=\"addnew-title\">Edit Embed Content</p>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <form  onSubmit={this.doUpdateLink}>\r\n          <div className=\"addnew-box\">\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Title\"\r\n             name=\"LM_Title\" value={this.state.LM_Title} onChange={this.onChangeHandle}/>\r\n\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"https://\"\r\n           name=\"LM_Url\" value={this.state.LM_Url} onChange={this.onChangeHandle} />\r\n\r\n       \r\n            <div className=\"image-btun-box\" style={{display:'none'}}>\r\n              <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                  <div className=\"view-image\">\r\n                      {\r\n                        this.state.fromEdit ?\r\n                        <img  src={imagePath}/>\r\n                        :\r\n                        <img  src={process.env.REACT_APP_UPLOAD_UR+this.state.LM_Image}/>\r\n                      }\r\n                     \r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <label className=\"up-ico\" for=\"selectImage\">\r\n                    Upload an Image\r\n                    <input id='selectImage' type=\"file\" style={{ display:\"none\"}}  onClick={this.clickhandler} onChange={this.imageonChange} />\r\n                  </label>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                          {/* <button className=\"up-ico\">Choose an Icon</button> */}\r\n                     {/* <Button onClick={this.openCollapse} className=\"btun\"\r\n                          aria-controls=\"example-collapse-text\"\r\n                          aria-expanded={this.state.open} >              \r\n                        Choose an Icon\r\n                      </Button> */}\r\n                      <Collapse in={this.state.open}>\r\n                          <div id=\"example-collapse-text\">\r\n                              <div className=\"row\">\r\n                                <div className=\"col-md-4\">\r\n\r\n                                       hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                 \r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                  \r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                      </Collapse>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <label>Who should be able to see this?</label> */}\r\n            <select style={{display:'none'}}  className=\"form-control\" name=\"LM_Who_Will_See\" value={this.state.LM_Who_Will_See} onChange={this.onChangeHandle}>\r\n              <option value=\"1\">Everyone</option>\r\n              <option value=\"2\">My Followers</option>\r\n              <option value=\"3\">People I follow</option>\r\n            </select>\r\n            <div className=\"btun-box\">\r\n              <button className=\"btun btun_1\">Update Links</button>\r\n              <button className=\"btun\" onClick={this.ModalClose}>Cancel</button>\r\n            </div>\r\n          </div>\r\n          </form>\r\n        </Modal.Body>\r\n\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n}\r\n\r\nexport default EditEmbedContent2;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\EmbedContent2.js",["2544","2545"],"import React, { Component } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\nimport API  from '../services/API';\r\nclass EmbedContent2 extends Component\r\n{\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       openModel:false,\r\n       base_url: process.env.REACT_APP_API_URL,\r\n       root_url: process.env.REACT_APP_ROOT_URL,\r\n       show:false,\r\n       open:false,\r\n       JM_ID:this.props.JM_ID,\r\n       LM_Title:'',\r\n       LM_Url:'',\r\n       LM_Image:'',\r\n       LM_Who_Will_See:1,\r\n       selectedFile: null,\r\n       linkMaster:[],\r\n      userDetails:[],\r\n      socialWidget:[],\r\n      embed_content:[],\r\n      category_master:[],\r\n      category_links:[],\r\n      title:'',\r\n      msg:'',\r\n      logo:''\r\n      \r\n    }\r\n    \r\n  }\r\n  ModalClose=()=>{\r\n    this.setState({openModel:false,show:false});\r\n  }\r\n  ModalOpen=()=>{\r\n    this.setState({\r\n      openModel:true,show:true,\r\n      LM_Title:'',\r\n      LM_Url:''    \r\n    \r\n    });\r\n  }\r\n  openCollapse = () => {\r\n    !this.state.open ?\r\n      this.setState({ open: true })\r\n      :\r\n      this.setState({ open: false })\r\n      \r\n  }\r\n\r\n  onChangeHandle=(e)=>{\r\n    this.setState({[e.target.name]:e.target.value});     \r\n}\r\nonChangeHandleURL=(e)=>\r\n{\r\n // let value = e.target.value\r\n  //value = value.replace(/[^A-Za-z]/ig, '')\r\n  this.setState({ JM_User_Profile_Url: e.target.value.replace(/[^\\w\\s]/gi, \"\") });     \r\n}\r\nimageonChange=(e)=>{     \r\n  const file = e.target.files[0];\r\n  this.setState({ selectedFile: e.target.files[0] }); \r\n  this.setState({\r\n    LM_Image: URL.createObjectURL(file)\r\n  });\r\n}\r\ndoInsertLink=(event)=>{  \r\n      event.preventDefault();\r\n      document.getElementById(\"msg_error\").innerHTML='';    \r\n\r\n      if(this.state.LM_Url.length===0)\r\n      {\r\n        document.getElementById(\"msg_error\").innerHTML='Enter Embed URL';\r\n        return false;\r\n      }\r\n      var LM_Url=this.state.LM_Url;\r\n      var embedUrl='';\r\n      if(this.state.LM_Url.startsWith('https://youtu.be') || \r\n        this.state.LM_Url.startsWith('https://www.youtu.be') || \r\n        this.state.LM_Url.startsWith('https://www.youtube.com/watch?v=') || \r\n        this.state.LM_Url.startsWith('https://youtube.com/watch?v='))\r\n      {\r\n        if(LM_Url.includes('embed')===false && LM_Url.includes('youtu.be'))\r\n        {\r\n          embedUrl=LM_Url.replace('youtu.be','youtube.com/embed');    //https://youtu.be/wFQ9VQ5jyw8  \r\n       \r\n            //embed : https://www.youtube.com/embed/wFQ9VQ5jyw8\r\n            //https://www.youtube.com/embed/wFQ9VQ5jyw8\r\n        }\r\n        else if(LM_Url.includes('embed')===false && LM_Url.includes('watch?v='))\r\n        {\r\n          //embedUrl=LM_Url.replace('watch?v=','embed/'); \r\n          embedUrl=LM_Url;  \r\n        }\r\n        else\r\n        {\r\n          embedUrl=LM_Url;    \r\n        }\r\n       \r\n       \r\n       \r\n        //https://itunes.apple.com/us/album/luys-i-luso/1035022308\r\n      }\r\n      else if(\r\n        this.state.LM_Url.startsWith('https://open.spotify.com/') || \r\n        this.state.LM_Url.startsWith('https://www.open.spotify.com/')\r\n        )\r\n      {\r\n        if(LM_Url.includes('embed')===false && LM_Url.includes('/album/'))\r\n        {\r\n          //https://open.spotify.com/album/1DFixLWuPkv3KT3TnV35m3?si=HIySgutBRQqwTWPyE_bPoA&dl_branch=1 //playlist\r\n          embedUrl=LM_Url.replace('/album/','/embed/album/');          \r\n          //https://open.spotify.com/embed/album/1DFixLWuPkv3KT3TnV35m3?si=HIySgutBRQqwTWPyE_bPoA&dl_branch=1\r\n        }\r\n        else if(LM_Url.includes('embed')===false && LM_Url.includes('/track/'))\r\n        {\r\n          //https://open.spotify.com/track/1Xu7rSdycX0Hri6ztWA5Wz?si=1745acd538434609  single alubum\r\n          embedUrl=LM_Url.replace('/track/','/embed/track/');    \r\n          //https://open.spotify.com/embed/track/1Xu7rSdycX0Hri6ztWA5Wz?si=1745acd538434609\r\n            \r\n        }\r\n        else if(LM_Url.includes('embed')===false && LM_Url.includes('/playlist/'))\r\n        {\r\n          //https://open.spotify.com/playlist/37i9dQZF1DXdpQPPZq3F7n?si=79QsPno4TteIPAl50dlBCQ&utm_source=copy-link&dl_branch=1 \r\n\r\n          embedUrl=LM_Url.replace('/playlist/','/embed/playlist/');    \r\n           //https://open.spotify.com/embed/playlist/37i9dQZF1DXdpQPPZq3F7n?si=79QsPno4TteIPAl50dlBCQ&utm_source=copy-link&dl_branch=1 \r\n  \r\n        }\r\n        else\r\n        {\r\n          embedUrl=LM_Url;    \r\n        }\r\n      }\r\n      else if(\r\n        this.state.LM_Url.startsWith('https://music.apple.com/') \r\n      )\r\n      {\r\n        \r\n          //https://music.apple.com/us/album/bloom/1396292262\r\n          embedUrl=LM_Url.replace('https://music.apple.com/','https://embed.music.apple.com/');    \r\n       \r\n      }\r\n    else\r\n    {\r\n      embedUrl=LM_Url;    \r\n    }\r\n      //watch?v=\r\n      const formData = new FormData(); \r\n      const files = event.target.files\r\n      let Api_url=this.state.base_url+'admin/InsertEmbedContent';\r\n      formData.append('sampleFile', this.state.selectedFile)\r\n      formData.append('JM_ID', this.state.JM_ID) \r\n      formData.append('LM_Title', this.state.LM_Title) \r\n      formData.append('LM_Url', embedUrl) \r\n      formData.append('LM_Image', this.state.LM_Image)\r\n      formData.append('LM_Who_Will_See', this.state.LM_Who_Will_See)\r\n      formData.append('JM_User_Profile_Url_plus_JM_ID', this.props.JM_User_Profile_Url_plus_JM_ID)\r\n      \r\n          fetch(Api_url, {\r\n            method: 'POST',        \r\n            headers: {\r\n              \"authorization\": API.getAuth(),\"id\":API.getId()\r\n            }, \r\n            body: formData\r\n          })\r\n          .then(response => response.json())\r\n          .then(data => \r\n            {                   \r\n               //console.log(data);  \r\n               if(data.status===1) \r\n               {\r\n                this.ModalClose();\r\n                this.Get_User_Details();      \r\n               }\r\n              else\r\n              {\r\n                document.getElementById(\"msg_error\").innerHTML=\"Already have 3 embed content\";\r\n                return false;\r\n              }      \r\n          })\r\n          .catch(error => {\r\n            console.error(error)\r\n          })\r\n}\r\n\r\nGet_User_Details = () => {\r\n  var JSONdata = {\r\n    JM_ID: this.state.JM_ID\r\n  };\r\n  const API_url = this.state.base_url + \"admin/userDetailsAll\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n    .then((response) => response.json())\r\n    .then(data1 => {\r\n      if(data1.status===1)\r\n      {\r\n        const data=API.decryptJson(data1.flag);\r\n      \r\n        this.setState({\r\n                userDetailsAll: data.data,\r\n                userDetails:data.userDetails,\r\n                themeMasterUser:data.themeMasterUser,\r\n                socialWidget:data.socialWidget,\r\n                gifts:data.gifts, \r\n                category_master:data.category_master,\r\n                title:'Success!!!',\r\n                msg:'Profile is updated',\r\n        });\r\n\r\n        this.props.setStateAfterInsert(this.state);\r\n      }   \r\n        else\r\n          alert('not fetch');\r\n    });\r\n  \r\n\r\n}\r\n\r\nfileSelectHandler=()=> {\r\n  //console.log(\"changed\")\r\n}\r\n\r\nclickhandler = () => {\r\n//console.log(\"clicked\")\r\n}\r\n\r\n  render(){\r\n  return (\r\n    <>\r\n      <div className=\"card-btun\" onClick={this.ModalOpen}><AddCircleOutlineOutlinedIcon />\r\n        <h4>Embed Content </h4> <p>Share your latest work</p>\r\n      </div>\r\n      <Modal\r\n        show={this.state.show}\r\n        onHide={this.ModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <p className=\"addnew-title\"> Add a Embed Content to your profile </p>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n         <form  onSubmit={this.doInsertLink}>\r\n          <div className=\"addnew-box\">\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Title\"\r\n             name=\"LM_Title\" value={this.state.LM_Title} onChange={this.onChangeHandle}/>\r\n\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Enter Embed URL\"\r\n           name=\"LM_Url\" value={this.state.LM_Url} onChange={this.onChangeHandle} />\r\n\r\n           \r\n            <div className=\"image-btun-box\" style={{display:'none'}}>\r\n              <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"view-image\">\r\n                            <img  src={this.state.LM_Image}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">                    \r\n                        <label className=\"up-ico\" htmlFor=\"selectImage\">\r\n                            Upload an Image    </label>        \r\n                            <input type=\"file\" id=\"prop_up\" accept=\"image/*\" name=\"photo\" style={{ display:\"none\"}} \r\n                                onChange={this.imageonChange}/>         \r\n                            <input id='selectImage' type=\"file\" style={{ display:\"none\"}}  onClick={this.clickhandler} onChange={this.imageonChange} />\r\n                        </div>\r\n                    \r\n                  </div>\r\n            </div>\r\n            {/* <label>Who should be able to see this?</label> */}\r\n            <select style={{display:'none'}} className=\"form-control\" name=\"LM_Who_Will_See\" value={this.state.LM_Who_Will_See} onChange={this.onChangeHandle}>\r\n                <option value=\"1\">Everyone</option>\r\n                <option value=\"2\">My Followers</option>\r\n                <option value=\"3\">People I follow</option>\r\n            </select>\r\n            <div className=\"btun-box\">\r\n              <button className=\"btun btun_1\">Add</button>\r\n              <button className=\"btun\" onClick={this.ModalClose}>Cancel</button>\r\n            </div>\r\n            <p id=\"msg_error\" style={{color:'red'}}></p>\r\n          </div>\r\n          </form>\r\n        </Modal.Body>\r\n\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n}\r\n\r\nexport default EmbedContent2;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\EditStackedLink2.js",["2546","2547","2548","2549","2550","2551","2552","2553","2554","2555","2556","2557","2558","2559","2560","2561","2562","2563","2564","2565","2566","2567","2568","2569"],"import React, { Component } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport { MDBIcon } from 'mdbreact';\r\nimport API  from '../services/API';\r\nclass EditStackedLink2 extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n      \r\n        this.state = {\r\n           openModel:false,\r\n           base_url: process.env.REACT_APP_API_URL,\r\n           root_url: process.env.REACT_APP_ROOT_URL,\r\n         \r\n           show:false,\r\n           open:false,\r\n           JM_ID: 0,  \r\n           SWM_Title:'',\r\n           SWM_Url:'',\r\n           SWM_Icon:'',\r\n           LM_Who_Will_See:1,\r\n           selectedFile: null,\r\n           linkMaster:[],\r\n          userDetails:[],\r\n          socialWidget:[],\r\n          isClose:'none',\r\n          CM_Folder_Sub_Title:'',\r\n          CM_Folder_Back_Image:'',\r\n          CM_Folder_Title:'',\r\n          category_links:[],\r\n          activeIcon:'',\r\n          isDisplayIcon:'block',\r\n          isDisplayImage:'none',\r\n          iconCheked:true,\r\n          imageCheked:false,\r\n          fromEdit:true\r\n          \r\n    \r\n        }\r\n        ////console.log(this.props.JM_User_Profile_Url_plus_JM_ID);\r\n      }\r\n      ModalClose=()=>{\r\n        this.setState({openModel:false,show:false});\r\n\r\n\r\n      }\r\n      ModalOpen=()=>{\r\n        this.setState({openModel:true,show:true});\r\n        this.fillData();\r\n      }\r\n     \r\n    \r\n      onChangeHandle=(e)=>{\r\n          let titleVal=e.target.value;\r\n        this.setState({[e.target.name]:e.target.value});  \r\n        let index = e.nativeEvent.target.selectedIndex;\r\n    }\r\n    onChangeHandleURL=(e)=>\r\n    {\r\n      this.setState({[e.target.name]:e.target.value});     \r\n    }\r\n    onChangeFolderImage=(e)=>{     \r\n      const file = e.target.files[0];\r\n      this.setState({ selectedFile: e.target.files[0] }); \r\n      this.setState({\r\n        CM_Folder_Back_Image: URL.createObjectURL(file),\r\n        isClose:'block'\r\n      });\r\n\r\n    }\r\n    addFolder=(event)=>{  \r\n          event.preventDefault();\r\n          if(this.validate())\r\n          {\r\n              const formData = new FormData(); \r\n              const files = event.target.files\r\n              let Api_url=process.env.REACT_APP_API_URL+'admin/UpdateCategory';\r\n              formData.append('sampleFile', this.state.selectedFile)\r\n              formData.append('CM_ID', this.state.CM_ID) \r\n              formData.append('JM_ID', this.state.JM_ID) \r\n              formData.append('CM_Folder_Title', this.state.CM_Folder_Title) \r\n              formData.append('CM_Folder_Sub_Title', this.state.CM_Folder_Sub_Title)\r\n              formData.append('JM_User_Profile_Url_plus_JM_ID', this.props.JM_User_Profile_Url_plus_JM_ID)\r\n              formData.append('CM_Icon', this.state.activeIcon)\r\n                  fetch(Api_url, {\r\n                    method: 'POST',         \r\n                    body: formData,\r\n                    headers: { \"authorization\": API.getAuth(),\"id\":API.getId()},    \r\n                  })\r\n                  .then(response => response.json())\r\n                  .then(data => \r\n                    {                   \r\n                      //console.log(data);   \r\n                      this.ModalClose();\r\n                      this.Get_User_Details();              \r\n                  })\r\n                  .catch(error => {\r\n                    //console.error(error)\r\n                  })\r\n            }\r\n            else\r\n            {\r\n              document.getElementById('msg').innerHTML='Enter Title';\r\n              this.hideMessage('msg');    \r\n            }\r\n    }\r\n    hideMessage=(id)=>{\r\n      setTimeout(function() {\r\n        document.getElementById(id).innerHTML='';  \r\n       }, 2000);\r\n             \r\n    }\r\n  \r\n  \r\n    Get_User_Details = () => {\r\n      var JSONdata = {\r\n        JM_ID: this.state.JM_ID\r\n      };\r\n      const API_url = this.state.base_url + \"admin/userDetailsAll\";\r\n    fetch(API_url,\r\n      {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      })\r\n    .then((response) => response.json())\r\n    .then(data1 => {\r\n      if (data1 != null && data1.status > 0)\r\n       {\r\n        const data=API.decryptJson(data1.flag);\r\n        this.setState({\r\n          userDetailsAll: data.data,\r\n          userDetails:data.userDetails,\r\n          themeMasterUser:data.themeMasterUser,\r\n          socialWidget:data.socialWidget,\r\n          gifts:data.gifts,\r\n          title:'Success!!!',\r\n          msg:'Profile is updated',\r\n        });\r\n        this.props.setStateAfterInsert(this.state);\r\n      }      \r\n      else\r\n         this.setState({showPage:false})\r\n \r\n    });\r\n    \r\n  \r\n  }\r\n  \r\n    fileSelectHandler=()=> {\r\n      //console.log(\"changed\")\r\n    }\r\n    \r\n    clickhandler = () => {\r\n    //console.log(\"clicked\")\r\n    }\r\n    validate=(e)=>{\r\n      let valid=true;\r\n        if(this.state.CM_Folder_Title === \"\")\r\n        {\r\n          valid=false;\r\n        }\r\n            return valid;    \r\n    }\r\n   \r\n    fillData=()=>{\r\n        //console.log(this.props.category_master);\r\n        this.setState({\r\n            CM_ID:this.props.CM_ID,\r\n            JM_ID:this.props.category_master.JM_ID,\r\n            CM_Folder_Title:this.props.category_master.title,\r\n            CM_Folder_Sub_Title:this.props.category_master.description,\r\n            CM_Folder_Back_Image_Current:process.env.REACT_APP_UPLOAD_URL+this.props.category_master.image,\r\n            activeIcon:this.props.category_master.icon\r\n\r\n\r\n        });\r\n    }\r\n    setActive=(e)=>{\r\n      e.preventDefault();\r\n    \r\n      var icon = e.currentTarget.attributes['data-id'].value;\r\n      this.setState({\r\n        activeIcon:icon\r\n      })\r\n    }\r\n    showHideDiv=(e)=>{\r\n    \r\n      if(e.target.value==='icon')\r\n      {\r\n        this.setState({\r\n          isDisplayIcon:\"block\", isDisplayImage:\"none\",\r\n          iconCheked:true,imageCheked:false\r\n        })\r\n      }\r\n    \r\n      if(e.target.value==='image')\r\n      {\r\n        this.setState({\r\n          isDisplayIcon:\"none\", isDisplayImage:\"block\",\r\n          iconCheked:false,imageCheked:true\r\n        })\r\n      }\r\n    }\r\n      render(){\r\n      return (\r\n        <>\r\n           <button onClick={this.ModalOpen}><CreateIcon />     \r\n            </button>\r\n          <Modal\r\n            show={this.state.show}\r\n            onHide={this.ModalClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            centered\r\n    \r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>\r\n                <p className=\"addnew-title\">Update Folder</p>\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n             <form  onSubmit={this.addFolder}>\r\n              <div className=\"addnew-box\">\r\n                   <label> Category Title </label>                    \r\n                   <input type=\"text\" className=\"form-control\" placeholder=\"Category Title\"\r\n                        name=\"CM_Folder_Title\" value={this.state.CM_Folder_Title} onChange={this.onChangeHandleURL}/>\r\n                  <label> Category Sub Title </label>                    \r\n                   <input type=\"text\" className=\"form-control\" placeholder=\"Sub Title\"\r\n                        name=\"CM_Folder_Sub_Title\" value={this.state.CM_Folder_Sub_Title} onChange={this.onChangeHandleURL}/>\r\n                           <label>Category Icon</label>\r\n\r\n\r\n\r\n                              <div className=\"image-btun-box text-center\">\r\n                                <input type=\"radio\" checked={this.state.iconCheked} className=\"setCursor\" name=\"selection\" id=\"icon_chk\" value=\"icon\" onClick={this.showHideDiv}/>\r\n                                <label for=\"icon_chk\" className=\"setCursor\"> &nbsp;Icon&nbsp; </label>\r\n                                <input type=\"radio\"  checked={this.state.imageCheked} className=\"setCursor\"  name=\"selection\"  id=\"image_chk\" value=\"image\" onClick={this.showHideDiv}/>\r\n                                <label for=\"image_chk\" className=\"setCursor\"> \r\n                                      &nbsp;Image&nbsp;\r\n                                </label>\r\n                              </div>\r\n                              {/* icon */}\r\n                              <div style={{display:this.state.isDisplayIcon}}>\r\n                                <label>What would you like the icon to be?</label> \r\n                                <div className=\"image-btun-box\" >\r\n                                  <div className=\"iconbox\">\r\n                                      <div className=\"icon\"  \r\n                                          className={this.state.activeIcon === \"external-link-alt\" ? 'icon active' : 'icon'}  data-id=\"external-link-alt\"  onClick={this.setActive}>\r\n                                          <MDBIcon icon=\"external-link-alt\" size=\"2x\"/>                   \r\n                                        \r\n                                  \r\n                                      </div>\r\n                                      <div className=\"icon\"\r\n                                      className={this.state.activeIcon === \"lightbulb\" ? 'icon active' : 'icon'} data-id=\"lightbulb\"   onClick={this.setActive}>\r\n                                      \r\n                                        <MDBIcon icon=\"lightbulb\" size=\"2x\"/>\r\n                                      </div>\r\n                                      <div className=\"icon\"\r\n                                      className={this.state.activeIcon === \"anchor\" ? 'icon active' : 'icon'} data-id=\"anchor\"    onClick={this.setActive}>\r\n                                          <MDBIcon icon=\"anchor\" size=\"2x\"/>\r\n                                          \r\n                                      </div>\r\n                                      <div className=\"icon\"\r\n                                        className={this.state.activeIcon === \"link\" ? 'icon active' : 'icon'}  data-id=\"link\"  onClick={this.setActive}>\r\n                                          <MDBIcon icon=\"link\" size=\"2x\"/>\r\n                                      </div>\r\n                                      <div className=\"icon\"\r\n                                        className={this.state.activeIcon === \"external-link-square-alt\" ? 'icon active' : 'icon'} data-id=\"external-link-square-alt\"    onClick={this.setActive}>\r\n                                          <MDBIcon icon=\"external-link-square-alt\" size=\"2x\"/>\r\n                                      </div>\r\n\r\n                                      <div className=\"icon\"\r\n                                        className={this.state.activeIcon === \"archway\" ? 'icon active' : 'icon'} data-id=\"archway\" onClick={this.setActive}>\r\n                                          <MDBIcon icon=\"archway\" size=\"2x\"/>                   \r\n                                      </div>\r\n\r\n\r\n                                      <div className=\"icon\"  \r\n                                        className={this.state.activeIcon === \"ankh\" ? 'icon active' : 'icon'} data-id=\"ankh\" onClick={this.setActive}>\r\n                                          <MDBIcon icon=\"ankh\" size=\"2x\" />\r\n                                      </div>\r\n                                      <div className=\"icon\" \r\n                                      className={this.state.activeIcon === \"angle-double-right\" ? 'icon active' : 'icon'} data-id=\"angle-double-right\"  onClick={this.setActive}>\r\n                                        <MDBIcon icon=\"angle-double-right\" size=\"2x\" />                   \r\n                                      </div>\r\n                                      <div className=\"icon\"\r\n                                        className={this.state.activeIcon === \"cannabis\" ? 'icon active' : 'icon'} data-id=\"cannabis\"  onClick={this.setActive}>\r\n                                            <MDBIcon icon=\"cannabis\" data-id=\"cannabis\" size=\"2x\" />  \r\n                                      </div>\r\n                                      <div className=\"icon\"\r\n                                        className={this.state.activeIcon === \"chess-queen\" ? 'icon active' : 'icon'} data-id=\"chess-queen\" onClick={this.setActive}>\r\n                                            <MDBIcon icon=\"chess-queen\" data-id=\"chess-queen\"  size=\"2x\" />   \r\n                                      </div>\r\n                                             {/*========= MS2======================*/}\r\n\r\n                                        <div className=\"icon\"\r\n                                          className={this.state.activeIcon === \"air-freshener\" ? 'icon active' : 'icon'} data-id=\"air-freshener\" onClick={this.setActive}>\r\n                                              <MDBIcon icon=\"air-freshener\" data-id=\"air-freshener\"  size=\"2x\" />\r\n                                        </div>\r\n                                        <div className=\"icon\"\r\n                                          className={this.state.activeIcon === \"bell\" ? 'icon active' : 'icon'} data-id=\"bell\" onClick={this.setActive}>\r\n                                              <MDBIcon icon=\"bell\" data-id=\"bell\"  size=\"2x\" />\r\n                                        </div>\r\n                                        <div className=\"icon\"\r\n                                          className={this.state.activeIcon === \"guitar mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"guitar mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                                              <MDBIcon icon=\"guitar mdb-gallery-view-icon\" data-id=\"guitar mdb-gallery-view-icon\"  size=\"2x\" />\r\n                  \r\n                                        </div>\r\n                                        <div className=\"icon\"\r\n                                          className={this.state.activeIcon === \"hat-cowboy mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"hat-cowboy mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                                              <MDBIcon icon=\"hat-cowboy mdb-gallery-view-icon\" data-id=\"hat-cowboy mdb-gallery-view-icon\"  size=\"2x\" />\r\n\r\n                                        </div>\r\n                                        <div className=\"icon\"\r\n                                          className={this.state.activeIcon === \"music mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"music mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                                              <MDBIcon icon=\"music mdb-gallery-view-icon\" data-id=\"music mdb-gallery-view-icon\"  size=\"2x\" />\r\n                                            \r\n                                        </div>\r\n\r\n\r\n\r\n\r\n                                        <div className=\"icon\"\r\n                                          className={this.state.activeIcon === \"store mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"store mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                                              <MDBIcon icon=\"store mdb-gallery-view-icon\" data-id=\"store mdb-gallery-view-icon\"  size=\"2x\" />\r\n                                            \r\n                                        </div>\r\n\r\n                                        <div className=\"icon\"\r\n                                          className={this.state.activeIcon === \"trophy mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"trophy mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                                              <MDBIcon icon=\"trophy mdb-gallery-view-icon\" data-id=\"trophy mdb-gallery-view-icon\"  size=\"2x\" />\r\n                                \r\n                                        </div>\r\n                                        <div className=\"icon\"\r\n                                          className={this.state.activeIcon === \"wine-glass-alt mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"wine-glass-alt mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                                              <MDBIcon icon=\"wine-glass-alt mdb-gallery-view-icon\" data-id=\"wine-glass-alt mdb-gallery-view-icon\"  size=\"2x\" />\r\n                                    \r\n                                        </div>\r\n                                        <div className=\"icon\"\r\n                                          className={this.state.activeIcon === \"venus mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"venus mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                                              <MDBIcon icon=\"venus mdb-gallery-view-icon\" data-id=\"venus mdb-gallery-view-icon\"  size=\"2x\" />\r\n                                          \r\n                                        </div>\r\n                                        <div className=\"icon\"\r\n                                          className={this.state.activeIcon === \"yin-yang mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"yin-yang mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                                              <MDBIcon icon=\"yin-yang mdb-gallery-view-icon\" data-id=\"yin-yang mdb-gallery-view-icon\"  size=\"2x\" />\r\n                                        </div>\r\n\r\n                                        {/* ==========MS2 end ============== */}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n\r\n                              {/* image */}\r\n                              <div style={{display:this.state.isDisplayImage}}>\r\n                                    <label>What would you like the Image to be? </label>\r\n                                  <div className=\"image-btun-box\">\r\n                                    <div className=\"row\">\r\n                                      <div className=\"col-md-12\">\r\n                                          <div className=\"view-image\">\r\n                                            <img  src={this.state.CM_Folder_Back_Image}/>\r\n                                          </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">                   \r\n                                            <label className=\"up-ico\" htmlFor=\"foldr_img\">\r\n                                              Upload an Icon               </label>        \r\n                                              <input type=\"file\" id=\"foldr_img\" accept=\"image/*\" name=\"photo\" style={{ display:\"none\"}} \r\n                                                    onChange={this.onChangeFolderImage}/>         \r\n                                              {/* <input id='foldr_img' type=\"file\" style={{ display:\"none\"}}  onClick={this.clickhandler} onChange={this.imageonChange} /> */}\r\n                                          </div>                 \r\n                                      </div>\r\n                                  </div>\r\n                                </div>\r\n\r\n\r\n\r\n                    {/* <label className=\"roundPlus\" htmlFor='foldr_img'>\r\n                       <AddCircleOutlineOutlinedIcon/>\r\n                    </label> \r\n                    <img style={{width:'60px',height:'60px',borderRadius: '60%',margin:'5px'}} src={this.state.CM_Folder_Back_Image_Current}></img>\r\n                    <input type=\"file\" id=\"foldr_img\"  style={{display:'none'}}\r\n                         value=\"\" onChange={this.onChangeFolderImage}/>\r\n                         <div>\r\n                           {\r\n                           \r\n                              this.state.isClose==='block' ? \r\n                               <>\r\n                              <i className=\"fa fa-close\" style={{color:'red',fontSize:'20px',display:this.state.isClose}} onClick={()=> this.setState({CM_Folder_Back_Image:'',selectedFile:null,isClose:'none'})}></i>\r\n                              <img style={{width:'100%',height:'100%',borderRadius: '5%',margin:'5px'}} src={this.state.CM_Folder_Back_Image}></img>\r\n                              </>\r\n                            :\r\n                            null\r\n                            }\r\n                           \r\n                         </div> */}\r\n         \r\n               \r\n\r\n\r\n\r\n\r\n                <div className=\"btun-box\">\r\n                  <button className=\"btun btun_1\">Update Folder</button>\r\n                  <button className=\"btun\" onClick={this.ModalClose}>Cancel</button>\r\n                  <p id=\"msg\" style={{color:'red'}}></p>\r\n                </div>\r\n              </div>\r\n              </form>\r\n            </Modal.Body>\r\n    \r\n          </Modal>\r\n        </>\r\n      );\r\n    }\r\n    \r\n    }\r\nexport default EditStackedLink2;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\SocialWidget2.js",["2570","2571"],"import React, { Component } from 'react';\r\nimport {  NavLink } from 'react-router-dom';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\nimport API  from '../services/API';\r\n\r\nclass SocialWidget2 extends Component\r\n{\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       openModel:false,\r\n       base_url: process.env.REACT_APP_API_URL,\r\n       root_url: process.env.REACT_APP_ROOT_URL,\r\n     \r\n       show:false,\r\n       open:false,\r\n       JM_ID:this.props.JM_ID,\r\n       SWM_Title:'',\r\n       SWM_Url:'',\r\n       SWM_Icon:'',\r\n       SWM_Style_Type:'W',\r\n       LM_Who_Will_See:1,\r\n       selectedFile: null,\r\n       linkMaster:[],\r\n      userDetails:[],\r\n      socialWidget:[],\r\n      title:'',\r\n      msg:'',\r\n      logo:'',\r\n      SWM_Icon_Position:'bottom',\r\n\r\n      Instagram:'https://www.instagram.com/',\r\n      Facebook:'https://www.facebook.com/',\r\n      YouTube:'https://www.youtube.com/',\r\n      Twitter:'https://twitter.com/',\r\n      Snapchat:'https://www.snapchat.com/',\r\n      LinkedIn:'https://www.linkedin.com/',\r\n      Twitch:'https://www.twitch.com/',\r\n      Pinterest:'https://www.pinterest.com/',\r\n      Spotify:'https://www.spotify.com/',\r\n      ClubHouse:'https://www.clubhouse.com/',\r\n      Discord:'https://discord.gg/',\r\n      Medium:'https://www.medium.com/',\r\n      Whatsapp:'https://wa.me/',\r\n\r\n      category_links:[],\r\n      embed_content:[],\r\n      productList:[],\r\n      \r\n\r\n    }\r\n   // console.log(this.props.JM_User_Profile_Url_plus_JM_ID);\r\n  }\r\n  ModalClose=()=>{\r\n    this.setState({openModel:false,show:false});\r\n  }\r\n  ModalOpen=()=>{\r\n    this.setState({\r\n      openModel:true,show:true,\r\n      SWM_Title:'SELECT',\r\n      SWM_Url:''\r\n\r\n    \r\n    });\r\n  }\r\n  openCollapse = () => {\r\n    !this.state.open ?\r\n      this.setState({ open: true })\r\n      :\r\n      this.setState({ open: false })\r\n      \r\n  }\r\n\r\n  onChangeHandle=(e)=>{\r\n    document.getElementById(\"whatsApp\").innerHTML='';\r\n    document.getElementById('msg_social').innerText='';\r\n      let titleVal=e.target.value;\r\n    this.setState({[e.target.name]:e.target.value});  \r\n    let index = e.nativeEvent.target.selectedIndex;\r\n  //  let label = e.nativeEvent.target[index].text;\r\n    let SWM_Icon = e.target[e.target.selectedIndex].getAttribute('data-icon');\r\n   // console.log(SWM_Icon)\r\n    if(titleVal===\"Instagram\")\r\n        this.setState({SWM_Url:this.state.Instagram,SWM_Icon});\r\n    if(titleVal===\"Facebook\")\r\n        this.setState({SWM_Url:this.state.Facebook,SWM_Icon});\r\n    if(titleVal===\"YouTube\")\r\n        this.setState({SWM_Url:this.state.YouTube,SWM_Icon});\r\n    if(titleVal===\"Twitter\")\r\n        this.setState({SWM_Url:this.state.Twitter,SWM_Icon});\r\n    if(titleVal===\"Twitch\")\r\n        this.setState({SWM_Url:this.state.Twitch,SWM_Icon});\r\n    if(titleVal===\"Snapchat\")\r\n        this.setState({SWM_Url:this.state.Snapchat,SWM_Icon});\r\n    if(titleVal===\"LinkedIn\")\r\n        this.setState({SWM_Url:this.state.LinkedIn,SWM_Icon});\r\n    if(titleVal===\"Pinterest\")\r\n        this.setState({SWM_Url:this.state.Pinterest,SWM_Icon});\r\n    if(titleVal===\"Spotify\")\r\n        this.setState({SWM_Url:this.state.Spotify,SWM_Icon});\r\n    if(titleVal===\"Website\" || titleVal===\"Shop\")\r\n        this.setState({SWM_Url:'https://',SWM_Icon});\r\n    if(titleVal===\"Email\")\r\n         this.setState({SWM_Url:'example@gmail.com',SWM_Icon});\r\n    if(titleVal===\"ClubHouse\")\r\n         this.setState({SWM_Url:this.state.ClubHouse,SWM_Icon});\r\n\r\n         if(titleVal===\"Discord\")\r\n         this.setState({SWM_Url:this.state.Discord,SWM_Icon});\r\n         if(titleVal===\"Medium\")\r\n         this.setState({SWM_Url:this.state.Medium,SWM_Icon});\r\n         if(titleVal===\"Whatsapp\")\r\n         {\r\n           document.getElementById(\"whatsApp\").innerHTML='Example Url: https://wa.me/mynumber';\r\n           this.setState({SWM_Url:this.state.Whatsapp,SWM_Icon});\r\n         }\r\n         \r\n   \r\n}\r\nonChangeHandleURL=(e)=>\r\n{\r\n  this.setState({[e.target.name]:e.target.value});     \r\n}\r\nimageonChange=(e)=>{     \r\n  const file = e.target.files[0];\r\n  this.setState({ selectedFile: e.target.files[0] }); \r\n  this.setState({\r\n    SWM_Icon: URL.createObjectURL(file)\r\n  });\r\n}\r\ndoInsertLink=(event)=>{  \r\n      event.preventDefault();\r\n      this.validate();\r\n      document.getElementById('msg_social').innerText='';\r\n      if(this.state.SWM_Url.length===0)\r\n      {\r\n        return false;\r\n      }\r\n      if(this.state.SWM_Title==='Whatsapp')\r\n      {\r\n        if(this.state.SWM_Url.startsWith('https://wa.me/'))\r\n        {\r\n            var whatsApp='https://wa.me/';\r\n             let url=this.state.SWM_Url;\r\n       \r\n            var right_number = parseInt(url.substring(whatsApp.length, url.length));\r\n            if(isNaN(right_number))  //if not number or text\r\n            {\r\n              document.getElementById('msg_social').innerText='* Enter your number after https://wa.me/';\r\n              return false;\r\n            }\r\n            if(right_number.toString().length!==10)  //if not number or text\r\n            {\r\n              document.getElementById('msg_social').innerText='* Enter your 10 digit number after https://wa.me/';\r\n              return false;\r\n            }\r\n  \r\n        }\r\n        else\r\n        {\r\n          document.getElementById('msg_social').innerText='* URL should be like https://wa.me/mynumber';\r\n          return false;\r\n        }\r\n      }\r\n\r\n   \r\n      const formData = new FormData(); \r\n      const files = event.target.files\r\n      let Api_url=this.state.base_url+'admin/InsertSocialWidget';\r\n      formData.append('sampleFile', this.state.selectedFile)\r\n      formData.append('JM_ID', this.state.JM_ID) \r\n      formData.append('SWM_Title', this.state.SWM_Title) \r\n      formData.append('SWM_Url', this.state.SWM_Url)      \r\n      formData.append('SWM_Icon', this.state.SWM_Icon)  \r\n      formData.append('JM_User_Profile_Url_plus_JM_ID', this.props.JM_User_Profile_Url_plus_JM_ID)\r\n      formData.append('SWM_Style_Type', this.state.SWM_Style_Type)\r\n          fetch(Api_url, {\r\n            method: 'POST',   \r\n            headers: {\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n            body: formData\r\n          })\r\n          .then(response => response.json())\r\n          .then(data => \r\n            {                   \r\n              // console.log(data);   \r\n               this.ModalClose();\r\n               this.Get_User_Details();              \r\n          })\r\n          .catch(error => {\r\n            console.error(error)\r\n          })\r\n}\r\n\r\nGet_User_Details=()=>{\r\n  var JSONdata = {\r\n    JM_ID: this.state.JM_ID\r\n  };\r\n  const API_url = this.state.base_url + \"admin/userDetailsAll\";\r\nfetch(API_url,\r\n  {\r\n    method: 'post',\r\n    headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n    body: JSON.stringify(JSONdata)\r\n  })\r\n.then((response) => response.json())\r\n.then(data1 => {\r\n  if(data1.status===1)\r\n  {\r\n    const data=API.decryptJson(data1.flag);\r\n     this.setState({\r\n            userDetailsAll: data.data,\r\n            userDetails:data.userDetails,\r\n            themeMasterUser:data.themeMasterUser,\r\n            socialWidget:data.socialWidget,\r\n            gifts:data.gifts, \r\n            category_master:data.category_master,\r\n            title:'Success!!!',\r\n            msg:'Profile is updated',\r\n     });\r\n\r\n    this.props.setStateAfterInsert(this.state);\r\n  }   \r\n    else\r\n      alert('not fetch');\r\n});\r\n}\r\nfileSelectHandler=()=> {\r\n  ////console.log(\"changed\")\r\n}\r\n\r\nclickhandler = () => {\r\n//console.log(\"clicked\")\r\n}\r\nvalidate=(e)=>{\r\n\r\n    if(this.state.SWM_Title===\"SELECT\")\r\n        return false;\r\n\r\n}\r\n  render(){\r\n  return (\r\n    <>\r\n      <div className=\"card-btun\" onClick={this.ModalOpen}><AddCircleOutlineOutlinedIcon />\r\n        <h4>Social Media Links </h4>  <p>Share your socials</p>\r\n      </div>\r\n      <Modal\r\n        show={this.state.show}\r\n        onHide={this.ModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <p className=\"addnew-title\">Add Social Widgets to your profile </p>\r\n          \r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n                            {/* <FontAwesomeIcon icon={faInstagram} /> &nbsp;\r\n                            <FontAwesomeIcon icon={faFacebookF} />&nbsp;\r\n                            <FontAwesomeIcon icon={faYoutube} />&nbsp;\r\n                            <FontAwesomeIcon icon={faSnapchatGhost} />&nbsp;\r\n                            <FontAwesomeIcon icon={faLinkedinIn} />&nbsp;\r\n                            <FontAwesomeIcon icon={faTwitch} />&nbsp;\r\n                            <FontAwesomeIcon icon={faTwitter} />&nbsp;\r\n                            <FontAwesomeIcon icon={faPinterestP} />&nbsp;\r\n                            <FontAwesomeIcon icon={faSpotify} />&nbsp;\r\n                            <FontAwesomeIcon icon={faGlobe} />&nbsp;\r\n                            <FontAwesomeIcon icon={faShoppingCart} />&nbsp;\r\n                            <FontAwesomeIcon icon={faEnvelope} />&nbsp;\r\n                            <FontAwesomeIcon icon={faHandPaper} className=\"rotateCls\" /> */}\r\n         <form  onSubmit={this.doInsertLink}>\r\n          <div className=\"addnew-box\">\r\n               <label> Social media platform</label>\r\n                <select className=\"form-control\" name=\"SWM_Title\" data-icon={this.state.SWM_Icon} value={this.state.SWM_Title} onChange={this.onChangeHandle}>\r\n                <option value=\"SELECT\">--SELECT--</option>\r\n                <option value=\"Instagram\" data-icon=\"faInstagram\">Instagram</option>\r\n                <option value=\"Facebook\" data-icon=\"faFacebookF\">Facebook</option>\r\n                <option value=\"YouTube\" data-icon=\"faYoutube\">YouTube</option>\r\n                <option value=\"Snapchat\" data-icon=\"faSnapchatGhost\">Snapchat</option>\r\n                <option value=\"LinkedIn\" data-icon=\"faLinkedinIn\">LinkedIn</option>\r\n                <option value=\"Twitch\" data-icon=\"faTwitch\">Twitch</option>\r\n\r\n                <option value=\"Twitter\" data-icon=\"faTwitter\">Twitter</option>\r\n                <option value=\"Pinterest\" data-icon=\"faPinterestP\">Pinterest</option>\r\n                <option value=\"Spotify\" data-icon=\"faSpotify\">Spotify</option>\r\n                <option value=\"Website\" data-icon=\"faGlobe\">Website</option>\r\n                <option value=\"Shop\" data-icon=\"faShoppingCart\">Shop</option>\r\n                \r\n                <option value=\"Email\" data-icon=\"faEnvelope\">Email</option>\r\n                <option value=\"ClubHouse\" data-icon=\"faHandPaper\">ClubHouse</option>\r\n\r\n                <option value=\"Discord\" data-icon=\"faDiscord\">Discord</option>\r\n                <option value=\"Medium\" data-icon=\"faMedium\">Medium</option>\r\n                <option value=\"Whatsapp\" data-icon=\"faWhatsapp\">Whatsapp</option>\r\n                </select>\r\n                <label>URL</label>\r\n                <span style={{fontSize: '12px',float: 'right',fontWeight:'500'}} id=\"whatsApp\"></span>\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"URL\"\r\n                    name=\"SWM_Url\" value={this.state.SWM_Url} onChange={this.onChangeHandleURL}/>\r\n              <label>Social Media Link Style </label>\r\n              <select style={{display:'block'}} className=\"form-control\" name=\"SWM_Style_Type\" value={this.state.SWM_Style_Type} onChange={this.onChangeHandle}>\r\n                <option value=\"W\">As icon</option>\r\n                <option value=\"B\">As bar</option>               \r\n              </select>\r\n              <span id=\"msg_social\" style={{fontSize: '12px',color: 'red'}}></span>\r\n            <div className=\"btun-box\">\r\n              <button className=\"btun btun_1\">Add Widget</button>\r\n              <button className=\"btun\" onClick={this.ModalClose}>Cancel</button>\r\n             <span className=\"gotosetting\"> <i className=\"fa fa-cog\"></i>\r\n          \r\n                 <NavLink \r\n                     to={{ pathname: \"/settings\", userDetails: this.props.userDetails }} >\r\n                              &nbsp; Change Widget Position\r\n                    </NavLink>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          </form>\r\n        </Modal.Body>\r\n\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n}\r\n\r\nexport default SocialWidget2;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\StackedLink2.js",["2572","2573","2574","2575","2576","2577","2578","2579","2580","2581","2582","2583","2584","2585","2586","2587","2588","2589","2590","2591","2592","2593","2594","2595","2596"],"import React, { Component } from 'react';\r\n// import {Button} from 'react-bootstrap'\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\nimport { MDBIcon } from 'mdbreact';\r\nimport API  from '../services/API';\r\nclass StackedLink2 extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n      \r\n        this.state = {\r\n           openModel:false,\r\n           base_url: process.env.REACT_APP_API_URL,\r\n           root_url: process.env.REACT_APP_ROOT_URL,\r\n           show:false,\r\n           open:false,\r\n           JM_ID: this.props.JM_ID,  \r\n           SWM_Title:'',\r\n           SWM_Url:'',\r\n           SWM_Icon:'',\r\n           LM_Who_Will_See:1,\r\n           selectedFile: null,\r\n           linkMaster:[],\r\n          userDetails:[],\r\n          socialWidget:[],\r\n          isClose:'none',\r\n          CM_Folder_Sub_Title:'',\r\n          CM_Folder_Back_Image:'',\r\n          CM_Folder_Title:'',\r\n          category_links:[],\r\n          activeIcon:'',\r\n          isDisplayIcon:'block',\r\n          isDisplayImage:'none',\r\n          iconCheked:true,\r\n          imageCheked:false\r\n          \r\n    \r\n        }\r\n        //console.log(this.props.JM_User_Profile_Url_plus_JM_ID);\r\n      }\r\n      ModalClose=()=>{\r\n        this.setState({openModel:false,show:false});\r\n      }\r\n      ModalOpen=()=>{\r\n        this.setState({openModel:true,show:true,selectedFile:null,\r\n          CM_Folder_Back_Image:'',\r\n          CM_Folder_Title:'',\r\n          CM_Folder_Sub_Title:''\r\n        });\r\n      }\r\n     \r\n    \r\n      onChangeHandle=(e)=>{\r\n          let titleVal=e.target.value;\r\n        this.setState({[e.target.name]:e.target.value});  \r\n        let index = e.nativeEvent.target.selectedIndex;\r\n    }\r\n    onChangeHandleURL=(e)=>\r\n    {\r\n      this.setState({[e.target.name]:e.target.value});     \r\n    }\r\n    onChangeFolderImage=(e)=>{     \r\n      const file = e.target.files[0];\r\n      this.setState({ selectedFile: e.target.files[0] }); \r\n      this.setState({\r\n        CM_Folder_Back_Image: URL.createObjectURL(file),\r\n        //isClose:'block'\r\n      });\r\n\r\n    }\r\n    addFolder=(event)=>{  \r\n          event.preventDefault();\r\n          if(this.validate())\r\n          {\r\n              const formData = new FormData(); \r\n              const files = event.target.files\r\n              let Api_url=this.state.base_url+'admin/AddCategory';\r\n              formData.append('sampleFile', this.state.selectedFile)\r\n              formData.append('JM_ID', this.state.JM_ID) \r\n              formData.append('CM_Folder_Title', this.state.CM_Folder_Title) \r\n              formData.append('CM_Folder_Sub_Title', this.state.CM_Folder_Sub_Title)\r\n              formData.append('JM_User_Profile_Url_plus_JM_ID', this.props.JM_User_Profile_Url_plus_JM_ID)\r\n              formData.append('LM_Icon', this.state.activeIcon)\r\n                  fetch(Api_url, {\r\n                    method: 'POST',     \r\n                    headers: { \"authorization\": API.getAuth(),\"id\":API.getId()},    \r\n                    body: formData,\r\n\r\n                    \r\n                  })\r\n                  .then(response => response.json())\r\n                  .then(data => \r\n                    {                   \r\n                      console.log(data);   \r\n                      this.ModalClose();\r\n                      this.Get_User_Details();              \r\n                  })\r\n                  .catch(error => {\r\n                    console.error(error)\r\n                  })\r\n            }\r\n            else\r\n            {\r\n              document.getElementById('msg').innerHTML='Enter Title';\r\n              this.hideMessage('msg');    \r\n            }\r\n    }\r\n    hideMessage=(id)=>{\r\n      setTimeout(function() {\r\n        document.getElementById(id).innerHTML='';  \r\n       }, 2000);\r\n             \r\n    }\r\n  \r\n\r\n    Get_User_Details = () => {\r\n        var JSONdata = {\r\n          JM_ID: this.state.JM_ID\r\n        };\r\n        const API_url = this.state.base_url + \"admin/userDetailsAll\";\r\n      fetch(API_url,\r\n        {\r\n          method: 'post',\r\n          headers: { \"Content-Type\": \"application/json\",\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n          body: JSON.stringify(JSONdata)\r\n        })\r\n      .then((response) => response.json())\r\n      .then(data1 => {\r\n        if (data1 != null && data1.status > 0)\r\n         {\r\n          const data=API.decryptJson(data1.flag);\r\n          this.setState({\r\n            userDetailsAll: data.data,\r\n            userDetails:data.userDetails,\r\n            themeMasterUser:data.themeMasterUser,\r\n            socialWidget:data.socialWidget,\r\n            gifts:data.gifts,\r\n            category_master:data.category_master,\r\n            title:'Success!!!',\r\n            msg:'Profile is updated',\r\n          });\r\n          this.props.setStateAfterInsert(this.state);\r\n        }      \r\n        else\r\n           this.setState({showPage:false})\r\n    \r\n      });\r\n      \r\n    \r\n    }\r\n    \r\n    fileSelectHandler=()=> {\r\n      console.log(\"changed\")\r\n    }\r\n    \r\n    clickhandler = () => {\r\n    console.log(\"clicked\")\r\n    }\r\n    validate=(e)=>{\r\n      let valid=true;\r\n        if(this.state.CM_Folder_Title === \"\")\r\n        {\r\n          valid=false;\r\n        }\r\n            return valid;    \r\n    }\r\n\r\n    setActive=(e)=>{\r\n      e.preventDefault();\r\n    \r\n      var icon = e.currentTarget.attributes['data-id'].value;\r\n      this.setState({\r\n        activeIcon:icon\r\n      })\r\n    }\r\n    showHideDiv=(e)=>{\r\n    \r\n      if(e.target.value==='icon')\r\n      {\r\n        this.setState({\r\n          isDisplayIcon:\"block\", isDisplayImage:\"none\",\r\n          iconCheked:true,imageCheked:false\r\n        })\r\n      }\r\n    \r\n      if(e.target.value==='image')\r\n      {\r\n        this.setState({\r\n          isDisplayIcon:\"none\", isDisplayImage:\"block\",\r\n          iconCheked:false,imageCheked:true\r\n        })\r\n      }\r\n    }\r\n      render(){\r\n      return (\r\n        <>\r\n          <div className=\"card-btun\" onClick={this.ModalOpen}><AddCircleOutlineOutlinedIcon />\r\n            <h4>Link Folder </h4>  \r\n            <p> Organize your links </p>\r\n          </div>\r\n          <Modal\r\n            show={this.state.show}\r\n            onHide={this.ModalClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            centered\r\n    \r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>\r\n                <p className=\"addnew-title\">Link Folder</p>\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n             <form  onSubmit={this.addFolder}>\r\n              <div className=\"addnew-box\">\r\n                   <label>Title </label>                    \r\n                   <input type=\"text\" className=\"form-control\" placeholder=\"Category Title\"\r\n                        name=\"CM_Folder_Title\" value={this.state.CM_Folder_Title} onChange={this.onChangeHandleURL}/>\r\n                  <label> Subtitle </label>                    \r\n                   <input type=\"text\" className=\"form-control\" placeholder=\"Sub Title\"\r\n                        name=\"CM_Folder_Sub_Title\" value={this.state.CM_Folder_Sub_Title} onChange={this.onChangeHandleURL}/>\r\n                  \r\n                    <input type=\"file\" id=\"foldr_img\"  style={{display:'none'}}\r\n                         value=\"\" onChange={this.onChangeFolderImage}/>\r\n                         <div>\r\n                           {\r\n                           \r\n                           this.state.isClose==='block' ? \r\n                               <>\r\n                              <i className=\"fa fa-close\" style={{color:'red',fontSize:'20px',display:this.state.isClose}} onClick={()=> this.setState({CM_Folder_Back_Image:'',isClose:'none'})}></i>\r\n                              <img style={{width:'100%',height:'100%',borderRadius: '5%',margin:'5px'}} src={this.state.CM_Folder_Back_Image}></img>\r\n                              </>\r\n                            :\r\n                            null\r\n                            }\r\n                           \r\n                         </div>\r\n         \r\n         \r\n                             <div className=\"image-btun-box text-center\">\r\n                                <input type=\"radio\" checked={this.state.iconCheked} className=\"setCursor\" name=\"selection\" id=\"icon_chk\" value=\"icon\" onClick={this.showHideDiv}/>\r\n                                <label for=\"icon_chk\" className=\"setCursor\"> &nbsp;Icon&nbsp; </label>\r\n                                <input type=\"radio\"  checked={this.state.imageCheked} className=\"setCursor\"  name=\"selection\"  id=\"image_chk\" value=\"image\" onClick={this.showHideDiv}/>\r\n                                <label for=\"image_chk\" className=\"setCursor\"> \r\n                                      &nbsp;Image&nbsp;\r\n                                </label>\r\n                              </div>\r\n                              {/* icon */}\r\n                              <div style={{display:this.state.isDisplayIcon}}>\r\n                                <label>What would you like the icon to be?</label> \r\n                                <div className=\"image-btun-box\" >\r\n                                  <div className=\"iconbox\">\r\n                                      <div className=\"icon\"  \r\n                                          className={this.state.activeIcon === \"external-link-alt\" ? 'icon active' : 'icon'}  data-id=\"external-link-alt\"  onClick={this.setActive}>\r\n                                          <MDBIcon icon=\"external-link-alt\" size=\"2x\"/>                   \r\n                                        \r\n                                  \r\n                                      </div>\r\n                                      <div className=\"icon\"\r\n                                      className={this.state.activeIcon === \"lightbulb\" ? 'icon active' : 'icon'} data-id=\"lightbulb\"   onClick={this.setActive}>\r\n                                      \r\n                                        <MDBIcon icon=\"lightbulb\" size=\"2x\"/>\r\n                                      </div>\r\n                                      <div className=\"icon\"\r\n                                      className={this.state.activeIcon === \"anchor\" ? 'icon active' : 'icon'} data-id=\"anchor\"    onClick={this.setActive}>\r\n                                          <MDBIcon icon=\"anchor\" size=\"2x\"/>\r\n                                          \r\n                                      </div>\r\n                                      <div className=\"icon\"\r\n                                        className={this.state.activeIcon === \"link\" ? 'icon active' : 'icon'}  data-id=\"link\"  onClick={this.setActive}>\r\n                                          <MDBIcon icon=\"link\" size=\"2x\"/>\r\n                                      </div>\r\n                                      <div className=\"icon\"\r\n                                        className={this.state.activeIcon === \"external-link-square-alt\" ? 'icon active' : 'icon'} data-id=\"external-link-square-alt\"    onClick={this.setActive}>\r\n                                          <MDBIcon icon=\"external-link-square-alt\" size=\"2x\"/>\r\n                                      </div>\r\n\r\n                                      <div className=\"icon\"\r\n                                        className={this.state.activeIcon === \"archway\" ? 'icon active' : 'icon'} data-id=\"archway\" onClick={this.setActive}>\r\n                                          <MDBIcon icon=\"archway\" size=\"2x\"/>                   \r\n                                      </div>\r\n\r\n\r\n                                      <div className=\"icon\"  \r\n                                        className={this.state.activeIcon === \"ankh\" ? 'icon active' : 'icon'} data-id=\"ankh\" onClick={this.setActive}>\r\n                                          <MDBIcon icon=\"ankh\" size=\"2x\" />\r\n                                      </div>\r\n                                      <div className=\"icon\" \r\n                                      className={this.state.activeIcon === \"angle-double-right\" ? 'icon active' : 'icon'} data-id=\"angle-double-right\"  onClick={this.setActive}>\r\n                                        <MDBIcon icon=\"angle-double-right\" size=\"2x\" />                   \r\n                                      </div>\r\n                                      <div className=\"icon\"\r\n                                        className={this.state.activeIcon === \"cannabis\" ? 'icon active' : 'icon'} data-id=\"cannabis\"  onClick={this.setActive}>\r\n                                            <MDBIcon icon=\"cannabis\" data-id=\"cannabis\" size=\"2x\" />  \r\n                                      </div>\r\n                                      <div className=\"icon\"\r\n                                        className={this.state.activeIcon === \"chess-queen\" ? 'icon active' : 'icon'} data-id=\"chess-queen\" onClick={this.setActive}>\r\n                                            <MDBIcon icon=\"chess-queen\" data-id=\"chess-queen\"  size=\"2x\" />   \r\n                                      </div>\r\n                                         {/*========= MS2======================*/}\r\n\r\n                                        <div className=\"icon\"\r\n                                          className={this.state.activeIcon === \"air-freshener\" ? 'icon active' : 'icon'} data-id=\"air-freshener\" onClick={this.setActive}>\r\n                                              <MDBIcon icon=\"air-freshener\" data-id=\"air-freshener\"  size=\"2x\" />\r\n                                        </div>\r\n                                        <div className=\"icon\"\r\n                                          className={this.state.activeIcon === \"bell\" ? 'icon active' : 'icon'} data-id=\"bell\" onClick={this.setActive}>\r\n                                              <MDBIcon icon=\"bell\" data-id=\"bell\"  size=\"2x\" />\r\n                                        </div>\r\n                                        <div className=\"icon\"\r\n                                          className={this.state.activeIcon === \"guitar mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"guitar mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                                              <MDBIcon icon=\"guitar mdb-gallery-view-icon\" data-id=\"guitar mdb-gallery-view-icon\"  size=\"2x\" />\r\n                  \r\n                                        </div>\r\n                                        <div className=\"icon\"\r\n                                          className={this.state.activeIcon === \"hat-cowboy mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"hat-cowboy mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                                              <MDBIcon icon=\"hat-cowboy mdb-gallery-view-icon\" data-id=\"hat-cowboy mdb-gallery-view-icon\"  size=\"2x\" />\r\n\r\n                                        </div>\r\n                                        <div className=\"icon\"\r\n                                          className={this.state.activeIcon === \"music mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"music mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                                              <MDBIcon icon=\"music mdb-gallery-view-icon\" data-id=\"music mdb-gallery-view-icon\"  size=\"2x\" />\r\n                                            \r\n                                        </div>\r\n\r\n\r\n\r\n\r\n                                        <div className=\"icon\"\r\n                                          className={this.state.activeIcon === \"store mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"store mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                                              <MDBIcon icon=\"store mdb-gallery-view-icon\" data-id=\"store mdb-gallery-view-icon\"  size=\"2x\" />\r\n                                            \r\n                                        </div>\r\n\r\n                                        <div className=\"icon\"\r\n                                          className={this.state.activeIcon === \"trophy mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"trophy mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                                              <MDBIcon icon=\"trophy mdb-gallery-view-icon\" data-id=\"trophy mdb-gallery-view-icon\"  size=\"2x\" />\r\n                                \r\n                                        </div>\r\n                                        <div className=\"icon\"\r\n                                          className={this.state.activeIcon === \"wine-glass-alt mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"wine-glass-alt mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                                              <MDBIcon icon=\"wine-glass-alt mdb-gallery-view-icon\" data-id=\"wine-glass-alt mdb-gallery-view-icon\"  size=\"2x\" />\r\n                                    \r\n                                        </div>\r\n                                        <div className=\"icon\"\r\n                                          className={this.state.activeIcon === \"venus mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"venus mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                                              <MDBIcon icon=\"venus mdb-gallery-view-icon\" data-id=\"venus mdb-gallery-view-icon\"  size=\"2x\" />\r\n                                          \r\n                                        </div>\r\n                                        <div className=\"icon\"\r\n                                          className={this.state.activeIcon === \"yin-yang mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"yin-yang mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                                              <MDBIcon icon=\"yin-yang mdb-gallery-view-icon\" data-id=\"yin-yang mdb-gallery-view-icon\"  size=\"2x\" />\r\n                                        </div>\r\n\r\n                                        {/* ==========MS2 end ============== */}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                              {/* image */}\r\n                                <div style={{display:this.state.isDisplayImage}}>\r\n                                    <label>What would you like the Image to be? </label>\r\n                                  <div className=\"image-btun-box\">\r\n                                    <div className=\"row\">\r\n                                      <div className=\"col-md-12\">\r\n                                          <div className=\"view-image\">\r\n                                            <img  src={this.state.CM_Folder_Back_Image}/>\r\n                                          </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">                   \r\n                                            <label className=\"up-ico\" htmlFor=\"foldr_img\">\r\n                                              Upload an Icon               </label>        \r\n                                              <input type=\"file\" id=\"prop_up\" accept=\"image/*\" name=\"photo\" style={{ display:\"none\"}} \r\n                                                    onChange={this.onChangeFolderImage}/>         \r\n                                              <input id='selectImage' type=\"file\" style={{ display:\"none\"}}  onClick={this.clickhandler} onChange={this.imageonChange} />\r\n                                          </div>                 \r\n                                      </div>\r\n                                  </div>\r\n                                </div>\r\n\r\n                <div className=\"btun-box\">\r\n                  <button className=\"btun btun_1\">Add Folder</button>\r\n                  <button className=\"btun\" onClick={this.ModalClose}>Cancel</button>\r\n                  <p id=\"msg\" style={{color:'red'}}></p>\r\n                </div>\r\n              </div>\r\n              </form>\r\n            </Modal.Body>\r\n    \r\n          </Modal>\r\n        </>\r\n      );\r\n    }\r\n    \r\n    }\r\nexport default StackedLink2;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\AddNewLink2.js",["2597"],"import React, { Component } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport API  from '../services/API';\r\nimport { MDBIcon } from 'mdbreact';\r\nclass AddNewLink2 extends Component\r\n{\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       openModel:false,\r\n       base_url: process.env.REACT_APP_API_URL,\r\n       root_url: process.env.REACT_APP_ROOT_URL,\r\n       show:false,\r\n       open:false,\r\n       JM_ID:this.props.JM_ID,\r\n       LM_Title:'',\r\n       LM_Image:'',\r\n       LM_Who_Will_See:1,\r\n       ddl_type:'https://',\r\n       selectedFile: null,\r\n       linkMaster:[],\r\n      userDetails:[],\r\n      socialWidget:[],\r\n      embed_content:[],\r\n      productList:[],\r\n      title:'',\r\n      msg:'',\r\n      logo:'',\r\n      activeIcon:'',\r\n      isDisplayIcon:'block',\r\n      isDisplayImage:'none',\r\n      iconCheked:true,\r\n      imageCheked:false,\r\n\r\n      errMsg:'',\r\n      errColor:''\r\n      \r\n    }\r\n    //console.log(this.props.JM_User_Profile_Url_plus_JM_ID);\r\n  }\r\n  ModalClose=()=>{\r\n    this.setState({openModel:false,show:false,\r\n      LM_Title:'',LM_Url:''\r\n    });\r\n\r\n\r\n  }\r\n  ModalOpen=()=>{\r\n    this.setState({openModel:true,show:true,\r\n        errMsg:'',     \r\n    });\r\n  }\r\n  openCollapse = () => {\r\n    !this.state.open ?\r\n      this.setState({ open: true })\r\n      :\r\n      this.setState({ open: false })\r\n      \r\n  }\r\n\r\n  onChangeHandle=(e)=>{\r\n      this.setState({[e.target.name]:e.target.value});   \r\n}\r\nonChangeHandleURL=(e)=>\r\n{\r\n // let value = e.target.value\r\n  //value = value.replace(/[^A-Za-z]/ig, '')\r\n  this.setState({ JM_User_Profile_Url: e.target.value.replace(/[^\\w\\s]/gi, \"\") });     \r\n}\r\nimageonChange=(e)=>{     \r\n  const file = e.target.files[0];\r\n  this.setState({ selectedFile: e.target.files[0] }); \r\n  this.setState({\r\n    LM_Image: URL.createObjectURL(file)\r\n  });\r\n}\r\ndoInsertLink=(event)=>{  \r\n      event.preventDefault();\r\n\r\n      if(this.state.LM_Title.length === 0)\r\n      {\r\n        this.setState({\r\n          errMsg:'Enter Title',\r\n          errColor:'#ff6a6e'\r\n         })\r\n        return false;\r\n      }\r\n      if(this.state.LM_Url.length === 0)\r\n      {\r\n        this.setState({\r\n          errMsg:'Enter URL',\r\n          errColor:'#ff6a6e'\r\n         })\r\n        return false;\r\n      }\r\n\r\n     \r\n        var val=this.state.LM_Url;\r\n        if(val.includes('http://') || val.includes('https://'))\r\n          {\r\n            this.setState({\r\n               errMsg:'Invalid URL, Remove http:// or https://',\r\n               errColor:'#ff6a6e'\r\n              })\r\n              return false;\r\n          }\r\n          else if(val.includes('.'))\r\n          {\r\n            const arr=val.split('.');\r\n            if(arr!==null && arr.length > 0 && arr[1].length < 2)\r\n            {\r\n              this.setState({\r\n                errMsg:'Invalid URL, Enter correct URL',\r\n                errColor:'#ff6a6e'\r\n               })\r\n                return false;\r\n            }         \r\n          }\r\n          else\r\n          {\r\n            this.setState({\r\n              errMsg:'',\r\n              errColor:''\r\n             })\r\n          }\r\n      \r\n\r\n  \r\n      const formData = new FormData(); \r\n      const files = event.target.files\r\n      let Api_url=this.state.base_url+'admin/InsertLink';\r\n      formData.append('sampleFile', this.state.selectedFile)\r\n      formData.append('JM_ID', this.state.JM_ID) \r\n      formData.append('LM_Title', this.state.LM_Title) \r\n      formData.append('LM_Url', this.state.ddl_type + this.state.LM_Url) \r\n      formData.append('LM_Image', this.state.LM_Image)\r\n      formData.append('LM_Who_Will_See', this.state.LM_Who_Will_See)\r\n      formData.append('JM_User_Profile_Url_plus_JM_ID', this.props.JM_User_Profile_Url_plus_JM_ID)\r\n      formData.append('LM_Icon', this.state.activeIcon)\r\n      //activeIcon\r\n          fetch(Api_url, {\r\n            method: 'POST',         \r\n            body: formData,\r\n            headers: { \"authorization\": API.getAuth(),\"id\":API.getId()},    \r\n\r\n          })\r\n          .then(response => response.json())\r\n          .then(data => \r\n            {                   \r\n               //console.log(data);   \r\n               this.ModalClose();\r\n            //  this.Get_User_Details();    \r\n               \r\n              this.GetuserDetailsAll();    \r\n          })\r\n          .catch(error => {\r\n            console.error(error)\r\n          })\r\n        \r\n}\r\n//10-may-2021\r\nGetuserDetailsAll=()=>{\r\n        var JSONdata = {\r\n          JM_ID: this.state.JM_ID\r\n        };\r\n        const API_url = this.state.base_url + \"admin/userDetailsAll\";\r\n      fetch(API_url,\r\n        {\r\n          method: 'post',\r\n          headers: { \"Content-Type\": \"application/json\", \"authorization\": API.getAuth(),\"id\":API.getId()},\r\n          body: JSON.stringify(JSONdata)\r\n        })\r\n      .then((response) => response.json())\r\n      .then(data1 => {\r\n        if(data1.status===1)\r\n        {\r\n          const data=API.decryptJson(data1.flag);\r\n        \r\n          this.setState({\r\n                  userDetailsAll: data.data,\r\n                  userDetails:data.userDetails,\r\n                  themeMasterUser:data.themeMasterUser,\r\n                  socialWidget:data.socialWidget,\r\n                  gifts:data.gifts, \r\n                  category_master:data.category_master,\r\n                  title:'Success!!!',\r\n                  msg:'Profile is updated',\r\n          });\r\n\r\n          this.props.setStateAfterInsert(this.state);\r\n        }   \r\n          else\r\n            alert('not fetch');\r\n      });\r\n}\r\nvalidate=()=>{\r\n  if(this.state.LM_Url.length===0)\r\n  {\r\n\r\n  }\r\n}\r\nGet_User_Details = () => {\r\n    var JSONdata = {\r\n      JM_ID: this.state.JM_ID\r\n    };\r\n    const API_url = this.state.base_url + \"admin/userDetails\";\r\n  fetch(API_url,\r\n    {\r\n      method: 'post',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(JSONdata)\r\n    })\r\n  .then((response) => response.json())\r\n  .then(data => {\r\n    if(data.status===1)\r\n    {\r\n      this.setState({\r\n        userDetails:data.userDetails,\r\n        linkMaster:data.linkMaster,\r\n        LM_Title:'',\r\n        LM_Url:'',\r\n        LM_Image:'',\r\n        ddl_type:'https://',\r\n        LM_Who_Will_See:1,\r\n        selectedFile: null,\r\n        title:'Success!!!',\r\n        msg:'Profile is updated',\r\n        socialWidget:data.socialWidget,\r\n        category_master:data.category_master,\r\n        category_links:data.category_links,\r\n        embed_content:data.embed_content,\r\n        productList:data.productList,\r\n        gifts: data.gifts,\r\n      });\r\n      this.props.setStateAfterInsert(this.state);\r\n    }   \r\n      else\r\n        alert('not fetch');\r\n  });\r\n  \r\n\r\n}\r\n\r\nfileSelectHandler=()=> {\r\n  //console.log(\"changed\")\r\n}\r\n\r\nclickhandler = () => {\r\n//console.log(\"clicked\")\r\n}\r\nsetActive=(e)=>{\r\n  e.preventDefault();\r\n\r\n  var icon = e.currentTarget.attributes['data-id'].value;\r\n  this.setState({\r\n    activeIcon:icon\r\n  })\r\n}\r\nshowHideDiv=(e)=>{\r\n\r\n  if(e.target.value==='icon')\r\n  {\r\n    this.setState({\r\n      isDisplayIcon:\"block\", isDisplayImage:\"none\",\r\n      iconCheked:true,imageCheked:false\r\n    })\r\n  }\r\n\r\n  if(e.target.value==='image')\r\n  {\r\n    this.setState({\r\n      isDisplayIcon:\"none\", isDisplayImage:\"block\",\r\n      iconCheked:false,imageCheked:true\r\n    })\r\n  }\r\n}\r\n  render(){\r\n  return (\r\n    <>\r\n      <div className=\"card-btun\" onClick={this.ModalOpen}><AddCircleOutlineOutlinedIcon />\r\n        <h4>Custom Links</h4> <p>Guide your followers</p>\r\n      </div>\r\n      <Modal\r\n        show={this.state.show}\r\n        onHide={this.ModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <p className=\"addnew-title\">Add a link to your profile</p>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n         <form  onSubmit={this.doInsertLink}>\r\n          <div className=\"addnew-box\">\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Title\"\r\n             name=\"LM_Title\" value={this.state.LM_Title} onChange={this.onChangeHandle}/>\r\n              <select disabled className=\"form-control\" style={{display:'none'}}>\r\n                  <option value=\"https://\">https://</option>                       \r\n              </select>\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"website.com\"\r\n           name=\"LM_Url\" value={this.state.LM_Url} onChange={this.onChangeHandle} />\r\n\r\n           <div className=\"image-btun-box text-center\">\r\n\r\n             <input type=\"radio\" checked={this.state.iconCheked} className=\"setCursor\" name=\"selection\" id=\"icon_chk\" value=\"icon\" onClick={this.showHideDiv}/>\r\n             <label for=\"icon_chk\" className=\"setCursor\"> &nbsp;Icon&nbsp; </label>\r\n              <input type=\"radio\"  checked={this.state.imageCheked} className=\"setCursor\"  name=\"selection\"  id=\"image_chk\" value=\"image\" onClick={this.showHideDiv}/>\r\n              <label for=\"image_chk\" className=\"setCursor\"> \r\n                   &nbsp;Image&nbsp;\r\n              </label>\r\n           </div>\r\n           {/* icon */}\r\n            <div style={{display:this.state.isDisplayIcon}}>\r\n                <label>What would you like the icon to be?</label> \r\n                <div className=\"image-btun-box\" >\r\n                  <div className=\"iconbox\">\r\n                      <div \r\n                          className={this.state.activeIcon === \"external-link-alt\" ? 'icon active' : 'icon'}  data-id=\"external-link-alt\"  onClick={this.setActive}>\r\n                          <MDBIcon icon=\"external-link-alt\" size=\"2x\"/>                   \r\n                        \r\n                  \r\n                      </div>\r\n                      <div \r\n                      className={this.state.activeIcon === \"lightbulb\" ? 'icon active' : 'icon'} data-id=\"lightbulb\"   onClick={this.setActive}>\r\n                      \r\n                        <MDBIcon icon=\"lightbulb\" size=\"2x\"/>\r\n                      </div>\r\n                      <div \r\n                      className={this.state.activeIcon === \"anchor\" ? 'icon active' : 'icon'} data-id=\"anchor\"    onClick={this.setActive}>\r\n                          <MDBIcon icon=\"anchor\" size=\"2x\"/>\r\n                          \r\n                      </div>\r\n                      <div c\r\n                        className={this.state.activeIcon === \"link\" ? 'icon active' : 'icon'}  data-id=\"link\"  onClick={this.setActive}>\r\n                          <MDBIcon icon=\"link\" size=\"2x\"/>\r\n                      </div>\r\n                      <div \r\n                        className={this.state.activeIcon === \"external-link-square-alt\" ? 'icon active' : 'icon'} data-id=\"external-link-square-alt\"    onClick={this.setActive}>\r\n                          <MDBIcon icon=\"external-link-square-alt\" size=\"2x\"/>\r\n                      </div>\r\n    \r\n                      <div \r\n                        className={this.state.activeIcon === \"archway\" ? 'icon active' : 'icon'} data-id=\"archway\" onClick={this.setActive}>\r\n                          <MDBIcon icon=\"archway\" size=\"2x\"/>                   \r\n                      </div>\r\n\r\n\r\n                      <div  \r\n                        className={this.state.activeIcon === \"ankh\" ? 'icon active' : 'icon'} data-id=\"ankh\" onClick={this.setActive}>\r\n                          <MDBIcon icon=\"ankh\" size=\"2x\" />\r\n                      </div>\r\n                      <div \r\n                      className={this.state.activeIcon === \"angle-double-right\" ? 'icon active' : 'icon'} data-id=\"angle-double-right\"  onClick={this.setActive}>\r\n                        <MDBIcon icon=\"angle-double-right\" size=\"2x\" />                   \r\n                      </div>\r\n                      <div \r\n                        className={this.state.activeIcon === \"cannabis\" ? 'icon active' : 'icon'} data-id=\"cannabis\"  onClick={this.setActive}>\r\n                            <MDBIcon icon=\"cannabis\" data-id=\"cannabis\" size=\"2x\" />  \r\n                      </div>\r\n                      <div \r\n                        className={this.state.activeIcon === \"chess-queen\" ? 'icon active' : 'icon'} data-id=\"chess-queen\" onClick={this.setActive}>\r\n                            <MDBIcon icon=\"chess-queen\" data-id=\"chess-queen\"  size=\"2x\" />   \r\n                      </div>\r\n                    \r\n                      {/*========= MS2======================*/}\r\n\r\n                      <div \r\n                        className={this.state.activeIcon === \"air-freshener\" ? 'icon active' : 'icon'} data-id=\"air-freshener\" onClick={this.setActive}>\r\n                             <MDBIcon icon=\"air-freshener\" data-id=\"air-freshener\"  size=\"2x\" />\r\n                      </div>\r\n                      <div \r\n                        className={this.state.activeIcon === \"bell\" ? 'icon active' : 'icon'} data-id=\"bell\" onClick={this.setActive}>\r\n                             <MDBIcon icon=\"bell\" data-id=\"bell\"  size=\"2x\" />\r\n                      </div>\r\n                      <div \r\n                        className={this.state.activeIcon === \"guitar mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"guitar mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                             <MDBIcon icon=\"guitar mdb-gallery-view-icon\" data-id=\"guitar mdb-gallery-view-icon\"  size=\"2x\" />\r\n \r\n                      </div>\r\n                      <div \r\n                        className={this.state.activeIcon === \"hat-cowboy mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"hat-cowboy mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                             <MDBIcon icon=\"hat-cowboy mdb-gallery-view-icon\" data-id=\"hat-cowboy mdb-gallery-view-icon\"  size=\"2x\" />\r\n\r\n                      </div>\r\n                      <div \r\n                        className={this.state.activeIcon === \"music mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"music mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                             <MDBIcon icon=\"music mdb-gallery-view-icon\" data-id=\"music mdb-gallery-view-icon\"  size=\"2x\" />\r\n                           \r\n                      </div>\r\n\r\n\r\n\r\n\r\n                      <div \r\n                        className={this.state.activeIcon === \"store mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"store mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                             <MDBIcon icon=\"store mdb-gallery-view-icon\" data-id=\"store mdb-gallery-view-icon\"  size=\"2x\" />\r\n                           \r\n                      </div>\r\n\r\n                      <div \r\n                        className={this.state.activeIcon === \"trophy mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"trophy mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                             <MDBIcon icon=\"trophy mdb-gallery-view-icon\" data-id=\"trophy mdb-gallery-view-icon\"  size=\"2x\" />\r\n               \r\n                      </div>\r\n                      <div \r\n                        className={this.state.activeIcon === \"wine-glass-alt mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"wine-glass-alt mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                             <MDBIcon icon=\"wine-glass-alt mdb-gallery-view-icon\" data-id=\"wine-glass-alt mdb-gallery-view-icon\"  size=\"2x\" />\r\n                  \r\n                      </div>\r\n                      <div \r\n                        className={this.state.activeIcon === \"venus mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"venus mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                             <MDBIcon icon=\"venus mdb-gallery-view-icon\" data-id=\"venus mdb-gallery-view-icon\"  size=\"2x\" />\r\n                        \r\n                      </div>\r\n                      <div \r\n                        className={this.state.activeIcon === \"yin-yang mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"yin-yang mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                             <MDBIcon icon=\"yin-yang mdb-gallery-view-icon\" data-id=\"yin-yang mdb-gallery-view-icon\"  size=\"2x\" />\r\n                      </div>\r\n\r\n                      {/* ==========MS2 end ============== */}\r\n                  </div>\r\n                </div>\r\n            </div>\r\n\r\n            \r\n            {/* image */}\r\n            <div style={{display:this.state.isDisplayImage}}>\r\n                <label>What would you like the Image to be? </label>\r\n                <div className=\"image-btun-box\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                      <div className=\"view-image\">\r\n                        <img  src={this.state.LM_Image} alt=\"\"/>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">                   \r\n                        <label className=\"up-ico\" htmlFor=\"selectImage\">\r\n                          Upload an Image               </label>        \r\n                          <input type=\"file\" id=\"prop_up\" accept=\"image/*\" name=\"photo\" style={{ display:\"none\"}} \r\n                                onChange={this.imageonChange}/>         \r\n                          <input id='selectImage' type=\"file\" style={{ display:\"none\"}}  onClick={this.clickhandler} onChange={this.imageonChange} />\r\n                      </div>  \r\n                    \r\n                  </div>\r\n                </div>\r\n            </div>\r\n\r\n                <select style={{display:'none'}} className=\"form-control\" name=\"LM_Who_Will_See\" value={this.state.LM_Who_Will_See} onChange={this.onChangeHandle}>\r\n                  <option value=\"1\">Everyone</option>\r\n                  <option value=\"2\">My Followers</option>\r\n                  <option value=\"3\">People I follow</option>\r\n                </select>\r\n                <div className=\"btun-box\">\r\n                  <button className=\"btun btun_1\">Add Links</button>\r\n                  <button className=\"btun\" onClick={this.ModalClose}>Cancel</button>\r\n                </div>\r\n                <p style={{color:this.state.errColor}}>{this.state.errMsg}</p>\r\n\r\n            </div>          \r\n        \r\n     \r\n          </form>\r\n        </Modal.Body>\r\n\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n}\r\n\r\nexport default AddNewLink2;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\EditSocialWidget2.js",["2598","2599"],"import React, { Component } from 'react';\r\n// import {Button} from 'react-bootstrap'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { NavLink} from 'react-router-dom';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport API  from '../services/API';\r\n\r\n\r\n\r\nclass EditSocialWidget2 extends Component\r\n{\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       openModel:false,\r\n       base_url: process.env.REACT_APP_API_URL,\r\n       root_url: process.env.REACT_APP_ROOT_URL,\r\n     \r\n       show:false,\r\n       open:false,\r\n       JM_ID: parseInt(localStorage.getItem('JM_ID')),  \r\n       SWM_Title:'',\r\n       SWM_Url:'',\r\n       SWM_Icon:'',\r\n       LM_Who_Will_See:1,\r\n       SWM_Style_Type:'',\r\n       selectedFile: null,\r\n       linkMaster:[],\r\n      userDetails:[],\r\n      socialWidget:[],\r\n      category_links:[],\r\n      embed_content:[],\r\n      productList:[],\r\n      title:'',\r\n      msg:'',\r\n      logo:'',\r\n      SWM_Icon_Position:'bottom',\r\n\r\n      Instagram:'https://www.instagram.com/',\r\n      Facebook:'https://www.facebook.com/',\r\n      YouTube:'https://www.youtube.com/',\r\n      Twitter:'https://twitter.com/',\r\n      Snapchat:'https://www.snapchat.com/',\r\n      LinkedIn:'https://www.linkedin.com/',\r\n      Twitch:'https://www.twitch.com/',\r\n      Pinterest:'https://www.pinterest.com/',\r\n      Spotify:'https://www.spotify.com/',\r\n      ClubHouse:'https://www.clubhouse.com/',\r\n      Discord:'https://discord.gg/',\r\n      Medium:'https://www.medium.com/',\r\n      Whatsapp:'https://wa.me/',\r\n\r\n      \r\n\r\n    }\r\n    \r\n  }\r\n  ModalClose=()=>{\r\n    this.setState({openModel:false,show:false});\r\n  }\r\n  ModalOpen=()=>{\r\n    this.setState({\r\n        openModel:true,\r\n        show:true,\r\n        SWM_Title:this.props.socialWidget.SWM_Title,\r\n        SWM_Url:this.props.socialWidget.SWM_Url,\r\n        SWM_Icon:this.props.socialWidget.SWM_Icon,\r\n        SWM_Style_Type:this.props.socialWidget.SWM_Style_Type,\r\n    });\r\n    //console.log(this.props.socialWidget);\r\n  }\r\n  openCollapse = () => {\r\n    !this.state.open ?\r\n      this.setState({ open: true })\r\n      :\r\n      this.setState({ open: false })\r\n      \r\n  }\r\n\r\n  onChangeHandle=(e)=>{\r\n    document.getElementById(\"whatsApp\").innerHTML='';\r\n    document.getElementById('msg_social').innerText='';\r\n      let titleVal=e.target.value;\r\n    this.setState({[e.target.name]:e.target.value});  \r\n    let index = e.nativeEvent.target.selectedIndex;\r\n  //  let label = e.nativeEvent.target[index].text;\r\n    let SWM_Icon = e.target[e.target.selectedIndex].getAttribute('data-icon');\r\n    //console.log(SWM_Icon)\r\n    if(titleVal===\"Instagram\")\r\n        this.setState({SWM_Url:this.state.Instagram,SWM_Icon});\r\n    if(titleVal===\"Facebook\")\r\n        this.setState({SWM_Url:this.state.Facebook,SWM_Icon});\r\n    if(titleVal===\"YouTube\")\r\n        this.setState({SWM_Url:this.state.YouTube,SWM_Icon});\r\n    if(titleVal===\"Twitter\")\r\n        this.setState({SWM_Url:this.state.Twitter,SWM_Icon});\r\n    if(titleVal===\"Twitch\")\r\n        this.setState({SWM_Url:this.state.Twitch,SWM_Icon});\r\n    if(titleVal===\"Snapchat\")\r\n        this.setState({SWM_Url:this.state.Snapchat,SWM_Icon});\r\n    if(titleVal===\"LinkedIn\")\r\n        this.setState({SWM_Url:this.state.LinkedIn,SWM_Icon});\r\n    if(titleVal===\"Pinterest\")\r\n        this.setState({SWM_Url:this.state.Pinterest,SWM_Icon});\r\n    if(titleVal===\"Spotify\")\r\n        this.setState({SWM_Url:this.state.Spotify,SWM_Icon});\r\n    if(titleVal===\"Website\" || titleVal===\"Shop\")\r\n        this.setState({SWM_Url:'https://',SWM_Icon});\r\n    if(titleVal===\"Email\")\r\n         this.setState({SWM_Url:'example@gmail.com',SWM_Icon});\r\n     if(titleVal===\"ClubHouse\")\r\n         this.setState({SWM_Url:this.state.ClubHouse,SWM_Icon});\r\n    if(titleVal===\"Discord\")\r\n         this.setState({SWM_Url:this.state.Discord,SWM_Icon});\r\n    if(titleVal===\"Medium\")\r\n         this.setState({SWM_Url:this.state.Medium,SWM_Icon});\r\n         if(titleVal===\"Whatsapp\")\r\n         {\r\n           document.getElementById(\"whatsApp\").innerHTML='Example Url: https://wa.me/mynumber';\r\n           this.setState({SWM_Url:this.state.Whatsapp,SWM_Icon});\r\n         }\r\n}\r\nonChangeHandleURL=(e)=>\r\n{\r\n  this.setState({[e.target.name]:e.target.value});     \r\n}\r\nimageonChange=(e)=>{     \r\n  const file = e.target.files[0];\r\n  this.setState({ selectedFile: e.target.files[0] }); \r\n  this.setState({\r\n    SWM_Icon: URL.createObjectURL(file)\r\n  });\r\n}\r\ndoInsertLink=(event)=>\r\n{  \r\n      event.preventDefault();\r\n      this.validate();\r\n      document.getElementById('msg_social').innerText='';\r\n      if(this.state.SWM_Url.length===0)\r\n      {\r\n        return false;\r\n      }\r\n      if(this.state.SWM_Title==='Whatsapp')\r\n      {\r\n        if(this.state.SWM_Url.startsWith('https://wa.me/'))\r\n        {\r\n            var whatsApp='https://wa.me/';\r\n             let url=this.state.SWM_Url;\r\n       \r\n            var right_number = parseInt(url.substring(whatsApp.length, url.length));\r\n            if(isNaN(right_number))  //if not number or text\r\n            {\r\n              document.getElementById('msg_social').innerText='* Enter your number after https://wa.me/';\r\n              return false;\r\n            }\r\n            if(right_number.toString().length!==10)  //if not number or text\r\n            {\r\n              document.getElementById('msg_social').innerText='* Enter your 10 digit number after https://wa.me/';\r\n              return false;\r\n            }\r\n  \r\n        }\r\n        else\r\n        {\r\n          document.getElementById('msg_social').innerText='* URL should be like https://wa.me/mynumber';\r\n          return false;\r\n        }\r\n      }\r\n\r\n      const formData = new FormData(); \r\n      const files = event.target.files\r\n      let Api_url=this.state.base_url+'admin/UpdateSocialWidget';\r\n      formData.append('sampleFile', this.state.selectedFile)\r\n      formData.append('SWM_ID', this.props.socialWidget.SWM_ID) \r\n      formData.append('JM_ID', this.state.JM_ID) \r\n      formData.append('SWM_Title', this.state.SWM_Title) \r\n      formData.append('SWM_Url', this.state.SWM_Url)      \r\n      formData.append('SWM_Icon', this.state.SWM_Icon)  \r\n      formData.append('JM_User_Profile_Url_plus_JM_ID', this.props.JM_User_Profile_Url_plus_JM_ID)\r\n      formData.append('SWM_Style_Type', this.state.SWM_Style_Type)\r\n          fetch(Api_url, {\r\n            method: 'POST',         \r\n            headers: {\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n            body: formData\r\n          })\r\n          .then(response => response.json())\r\n          .then(data => \r\n            {                   \r\n               //console.log(data);   \r\n               this.ModalClose();\r\n               this.Get_User_Details();              \r\n          })\r\n          .catch(error => {\r\n            //console.error(error)\r\n          })\r\n}\r\n\r\nGet_User_Details=()=>{\r\n    var JSONdata = {\r\n      JM_ID: this.state.JM_ID\r\n    };\r\n    const API_url = this.state.base_url + \"admin/userDetailsAll\";\r\n  fetch(API_url,\r\n    {\r\n      method: 'post',\r\n      headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n      body: JSON.stringify(JSONdata)\r\n    })\r\n  .then((response) => response.json())\r\n  .then(data1 => {\r\n    if(data1.status===1)\r\n    {\r\n      const data=API.decryptJson(data1.flag);\r\n    \r\n      this.setState({\r\n              userDetailsAll: data.data,\r\n              userDetails:data.userDetails,\r\n              themeMasterUser:data.themeMasterUser,\r\n              socialWidget:data.socialWidget,\r\n              gifts:data.gifts, \r\n              category_master:data.category_master,\r\n              title:'Success!!!',\r\n              msg:'Profile is updated',\r\n      });\r\n\r\n      this.props.setStateAfterInsert(this.state);\r\n    }   \r\n      else\r\n        alert('not fetch');\r\n  });\r\n}\r\n\r\nfileSelectHandler=()=> {\r\n  //console.log(\"changed\")\r\n}\r\n\r\nclickhandler = () => {\r\n//console.log(\"clicked\")\r\n}\r\nvalidate=(e)=>{\r\n\r\n    if(this.state.SWM_Title===\"SELECT\")\r\n        return false;\r\n\r\n}\r\n  render(){\r\n  return (\r\n    <>\r\n       <button onClick={this.ModalOpen}><CreateIcon />     \r\n      </button>\r\n      <Modal\r\n        show={this.state.show}\r\n        onHide={this.ModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <p className=\"addnew-title\">Update Social Widgets to your profile</p>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n         <form  onSubmit={this.doInsertLink}>\r\n          <div className=\"addnew-box\">\r\n               <label> Title</label>\r\n                <select className=\"form-control\" name=\"SWM_Title\" data-icon={this.state.SWM_Icon} value={this.state.SWM_Title} onChange={this.onChangeHandle}>\r\n                <option value=\"SELECT\">--SELECT--</option>\r\n                <option value=\"Instagram\" data-icon=\"faInstagram\">Instagram</option>\r\n                <option value=\"Facebook\" data-icon=\"faFacebookF\">Facebook</option>\r\n                <option value=\"YouTube\" data-icon=\"faYoutube\">YouTube</option>\r\n                <option value=\"Snapchat\" data-icon=\"faSnapchatGhost\">Snapchat</option>\r\n                <option value=\"LinkedIn\" data-icon=\"faLinkedinIn\">LinkedIn</option>\r\n                <option value=\"Twitch\" data-icon=\"faTwitch\">Twitch</option>\r\n                <option value=\"Twitter\" data-icon=\"faTwitter\">Twitter</option>\r\n                <option value=\"Pinterest\" data-icon=\"faPinterestP\">Pinterest</option>\r\n                <option value=\"Spotify\" data-icon=\"faSpotify\">Spotify</option>\r\n                <option value=\"Website\" data-icon=\"faGlobe\">Website</option>\r\n                <option value=\"Shop\" data-icon=\"faShoppingCart\">Shop</option>\r\n                <option value=\"Email\" data-icon=\"faEnvelope\">Email</option>\r\n                <option value=\"ClubHouse\" data-icon=\"faHandPaper\">ClubHouse</option>\r\n                <option value=\"Discord\" data-icon=\"faDiscord\">Discord</option>\r\n                <option value=\"Medium\" data-icon=\"faMedium\">Medium</option>\r\n                <option value=\"Whatsapp\" data-icon=\"faWhatsapp\">Whatsapp</option>\r\n                </select>\r\n                <label>Url</label>\r\n                <span style={{fontSize: '12px',float: 'right',fontWeight:'500'}} id=\"whatsApp\"></span>\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"URL\"\r\n                    name=\"SWM_Url\" value={this.state.SWM_Url} onChange={this.onChangeHandleURL}/>\r\n              <label>Social Media Link Style </label>\r\n              <select style={{display:'block'}} className=\"form-control\" name=\"SWM_Style_Type\" value={this.state.SWM_Style_Type} onChange={this.onChangeHandle}>\r\n                <option value=\"W\">As icon</option>\r\n                <option value=\"B\">As bar</option>               \r\n              </select>\r\n              <span id=\"msg_social\" style={{fontSize: '12px',color: 'red'}}></span>\r\n                      {/* <label>Icons Position</label>\r\n                        <select className=\"form-control\" name=\"SWM_Icon_Position\" value={this.state.SWM_Icon_Position} onChange={this.onChangeHandle}>                         \r\n                          <option value=\"bottom\">Bottom</option>\r\n                          <option value=\"top\">Top</option>\r\n                        </select> */}\r\n          \r\n           \r\n            <div className=\"btun-box\">\r\n              <button className=\"btun btun_1\">Update Widget</button>\r\n              <button className=\"btun\" onClick={this.ModalClose}>Cancel</button>\r\n\r\n              <span  className=\"gotosetting\"> <i className=\"fa fa-cog\"></i>\r\n                  \r\n                  <NavLink \r\n                      to={{ pathname: \"/settings\", userDetails: this.props.userDetails }} >\r\n                              &nbsp; Change Widget Position\r\n                    </NavLink>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          </form>\r\n        </Modal.Body>\r\n\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n}\r\n\r\nexport default EditSocialWidget2;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\LivePreview2.js",["2600","2601","2602","2603","2604","2605","2606","2607","2608","2609","2610","2611","2612","2613","2614","2615","2616","2617","2618","2619"],"import React, { Component } from 'react';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport Embed from 'react-embed';\r\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\r\nimport LoaderMobile from './LoaderMobile';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\n import PictureAsPdfOutlinedIcon from '@material-ui/icons/PictureAsPdfOutlined';\r\n import DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\n import CameraAltOutlinedIcon from '@material-ui/icons/CameraAltOutlined';\r\n import { MDBIcon } from 'mdbreact';\r\nimport $ from \"jquery\";\r\n//MS2 =============================================\r\n//carousel\r\n\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\r\nimport API from '../services/API';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\n\r\n class LivePreview2 extends Component {\r\n    constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n        JM_Email: localStorage.getItem('JM_Email'),\r\n        JM_ID: parseInt(localStorage.getItem('JM_ID')),  \r\n        linkMaster:[],\r\n        userDetails:[],\r\n        userDetailsAll:[],\r\n        themeMasterUser:[],\r\n        category_master:[],\r\n        socialWidget:[],\r\n        category_links:[],\r\n        embed_content:[],   \r\n          productList:[],\r\n          gifts:[],\r\n        isLoggedIn: false,\r\n        JM_Name: '',\r\n\r\n        JM_Url: '',\r\n        JM_Profile_Pic: '',\r\n        JM_User_Profile_Url:  localStorage.getItem('JM_User_Profile_Url'),  \r\n        base_url: process.env.REACT_APP_API_URL,\r\n        root_url: process.env.REACT_APP_ROOT_URL,\r\n        ProfilePath: 'Profile/',\r\n        linkPath: '',\r\n        ProfileimagePath: '',\r\n        open: false,\r\n        isChecked: false,       \r\n        logo:\"\",\r\n        bgColor:'',\r\n        bgImage:\"\",\r\n        showPage:false,\r\n        JM_Gift_Title:'',\r\n        JM_Checkout_My_Social:'',\r\n      }\r\n // console.log(this.props.Url);\r\n    }\r\n    componentDidMount() { \r\n      this.Get_User_Details();\r\n      $(document).ready(function() {\r\n        $('#previewBtn').on('click', function() {\r\n          $('#previewbox').toggleClass('view');\r\n          $('#previewUp').toggleClass('rot');\r\n        });\r\n      })\r\n\r\n    }\r\n  async  Get_User_Details()\r\n  {\r\n      var id = parseInt(localStorage.getItem('JM_ID'));\r\n      var JSONdata = {\r\n        JM_ID: id\r\n      }; \r\n       const API_url = this.state.base_url + \"admin/userDetailsAll\";\r\n       const response = await fetch(API_url, {\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\",\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n        body: JSON.stringify(JSONdata)\r\n      });\r\n      const data1 = await response.json();\r\n      if (data1 != null && data1.status > 0)\r\n       {\r\n        const data=API.decryptJson(data1.flag);\r\n        this.setState({      \r\n          userDetailsAll: data.data,\r\n          userDetails:data.userDetails,\r\n          themeMasterUser:data.themeMasterUser,\r\n          socialWidget:data.socialWidget,\r\n          gifts:data.gifts, \r\n          category_master:data.category_master,\r\n          showPage:true\r\n        \r\n        });\r\n      }      \r\n      else\r\n         this.setState({showPage:false})\r\n   // console.log(data)\r\n  }\r\n\r\n  UpdateMobileView=()=> \r\n  {\r\n    this.Get_User_Details();\r\n  }\r\n  openCollapse = CM_ID=> e => \r\n  {\r\n      CM_ID > 0 ?\r\n        this.setState({ CM_ID_Collapse: CM_ID })\r\n      :\r\n        this.setState({ CM_ID_Collapse : 0 })      \r\n  }\r\n\r\n\r\n  updateSteps=id=>e=>{\r\n\r\n  }\r\n  updateStepsClose=id=>e=>{    \r\n    document.getElementById(id).style.display = 'none';\r\n  }\r\n\r\n  render() \r\n  {\r\n    var timeInterval=API.GetSlidingInterval();\r\n    let imagePath=\"\";\r\n    let linkPath=\"\";\r\n    let JM_User_Profile_Url_plus_JM_ID =\"\";\r\n    let JM_Name,JM_Email,JM_Description='';let  JM_Social_Widget_Position=\"\",JM_Verified=0;\r\n    let JM_NewsLetter_Active=0,JM_NewsLetter_Title='',JM_Gift_Title='',JM_Gift_Active=0;\r\n    let JM_Payout_Details=0; let JM_Checkout_My_Social='';\r\n    if(this.state.userDetails !=null && this.state.userDetails.length > 0)\r\n    {\r\n      let len=this.state.userDetails.length;\r\n      for(var i=0;i < len ;i++)\r\n      {\r\n        \r\n        imagePath=process.env.REACT_APP_UPLOAD_URL+this.state.userDetails[i].JM_Profile_Pic;\r\n        linkPath=process.env.REACT_APP_UPLOAD_URL+\"Profile/\"+this.state.userDetails[i].JM_User_Profile_Url+\"_\"+this.state.userDetails[i].JM_ID+\"/\";\r\n        JM_User_Profile_Url_plus_JM_ID = this.state.userDetails[i].JM_User_Profile_Url+\"_\"+this.state.userDetails[i].JM_ID;\r\n        JM_Name=this.state.userDetails[i].JM_Name;\r\n        JM_Email=this.state.userDetails[i].JM_Email;\r\n        JM_Description=this.state.userDetails[i].JM_Description; //this.value.replace(/\\r?\\n/g, '<br>')\r\n        JM_Social_Widget_Position=this.state.userDetails[i].JM_Social_Widget_Position;\r\n        JM_Verified=this.state.userDetails[i].JM_Verified;\r\n        JM_NewsLetter_Title=this.state.userDetails[i].JM_NewsLetter_Title;\r\n        JM_NewsLetter_Active=this.state.userDetails[i].JM_NewsLetter_Active;\r\n        JM_Gift_Title=this.state.userDetails[i].JM_Gift_Title;\r\n        JM_Gift_Active=parseInt(this.state.userDetails[i].JM_Gift_Active);\r\n        JM_Payout_Details=parseInt(this.state.userDetails[i].JM_Payout_Details);\r\n        JM_Checkout_My_Social=this.state.userDetails[i].JM_Checkout_My_Social;\r\n        break;\r\n      }\r\n    }\r\n    var bgImage=\"\",bgImageVideo=\"\",fontColor=\"\",back_color=\"\";\r\n    var font_family=\"\",cssClass=\"\",highlightColor=\"\",item_color=\"\",  item_style=\"\",item_border_color='',TM_Bio_Color='',TM_Name_Color='',TM_Footer_Color='';\r\n    var TM_Item_Effect='',TM_Name_Size='',TM_Bio_Size='';\r\n    var TM_Thumbnail_Icon_Color='',TM_SocialWidget_Icon_Color='';\r\n    if(this.state.themeMasterUser !=null && this.state.themeMasterUser.length > 0)\r\n    {\r\n      let len=this.state.themeMasterUser.length;\r\n      for(var j=0;j < len ;j++)\r\n      {\r\n        bgImage = this.state.themeMasterUser[j].TM_Back_Image==='' ? '': 'url(' + process.env.REACT_APP_UPLOAD_URL + this.state.themeMasterUser[j].TM_Back_Image + ')';\r\n        bgImageVideo =  process.env.REACT_APP_UPLOAD_URL + this.state.themeMasterUser[j].TM_Back_Image;\r\n        fontColor=this.state.themeMasterUser[j].TM_Font_Color\r\n        back_color= this.state.themeMasterUser[j].TM_Back_Color;\r\n        font_family =this.state.themeMasterUser[j].TM_Font;\r\n        highlightColor =this.state.themeMasterUser[j].TM_Highlight_Color;\r\n        cssClass=this.state.themeMasterUser[j].TM_Class_Name+\" \"+font_family;\r\n        item_color= this.state.themeMasterUser[j].TM_Item_Color;\r\n        item_style=this.state.themeMasterUser[j].TM_Item_Style;\r\n        item_border_color=this.state.themeMasterUser[j].TM_Border_Color;\r\n        TM_Name_Color=this.state.themeMasterUser[j].TM_Name_Color;\r\n        TM_Bio_Color=this.state.themeMasterUser[j].TM_Bio_Color;\r\n        TM_Footer_Color=this.state.themeMasterUser[j].TM_Footer_Color;\r\n        TM_Item_Effect=this.state.themeMasterUser[j].TM_Item_Effect;\r\n        TM_Name_Size=this.state.themeMasterUser[j].TM_Name_Size;\r\n        TM_Bio_Size=this.state.themeMasterUser[j].TM_Bio_Size;\r\n        TM_Thumbnail_Icon_Color=this.state.themeMasterUser[j].TM_Thumbnail_Icon_Color;\r\n        TM_SocialWidget_Icon_Color=this.state.themeMasterUser[j].TM_SocialWidget_Icon_Color;\r\n        break;\r\n      }\r\n    }\r\n    //TM_Footer_Color='white'; //for fixed footer font\r\n\r\n\r\n\r\n    //21-jul-2021\r\n    let footer_logo=process.env.REACT_APP_UPLOAD_URL+\"footer_logo.png\";\r\n    if(\r\n      bgImage.endsWith('profile_back_7.jpg') || bgImageVideo.endsWith('profile_back_7.jpg') ||\r\n      bgImage.endsWith('profile_back_8.jpg') || bgImageVideo.endsWith('profile_back_8.jpg') \r\n      || bgImage.endsWith('profile_back_9.jpg') || bgImageVideo.endsWith('profile_back_9.jpg')\r\n      || bgImage.endsWith('profile_back_11.jpg') || bgImageVideo.endsWith('profile_back_11.jpg')\r\n      || bgImage.endsWith('profile_back_12.jpg') || bgImageVideo.endsWith('profile_back_12.jpg')\r\n      || bgImage.endsWith('profile_back_13.jpg') || bgImageVideo.endsWith('profile_back_13.jpg')\r\n      || bgImage.endsWith('profile_back_14.jpg') || bgImageVideo.endsWith('profile_back_14.jpg')\r\n      || bgImage.endsWith('profile_back_15.jpg') || bgImageVideo.endsWith('profile_back_15.jpg')\r\n      || bgImage.endsWith('profile_back_16.jpg') || bgImageVideo.endsWith('profile_back_16.jpg')\r\n      || bgImage.endsWith('profile_back_17.jpg') || bgImageVideo.endsWith('profile_back_17.jpg')\r\n      || bgImage.endsWith('profile_back_18.jpg') || bgImageVideo.endsWith('profile_back_18.jpg')\r\n      || bgImage.endsWith('profile_back_20.jpg') || bgImageVideo.endsWith('profile_back_20.jpg')\r\n      || bgImage.endsWith('profile_back_21.jpg') || bgImageVideo.endsWith('profile_back_21.jpg')\r\n      || bgImage.endsWith('profile_back_23.jpg') || bgImageVideo.endsWith('profile_back_23.jpg')\r\n      || bgImage.endsWith('profile_back_24.jpg') || bgImageVideo.endsWith('profile_back_24.jpg')\r\n      || bgImage.endsWith('profile_back_25.jpg') || bgImageVideo.endsWith('profile_back_25.jpg')\r\n      || bgImage.endsWith('profile_back_27.jpg') || bgImageVideo.endsWith('profile_back_27.jpg')\r\n      || bgImage.endsWith('profile_back_28.jpg') || bgImageVideo.endsWith('profile_back_28.jpg')\r\n      || bgImage.endsWith('profile_back_30.jpg') || bgImageVideo.endsWith('profile_back_30.jpg')\r\n      || back_color.includes('linear-gradient(180deg,  #9c14fc 0%, #7604f9 100%)') // gradient 1\r\n      || back_color.includes('linear-gradient(180deg,  #f66a08 0%, #f50f2c 100%)') // gradient 3\r\n      || back_color.includes('linear-gradient(180deg,  #19c4f2 0%, #7008fb 100%)') // gradient 4\r\n      || back_color.includes('linear-gradient(180deg,  #7c15fa 0%, #f21890 100%)') // gradient 5 \r\n      || back_color.includes('linear-gradient(180deg,  #27a2e4 0%, #0a2437 100%)') // gradient 9\r\n      || bgImage.endsWith('profile_back_31.jpg') || bgImageVideo.endsWith('profile_back_31.jpg')      \r\n      || bgImage.endsWith('profile_back_32.jpg') || bgImageVideo.endsWith('profile_back_32.jpg')\r\n      || bgImage.endsWith('profile_back_33.jpg') || bgImageVideo.endsWith('profile_back_33.jpg')\r\n      || bgImage.endsWith('profile_back_35.jpg') || bgImageVideo.endsWith('profile_back_35.jpg')\r\n      || bgImage.endsWith('profile_back_36.jpg') || bgImageVideo.endsWith('profile_back_36.jpg')\r\n      || bgImage.endsWith('profile_back_39.jpg') || bgImageVideo.endsWith('profile_back_39.jpg')\r\n      || bgImage.endsWith('profile_back_40.jpg') || bgImageVideo.endsWith('profile_back_40.jpg')\r\n      || bgImage.endsWith('profile_back_41.jpg') || bgImageVideo.endsWith('profile_back_41.jpg')\r\n      || bgImage.endsWith('profile_back_42.jpg') || bgImageVideo.endsWith('profile_back_42.jpg')\r\n      || bgImage.endsWith('profile_back_43.jpg') || bgImageVideo.endsWith('profile_back_43.jpg')\r\n      || bgImage.endsWith('profile_back_44.jpg') || bgImageVideo.endsWith('profile_back_44.jpg')\r\n      || bgImage.endsWith('profile_back_45.jpg') || bgImageVideo.endsWith('profile_back_45.jpg')\r\n      )\r\n    {\r\n      footer_logo=process.env.REACT_APP_UPLOAD_URL+'footer_logo_white.png';\r\n    }\r\n    else if(\r\n      bgImage.endsWith('profile_back_10.jpg') || bgImageVideo.endsWith('profile_back_10.jpg')\r\n      || bgImage.endsWith('profile_back_19.jpg') || bgImageVideo.endsWith('profile_back_19.jpg')\r\n      || bgImage.endsWith('profile_back_22.jpg') || bgImageVideo.endsWith('profile_back_22.jpg')\r\n      || bgImage.endsWith('profile_back_26.jpg') || bgImageVideo.endsWith('profile_back_26.jpg')\r\n      || bgImage.endsWith('profile_back_29.jpg') || bgImageVideo.endsWith('profile_back_29.jpg')\r\n\r\n      || back_color.includes('linear-gradient(180deg,  #2293d7 0%, #1ed2ed 100%)') // gradient 2 \r\n      || back_color.includes('linear-gradient(180deg,  #fb754f 0%, #f39911 100%)') // gradient 6\r\n      || back_color.includes('linear-gradient(180deg,  #fb6ca2 0%, #fd8877 100%)') // gradient 7\r\n      || back_color.includes('linear-gradient(180deg,  #ffff00 0%, #54a000 100%)') // gradient 8\r\n\r\n      || bgImage.endsWith('profile_back_34.jpg') || bgImageVideo.endsWith('profile_back_34.jpg')\r\n      || bgImage.endsWith('profile_back_37.jpg') || bgImageVideo.endsWith('profile_back_37.jpg')\r\n      || bgImage.endsWith('profile_back_38.jpg') || bgImageVideo.endsWith('profile_back_38.jpg')\r\n      || bgImage.endsWith('profile_back_46.jpg') || bgImageVideo.endsWith('profile_back_46.jpg')\r\n    )\r\n    {\r\n      footer_logo=process.env.REACT_APP_UPLOAD_URL+'footer_logo_black.png';\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n   let isMobileView='';\r\n   if(back_color!=='')\r\n   {\r\n       isMobileView='';        \r\n   }\r\n   else\r\n   {\r\n     if(bgImageVideo.includes('theme/profile_back_'))\r\n         isMobileView='';//last-footer\r\n     else\r\n     {\r\n       isMobileView='';        \r\n     }\r\n   }\r\n\r\n    const mystyle = {\r\n      color: fontColor,          \r\n      background:item_color,\r\n      border: item_border_color==='' ? '': '1px solid '+ item_border_color\r\n    };\r\n    const mystyleGift = {\r\n      color: fontColor,\r\n      border:item_border_color==='' ? '': '1px solid '+ item_border_color\r\n    };\r\n    const mystyleForCustomLink = {\r\n      color: fontColor,          \r\n      background:item_color,\r\n      padding:'20px 35px',\r\n      border: item_border_color==='' ? '': '1px solid '+ item_border_color\r\n    };\r\n\r\n    const nameStyle = {\r\n      color: TM_Name_Color,\r\n      fontSize:TM_Name_Size \r\n    };\r\n    const bioStyle = {\r\n      color: TM_Bio_Color,\r\n      fontSize:TM_Bio_Size \r\n    };\r\n    const FolderSubStyle = {\r\n      color: fontColor ,\r\n      fontSize:'10px',\r\n    };\r\n    const FolderTitleStyle = {\r\n      color: fontColor, \r\n    };\r\n    const mystyleForHightight = {\r\n      color: TM_Thumbnail_Icon_Color,\r\n      backgroundColor:highlightColor,\r\n\r\n    };\r\n    const thumbIconStyle={\r\n        color: TM_Thumbnail_Icon_Color, \r\n        backgroundColor:highlightColor,\r\n    }\r\n\r\n   const mystyleForHightightFolder={\r\n      color: TM_Thumbnail_Icon_Color, \r\n      backgroundColor:highlightColor    \r\n    }\r\n    const mystyleSocialWidget = {\r\n      color: TM_SocialWidget_Icon_Color, \r\n    };\r\n\r\n    const newsletterHeading={\r\n      color: fontColor,     \r\n    }\r\n\r\n\r\n      //themeMasterUser\r\n      let SocialWidget;var activeWidget=0;\r\n      if(this.state.socialWidget !=null && this.state.socialWidget.length > 0)\r\n      {\r\n        for (let index = 0; index < this.state.socialWidget.length; index++) \r\n        {\r\n          if(this.state.socialWidget[index].SWM_Active===1 && this.state.socialWidget[index].SWM_Style_Type==='W')\r\n          activeWidget++;          \r\n        }\r\n      }\r\n\r\n      if (this.state.socialWidget != null && this.state.socialWidget.length > 0) {\r\n        SocialWidget = this.state.socialWidget.map((link, i) => {\r\n          return (        \r\n            link.SWM_Active === 1 &&  link.SWM_Url!=='' &&  link.SWM_Style_Type==='W'?   \r\n            <>\r\n         \r\n              <li>\r\n                  {\r\n                            \r\n                            link.SWM_Title==='Email' ?\r\n                            <a href={\"mailto:\"+ link.SWM_Url} target=\"_blank\" style={TM_SocialWidget_Icon_Color==='unset'? '': mystyleSocialWidget} rel=\"noreferrer\">\r\n                                 <FontAwesomeIcon icon={API.SocialIcons(link.SWM_Icon)} \r\n                               />\r\n                            </a>\r\n                            :\r\n                            link.SWM_Url.startsWith(\"http://\") || link.SWM_Url.startsWith(\"https://\") ?\r\n                            <a href={link.SWM_Url} data-id={link.SWM_ID} target=\"_blank\" style={mystyleSocialWidget} rel=\"noreferrer\">\r\n                               {\r\n                                  link.SWM_Icon==='faHandPaper'?\r\n                                  <FontAwesomeIcon icon={API.SocialIcons(link.SWM_Icon)} className=\"rotateCls\"\r\n                                 />\r\n                                  :\r\n                                  <FontAwesomeIcon icon={API.SocialIcons(link.SWM_Icon)} \r\n                                  />\r\n  \r\n                               } \r\n                            </a>   \r\n                            :\r\n                              <a href={`https://${link.SWM_Url}`} data-id={link.SWM_ID} target=\"_blank\" style={mystyleSocialWidget} rel=\"noreferrer\">\r\n                              {/* <img src={process.env.REACT_APP_UPLOAD_URL + link.SWM_Icon}  /> */}\r\n                                {\r\n                                  link.SWM_Icon==='faHandPaper'?\r\n                                  <FontAwesomeIcon icon={API.SocialIcons(link.SWM_Icon)} className=\"rotateCls\" \r\n                                 />\r\n                                  :\r\n                                  <FontAwesomeIcon icon={API.SocialIcons(link.SWM_Icon)} />\r\n                                } \r\n                             </a>  \r\n                            \r\n                  }\r\n  \r\n              \r\n              </li>\r\n              </>\r\n              :\r\n              null\r\n          \r\n          )\r\n        })\r\n      }\r\n        //console.log(\"activeWidget\")\r\n       //console.log(activeWidget)\r\n        let productList;\r\n        if(this.state.productList !=null && this.state.productList.length > 0)\r\n        {\r\n          productList=this.state.productList.map((link,i) =>{\r\n                return (\r\n                        link.DA_Active===1?\r\n                         <div className=\"btun-box\">  \r\n                            <button className={\"big-btun mobile \"+item_style+\" \"+ TM_Item_Effect + \" \"+font_family} style={mystyle}>{link.DA_Title}\r\n                            \r\n                            {\r\n                              link.DA_INR_Doller==='INR' ?\r\n                                    \" (Rs.\" + link.DA_Price+\")\"\r\n                              :\r\n                                    \" ($\" + link.DA_Price+\")\"\r\n                           }\r\n                             \r\n                             </button>\r\n                            <div className=\"icon mobile\" style={mystyleForHightight}>\r\n\r\n                             {\r\n                                link.DA_Type==='video'?\r\n                                <PlayCircleOutlineIcon/>\r\n                                :\r\n                                null\r\n                              }\r\n                              {\r\n                                link.DA_Type==='audio'?\r\n                                <AudiotrackIcon/>\r\n                                :\r\n                                null\r\n                              }\r\n                              {\r\n                                link.DA_Type==='image'?\r\n                                <ImageIcon/>\r\n                                :\r\n                                null\r\n                              }\r\n                              {\r\n                                link.DA_Type==='NA'?\r\n                                <CameraAltOutlinedIcon/>\r\n                                :\r\n                                null\r\n                              }\r\n                              {/* /DescriptionOutlinedIcon import PictureAsPdfOutlinedIcon from '@material-ui/icons/PictureAsPdfOutlined'; */}\r\n                              {\r\n                                link.DA_Type==='txt'?\r\n                               \r\n                                <DescriptionOutlinedIcon style={{ fontSize: 35 }}/>\r\n                                :\r\n                                null\r\n                              }\r\n                               {\r\n                                link.DA_Type==='pdf'?\r\n                               \r\n                                <PictureAsPdfOutlinedIcon style={{ fontSize: 35 }}/>\r\n                                :\r\n                                null\r\n                              }\r\n                              \r\n                            </div>\r\n                            <button className={\"buy mobile \" + font_family} data={this.state.productList[i]} style={mystyleForHightight}>Buy</button>\r\n                          </div>\r\n                          :\r\n                          null\r\n                      ) \r\n              })\r\n          }\r\n   \r\n          let gifts;\r\n          if(this.state.gifts!==null && this.state.gifts.length > 0)\r\n          {\r\n              \r\n              if(JM_Gift_Active===1 && JM_Payout_Details===1)\r\n                gifts=<div className=\"btun-box\">\r\n                        <button className={\"big-btun mobile \"+item_style+ \" \"+ TM_Item_Effect +\" \"+font_family} style={mystyle}>{JM_Gift_Title}</button>\r\n                        <div className=\"icon mobile\" style={thumbIconStyle}>\r\n                            <CardGiftcardIcon/>\r\n                        </div>\r\n                        <button className={\"buy mobile \" + font_family} style={{backgroundColor:highlightColor,color:TM_Thumbnail_Icon_Color}}>View</button>\r\n                    </div>\r\n              else\r\n               gifts=null;\r\n          }      \r\n          \r\n\r\n\r\n\r\n    return (\r\n           <>\r\n         <div className=\"col-lg-4 col-md-6\">\r\n             <div className=\"tooltips\">   \r\n               <div className=\"preview\" id=\"previewbox\">\r\n                  <div className=\"previewBtn\" id=\"previewBtn\"><span ><i className=\"fa fa-caret-up\" id=\"previewUp\" aria-hidden=\"true\"></i></span> Preview</div>\r\n                  <h4>Check out the live preview of your page below.</h4>\r\n                  <div className=\"preview-mobile\">\r\n                        {this.state.showPage ?\r\n                        <div className={\"per-prop live\"} data={bgImage} style={{background:bgImage ==='' ? back_color : bgImage}}>\r\n                          <div className=\"back-vodeo live\">\r\n\r\n                           <video src={bgImageVideo} autoPlay loop muted playsInline/>\r\n                              {/* <video playsinline=\"true\" autoplay=\"autoplay\" loop muted>\r\n                                  <source src={bgImageVideo} type=\"video/mp4\" />\r\n                              </video> */}\r\n                            </div>\r\n                        \r\n                        <div className={cssClass}>  \r\n\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                    {/* <div className=\"per-prop-header\">\r\n                                            <button className=\"btun\">Follow</button>\r\n                                            <button className=\"btun_2\"><ChatOutlinedIcon style={{ fontSize: 35 }}/></button>\r\n                                    </div> */}\r\n                                    <div className=\"per-prop-body mobile\">                       \r\n                                        <div className=\"dtail-part\">\r\n                                        <div className=\"prop-pic mobile\">\r\n                                        <img src={imagePath} alt=\"\"/>\r\n                                        </div>                      \r\n                                            <div className={\"name mobile \"+font_family} >\r\n                                             \r\n                                               <h3 className={font_family} style={nameStyle}>{JM_Name}\r\n                                               {\r\n                                                JM_Verified===1 ?\r\n                                                <span className=\"verify-tick\"><img  src=\"/images/verifyIcon.png\"/></span>\r\n                                                :\r\n                                                null\r\n                                               }\r\n                                               \r\n                                                </h3>\r\n                                                    {/* <p className={font_family} style={nameStyle}></p>  */}\r\n                                                     <pre className={font_family} style={bioStyle}>\r\n                                                       {JM_Description}\r\n                                                     </pre>\r\n                                                 </div>\r\n                                            \r\n                                            <div className=\"per-prop-footer\">\r\n                                                <ul className=\"Social-links\"> \r\n                                                {\r\n                                                 JM_Social_Widget_Position==='top' && activeWidget > 0?                                                 \r\n                                                 <div className=\"socialCheckout\" style={{color: TM_Name_Color }}>{JM_Checkout_My_Social}</div> \r\n                                                 : null                                                 \r\n                                                 }\r\n                                                { JM_Social_Widget_Position==='top' && activeWidget > 0 ? SocialWidget : null}\r\n                                                </ul>\r\n                                            </div>\r\n                                        <div className=\"button-part\">\r\n                                           \r\n                                            {\r\n                                                this.state.userDetailsAll &&  this.state.userDetailsAll.map((link,i) =>(\r\n                                                 //custom link\r\n                                                  link.folderId===0 &&  link.activeInactive===1 && link.ItemType==='customlink'?  \r\n                                                  <div className=\"btun-box\" >\r\n                                                    <a className={\"big-btun mobile \"+item_style+\" \"+ TM_Item_Effect+ \" \"+font_family} href={link.URL} target=\"_blank\" style={mystyleForCustomLink} rel=\"noreferrer\">{link.title}</a>\r\n                                                    <div className=\"icon mobile\" style={thumbIconStyle}>\r\n                                                        {\r\n                                                           link.image === '' && (link.icon==='' || link.icon===null) ?\r\n                                                           <img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} alt=\"\"/>\r\n                                                         : link.image !== '' && link.icon===''  ?\r\n                                                             <img style={{ width: '100%' }} src={process.env.REACT_APP_UPLOAD_URL + link.image} alt=\"\"/>\r\n                                                         : link.icon !== '' && link.image===''  ?\r\n                                                            <MDBIcon icon={link.icon}/>\r\n                                                         :\r\n                                                            <img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} alt=\"\"/>\r\n                                                        }\r\n                                                    \r\n                                                    </div>\r\n                                                  </div>\r\n                                                  // category\r\n                                                  :  link.ItemType==='category' && link.activeInactive===1 ?     \r\n                                                  <Accordion>\r\n                                                  {\r\n                                                  link.activeInactive === 1 ?\r\n                                                    <div style={{marginBottom:'20px'}}>\r\n                                                         <div className=\"btun-box\" style={{marginBottom:'0px'}}>                  \r\n                                                            <Accordion.Toggle style={mystyle} variant=\"link\" eventKey={link.tableId} className={\"big-btun folder-shadow \" + item_style +\" \"+TM_Item_Effect}>\r\n                                                              <span style={FolderTitleStyle} className={font_family}><b><u>{link.title}</u></b></span>\r\n                                                              <p style={FolderSubStyle} className={font_family}>{link.description}  </p>\r\n                                                            </Accordion.Toggle>\r\n                                                            <div className=\"icon mobile\" style={mystyleForHightightFolder}>                                                           \r\n                                                              {\r\n                                                                      (link.image === null || link.image === '') && (link.icon==='' || link.icon===null)?\r\n                                                                    <img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} />\r\n                                                                      : (link.image !== null || link.image !== '') && link.icon===''?\r\n                                                                      <img style={{ width: '100%' }} src={process.env.REACT_APP_UPLOAD_URL + link.image} />\r\n                                                                      : (link.icon!=='' || link.icon!==null) ?\r\n                                                                      <MDBIcon icon={link.icon}/>\r\n                                                                      :\r\n                                                                      <img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} />\r\n                                                                }\r\n                                                           </div>\r\n                                                        </div>\r\n                                                        <Accordion.Collapse eventKey={link.tableId} id=\"payout\">\r\n                                                            <>\r\n                                                             <div  className={\"folder \"+item_style + \" \"+ TM_Item_Effect}>\r\n                                                                {      \r\n                                                                  this.state.userDetailsAll && this.state.userDetailsAll.map((lnk, i) => (\r\n                                                                    lnk.ItemType==='customlink' && lnk.URL !== \"\" && lnk.folderId  === link.tableId && lnk.activeInactive === 1 ?\r\n                                                                      <div className=\"btun-box\">\r\n                                                                       <a className={\"big-btun mobile \"+item_style +\" \"+ TM_Item_Effect+\" \"+ font_family} href={lnk.URL} target=\"_blank\" style={mystyle}>{lnk.title}</a>\r\n                                                                            <div className=\"icon mobile\" style={thumbIconStyle}>\r\n                                                                                {\r\n                                                                                    lnk.image === '' && (lnk.icon==='' || lnk.icon===null) ?\r\n                                                                                  <img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} />\r\n                                                                                    : lnk.image !== '' && lnk.icon===''  ?\r\n                                                                                    <img style={{ width: '100%' }} src={process.env.REACT_APP_UPLOAD_URL + lnk.image} />\r\n                                                                                    : lnk.icon !== '' && lnk.image===''  ?\r\n                                                                                    <MDBIcon icon={lnk.icon}/>\r\n                                                                                    :\r\n                                                                                    <img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} />\r\n                                                                                }\r\n                                                                            \r\n                                                                            </div>\r\n                                                                          </div>\r\n                                                                      :\r\n                                                                      null\r\n                                                                  ))\r\n                                          \r\n                                                                }\r\n                                                              </div>\r\n                                                            </>\r\n                                                          </Accordion.Collapse>\r\n                                                      </div>\r\n                                                      :\r\n                                                      null\r\n                                                    }\r\n                                                  </Accordion>\r\n                                                    \r\n                                                    //embed content  \r\n                                                  : link.ItemType==='embedcontent' && link.activeInactive===1 && link.folderId === 0?   \r\n                                                      <div className=\"btun-box mobile\" >\r\n                                                          <div className={\"product-box \"+item_style +\" \"+ TM_Item_Effect+\" \"+ font_family}>\r\n                                                          {\r\n                                                              link.URL.includes('apple.com')?\r\n                                                            <iframe src={link.URL} style={{left: 0, width: '100%', height: '450px', position: 'relative'}}\r\n                                                                    allowfullscren allow=\"encrypted-media;\">\r\n                                                              </iframe>\r\n                                                              :\r\n                                                              link.URL.includes('youtube.com') ||    link.URL.includes('youtu.be') ?\r\n                                                                // <Embed2 url={link.URL} width={300}/>\r\n                                                                  link.URL.includes('embed')===false ?\r\n                                                                  <Embed url={link.URL} width={300}/>\r\n                                                                :\r\n                                                                <iframe src={link.URL} width=\"100%\"  frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\">\r\n\r\n                                                                </iframe>\r\n                                                       \r\n                                                              :\r\n                                                              link.URL.includes('spotify.com')?\r\n                                                                // <Embed2 url={link.URL} width={300}/>\r\n                                                                <iframe src={link.URL} width=\"100%\" height={'250px'} style={{height:'200px'}} frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\">\r\n\r\n                                                                </iframe>\r\n                                                              :\r\n                                                              link.URL.includes('soundcloud.com')?\r\n                                                                <Embed url={link.URL} width=\"100%\"/>\r\n                                                              :\r\n                                                              link.URL.includes('twitter.com')?\r\n                                                              <Embed url={link.URL} width=\"100%\"/>\r\n                                                              :\r\n                                                              null\r\n                                                            }                                                   \r\n                                                          </div>   \r\n                                                      </div>\r\n                                                  :   \r\n                                                  //premium content\r\n                                                   link.ItemType==='premium' && link.activeInactive===1 &&  link.prodId !== 4 && JM_Payout_Details===1?  \r\n                                                   <div className=\"btun-box\">  \r\n                                                       <button className={\"big-btun mobile \"+item_style +\" \"+ TM_Item_Effect+ \" \"+font_family} style={mystyle}>{link.title}\r\n                                                       { \r\n                                                          link.prodId!==6?\r\n                                                                  (link.DA_Allow_Cust_Pay===0)?  \r\n                                                                        (link.price > 0)?\r\n                                                                        \" Rs.\" + link.price\r\n                                                                        :          \r\n                                                                        null                       \r\n                                                                      \r\n                                                                    :\r\n                                                                    (link.DA_Allow_Cust_Pay===1)?                                            \r\n                                                                        (link.DA_Min_Amount > 0)?\r\n                                                                        \" Rs.\" + link.DA_Min_Amount\r\n                                                                        :          \r\n                                                                        null    \r\n                                                                    :\r\n                                                                    null\r\n                                                          \r\n                                                          :\r\n                                                          link.prodId===6?\r\n                                                            (link.DA_Allow_Cust_Pay===0)?  \r\n                                                                  (link.price > 0)?\r\n                                                                  \" Rs.\" + link.price\r\n                                                                  :          \r\n                                                                  null                       \r\n                                                                \r\n                                                              :\r\n                                                                (link.DA_Allow_Cust_Pay===1)?                                            \r\n                                                                  (link.DA_Min_Amount > 0)?\r\n                                                                  \" Rs.\" + link.DA_Min_Amount\r\n                                                                  :          \r\n                                                                  null    \r\n                                                              :\r\n                                                              null\r\n                                                            :\r\n                                                            null\r\n                                                          }\r\n                                                   {\r\n                                                    //  link.DA_INR_Doller==='INR' ?\r\n                                                    //        \" (Rs.\" + link.DA_Price+\")\"\r\n                                                    //  :\r\n                                                    //        \" ($\" + link.DA_Price+\")\"\r\n                                                  }\r\n                                                    \r\n                                                    </button>\r\n                                                       <div className=\"icon mobile\" style={thumbIconStyle}>\r\n                       \r\n                                                    {\r\n                                                       link.prodType==='video'?\r\n                                                       <PlayCircleOutlineIcon/>\r\n                                                       :\r\n                                                       null\r\n                                                     }\r\n                                                     {\r\n                                                       link.prodType==='audio'?\r\n                                                       <AudiotrackIcon/>\r\n                                                       :\r\n                                                       null\r\n                                                     }\r\n                                                     {\r\n                                                       link.prodType==='image'?\r\n                                                       <ImageIcon/>\r\n                                                       :\r\n                                                       null\r\n                                                     }\r\n                                                     {\r\n                                                       link.prodType==='NA'?\r\n                                                       <CameraAltOutlinedIcon/>\r\n                                                       :\r\n                                                       null\r\n                                                     }\r\n                                                     {/* /DescriptionOutlinedIcon import PictureAsPdfOutlinedIcon from '@material-ui/icons/PictureAsPdfOutlined'; */}\r\n                                                     {\r\n                                                       link.prodType==='txt'?\r\n                                                      \r\n                                                       <DescriptionOutlinedIcon />\r\n                                                       :\r\n                                                       null\r\n                                                     }\r\n                                                      {\r\n                                                       link.prodType==='pdf'?\r\n                                                      \r\n                                                       <PictureAsPdfOutlinedIcon/>\r\n                                                       :\r\n                                                       null\r\n                                                     }\r\n                                                     {\r\n                                                          link.prodType === 'videoCam' ?\r\n                                                        \r\n                                                            <VideocamIcon />\r\n                                                            :\r\n                                                            null\r\n                                                        }\r\n                                                   </div>\r\n                                                  {                                                    \r\n                                                   link.prodId===5?\r\n                                                   <button className={\"buy mobile \" + font_family} data={this.state.userDetailsAll[i]} style={mystyleForHightight}>Book</button>\r\n                                                   :\r\n                                                   link.prodId===6?\r\n                                                    <button className={\"buy mobile \" + font_family} data={this.state.userDetailsAll[i]} style={mystyleForHightight}>Join</button>\r\n                                                    :\r\n                                                    <button className={\"buy mobile \" + font_family} data={this.state.userDetailsAll[i]} style={mystyleForHightight}>Buy</button>\r\n                                                 \r\n                                                  }\r\n                                                 </div>                                                  \r\n                                                  :  link.ItemType==='socialBar' && link.activeInactive===1 ?   \r\n                                                  <div className=\"btun-box\" >\r\n                                                      <a className={\"big-btun mobile \"+item_style+\" \"+ TM_Item_Effect+ \" \"+font_family} href={link.URL} target=\"_blank\" style={mystyleForCustomLink}>{link.title}</a>\r\n                                                      <div className=\"icon mobile\" style={thumbIconStyle}>\r\n                                                        {\r\n                                                        link.icon!=='' || link.icon===null ?\r\n                                                          // <img style={{ width: '100%' }} src={process.env.REACT_APP_UPLOAD_URL + link.icon} />                                                       \r\n                                                          \r\n                                                            link.icon==='faHandPaper'?\r\n                                                            <FontAwesomeIcon icon={API.SocialIcons(link.icon)} className=\"rotateCls\" />\r\n                                                            :\r\n                                                            <FontAwesomeIcon icon={API.SocialIcons(link.icon)} />\r\n                                                          \r\n                                                        :\r\n                                                          <img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} />\r\n                                                        }                                                  \r\n                                                      </div>\r\n                                                   </div>\r\n                                                  :  link.ItemType === 'carousel' && link.prodId === 4 && link.activeInactive===1 ?                                     \r\n                                                      <div className=\"Carousel-box mobile\" style={{display:'block'}}>                                                        \r\n                                                      \r\n                                                            <Carousel interval={timeInterval} keyboard={false}>\r\n                                                           { \r\n                                                             link.carousel_1 !== 'NA' ?\r\n                                                                <Carousel.Item>\r\n                                                                        <div className={\"item\"} style={mystyle}>\r\n                                                                                  {\r\n                                                                                    link.carousel_1 !== 'NA' ?\r\n                                                                                      <img\r\n                                                                                        src={process.env.REACT_APP_UPLOAD_URL + link.carousel_1} alt=\"image1\"\r\n                                                                                      />\r\n                                                                                      :\r\n                                                                                      null\r\n                                                                                  }\r\n                                                                                     <div className={\"overlay \"+font_family}> \r\n                                                                                     <span>                                                                                    \r\n                                                                                      {\r\n                                                                                       link.carousel_title_1!=='NA' ?\r\n                                                                                       link.carousel_title_1.replace('<>', \"'\")\r\n                                                                                       :\r\n                                                                                       \"No title\"\r\n                                                                                      \r\n                                                                                      }\r\n                                                                                       </span></div>\r\n                                                                                </div> \r\n                                                              </Carousel.Item>\r\n                                                              :\r\n                                                              null\r\n                                                          }\r\n                                                             \r\n\r\n                                                          { \r\n                                                             link.carousel_2 !== 'NA' ?\r\n                                                                <Carousel.Item>\r\n                                                                                <div className={\"item\"} style={mystyle}>\r\n                                                                                  {\r\n                                                                                    link.carousel_2 !== 'NA' ?\r\n                                                                                      <img\r\n                                                                                        src={process.env.REACT_APP_UPLOAD_URL + link.carousel_2} alt=\"image2\"\r\n                                                                                      />\r\n                                                                                      :\r\n                                                                                      null\r\n                                                                                  }\r\n                                                                                     <div className={\"overlay \"+font_family}>\r\n                                                                                        <span>\r\n                                                                                        {\r\n                                                                                               link.carousel_title_2!=='NA' ?\r\n                                                                                               link.carousel_title_2.replace('<>', \"'\")\r\n                                                                                               :\r\n                                                                                               \"No title\"\r\n                                                                                            \r\n                                                                                            }\r\n                                                                                          \r\n                                                                                          </span></div>\r\n                                                                                </div> \r\n                                                                </Carousel.Item>\r\n                                                              :\r\n                                                              null\r\n                                                          }\r\n\r\n                                                          { \r\n                                                             link.carousel_3 !== 'NA' ?\r\n                                                                <Carousel.Item>\r\n                                                                                <div className={\"item\"} style={mystyle}>\r\n                                                                                  {\r\n                                                                                    link.carousel_3!=='NA'?\r\n                                                                                    <img\r\n                                                                                    src={process.env.REACT_APP_UPLOAD_URL+link.carousel_3} alt=\"image3\"\r\n                                                                                      />\r\n                                                                                    :\r\n                                                                                   null                                                                                  \r\n                                                                                  }\r\n                                                                                     <div className={\"overlay \"+font_family}> \r\n                                                                                     <span>\r\n                                                                                        {\r\n                                                                                              link.carousel_title_3!=='NA' ?\r\n                                                                                              link.carousel_title_3.replace('<>', \"'\")\r\n                                                                                              :\r\n                                                                                              \"No title\"\r\n                                                                                         \r\n                                                                                          \r\n                                                                                          }\r\n                                                                                       </span></div>\r\n                                                                                </div> \r\n                                                                </Carousel.Item>\r\n                                                              :\r\n                                                              null\r\n                                                          }\r\n\r\n                                                        </Carousel>\r\n                                                      \r\n                                                      \r\n                                                      </div>\r\n                                                  :\r\n                                                  null\r\n                                              ))\r\n                                            }\r\n                                           {gifts}\r\n\r\n                                            {/* news letter */}\r\n                                            {\r\n                                              JM_NewsLetter_Active===1 ?\r\n                                                <div className={\"reg-box mobile \"+ item_style + \" \"+ TM_Item_Effect}   style={mystyle}>\r\n                                                    <div className=\"heading\" >\r\n                                                        <p className={font_family} style={newsletterHeading}>{JM_NewsLetter_Title}</p>\r\n                                                    </div>\r\n                                                        <input type=\"text\" className={\"form-control \" + font_family} style={mystyle} placeholder=\"Enter your name\" \r\n                                                        name=\"NL_Name\" value={this.state.NL_Name} style={mystyle} onChange={this.onChangeHandle}/>\r\n                                                        <input type=\"text\" className={\"form-control \" + font_family} placeholder=\"Enter your e-mail address\" \r\n                                                        name=\"NL_Email\" value={this.state.NL_Email} style={mystyle} onChange={this.onChangeHandle}/>\r\n                      \r\n                                                        <button className={\"next-btun \"+ item_style + \" \"+ TM_Item_Effect+\" \"+ font_family} style={mystyleForHightight} onClick={this.submitNewsLatter}>Submit</button>\r\n                                                        <p style={{color:'red'}} id=\"msg_newsletter\"></p>                                                    \r\n                                                </div> \r\n                                                :\r\n                                                null\r\n                                              }\r\n                                              {/* news letter end */}\r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"per-prop-footer\">\r\n                                        <ul className=\"Social-links\">                                          \r\n                                                 {\r\n                                                 JM_Social_Widget_Position==='bottom' && activeWidget > 0?                                                 \r\n                                                 <div className=\"socialCheckout\" style={{color: TM_Name_Color }}>{JM_Checkout_My_Social}</div> \r\n                                                 : null                                                 \r\n                                                 }\r\n                                                { JM_Social_Widget_Position==='bottom' && activeWidget > 0 ? SocialWidget : null}\r\n                                        </ul>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={\"row \" + isMobileView} style={{padding:'10px 0'}}>\r\n                                  <div className=\"col-4 col-md-4\">\r\n                                    <div className=\"page-footer-logo mobile \" style={{width:'70px'}}>\r\n                                        <img src={footer_logo} />\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"col-8 col-md-8\">\r\n                                  <ul className=\"page-footer-link text-right mobile\" style={{color: TM_Footer_Color }} >\r\n                                      <li><a href=\"/\" className={font_family} style={{color: TM_Footer_Color,fontSize:'13px'}}  >Explore</a></li> |&nbsp; \r\n                                      <li><a href=\"/join\" className={font_family} style={{color: TM_Footer_Color,fontSize:'13px'}}>Create Page</a></li>\r\n                                    </ul>\r\n                                    \r\n                                </div>\r\n                                </div>  \r\n                            </div>\r\n                        </div>\r\n                        </div> \r\n                        :\r\n                        <>\r\n                        {/* <h1>Page Not Found</h1> */}\r\n                         <LoaderMobile/> \r\n                        </>\r\n                        }\r\n                 </div>\r\n               </div>\r\n                <div className=\"tooltip-top\" id=\"tool_preview\" style={{display:'none'}}>\r\n                  <h6>Page preview</h6>\r\n                  <p> See all the real-time changes on your page here.</p>\r\n                  <i></i>\r\n                  <span className=\"cls\" onClick={()=>API.updateStepsClose('tool_preview')}>x</span>\r\n                   <span className=\"step\">Step 4 out of 9</span>\r\n                   <button className=\"nxtbtun\"  onClick={()=> API.updateToolStep(5)}>Next</button>\r\n              </div>\r\n        </div> \r\n               \r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default LivePreview2;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\EditLinks2.js",["2620","2621","2622","2623","2624","2625","2626","2627","2628","2629","2630","2631","2632","2633","2634","2635","2636","2637","2638","2639","2640","2641","2642"],"import React, { Component } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport { MDBIcon } from 'mdbreact';\r\nimport API  from '../services/API';\r\nclass EditLinks2 extends Component\r\n{\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       openModel:false,\r\n       base_url: process.env.REACT_APP_API_URL,\r\n       root_url: process.env.REACT_APP_ROOT_URL,\r\n       show:false,\r\n       open:false,\r\n       JM_ID:0,\r\n       LM_Title:'',\r\n       LM_Url:'',\r\n       LM_Image:'',\r\n       LM_Who_Will_See:0,\r\n       selectedFile: null,\r\n       linkMaster:[],\r\n      userDetails:[],\r\n      productList:[],\r\n      activeIcon:'',\r\n      isDisplayIcon:'block',\r\n      isDisplayImage:'none',\r\n      iconCheked:false,\r\n      imageCheked:false,\r\n      fromEdit:true\r\n\r\n      \r\n    }\r\n   // console.log(this.props.data.LM_Who_Will_See);\r\n\r\n  }\r\n  ModalClose=()=>{\r\n    this.setState({openModel:false,show:false,\r\n      iconCheked:false ,\r\n      imageCheked:false,\r\n    \r\n    });\r\n  }\r\n  ModalOpen=()=>{\r\n    this.setState({openModel:true,show:true,\r\n      errMsg:'',      \r\n    });\r\n\r\n    //console.log(this.props.data);\r\n      this.setState({ \r\n        JM_ID:this.props.data.JM_ID,\r\n        LM_ID:this.props.data.tableId,\r\n        LM_Title:this.props.data.title,\r\n        LM_Url:this.props.data.URL.includes('https://') ? this.props.data.URL.replace('https://','') : this.props.data.URL.replace('http://',''),\r\n        LM_Image:this.props.data.image,\r\n        ddl_type:this.props.data.URL.includes('https://') ? 'https://' : 'http://',\r\n        LM_Who_Will_See:0,\r\n        selectedFile: null,\r\n        linkMaster:[],\r\n        userDetails:[],\r\n        category_master:[],\r\n        category_links:[],\r\n        embed_content:[],\r\n        fromEdit:true,\r\n        activeIcon:this.props.data.icon,\r\n        iconCheked:this.props.data.icon ===''? false :true,\r\n        imageCheked:this.props.data.icon ===''? true :false,\r\n    });\r\n    if(this.props.data.icon==='')\r\n        this.setState({\r\n          isDisplayIcon:\"none\", isDisplayImage:\"block\",\r\n        \r\n        })\r\n    else\r\n      this.setState({\r\n        isDisplayIcon:\"block\", isDisplayImage:\"none\",     \r\n      })\r\n  }\r\n  openCollapse = () => {\r\n    !this.state.open ?\r\n      this.setState({ open: true })\r\n      :\r\n      this.setState({ open: false })\r\n      \r\n  }\r\n\r\n  onChangeHandle=(e)=>{\r\n          this.setState({[e.target.name]:e.target.value});     \r\n}\r\n\r\nimageonChange=(e)=>{     \r\n  const file = e.target.files[0];\r\n  this.setState({ selectedFile: e.target.files[0] }); \r\n  this.setState({\r\n    LM_Image: URL.createObjectURL(file),\r\n    fromEdit:false\r\n  });\r\n}\r\nonChangeHandleURL=(e)=>\r\n{\r\n // let value = e.target.value\r\n  //value = value.replace(/[^A-Za-z]/ig, '')\r\n  this.setState({ JM_User_Profile_Url: e.target.value.replace(/[^\\w\\s]/gi, \"\") });     \r\n}\r\n\r\ndoUpdateLink=(event)=>{  \r\n      event.preventDefault();\r\n\r\n      if(this.state.LM_Title.length === 0)\r\n      {\r\n        this.setState({\r\n          errMsg:'Enter Title',\r\n          errColor:'#ff6a6e'\r\n         })\r\n        return false;\r\n      }\r\n      if(this.state.LM_Url.length === 0)\r\n      {\r\n        this.setState({\r\n          errMsg:'Enter URL',\r\n          errColor:'#ff6a6e'\r\n         })\r\n        return false;\r\n      }\r\n\r\n     \r\n        var val=this.state.LM_Url;\r\n        if(val.includes('http://') || val.includes('https://'))\r\n          {\r\n            this.setState({\r\n               errMsg:'Invalid URL, Remove http:// or https://',\r\n               errColor:'#ff6a6e'\r\n              })\r\n              return false;\r\n          }\r\n          else if(val.includes('.'))\r\n          {\r\n            const arr=val.split('.');\r\n            if(arr!==null && arr.length > 0 && arr[1].length < 2)\r\n            {\r\n              this.setState({\r\n                errMsg:'Invalid URL, Enter correct URL',\r\n                errColor:'#ff6a6e'\r\n               })\r\n                return false;\r\n            }         \r\n          }\r\n          else if(val.includes('.')===false)\r\n          {\r\n            \r\n              this.setState({\r\n                errMsg:'Invalid URL, Enter correct URL',\r\n                errColor:'#ff6a6e'\r\n               })\r\n                return false;\r\n                   \r\n          }\r\n          else\r\n          {\r\n            this.setState({\r\n              errMsg:'',\r\n              errColor:''\r\n             })\r\n          }\r\n      \r\n      const formData = new FormData(); \r\n      const files = event.target.files;\r\n      let LM_Image='',LM_Icon='';\r\n      if(this.state.iconCheked && this.state.activeIcon!=='')\r\n      {\r\n        LM_Image='';\r\n        LM_Icon=this.state.activeIcon;\r\n      }\r\n      else if(this.state.imageCheked && this.state.LM_Image!=='' && this.state.LM_Image.startsWith('blob:')===false)\r\n      {\r\n        LM_Icon='';\r\n        LM_Image=this.state.LM_Image;\r\n      }\r\n      let Api_url=this.state.base_url+'admin/UpdateLink';\r\n      formData.append('sampleFile', this.state.selectedFile)\r\n      formData.append('LM_ID', this.props.data.tableId) \r\n      formData.append('LM_Title', this.state.LM_Title) \r\n      formData.append('LM_Url', this.state.ddl_type + this.state.LM_Url) \r\n      formData.append('LM_Image', LM_Image)\r\n      formData.append('LM_Who_Will_See', this.state.LM_Who_Will_See)\r\n      formData.append('JM_User_Profile_Url_plus_JM_ID', this.props.userDetails.JM_User_Profile_Url+\"_\"+this.props.data.JM_ID)\r\n      formData.append('LM_Icon', LM_Icon)\r\n          fetch(Api_url, {\r\n            method: 'POST',     \r\n            headers: { \"authorization\": API.getAuth(),\"id\":API.getId()},        \r\n            body: formData\r\n          })\r\n          .then(response => response.json())\r\n          .then(data => \r\n            {                   \r\n               //console.log(data);   \r\n               this.ModalClose();\r\n              // this.Get_User_Details();   \r\n               \r\n               this.GetuserDetailsAll();    \r\n          })\r\n          .catch(error => {\r\n            //console.error(error)\r\n          })\r\n        \r\n}\r\nGetuserDetailsAll=()=>{\r\n  var JSONdata = {\r\n    JM_ID: this.state.JM_ID\r\n  };\r\n  const API_url = this.state.base_url + \"admin/userDetailsAll\";\r\nfetch(API_url,\r\n  {\r\n    method: 'post',\r\n    headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n    body: JSON.stringify(JSONdata)\r\n  })\r\n.then((response) => response.json())\r\n.then(data1 => {\r\n  if(data1.status===1)\r\n  {\r\n    const data=API.decryptJson(data1.flag);\r\n   \r\n     this.setState({\r\n       userDetailsAll: data.data,\r\n       themeMasterUser:data.themeMasterUser,\r\n       userDetails:data.userDetails, \r\n       socialWidget:data.socialWidget,\r\n       gifts:data.gifts,\r\n       category_master:data.category_master,\r\n       title:'Success!!!',\r\n       msg:'Profile is updated',\r\n     });\r\n\r\n    this.props.setStateAfterInsert(this.state);\r\n  }   \r\n    else\r\n      alert('not fetch');\r\n});\r\n}\r\nGet_User_Details = () => {\r\n    var JSONdata = {\r\n      JM_ID: this.state.JM_ID\r\n    };\r\n    const API_url = this.state.base_url + \"admin/userDetails\";\r\n  fetch(API_url,\r\n    {\r\n      method: 'post',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(JSONdata)\r\n    })\r\n  .then((response) => response.json())\r\n  .then(data => {\r\n    if(data.status===1)\r\n    {\r\n      this.setState({\r\n        userDetails:data.userDetails,\r\n        linkMaster:data.linkMaster,\r\n        LM_Title:'',\r\n        LM_Url:'',\r\n        LM_Image:'',\r\n        LM_Who_Will_See:1,\r\n        selectedFile: null,\r\n        title:'Success!!!',\r\n        msg:'Profile is updated',\r\n        socialWidget:data.socialWidget,\r\n        category_master:data.category_master,\r\n        category_links:data.category_links,\r\n        embed_content:data.embed_content,\r\n        productList:data.productList,\r\n        gifts: data.gifts,\r\n      });\r\n      this.props.setStateAfterInsert(this.state);\r\n    }   \r\n      else\r\n        alert('not fetch');\r\n  });\r\n  \r\n\r\n}\r\n\r\n\r\nsetActive=(e)=>{\r\n  e.preventDefault();\r\n\r\n  var icon = e.currentTarget.attributes['data-id'].value;\r\n  this.setState({\r\n    activeIcon:icon\r\n  })\r\n}\r\nshowHideDiv=(e)=>{\r\n\r\n  if(e.target.value==='icon')\r\n  {\r\n    this.setState({\r\n      isDisplayIcon:\"block\", isDisplayImage:\"none\",\r\n      iconCheked:true,imageCheked:false\r\n    })\r\n  }\r\n\r\n  if(e.target.value==='image')\r\n  {\r\n    this.setState({\r\n      isDisplayIcon:\"none\", isDisplayImage:\"block\",\r\n      iconCheked:false,imageCheked:true\r\n    })\r\n  }\r\n}\r\n  render(){\r\n    var imagePath=this.state.LM_Image===''? process.env.REACT_APP_UPLOAD_URL+'no_image.png' :process.env.REACT_APP_UPLOAD_URL+this.state.LM_Image;\r\n  return (\r\n    <>\r\n     <button onClick={this.ModalOpen}><CreateIcon />     \r\n      </button>\r\n      <Modal\r\n        show={this.state.show}\r\n        onHide={this.ModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <p className=\"addnew-title\">Edit Link</p>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <form  onSubmit={this.doUpdateLink}>\r\n          <div className=\"addnew-box\">\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Title\"\r\n             name=\"LM_Title\" value={this.state.LM_Title} onChange={this.onChangeHandle}/>\r\n            <select disabled className=\"form-control\" name=\"ddl_type\" value={this.state.ddl_type} onChange={this.onChangeHandle} style={{display:'none'}}>\r\n                  <option value=\"https://\">https://</option>                \r\n              </select>\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"https://\"\r\n           name=\"LM_Url\" value={this.state.LM_Url} onChange={this.onChangeHandle} />\r\n\r\n           \r\n              <div className=\"image-btun-box text-center\">\r\n                    <input type=\"radio\" checked={this.state.iconCheked} className=\"setCursor\" name=\"selection\" id=\"icon_chk\" value=\"icon\" onClick={this.showHideDiv}/>\r\n                    <label for=\"icon_chk\" className=\"setCursor\"> &nbsp;Icon&nbsp; </label>\r\n                    <input type=\"radio\"  checked={this.state.imageCheked} className=\"setCursor\"  name=\"selection\"  id=\"image_chk\" value=\"image\" onClick={this.showHideDiv}/>\r\n                    <label for=\"image_chk\" className=\"setCursor\"> \r\n                          &nbsp;Image&nbsp;\r\n                    </label>\r\n              </div>\r\n              {/* icon */}\r\n              <div style={{display:this.state.isDisplayIcon}}>\r\n                  <label>What would you like the icon to be?</label> \r\n                  <div className=\"image-btun-box\" >\r\n                    <div className=\"iconbox\">\r\n                        <div className=\"icon\"  \r\n                            className={this.state.activeIcon === \"external-link-alt\" ? 'icon active' : 'icon'}  data-id=\"external-link-alt\"  onClick={this.setActive}>\r\n                            <MDBIcon icon=\"external-link-alt\" size=\"2x\"/> \r\n                        </div>\r\n                        <div className=\"icon\"\r\n                        className={this.state.activeIcon === \"lightbulb\" ? 'icon active' : 'icon'} data-id=\"lightbulb\"   onClick={this.setActive}>\r\n                        \r\n                          <MDBIcon icon=\"lightbulb\" size=\"2x\"/>\r\n                        </div>\r\n                        <div className=\"icon\"\r\n                        className={this.state.activeIcon === \"anchor\" ? 'icon active' : 'icon'} data-id=\"anchor\"    onClick={this.setActive}>\r\n                            <MDBIcon icon=\"anchor\" size=\"2x\"/>\r\n                            \r\n                        </div>\r\n                        <div className=\"icon\"\r\n                          className={this.state.activeIcon === \"link\" ? 'icon active' : 'icon'}  data-id=\"link\"  onClick={this.setActive}>\r\n                            <MDBIcon icon=\"link\" size=\"2x\"/>\r\n                        </div>\r\n                        <div className=\"icon\"\r\n                          className={this.state.activeIcon === \"external-link-square-alt\" ? 'icon active' : 'icon'} data-id=\"external-link-square-alt\"    onClick={this.setActive}>\r\n                            <MDBIcon icon=\"external-link-square-alt\" size=\"2x\"/>\r\n                        </div>\r\n      \r\n                        <div className=\"icon\"\r\n                          className={this.state.activeIcon === \"archway\" ? 'icon active' : 'icon'} data-id=\"archway\" onClick={this.setActive}>\r\n                            <MDBIcon icon=\"archway\" size=\"2x\"/>                   \r\n                        </div>\r\n\r\n\r\n                        <div className=\"icon\"  \r\n                          className={this.state.activeIcon === \"ankh\" ? 'icon active' : 'icon'} data-id=\"ankh\" onClick={this.setActive}>\r\n                            <MDBIcon icon=\"ankh\" size=\"2x\" />\r\n                        </div>\r\n                        <div className=\"icon\" \r\n                        className={this.state.activeIcon === \"angle-double-right\" ? 'icon active' : 'icon'} data-id=\"angle-double-right\"  onClick={this.setActive}>\r\n                          <MDBIcon icon=\"angle-double-right\" size=\"2x\" />                   \r\n                        </div>\r\n                        <div className=\"icon\"\r\n                          className={this.state.activeIcon === \"cannabis\" ? 'icon active' : 'icon'} data-id=\"cannabis\"  onClick={this.setActive}>\r\n                              <MDBIcon icon=\"cannabis\" data-id=\"cannabis\" size=\"2x\" />  \r\n                        </div>\r\n                        <div className=\"icon\"\r\n                          className={this.state.activeIcon === \"chess-queen\" ? 'icon active' : 'icon'} data-id=\"chess-queen\" onClick={this.setActive}>\r\n                              <MDBIcon icon=\"chess-queen\" data-id=\"chess-queen\"  size=\"2x\" />   \r\n                        </div>\r\n                      \r\n                      {/*========= MS2======================*/}\r\n\r\n                      <div className=\"icon\"\r\n                        className={this.state.activeIcon === \"air-freshener\" ? 'icon active' : 'icon'} data-id=\"air-freshener\" onClick={this.setActive}>\r\n                             <MDBIcon icon=\"air-freshener\" data-id=\"air-freshener\"  size=\"2x\" />\r\n                      </div>\r\n                      <div className=\"icon\"\r\n                        className={this.state.activeIcon === \"bell\" ? 'icon active' : 'icon'} data-id=\"bell\" onClick={this.setActive}>\r\n                             <MDBIcon icon=\"bell\" data-id=\"bell\"  size=\"2x\" />\r\n                      </div>\r\n                      <div className=\"icon\"\r\n                        className={this.state.activeIcon === \"guitar mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"guitar mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                             <MDBIcon icon=\"guitar mdb-gallery-view-icon\" data-id=\"guitar mdb-gallery-view-icon\"  size=\"2x\" />\r\n \r\n                      </div>\r\n                      <div className=\"icon\"\r\n                        className={this.state.activeIcon === \"hat-cowboy mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"hat-cowboy mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                             <MDBIcon icon=\"hat-cowboy mdb-gallery-view-icon\" data-id=\"hat-cowboy mdb-gallery-view-icon\"  size=\"2x\" />\r\n\r\n                      </div>\r\n                      <div className=\"icon\"\r\n                        className={this.state.activeIcon === \"music mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"music mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                             <MDBIcon icon=\"music mdb-gallery-view-icon\" data-id=\"music mdb-gallery-view-icon\"  size=\"2x\" />\r\n                           \r\n                      </div>\r\n\r\n\r\n\r\n\r\n                      <div className=\"icon\"\r\n                        className={this.state.activeIcon === \"store mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"store mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                             <MDBIcon icon=\"store mdb-gallery-view-icon\" data-id=\"store mdb-gallery-view-icon\"  size=\"2x\" />\r\n                           \r\n                      </div>\r\n\r\n                      <div className=\"icon\"\r\n                        className={this.state.activeIcon === \"trophy mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"trophy mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                             <MDBIcon icon=\"trophy mdb-gallery-view-icon\" data-id=\"trophy mdb-gallery-view-icon\"  size=\"2x\" />\r\n               \r\n                      </div>\r\n                      <div className=\"icon\"\r\n                        className={this.state.activeIcon === \"wine-glass-alt mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"wine-glass-alt mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                             <MDBIcon icon=\"wine-glass-alt mdb-gallery-view-icon\" data-id=\"wine-glass-alt mdb-gallery-view-icon\"  size=\"2x\" />\r\n                  \r\n                      </div>\r\n                      <div className=\"icon\"\r\n                        className={this.state.activeIcon === \"venus mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"venus mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                             <MDBIcon icon=\"venus mdb-gallery-view-icon\" data-id=\"venus mdb-gallery-view-icon\"  size=\"2x\" />\r\n                        \r\n                      </div>\r\n                      <div className=\"icon\"\r\n                        className={this.state.activeIcon === \"yin-yang mdb-gallery-view-icon\" ? 'icon active' : 'icon'} data-id=\"yin-yang mdb-gallery-view-icon\" onClick={this.setActive}>\r\n                             <MDBIcon icon=\"yin-yang mdb-gallery-view-icon\" data-id=\"yin-yang mdb-gallery-view-icon\"  size=\"2x\" />\r\n                      </div>\r\n\r\n                      {/* ==========MS2 end ============== */}\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n              </div>\r\n\r\n\r\n\r\n            {/* image */}\r\n            <div style={{display:this.state.isDisplayImage}}>\r\n              <label>What would you like the Image to be? </label>\r\n               <div className=\"image-btun-box\">\r\n              <div className=\"row\">\r\n                 <div className=\"col-md-12\">\r\n                    <div className=\"view-image\">\r\n                        {\r\n                          this.state.fromEdit ?\r\n                          <img  src={imagePath}/>\r\n                          :\r\n                          <img  src={this.state.LM_Image}/>\r\n                        }\r\n                      \r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-12\">\r\n                  <label className=\"up-ico\" for=\"selectImage\">\r\n                    Upload an Image\r\n                    <input id='selectImage' type=\"file\" style={{ display:\"none\"}}  onClick={this.clickhandler} onChange={this.imageonChange} />\r\n                  </label>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                          {/* <button className=\"up-ico\">Choose an Icon</button> */}\r\n                     {/* <Button onClick={this.openCollapse} className=\"btun\"\r\n                          aria-controls=\"example-collapse-text\"\r\n                          aria-expanded={this.state.open} >              \r\n                        Choose an Icon\r\n                      </Button> */}\r\n                      <Collapse in={this.state.open}>\r\n                          <div id=\"example-collapse-text\">\r\n                              <div className=\"row\">\r\n                                <div className=\"col-md-4\">\r\n\r\n                                       hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                 \r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                  \r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                      </Collapse>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            </div>\r\n\r\n\r\n\r\n            <label style={{display:'none'}}>Who should be able to see this?</label>\r\n            <select style={{display:'none'}}className=\"form-control\" name=\"LM_Who_Will_See\" value={this.state.LM_Who_Will_See} onChange={this.onChangeHandle}>\r\n              <option value=\"1\">Everyone</option>\r\n              <option value=\"2\">My Followers</option>\r\n              <option value=\"3\">People I follow</option>\r\n            </select>\r\n\r\n\r\n            <div className=\"btun-box\">\r\n              <button className=\"btun btun_1\">Update Links</button>\r\n              <button className=\"btun\" onClick={this.ModalClose}>Cancel</button>\r\n            </div>\r\n            <p style={{color:this.state.errColor}}>{this.state.errMsg}</p>\r\n          </div>\r\n          </form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n}\r\n\r\nexport default EditLinks2;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\header_footer\\Header_Updation.js",["2643","2644"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport API from '../services/API'\r\n\r\nclass Header_Updation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n            this.state={\r\n                isUpdation:false,\r\n                msg:''\r\n            }\r\n    }\r\n\r\n   \r\n   async  componentDidMount() \r\n    {   \r\n        const data=await API.serverMessage();\r\n        if(data.status===1)\r\n        {\r\n            this.setState({\r\n                isUpdation:true,msg:data.msg\r\n            })\r\n        }\r\n    }  \r\n\r\n \r\n\r\n    render() {\r\n        \r\n        \r\n        return (\r\n            this.state.isUpdation===true?  \r\n                <div className=\"updating-bar\">\r\n                    <marquee>{this.state.msg}</marquee>\r\n                </div>\r\n                :\r\n            null\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nHeader_Updation.propTypes = {\r\n\r\n};\r\n\r\nexport default Header_Updation;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\LoaderMobile.js",["2645"],"import React, { Component } from 'react';\r\n\r\n\r\nclass LoaderMobile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card-spinner-mobile\" id=\"mySpinner\">\r\n                    <div animation=\"border\" role=\"status\" className=\"spinner-border-custom\">\r\n                    <span className=\"sr-only\"></span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLoaderMobile.propTypes = {\r\n\r\n};\r\n\r\nexport default LoaderMobile;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\EditPopGift.js",["2646","2647","2648","2649"],"import React, { Component } from 'react';\r\n// import {Button} from 'react-bootstrap'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport Popover from 'react-bootstrap/Popover'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nclass EditPopGift extends Component\r\n{\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       openModel:false,\r\n       show:false,\r\n       open:false,\r\n       DA_Title:'',\r\n       price:0,\r\n       chargesInfo:'',\r\n       JM_ID: 0,\r\n       showIconCharges:'none',\r\n       title:'',\r\n       msg:'',\r\n    }\r\n    console.log(this.props.gift)\r\n  }\r\n\r\n\r\n  ModalClose=()=>{\r\n    this.setState({\r\n      openModel:false,\r\n      show:false,\r\n      DA_Title:'',\r\n      price:0\r\n    });\r\n\r\n  }\r\n  ModalOpen=(e)=>{\r\n    this.setState({\r\n        openModel:true,\r\n        show:true,\r\n        DA_Title:this.props.gift.DA_Title,     \r\n        price:this.props.gift.DA_Price,\r\n        JM_ID: this.props.gift.JM_ID\r\n    });\r\n  }\r\n\r\n  \r\n  handleChange=(e)=>{\r\n     let val=parseFloat(e.target.value);\r\n     this.setState({[e.target.name]:e.target.value})\r\n     if(e.target.name==='price' && val > 0)\r\n     {\r\n      let twoPer=val * 2/100;\r\n      let TenPer=val * 10/100;\r\n      let razorPay=(twoPer+(twoPer*18/100));\r\n      console.log(twoPer)\r\n      console.log(razorPay)\r\n      console.log(TenPer)\r\n      let charges=val - razorPay - TenPer;\r\n\r\n        let chargesInfo=\"You'll receive INR \"+ charges.toFixed(2) + \" \";\r\n        let showIconCharges='block';\r\n         this.setState({chargesInfo,showIconCharges});\r\n     }\r\n }\r\n SaveItem=e=>\r\n {\r\n\r\n   var JSONdata = {  \r\n    DA_ID:this.props.gift.DA_ID,\r\n     JM_ID:this.props.gift.JM_ID,\r\n     DA_Title:this.state.DA_Title,\r\n     DA_Price:this.state.price,\r\n     DA_Type:'gifts',\r\n     image:this.props.src \r\n   };\r\n   console.log(JSONdata)\r\n         const API_url = process.env.REACT_APP_API_URL + \"admin/updateGifts\";\r\n       fetch(API_url,\r\n         {\r\n           method: 'post',\r\n           headers: { \"Content-Type\": \"application/json\" },\r\n           body: JSON.stringify(JSONdata)\r\n         })\r\n       .then((response) => response.json())\r\n       .then(data => {\r\n         \r\n         console.log(data)\r\n         if(data.status ===1)\r\n         {\r\n            \r\n            this.setState({            \r\n              DA_Title:'',\r\n              price:0\r\n            });\r\n            this.ModalClose();  \r\n            this.Get_User_Details();\r\n            \r\n           \r\n\r\n         }\r\n         else\r\n         {\r\n\r\n         }\r\n       \r\n          \r\n         //this.ModalClose();         \r\n        \r\n       }).catch(error=>{\r\n            document.getElementById(\"msg\").innerText='internal error occured';\r\n       });\r\n }\r\n Get_User_Details = () => {\r\n    var JSONdata = {\r\n      JM_ID: this.state.JM_ID\r\n    };\r\n    const API_url = process.env.REACT_APP_API_URL+ \"admin/userDetails\";\r\n  fetch(API_url,\r\n    {\r\n      method: 'post',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(JSONdata)\r\n    })\r\n  .then((response) => response.json())\r\n  .then(data => {\r\n    if(data.status===1)\r\n    {\r\n      this.setState({\r\n        userDetails:data.userDetails,\r\n        linkMaster:data.linkMaster,\r\n        LM_Title:'',\r\n        LM_Url:'',\r\n        LM_Image:'',\r\n        LM_Who_Will_See:1,\r\n        selectedFile: null,\r\n        title:'Success!!!',\r\n        msg:'Gift is updated',\r\n        socialWidget:data.socialWidget,\r\n        category_master:data.category_master,\r\n        category_links:data.category_links,\r\n        embed_content:data.embed_content,\r\n        productList:data.productList,\r\n        gifts: data.gifts,\r\n      });\r\n      this.props.setStateAfterInsert(this.state);\r\n    }   \r\n      else\r\n        alert('not fetch');\r\n  });\r\n}\r\nhidePopover=()=>{\r\n  document.getElementById(\"popover-basic\").style.display='none';\r\n}\r\n  render(){\r\n    const {uploadPercentage} = this.state;\r\n    const longText = `\r\n    Aliquam eget finibus ante, non facilisis lectus. Sed vitae dignissim est, vel aliquam tellus.\r\n    Praesent non nunc mollis, fermentum neque at, semper arcu.\r\n    Nullam eget est sed sem iaculis gravida eget vitae justo.\r\n    `;\r\n    \r\n    const useStyles = {\r\n      button: {\r\n        margin: '5px',\r\n      },\r\n      customWidth: {\r\n        maxWidth: 500,\r\n        fontSize:'25px',\r\n       \r\n      },\r\n      noMaxWidth: {\r\n        maxWidth: 'none',\r\n      },\r\n    };\r\n    let chargesMessage=\"You receive 90% of the transaction value minus a 2% transaction fee that is collected by our payment provider.\";\r\n    const HtmlTooltip = withStyles((theme) => ({\r\n      arrow: {\r\n        color: theme.palette.common.black,\r\n      },\r\n      tooltip: {\r\n        backgroundColor: '#212529',\r\n        color: 'white',\r\n        maxWidth: '50%',\r\n        fontSize: theme.typography.pxToRem(10),\r\n        // border: '1px solid #dadde9',\r\n      },\r\n    }))(Tooltip);\r\n    \r\n    const iconStyle={\r\n        display:this.state.showIconCharges,\r\n        fontSize: \"23px\",\r\n        color: \"gray\"\r\n    }\r\n    const chargesStyle={\r\n      fontFamily: \"consolas\",\r\n      fontSize: \"13px\",\r\n      textTransform: \"capitalize\",\r\n      marginTop: \"-6%\",\r\n      fontWeight: \"bold\",\r\n      color: \"gray\",\r\n    }\r\n    const popover2 = (\r\n      <Popover id=\"popover-basic\" style={{zIndex:'99999',background: 'black',color:'#fff'}}  >\r\n         <button type=\"button\" className=\"pop-close\"><span aria-hidden=\"true\" onClick={this.hidePopover}>×</span>\r\n          <span className=\"sr-only\">Close</span>\r\n        </button>       \r\n        <Popover.Content style={{background: 'black',color:'#fff'}}>\r\n        {chargesMessage}\r\n          \r\n        </Popover.Content>    \r\n       \r\n      </Popover>\r\n    );\r\n  return (\r\n    <>\r\n      <button onClick={this.ModalOpen}><CreateIcon />     \r\n      </button>\r\n      <Modal\r\n        show={this.state.show}\r\n        onHide={this.ModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <p className=\"addnew-title\">Update Gift Options</p>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"direct-access-pop\">\r\n            <div className=\"row\">\r\n              \r\n              <div className=\"col-md-6 offset-md-3\">\r\n                <div className=\"image\">\r\n                   <img src={this.props.src} />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <input type=\"text\" name=\"DA_Title\" value={this.state.DA_Title} onChange={this.handleChange} className=\"form-control\" placeholder=\"Set Title\" />\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <input type=\"number\" name=\"price\" value={this.state.price} onChange={this.handleChange}  className=\"form-control\" placeholder=\"Set Price\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-12 desktopCharge\">\r\n                  <HtmlTooltip arrow\r\n                      title={\r\n                        <React.Fragment>\r\n                          <Typography color=\"inherit\">Transaction Info</Typography>                \r\n                          <p style={{fontFamily:'monospace',fontSize:'12px'}}>{chargesMessage}</p>\r\n                        </React.Fragment>\r\n                      } placement=\"top-start\"\r\n                    >\r\n                  <Button style={chargesStyle}>{this.state.chargesInfo}<i class=\"fa fa-question-circle\" aria-hidden=\"true\" \r\n                  style={iconStyle}></i></Button>\r\n                </HtmlTooltip>\r\n              </div>\r\n              <div className=\"col-md-12 mobileCharge\" style={{fontFamily: 'consolas', fontSize: '13px',textTransform: 'capitalize'}}>\r\n                      &nbsp;{this.state.chargesInfo}\r\n                     <OverlayTrigger  className=\"mobile\" style={chargesStyle} trigger=\"click\" placement=\"top\" overlay={popover2}>           \r\n                         <i class=\"fa fa-question-circle\" aria-hidden=\"true\"  style={iconStyle}></i>                     \r\n                      </OverlayTrigger >  \r\n                </div>\r\n\r\n            <div className=\"btun-box\">\r\n              <button className=\"btun\" onClick={this.SaveItem}>Updated Item</button>   \r\n              <span id=\"msg\"></span>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n}\r\n\r\nexport default EditPopGift;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\EditUnlockContent.js",["2650","2651","2652","2653","2654","2655","2656","2657","2658","2659","2660","2661","2662","2663","2664","2665","2666"],"import React, { Component } from 'react';\r\n\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\nimport {ProgressBar} from 'react-bootstrap';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Popover from 'react-bootstrap/Popover'\r\n\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n\r\nimport PersonalVideoIcon from '@material-ui/icons/PersonalVideo';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport FileViewer from 'react-file-viewer';\r\nimport { CustomErrorComponent } from 'custom-error';\r\n\r\nclass EditUnlockContent extends Component \r\n{\r\n    fileObj = [];\r\n    fileArray = [];\r\n    albumArray=[];\r\n     Files = [];\r\n     cancelFileUpload=null;\r\n        constructor(props) {\r\n            super(props)\r\n        \r\n            this.state = {\r\n              base_url: process.env.REACT_APP_API_URL,\r\n              root_url: process.env.REACT_APP_ROOT_URL,\r\n            openModel:false,\r\n            show:false,\r\n            open:false,\r\n            directAccess:this.props.data,\r\n            userDetails:this.props.userDetails,\r\n            confirm:false,\r\n            videoFile:null,\r\n            imageFile:null,\r\n            selectedFile:null,\r\n            coverImageorVideo:null,\r\n            title:'',\r\n            description:'',\r\n            price:0,\r\n            handleDisabled:true,\r\n            toolTip:false,\r\n            chargesInfo:'',\r\n            showIconCharges:'none',\r\n            videoData:'NA',\r\n            audioData:'',\r\n            album:[null],\r\n            cover_Image_video:'',\r\n            audioFile:null,\r\n            showAlert:true,\r\n            title:'',\r\n            msg:'',\r\n            logo:'',\r\n            textFileUrl:'',\r\n            textFile:[],\r\n            uploadPercentage: 0,\r\n            avatar: '',\r\n\r\n            disabledBtn:false,\r\n            BtnName:'Save',\r\n            pdfFileUrl:'',\r\n            pdfFile:null,\r\n\r\n            chooseType_1:false,\r\n            chooseType_2:false,\r\n            chooseType_3:false,\r\n            chooseType_4:false,\r\n            errMsg:''\r\n\r\n            }\r\n            console.log(this.state.userDetails)\r\n            this.imageonMultiChange = this.imageonMultiChange.bind(this)\r\n        \r\n        }\r\n        ModalClose=()=>\r\n        {    \r\n\r\n            this.setState({openModel:false,show:false});\r\n            this.setState({ \r\n              audioFile: null ,\r\n              audioData: '',\r\n              textFile: null ,\r\n              textFileUrl: '',\r\n              videoData:'',\r\n              videoFile:null,\r\n            }); \r\n            this.albumArray=[];\r\n\r\n        }\r\n        ModalOpen=()=>{\r\n                this.setState({openModel:true,show:true,chargesInfo:'',showIconCharges:'none'});\r\n\r\n                console.log(this.props.data)\r\n                this.setState({ \r\n                  title:this.props.data.DA_Title,\r\n                  description:this.props.data.DA_Description,\r\n                  JM_ID:this.props.data.JM_ID,\r\n                  DA_Type:this.props.data.DA_Type,\r\n                  DA_ID:this.props.data.DA_ID,\r\n                  DA_Collection:'',\r\n                  price: this.props.data.DA_Price,                            \r\n              });\r\n\r\n             var files = JSON.parse(this.props.data.DA_Collection); \r\n            \r\n            if(this.props.data.DA_Type===\"album\")    \r\n              {  \r\n                for (var i = 0, numFiles = files.length; i < numFiles; i++) \r\n                { \r\n                var file =files[i];\r\n                this.albumArray.push(file);           \r\n                \r\n                }\r\n                this.setState({ \r\n                  chooseType_1:true,\r\n                  chooseType_2:false,\r\n                  chooseType_3:false,\r\n                  chooseType_4:false,     \r\n                  radioStyle1:{fontWeight:'600',color:'#ff746e'},\r\n                  radioStyle2:'',\r\n                  radioStyle3:'',\r\n                  radioStyle4:'',              \r\n                });\r\n            }\r\n            if(this.props.data.DA_Type===\"image\")    \r\n            {  \r\n              this.albumArray=[];\r\n              for (var i = 0, numFiles = files.length; i < numFiles; i++) \r\n              { \r\n              var file =files[i];\r\n\r\n              this.albumArray.push(file);           \r\n              \r\n              }\r\n              this.setState({ \r\n                  chooseType_1:true,\r\n                  chooseType_2:false,\r\n                  chooseType_3:false,\r\n                  chooseType_4:false,     \r\n                  radioStyle1:{fontWeight:'600',color:'#ff746e'},\r\n                  radioStyle2:{},\r\n                  radioStyle3:{},\r\n                  radioStyle4:{},\r\n                      \r\n              });\r\n          }\r\n            if(this.props.data.DA_Type===\"video\")    \r\n            {   \r\n                \r\n                if(files!=null && files.length > 0)                \r\n                    this.setState({ \r\n                        videoData:files[0],\r\n                        chooseType_1:false,\r\n                        chooseType_2:true,\r\n                        chooseType_3:false,\r\n                        chooseType_4:false,  \r\n                        radioStyle1:{},\r\n                        radioStyle2:{fontWeight:'600',color:'#ff746e'},\r\n                        radioStyle3:{},\r\n                        radioStyle4:{},                    \r\n                    });\r\n            }\r\n            if(this.props.data.DA_Type===\"audio\")    \r\n                   { \r\n                     \r\n                    this.setState({ \r\n                        chooseType_1:false,\r\n                        chooseType_2:false,\r\n                        chooseType_3:true,\r\n                        chooseType_4:false, \r\n                        audioData:files[0],  \r\n                        radioStyle1:{},\r\n                        radioStyle2:{},\r\n                        radioStyle3:{fontWeight:'600',color:'#ff746e'},\r\n                        radioStyle4:{},  \r\n                    });\r\n                  \r\n                  }\r\n               if(this.props.data.DA_Type===\"txt\")    \r\n                  {  \r\n          \r\n\r\n                    this.setState({ \r\n                        chooseType_1:false,\r\n                        chooseType_2:false,\r\n                        chooseType_3:false,\r\n                        chooseType_4:true,  \r\n                        textFileUrl:files[0],  \r\n                        type:'docx',\r\n                        radioStyle1:{},\r\n                        radioStyle2:{},\r\n                        radioStyle3:{},\r\n                        radioStyle4:{fontWeight:'600',color:'#ff746e'},                      \r\n                    });\r\n                         \r\n                  }\r\n                  if(this.props.data.DA_Type===\"pdf\")    \r\n                  {  \r\n            \r\n                    this.setState({ \r\n                        chooseType_1:false,\r\n                        chooseType_2:false,\r\n                        chooseType_3:false,\r\n                        chooseType_4:true,  \r\n                        pdfFileUrl:files[0],  \r\n                        type:'pdf',\r\n                        radioStyle1:{},\r\n                        radioStyle2:{},\r\n                        radioStyle3:{},\r\n                        radioStyle4:{fontWeight:'600',color:'#ff746e'},                      \r\n                    });                   \r\n        \r\n                  }\r\n            \r\n\r\n        }\r\n        openCollapse = () => {\r\n            !this.state.open ?\r\n            this.setState({ open: true })\r\n            :\r\n            this.setState({ open: false })\r\n            \r\n        }\r\n        isConfirm = () => {\r\n            confirmAlert({\r\n            title: 'Confirm !!!',\r\n            message: 'Are you sure to Exit',\r\n            buttons: [\r\n                {\r\n                label: 'Yes',\r\n                onClick: () => this.setState({confirm:true})\r\n                },\r\n                {\r\n                label: 'No',\r\n                onClick: () => this.setState({confirm:false})\r\n                }\r\n            ]\r\n            });\r\n        };\r\n        popOver=(data)=>{\r\n\r\n        }\r\n        videoonChange=(e)=>{\r\n           this.setState({ \r\n              audioFile: null ,\r\n              audioData: '',\r\n              textFile: null ,\r\n              textFileUrl: '',\r\n            }); \r\n            this.albumArray=[];\r\n\r\n            const file = e.target.files[0];\r\n            if(typeof file!=='undefined')\r\n            {\r\n              var fileUrl = window.URL.createObjectURL(file);\r\n              this.setState({ imageFile: e.target.files[0] }); \r\n              this.setState({\r\n              videoFile: file,\r\n              videoData:fileUrl\r\n              });\r\n              \r\n           \r\n            }\r\n        }\r\n\r\n      \r\n\r\n        audioChange=(e)=>\r\n        {\r\n\r\n          this.setState({\r\n            videoFile: null,\r\n            videoData:'NA'\r\n            });\r\n            const file = e.target.files[0];\r\n            if(typeof file!=='undefined')\r\n            {\r\n              this.setState({ audioFile: e.target.files[0] }); \r\n              this.getBase64(file).then(\r\n                data =>{\r\n                  console.log(data);\r\n                  this.setState({ audioData: data }); \r\n                } \r\n              );\r\n            }\r\n            \r\n        }\r\n        onClickResetAudioFile (e) {\r\n            this.setState({audioData:''}); // celears state\r\n            \r\n           }\r\n\r\n           //12-mar-2021\r\n           getBase64=(file)=> {\r\n            return new Promise((resolve, reject) => {\r\n              const reader = new FileReader();\r\n              reader.readAsDataURL(file);\r\n              reader.onload = () => resolve(reader.result);\r\n              reader.onerror = error => reject(error);\r\n            });\r\n          }\r\n\r\n        imageonChange=(e)=>{\r\n            const file = e.target.files[0];\r\n            this.setState({ coverImageorVideo: e.target.files[0] }); \r\n            this.setState({\r\n            cover_Image_video: URL.createObjectURL(file)\r\n            });\r\n           console.log(this.state.cover_Image_video)\r\n        }\r\n        nextClick=(event)=>{\r\n            event.preventDefault();\r\n            let isValid=this.validation();\r\n            if(isValid)\r\n            {\r\n                //alert(\"ok\");\r\n            \r\n                const formData = new FormData(); \r\n\r\n                let Api_url=this.state.base_url+'admin/updateProduct';\r\n               // let Api_url='http://localhost:9000/admin/addProduct';\r\n                if(this.state.videoFile !==null && this.state.videoData!=='NA' && this.state.videoData!=='')\r\n                  {  \r\n                      formData.append('sampleFile', this.state.videoFile);\r\n                      formData.append('DA_Type', 'video'); \r\n                      this.albumArray=[]; \r\n                      this.setState({\r\n                        audioFile:null,album:null,textFile:null\r\n                      });\r\n                  }\r\n             else  if(this.state.audioFile !==null && this.state.audioData!=='')\r\n                 {   \r\n                    formData.append('sampleFile', this.state.audioFile)\r\n                    formData.append('DA_Type', 'audio'); \r\n                    this.albumArray=[];                 \r\n                    this.setState({\r\n                     album:null,textFile:null,videoFile:[]\r\n                    });\r\n                 }\r\n              else  if(this.state.album!==null && this.albumArray!==null && this.albumArray.length > 0)\r\n                {\r\n                        // formData.append('DA_Type', 'album');                \r\n                        // const ins = this.Files.length;\r\n                        // console.log(this.Files)\r\n                        // const arr=[];\r\n                        //    for (var x = 0; x < ins; x++)\r\n                        //   {                        \r\n                 \r\n                        //        formData.append('img_multiple',this.Files[x]);\r\n                                \r\n                        //    }\r\n\r\n                           formData.append('DA_Type', 'image'); \r\n                           formData.append('sampleFile', this.state.coverImageorVideo) \r\n             \r\n                \r\n                }\r\n               else if(this.state.pdfFile !==null && this.state.pdfFileUrl!=='')\r\n                 {   \r\n                    formData.append('sampleFile', this.state.pdfFile)\r\n                    formData.append('DA_Type', 'pdf'); \r\n                    this.albumArray=[];                 \r\n                    this.setState({\r\n                     album:null,textFile:null,videoFile:null,audioFile:null,\r\n                    });\r\n                 }\r\n               else  if(this.state.textFile !==null && this.state.textFileUrl!=='')\r\n                 {   \r\n                    formData.append('sampleFile', this.state.textFile)\r\n                    formData.append('DA_Type', 'txt'); \r\n                    this.albumArray=[];                 \r\n                    this.setState({\r\n                     album:null,videoFile:null,audioFile:null,pdfFile:null\r\n                    });\r\n                 }\r\n                 else   if(this.state.pdfFile !==null && this.state.pdfFileUrl!=='')\r\n                 {   \r\n                    formData.append('sampleFile', this.state.pdfFile)\r\n                    formData.append('DA_Type', 'pdf'); \r\n                    this.albumArray=[];                 \r\n                    this.setState({\r\n                     album:null,textFile:null,videoFile:null,audioFile:null,\r\n                    });\r\n                 }\r\n               \r\n                \r\n                formData.append('DA_DA_ID', 2) // for premium featured id\r\n                formData.append('JM_ID', this.props.data.JM_ID)       \r\n                formData.append('DA_ID', this.props.data.DA_ID)     \r\n                formData.append('DA_Title', this.state.title)  \r\n                formData.append('DA_Description', this.state.description)  \r\n                formData.append('DA_Cover', \"\") \r\n                formData.append('DA_Price', this.state.price)      \r\n                formData.append('JM_User_Profile_Url_plus_JM_ID',this.props.JM_User_Profile_Url_plus_JM_ID)\r\n                this.setState({BtnName:'Uploading..',disabledBtn:true});\r\n                fetch(Api_url, {\r\n                  method: 'POST',         \r\n                  body: formData\r\n                  })\r\n                  .then(response => response.json())\r\n                  .then(data => \r\n                  {                   \r\n                      console.log(data);   \r\n                     if(data.status > 0)\r\n                     {\r\n                          this.setState({\r\n                                videoFile:null,\r\n                                videoData:'NA',\r\n                                audioFile:null,\r\n                                audioData:''\r\n                          });\r\n                          this.fileArray=[];     \r\n                          this.setState({disabledBtn:false,BtnName:'Save'});\r\n                          this.ModalClose();                     \r\n                          this.Get_User_Details();   \r\n                         \r\n                     }\r\n                      else\r\n                      {\r\n                        var errMsg=\"Internal error occered, Try later\";\r\n                        this.setState({disabledBtn:false,BtnName:'Save',errMsg}); \r\n                      }                     \r\n                  })\r\n                  .catch(error => \r\n                  {\r\n\r\n                   // this.props.showToast('error','internal error occered'); \r\n                     var errMsg=\"Internal error occered, Try later\";\r\n                    this.setState({disabledBtn:false,BtnName:'Save',errMsg});                  \r\n                    \r\n                  })\r\n\r\n              //   const CancelToken = axios.CancelToken;\r\n              //   const source = CancelToken.source();\r\n              //   const options = {\r\n              //     onUploadProgress: (progressEvent) => \r\n              //     {\r\n              //       const {loaded, total} = progressEvent;\r\n              //       let percent = Math.floor( (loaded * 100) / total )\r\n              //       console.log( `${loaded}kb of ${total}kb | ${percent}% wait...` );\r\n        \r\n              //       if( percent < 100 )\r\n              //       {\r\n              //         this.setState({ uploadPercentage: percent })\r\n              //       }\r\n              //     },\r\n              //     cancelToken: source.token,\r\n                  \r\n              //   }\r\n           \r\n              //  this.setState({BtnName:'Uploading..',disabledBtn:true});\r\n              //   axios.post(Api_url, formData, options).then(res =>\r\n              //   { \r\n\r\n              //     if(res.data.status > 0)\r\n              //     {\r\n              //        this.setState({videoFile:null,videoData:'NA',audioFile:null,audioData:''});\r\n              //        this.fileArray=[];     \r\n                    \r\n              //        this.setState({ avatar: res.data.url, uploadPercentage: 100 }, ()=>{\r\n              //         setTimeout(() => {\r\n              //           this.setState({ uploadPercentage: 0 })\r\n              //         }, 1000);\r\n              //       })            \r\n              //         this.ModalClose();         \r\n              //        this.props.showToast('success','Premium feature is added to profile');                     \r\n              //        this.setState({disabledBtn:false,BtnName:'Save'});\r\n              //     }\r\n              //     else\r\n              //     {\r\n                    \r\n              //       this.props.showToast('error','internal error occered'); \r\n              //       this.setState({disabledBtn:false,BtnName:'Save'});\r\n              //     }     \r\n              //       console.log(res.data)\r\n              //   })\r\n              //   .catch(err => {\r\n              //     console.log(err);\r\n  \r\n              //     if (isCancel(err)) \r\n              //     {\r\n              //         //alert(err.message);\r\n              //         this.props.showToast('canceled',err.message); \r\n              //         this.setState({disabledBtn:false,BtnName:'Save'});\r\n              //     }\r\n              //     this.setState({ uploadPercentage: 0 })\r\n              // });\r\n\r\n              // this.setState({source});\r\n\r\n\r\n            }\r\n            else\r\n            {\r\n              var errMsg=\"fill all the neceessary fields and upload a file\";\r\n              this.setState({\r\n                errMsg\r\n              })           \r\n            }\r\n           \r\n        }\r\n\r\n        Get_User_Details = () => \r\n        {\r\n                var JSONdata = {\r\n                  JM_ID: this.props.data.JM_ID\r\n                };\r\n                const API_url = this.state.base_url + \"admin/userDetails\";\r\n              fetch(API_url,\r\n                {\r\n                  method: 'post',\r\n                  headers: { \"Content-Type\": \"application/json\" },\r\n                  body: JSON.stringify(JSONdata)\r\n                })\r\n              .then((response) => response.json())\r\n              .then(data => {\r\n                if(data.status===1)\r\n                {\r\n                  this.setState({\r\n                    userDetails:data.userDetails,\r\n                    linkMaster:data.linkMaster,\r\n                    directAccess:data.directAccess,\r\n                    productList:data.productList,\r\n                    socialWidget:data.socialWidget,\r\n                    category_master:data.category_master,\r\n                    category_links:data.category_links,\r\n                    embed_content:data.embed_content,\r\n                    title:'Success!!!',\r\n                    msg:'Profile is updated',\r\n                    gifts: data.gifts,\r\n                  });\r\n                  this.props.setStateAfterInsert(this.state);\r\n                }   \r\n                  else\r\n                    alert('not fetch');\r\n              });\r\n        }       \r\n        validation =()=>\r\n        {            \r\n              \r\n          if(this.state.description.length > 0 && parseInt(this.state.price) > 0 && (this.state.audioFile!==null || this.state.videoFile!==null||  (this.albumArray!==null &&  this.albumArray.length > 0) || this.state.textFile!==null  || this.state.pdfFile!==null ))\r\n              return true;\r\n          else\r\n              return false;        \r\n         \r\n        }\r\n        handleChange=(e)=>{\r\n            let val=parseFloat(e.target.value);\r\n        this.setState({[e.target.name]:e.target.value})\r\n        let chargesInfo=\"\";\r\n        if(e.target.name==='price' && val > 0)\r\n            {\r\n              let twoPer=val * 2/100;\r\n              let TenPer=val * 10/100;\r\n              let razorPay=(twoPer+(twoPer*18/100));\r\n              console.log(twoPer)\r\n              console.log(razorPay)\r\n              console.log(TenPer)\r\n              let charges=val - razorPay - TenPer;\r\n\r\n\r\n\r\n              let chargesInfo=\"You'll receive INR \"+ charges.toFixed(2) + \" \";\r\n              let showIconCharges='block';         \r\n              this.setState({chargesInfo,showIconCharges});\r\n            }\r\n            // else\r\n            // {      \r\n            //     let chargesInfo=\"\";\r\n            //     let showIconCharges='none';\r\n            //     this.setState({chargesInfo,showIconCharges});\r\n            // }\r\n            \r\n        }\r\n        hidePopover=()=>{\r\n            document.getElementById(\"popover-basic\").style.display='none';\r\n        }\r\n        handleClose=()=>{\r\n            this.setState({toolTip:true});\r\n        }\r\n        handleOpen=()=>{\r\n            this.setState({toolTip:false});\r\n        }\r\n        \r\n\r\n\r\n        imageonMultiChange(e) {\r\n          var numFiles = e.target.files.length; \r\n          for (var i = 0, numFiles = e.target.files.length; i < numFiles; i++) \r\n          { \r\n            var file = e.target.files[i];\r\n            this.albumArray.push(URL.createObjectURL(file));              \r\n            this.Files.push(file);\r\n          }\r\n      \r\n          this.setState({ album: this.albumArray })\r\n\r\n          const fileMain = e.target.files[0];\r\n          this.setState({ coverImageorVideo: e.target.files[0] }); \r\n          this.setState({\r\n          cover_Image_video: URL.createObjectURL(fileMain)\r\n          });\r\n         console.log(this.state.cover_Image_video)\r\n      \r\n      }\r\n\r\n        hideToast=()=>{\r\n          this.setState({showAlert:false})\r\n        }\r\n        showToast =() =>{\r\n          this.setState({showAlert:true})\r\n        }\r\n\r\n        openBrowsFile=id=>e=>{\r\n            document.getElementById(id).click();\r\n         \r\n\r\n           this.setState({ \r\n            audioFile: null ,\r\n            audioData: '',\r\n            textFile: null ,\r\n            textFileUrl: '',\r\n            albumArray:null,\r\n            videoData:'',\r\n            videoFile:null,\r\n          }); \r\n        }\r\n        cancelAlbum=id=>e=>\r\n        {\r\n            console.log(this.albumArray) \r\n            console.log(id)\r\n            const i = id\r\n            if(this.albumArray!==null)\r\n            {\r\n                const filteredItems = this.albumArray.slice(0, i).concat(this.albumArray.slice(i + 1, this.albumArray.length))\r\n                this.albumArray=filteredItems;\r\n                this.setState({ album: null })\r\n                const ins = document.getElementById('upImage').files.length;\r\n                this.Files.splice(id, 1);\r\n            }\r\n            console.log(this.Files);\r\n            this.setState({\r\n              cover_Image_video: '',\r\n              coverImageorVideo:null\r\n              });\r\n        }\r\n\r\n        textFileChange=e=>{\r\n\r\n          if (!e || !e.target || !e.target.files || e.target.files.length === 0) {\r\n            return;\r\n          }\r\n        \r\n            const name = e.target.files[0].name;\r\n            const lastDot = name.lastIndexOf('.');        \r\n            const fileName = name.substring(0, lastDot);\r\n            const ext = name.substring(lastDot + 1);\r\n\r\n            const file = e.target.files[0];\r\n            const type=  e.currentTarget.dataset.filetype; \r\n            console.log( e.target.files[0].type)   \r\n          if(ext==='docx')\r\n          {\r\n            this.setState({ textFile: e.target.files[0] }); \r\n            this.setState({\r\n                textFileUrl: URL.createObjectURL(file),\r\n                type:ext\r\n            });\r\n\r\n          }\r\n         else if(ext==='pdf')\r\n          {\r\n            this.setState({ pdfFile: e.target.files[0] }); \r\n            this.setState({\r\n                pdfFileUrl: URL.createObjectURL(file),\r\n                type:ext\r\n            });\r\n            console.log(URL.createObjectURL(file))\r\n          }   \r\n           \r\n   \r\n        }\r\n        onError(e) {\r\n           console.log('error in file-viewer');\r\n          }\r\n          onInputClick = (event) => {\r\n            if(event.target.name==='upImage' || event.target.name==='upVideo' || event.target.name==='upAudio' || event.target.name==='upText')\r\n                event.target.value = ''\r\n\r\n\r\n                this.albumArray=[];\r\n        }\r\n         \r\n  \r\n    render() {\r\n      const {uploadPercentage} = this.state;\r\n        const longText = `\r\n        Aliquam eget finibus ante, non facilisis lectus. Sed vitae dignissim est, vel aliquam tellus.\r\n        Praesent non nunc mollis, fermentum neque at, semper arcu.\r\n        Nullam eget est sed sem iaculis gravida eget vitae justo.\r\n        `;\r\n        \r\n        const useStyles = {\r\n          button: {\r\n            margin: '5px',\r\n          },\r\n          customWidth: {\r\n            maxWidth: 500,\r\n            fontSize:'25px',\r\n           \r\n          },\r\n          noMaxWidth: {\r\n            maxWidth: 'none',\r\n          },\r\n        };\r\n        let chargesMessage=\"You receive 90% of the transaction value minus a 2% transaction fee that is collected by our payment provider.\";\r\n        const HtmlTooltip = withStyles((theme) => ({\r\n          arrow: {\r\n            color: theme.palette.common.black,\r\n          },\r\n          tooltip: {\r\n            backgroundColor: '#212529',\r\n            color: 'white',\r\n            maxWidth: '50%',\r\n            fontSize: theme.typography.pxToRem(10),\r\n            // border: '1px solid #dadde9',\r\n          },\r\n        }))(Tooltip);\r\n        \r\n        const iconStyle={\r\n            display:this.state.showIconCharges,\r\n            fontSize: \"23px\",\r\n            color: \"gray\"\r\n        }\r\n        const chargesStyle={\r\n          fontFamily: \"consolas\",\r\n          fontSize: \"13px\",\r\n          textTransform: \"capitalize\",\r\n          marginTop: \"-6%\",\r\n          fontWeight: \"bold\",\r\n          color: \"gray\",\r\n        }\r\n        const radioStyle={\r\n          color: \"#ff626f\",\r\n          fontWeight: \"600\",        \r\n        }\r\n\r\n        let typeOfProduct;\r\n        \r\n          typeOfProduct= <> <div className=\"col-md-8\">\r\n                              <label for=\"upImage\" style={{    marginTop: \"10px\"}}>\r\n                                Upload a Video or Audio             \r\n                              </label>\r\n                          </div>  \r\n                          <div className=\"col-md-10 offset-md-1\">           \r\n                            {\r\n                            this.state.videoData!=='NA' && this.state.videoData!=='' ?              \r\n                                    <video className=\"img-thumbnail-custom\" width=\"100%\" controls src={this.state.videoData} type=\"video/mp4\" >                                   \r\n                                    </video>\r\n                                    : null\r\n                            }\r\n                            {\r\n                            this.state.audioData!=='' ?     \r\n                                <audio autoplay controls src={this.state.audioData}>\r\n                                  The “audio tag is not supported by your browser.\r\n                                </audio>\r\n                                : \r\n                                null\r\n                            }\r\n                                  \r\n                           </div>  \r\n                          </>\r\n      \r\n\r\n    let type='video';\r\n    const popover = (\r\n      <Popover id=\"popover-basic\">\r\n         <button type=\"button\" className=\"pop-close\"><span aria-hidden=\"true\" onClick={this.hidePopover}>×</span>\r\n          <span className=\"sr-only\">Close</span>\r\n        </button>\r\n        <Popover.Title as=\"h6\"><h6>Select  video or Audio</h6>\r\n       \r\n        </Popover.Title>\r\n        <Popover.Content>\r\n          {           \r\n            type==='video' ?   \r\n            <>         \r\n             <label htmlFor=\"video\" style={{cursor:'pointer'}}><h6>Video</h6></label> <PersonalVideoIcon/>  <br/>\r\n             <label htmlFor=\"audio\" style={{cursor:'pointer'}}><h6>Audio</h6></label> <AudiotrackIcon/>  \r\n             </>            \r\n            : null\r\n          \r\n          }\r\n          \r\n        </Popover.Content>    \r\n       \r\n      </Popover>\r\n    );\r\n    const popover2 = (\r\n      <Popover id=\"popover-basic\" style={{zIndex:'99999',background: 'black',color:'#fff'}}  >\r\n         <button type=\"button\" className=\"pop-close\"><span aria-hidden=\"true\" onClick={this.hidePopover}>×</span>\r\n          <span className=\"sr-only\">Close</span>\r\n        </button>       \r\n        <Popover.Content style={{background: 'black',color:'#fff'}}>\r\n        {chargesMessage}\r\n          \r\n        </Popover.Content>    \r\n       \r\n      </Popover>\r\n    );\r\n        return (\r\n            <>\r\n                                          \r\n                            {/* <button class=\"btun\"  onClick={this.ModalOpen}><AddCircleOutlineIcon/> Add This</button> */}\r\n                            <button onClick={this.ModalOpen}><CreateIcon />     \r\n      </button>\r\n                          \r\n                 \r\n       <Modal\r\n        show={this.state.show}\r\n        onHide={this.ModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}         \r\n        size=\"lg\"\r\n        contentClassName=\"modal-radius\"\r\n        centered\r\n\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <p className=\"addnew-title\">Unlock content</p>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"direct-access-pop\" id=\"myform\">\r\n            <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n                <label>Choose Your File Type</label>\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <div className=\"choose-part\">\r\n                  <input type=\"radio\" id=\"chooseType_1\"  name=\"chooseType\" onClick={this.openBrowsFile('upImage')}/><label for=\"chooseType_1\"   style={this.state.radioStyle1}>Images</label>\r\n                </div>\r\n                <div className=\"choose-part\">\r\n                  <input type=\"radio\" id=\"chooseType_2\"  name=\"chooseType\" onClick={this.openBrowsFile('upVideo')}/><label for=\"chooseType_2\"  style={this.state.radioStyle2}>Video</label>\r\n                </div>\r\n                <div className=\"choose-part\">\r\n                  <input type=\"radio\" id=\"chooseType_3\"  name=\"chooseType\" onClick={this.openBrowsFile('upAudio')}/><label for=\"chooseType_3\"  style={this.state.radioStyle3}>Audio</label>\r\n                </div>\r\n                <div className=\"choose-part\">\r\n                  <input type=\"radio\" id=\"chooseType_4\"  name=\"chooseType\" onClick={this.openBrowsFile('upText')}/><label for=\"chooseType_4\"  style={this.state.radioStyle4}>Text or PDF</label>\r\n                </div>\r\n               \r\n                \r\n              </div>\r\n              <div className=\"col-md-12\" >                    \r\n                      <input type=\"file\" id=\"upImage\" name=\"upImage\" style={{ display: \"none\" }} accept=\"image/png, image/jpeg,image/gif\" onClick={this.onInputClick} onChange={this.imageonMultiChange}/>       \r\n                      <input type=\"file\" id=\"upVideo\" name=\"upVideo\" style={{ display: \"none\" }} accept=\"video/mp4\" onClick={this.onInputClick} onChange={this.videoonChange}/>       \r\n                      <input type=\"file\" id=\"upAudio\" name=\"upAudio\" style={{ display: \"none\" }} accept=\"audio/mp3\" onClick={this.onInputClick} onChange={this.audioChange} />\r\n                      <input type=\"file\" id=\"upText\" name=\"upText\"  data-filetype=\"docx\" style={{ display: \"none\" }}  onClick={this.onInputClick} accept=\".docx,.pdf\" onChange={this.textFileChange}/>       \r\n              </div>\r\n              \r\n              <div className=\"col-md-12\">\r\n                <div className=\"row\">\r\n                            {\r\n                              this.albumArray!==null &&  this.albumArray.length > 0 ?\r\n                                (this.albumArray || []).map((url,i) => (\r\n                                  <>                                  \r\n                                    <div className=\"col-md-3\">\r\n                                          <div className=\"img-grid\">                                                                             \r\n                                          <img src={url.includes('blob') ? url : process.env.REACT_APP_UPLOAD_URL+\"Profile/\"+this.props.JM_User_Profile_Url_plus_JM_ID+\"/\"+url} />\r\n                                          <div className=\"cls\"  onClick={this.cancelAlbum(i)}>x</div>\r\n                                          </div>\r\n                                      </div>\r\n                                    </>\r\n                                ))\r\n                                :\r\n                                null\r\n                            }\r\n                             <div className=\"col-md-8 offset-md-2\">\r\n                            {\r\n                               \r\n                                this.state.videoData!=='NA' && this.state.videoData!=='' ?              \r\n                                        <video className=\"img-thumbnail-custom\" width=\"100%\" controls \r\n                                        src={this.state.videoData.includes('blob') ? this.state.videoData : process.env.REACT_APP_UPLOAD_URL+\"Profile/\"+this.props.JM_User_Profile_Url_plus_JM_ID+\"/\"+this.state.videoData} type=\"video/mp4\" >                                   \r\n                                        </video>\r\n                                        : null\r\n                               \r\n                            }  \r\n                            {\r\n                            this.state.audioData!=='' ?     \r\n                                <audio autoplay controls src={this.state.audioData.includes('blob') ? this.state.audioData : process.env.REACT_APP_UPLOAD_URL+\"Profile/\"+this.props.JM_User_Profile_Url_plus_JM_ID+\"/\"+ this.state.audioData}>\r\n                                  The “audio tag is not supported by your browser.\r\n                                </audio>\r\n                                : \r\n                                null\r\n                            }\r\n                             </div>\r\n                             <div className=\"col-md-12\">\r\n                                {\r\n                                      this.state.textFileUrl!=='' && this.state.textFileUrl.includes('blob')===false?                           \r\n                                      \r\n                                          <a  target=\"_blank\" href={process.env.REACT_APP_UPLOAD_URL+\"Profile/\"+this.props.JM_User_Profile_Url_plus_JM_ID+\"/\"+ this.state.textFileUrl}>\r\n                                              View file\r\n                                          </a>\r\n                                        : this.state.textFileUrl!=='' && this.state.textFileUrl.includes('blob') ? \r\n                                          <FileViewer\r\n                                            fileType={this.state.type}\r\n                                            filePath={this.state.textFileUrl}\r\n                                            errorComponent={CustomErrorComponent}\r\n                                            onError={this.onError}/>    \r\n                                        :\r\n                                           null \r\n                                    \r\n                                  }\r\n\r\n                                {\r\n                                  this.state.pdfFileUrl!=='' && this.state.pdfFileUrl.includes('blob')===false?                                \r\n                                      \r\n                                        <a  target=\"_blank\" href={process.env.REACT_APP_UPLOAD_URL+\"Profile/\"+this.props.JM_User_Profile_Url_plus_JM_ID+\"/\"+ this.state.pdfFileUrl}>\r\n                                            View PDF file\r\n                                        </a>\r\n                                      : this.state.pdfFileUrl!=='' && this.state.pdfFileUrl.includes('blob') ? \r\n                                        <FileViewer\r\n                                        fileType={this.state.type}\r\n                                        filePath={this.state.pdfFileUrl}\r\n                                        errorComponent={CustomErrorComponent}\r\n                                        onError={this.onError}/>    \r\n                                        :\r\n                                        null \r\n                                    \r\n                                  }\r\n                                  \r\n                            </div>\r\n                          \r\n                        \r\n                </div>\r\n              </div>\r\n              <form>                          \r\n                <input type=\"file\" id=\"video\" accept=\".mp4\" style={{display:'none'}} onChange={this.videoonChange}/>      \r\n             </form>   \r\n             <form>                          \r\n                <input type=\"file\" id=\"audio\" accept=\"audio/*\" style={{display:'none'}} onChange={this.audioChange}/>      \r\n             </form>\r\n              <div className=\"col-md-12\">\r\n                <input type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleChange} className=\"form-control\" placeholder=\"Title\" />       \r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <textarea className=\"form-control area\" name=\"description\" value={this.state.description}  onChange={this.handleChange} \r\n                placeholder=\"enter description\"/>\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <input type=\"number\" name=\"price\" value={this.state.price} onChange={this.handleChange} className=\"form-control\" placeholder=\" Price\" />       \r\n              </div>\r\n              <div className=\"col-md-12 desktopCharge\">\r\n                  <HtmlTooltip arrow\r\n                      title={\r\n                        <React.Fragment>\r\n                          <Typography color=\"inherit\">Transaction Info</Typography>                \r\n                          <p style={{fontFamily:'monospace',fontSize:'12px'}}>{chargesMessage}</p>\r\n                        </React.Fragment>\r\n                      } placement=\"top-start\"\r\n                    >\r\n                  <Button style={chargesStyle}>{this.state.chargesInfo}<i class=\"fa fa-question-circle\" aria-hidden=\"true\" \r\n                  style={iconStyle}></i></Button>\r\n                </HtmlTooltip>\r\n              </div>\r\n              <div className=\"col-md-12 mobileCharge\" style={{fontFamily: 'consolas', fontSize: '13px',textTransform: 'capitalize'}}>\r\n                      &nbsp;{this.state.chargesInfo}\r\n                     <OverlayTrigger  className=\"mobile\" style={chargesStyle} trigger=\"click\" placement=\"top\" overlay={popover2}>           \r\n                         <i class=\"fa fa-question-circle\" aria-hidden=\"true\"  style={iconStyle}></i>                     \r\n                      </OverlayTrigger >  \r\n                </div>    \r\n\r\n              { uploadPercentage > 0 && \r\n                  <>\r\n                        <ProgressBar animated  variant=\"success\" style={{width:'80%',margin: '15px'}} now={uploadPercentage} active label={`${uploadPercentage}%`} /> \r\n                                   \r\n                                   <span\r\n                                        style={{cursor:'pointer'}}\r\n                                        onClick={this.cancelUpload}\r\n                                    >\r\n                                        <i className=\"fa fa-close\" style={{fontSize:'22px',marginTop: '56%'}}></i>\r\n                                    </span>\r\n                   </>\r\n              }\r\n            </div>\r\n            <div className=\"btun-box\">\r\n              <button className=\"btun\" id=\"btn_save\" disabled={this.state.disabledBtn} onClick={this.nextClick}> {this.state.BtnName} <NavigateNextIcon/></button>\r\n          \r\n            </div>\r\n            <p style={{fontSize: '12px',color: '#ff746e',padding:'5px'}}>{this.state.errMsg}</p>\r\n          </div>\r\n        </Modal.Body>\r\n\r\n      </Modal>\r\n\r\n    \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nEditUnlockContent.propTypes = {\r\n\r\n};\r\n\r\nexport default EditUnlockContent;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\EditEmbedContent.js",["2667","2668","2669"],"import React, { Component,  } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\nclass EditEmbedContent extends Component\r\n{\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       openModel:false,\r\n       base_url: process.env.REACT_APP_API_URL,\r\n       root_url: process.env.REACT_APP_ROOT_URL,\r\n       show:false,\r\n       open:false,\r\n       JM_ID:this.props.data.JM_ID,\r\n       LM_Title:this.props.data.LM_Title,\r\n       LM_Url:this.props.data.LM_Url,\r\n       LM_Image:this.props.data.LM_Image,\r\n       LM_Who_Will_See:this.props.data.LM_Who_Will_See,\r\n       selectedFile: null,\r\n       linkMaster:[],\r\n      userDetails:[],\r\n      fromEdit:true\r\n    }\r\n    //console.log(this.props.data.LM_Who_Will_See);\r\n\r\n  }\r\n  ModalClose=()=>{\r\n    this.setState({openModel:false,show:false});\r\n  }\r\n  ModalOpen=()=>{\r\n    this.setState({openModel:true,show:true});\r\n\r\n   // //console.log(this.props.data);\r\n      this.setState({ \r\n        JM_ID:this.props.data.JM_ID,\r\n        EC_ID:this.props.data.EC_ID,\r\n        LM_Title:this.props.data.LM_Title,\r\n        LM_Url:this.props.data.LM_Url,\r\n        LM_Image:this.props.data.LM_Image,\r\n        LM_Who_Will_See:this.props.data.LM_Who_Will_See,\r\n        selectedFile: null,\r\n        linkMaster:[],\r\n        userDetails:[],\r\n        fromEdit:true\r\n    });\r\n  }\r\n  openCollapse = () => {\r\n    !this.state.open ?\r\n      this.setState({ open: true })\r\n      :\r\n      this.setState({ open: false })\r\n      \r\n  }\r\n\r\n  onChangeHandle=(e)=>{\r\n          this.setState({[e.target.name]:e.target.value});     \r\n}\r\n\r\nimageonChange=(e)=>{     \r\n  const file = e.target.files[0];\r\n  this.setState({ selectedFile: e.target.files[0] }); \r\n  this.setState({\r\n    LM_Image: URL.createObjectURL(file),\r\n    fromEdit:false\r\n  });\r\n}\r\nonChangeHandleURL=(e)=>\r\n{\r\n // let value = e.target.value\r\n  //value = value.replace(/[^A-Za-z]/ig, '')\r\n  this.setState({ JM_User_Profile_Url: e.target.value.replace(/[^\\w\\s]/gi, \"\") });     \r\n}\r\n\r\ndoUpdateLink=(event)=>{  \r\n      event.preventDefault();\r\n      const formData = new FormData(); \r\n      const files = event.target.files\r\n      let Api_url=this.state.base_url+'admin/UpdateEmbedContent';\r\n      formData.append('sampleFile', this.state.selectedFile)\r\n      formData.append('EC_ID', this.props.data.EC_ID) \r\n      formData.append('LM_Title', this.state.LM_Title) \r\n      formData.append('LM_Url', this.state.LM_Url) \r\n      formData.append('LM_Image', this.state.LM_Image)\r\n      formData.append('LM_Who_Will_See', this.state.LM_Who_Will_See)\r\n      formData.append('JM_User_Profile_Url_plus_JM_ID', this.props.JM_User_Profile_Url+\"_\"+this.props.data.JM_ID)\r\n      \r\n          fetch(Api_url, {\r\n            method: 'POST',         \r\n            body: formData\r\n          })\r\n          .then(response => response.json())\r\n          .then(data => \r\n            {                   \r\n               //console.log(data);   \r\n               this.ModalClose();\r\n               this.Get_User_Details();              \r\n          })\r\n          .catch(error => {\r\n            //console.error(error)\r\n          })\r\n}\r\n\r\nGet_User_Details = () => {\r\n    var JSONdata = {\r\n      JM_ID: this.state.JM_ID\r\n    };\r\n    const API_url = this.state.base_url + \"admin/userDetails\";\r\n  fetch(API_url,\r\n    {\r\n      method: 'post',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(JSONdata)\r\n    })\r\n  .then((response) => response.json())\r\n  .then(data => {\r\n    if(data.status===1)\r\n    {\r\n      \r\n      this.setState({\r\n        userDetails:data.userDetails,\r\n        linkMaster:data.linkMaster,\r\n        LM_Title:'',\r\n        LM_Url:'',\r\n        LM_Image:'',\r\n        LM_Who_Will_See:1,\r\n        selectedFile: null,\r\n        title:'Success!!!',\r\n        msg:'Profile is updated',\r\n        socialWidget:data.socialWidget,\r\n        category_master:data.category_master,\r\n        category_links:data.category_links,\r\n        embed_content:data.embed_content,\r\n        productList:data.productList,\r\n        gifts: data.gifts,\r\n      });\r\n      this.props.setStateAfterInsert(this.state);\r\n      \r\n    }   \r\n      else\r\n        alert('not fetch');\r\n  });\r\n  \r\n\r\n}\r\n  render(){\r\n    var imagePath=process.env.REACT_APP_UPLOAD_URL+\"no_image.png\";\r\n  return (\r\n    <>\r\n     <button onClick={this.ModalOpen}><CreateIcon />     \r\n      </button>\r\n      <Modal\r\n        show={this.state.show}\r\n        onHide={this.ModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <p className=\"addnew-title\">Edit Link</p>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <form  onSubmit={this.doUpdateLink}>\r\n          <div className=\"addnew-box\">\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Title\"\r\n             name=\"LM_Title\" value={this.state.LM_Title} onChange={this.onChangeHandle}/>\r\n\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"https://\"\r\n           name=\"LM_Url\" value={this.state.LM_Url} onChange={this.onChangeHandle} />\r\n\r\n       \r\n            <div className=\"image-btun-box\" style={{display:'none'}}>\r\n              <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                  <div className=\"view-image\">\r\n                      {\r\n                        this.state.fromEdit ?\r\n                        <img  src={imagePath}/>\r\n                        :\r\n                        <img  src={process.env.REACT_APP_UPLOAD_UR+this.state.LM_Image}/>\r\n                      }\r\n                     \r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <label className=\"up-ico\" for=\"selectImage\">\r\n                    Upload an Image\r\n                    <input id='selectImage' type=\"file\" style={{ display:\"none\"}}  onClick={this.clickhandler} onChange={this.imageonChange} />\r\n                  </label>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                          {/* <button className=\"up-ico\">Choose an Icon</button> */}\r\n                     {/* <Button onClick={this.openCollapse} className=\"btun\"\r\n                          aria-controls=\"example-collapse-text\"\r\n                          aria-expanded={this.state.open} >              \r\n                        Choose an Icon\r\n                      </Button> */}\r\n                      <Collapse in={this.state.open}>\r\n                          <div id=\"example-collapse-text\">\r\n                              <div className=\"row\">\r\n                                <div className=\"col-md-4\">\r\n\r\n                                       hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                 \r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                  \r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                      </Collapse>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <label>Who should be able to see this?</label> */}\r\n            <select style={{display:'none'}}  className=\"form-control\" name=\"LM_Who_Will_See\" value={this.state.LM_Who_Will_See} onChange={this.onChangeHandle}>\r\n              <option value=\"1\">Everyone</option>\r\n              <option value=\"2\">My Followers</option>\r\n              <option value=\"3\">People I follow</option>\r\n            </select>\r\n            <div className=\"btun-box\">\r\n              <button className=\"btun btun_1\">Update Links</button>\r\n              <button className=\"btun\" onClick={this.ModalClose}>Cancel</button>\r\n            </div>\r\n          </div>\r\n          </form>\r\n        </Modal.Body>\r\n\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n}\r\n\r\nexport default EditEmbedContent;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\EditStackedLink.js",["2670","2671","2672","2673","2674","2675","2676","2677","2678","2679","2680","2681","2682","2683"],"import React, { Component } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport { MDBIcon } from 'mdbreact';\r\nclass EditStackedLink extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n      \r\n        this.state = {\r\n           openModel:false,\r\n           base_url: process.env.REACT_APP_API_URL,\r\n           root_url: process.env.REACT_APP_ROOT_URL,\r\n         \r\n           show:false,\r\n           open:false,\r\n           JM_ID: 0,  \r\n           SWM_Title:'',\r\n           SWM_Url:'',\r\n           SWM_Icon:'',\r\n           LM_Who_Will_See:1,\r\n           selectedFile: null,\r\n           linkMaster:[],\r\n          userDetails:[],\r\n          socialWidget:[],\r\n          isClose:'none',\r\n          CM_Folder_Sub_Title:'',\r\n          CM_Folder_Back_Image:'',\r\n          CM_Folder_Title:'',\r\n          category_links:[],\r\n          activeIcon:'',\r\n          isDisplayIcon:'block',\r\n          isDisplayImage:'none',\r\n          iconCheked:true,\r\n          imageCheked:false,\r\n          fromEdit:true\r\n          \r\n    \r\n        }\r\n        ////console.log(this.props.JM_User_Profile_Url_plus_JM_ID);\r\n      }\r\n      ModalClose=()=>{\r\n        this.setState({openModel:false,show:false});\r\n\r\n\r\n      }\r\n      ModalOpen=()=>{\r\n        this.setState({openModel:true,show:true});\r\n        this.fillData();\r\n      }\r\n     \r\n    \r\n      onChangeHandle=(e)=>{\r\n          let titleVal=e.target.value;\r\n        this.setState({[e.target.name]:e.target.value});  \r\n        let index = e.nativeEvent.target.selectedIndex;\r\n    }\r\n    onChangeHandleURL=(e)=>\r\n    {\r\n      this.setState({[e.target.name]:e.target.value});     \r\n    }\r\n    onChangeFolderImage=(e)=>{     \r\n      const file = e.target.files[0];\r\n      this.setState({ selectedFile: e.target.files[0] }); \r\n      this.setState({\r\n        CM_Folder_Back_Image: URL.createObjectURL(file),\r\n        isClose:'block'\r\n      });\r\n\r\n    }\r\n    addFolder=(event)=>{  \r\n          event.preventDefault();\r\n          if(this.validate())\r\n          {\r\n              const formData = new FormData(); \r\n              const files = event.target.files\r\n              let Api_url=process.env.REACT_APP_API_URL+'admin/UpdateCategory';\r\n              formData.append('sampleFile', this.state.selectedFile)\r\n              formData.append('CM_ID', this.state.CM_ID) \r\n              formData.append('JM_ID', this.state.JM_ID) \r\n              formData.append('CM_Folder_Title', this.state.CM_Folder_Title) \r\n              formData.append('CM_Folder_Sub_Title', this.state.CM_Folder_Sub_Title)\r\n              formData.append('JM_User_Profile_Url_plus_JM_ID', this.props.JM_User_Profile_Url_plus_JM_ID)\r\n              formData.append('CM_Icon', this.state.activeIcon)\r\n                  fetch(Api_url, {\r\n                    method: 'POST',         \r\n                    body: formData\r\n                  })\r\n                  .then(response => response.json())\r\n                  .then(data => \r\n                    {                   \r\n                      //console.log(data);   \r\n                      this.ModalClose();\r\n                      this.Get_User_Details();              \r\n                  })\r\n                  .catch(error => {\r\n                    //console.error(error)\r\n                  })\r\n            }\r\n            else\r\n            {\r\n              document.getElementById('msg').innerHTML='Enter Title';\r\n              this.hideMessage('msg');    \r\n            }\r\n    }\r\n    hideMessage=(id)=>{\r\n      setTimeout(function() {\r\n        document.getElementById(id).innerHTML='';  \r\n       }, 2000);\r\n             \r\n    }\r\n  \r\n    Get_User_Details = () => {\r\n        var JSONdata = {\r\n          JM_ID: this.state.JM_ID\r\n        };\r\n        const API_url = this.state.base_url + \"admin/userDetails\";\r\n      fetch(API_url,\r\n        {\r\n          method: 'post',\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(JSONdata)\r\n        })\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        if(data.status===1)\r\n        {\r\n          this.setState({\r\n            userDetails:data.userDetails,\r\n            linkMaster:data.linkMaster,\r\n            LM_Title:'',\r\n            LM_Url:'',\r\n            LM_Image:'',\r\n            LM_Who_Will_See:1,\r\n            selectedFile: null,\r\n            title:'Success!!!',\r\n            msg:'Profile is updated',\r\n            socialWidget:data.socialWidget,\r\n            category_master:data.category_master,\r\n            category_links:data.category_links,\r\n            embed_content:data.embed_content,\r\n            productList:data.productList ,\r\n            gifts: data.gifts,\r\n          });\r\n          this.props.setStateAfterInsert(this.state);\r\n        }   \r\n          else\r\n            alert('not fetch');\r\n      });\r\n      \r\n    \r\n    }\r\n    \r\n    fileSelectHandler=()=> {\r\n      //console.log(\"changed\")\r\n    }\r\n    \r\n    clickhandler = () => {\r\n    //console.log(\"clicked\")\r\n    }\r\n    validate=(e)=>{\r\n      let valid=true;\r\n        if(this.state.CM_Folder_Title === \"\")\r\n        {\r\n          valid=false;\r\n        }\r\n            return valid;    \r\n    }\r\n   \r\n    fillData=()=>{\r\n        //console.log(this.props.category_master);\r\n        this.setState({\r\n            CM_ID:this.props.category_master.CM_ID,\r\n            JM_ID:this.props.category_master.JM_ID,\r\n            CM_Folder_Title:this.props.category_master.CM_Folder_Title,\r\n            CM_Folder_Sub_Title:this.props.category_master.CM_Folder_Sub_Title,\r\n            CM_Folder_Back_Image_Current:process.env.REACT_APP_UPLOAD_URL+this.props.category_master.CM_Folder_Back_Image,\r\n            activeIcon:this.props.category_master.CM_Icon\r\n\r\n\r\n        });\r\n    }\r\n    setActive=(e)=>{\r\n      e.preventDefault();\r\n    \r\n      var icon = e.currentTarget.attributes['data-id'].value;\r\n      this.setState({\r\n        activeIcon:icon\r\n      })\r\n    }\r\n    showHideDiv=(e)=>{\r\n    \r\n      if(e.target.value==='icon')\r\n      {\r\n        this.setState({\r\n          isDisplayIcon:\"block\", isDisplayImage:\"none\",\r\n          iconCheked:true,imageCheked:false\r\n        })\r\n      }\r\n    \r\n      if(e.target.value==='image')\r\n      {\r\n        this.setState({\r\n          isDisplayIcon:\"none\", isDisplayImage:\"block\",\r\n          iconCheked:false,imageCheked:true\r\n        })\r\n      }\r\n    }\r\n      render(){\r\n      return (\r\n        <>\r\n           <button onClick={this.ModalOpen}><CreateIcon />     \r\n            </button>\r\n          <Modal\r\n            show={this.state.show}\r\n            onHide={this.ModalClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            centered\r\n    \r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>\r\n                <p className=\"addnew-title\">Update Folder</p>\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n             <form  onSubmit={this.addFolder}>\r\n              <div className=\"addnew-box\">\r\n                   <label> Category Title </label>                    \r\n                   <input type=\"text\" className=\"form-control\" placeholder=\"Category Title\"\r\n                        name=\"CM_Folder_Title\" value={this.state.CM_Folder_Title} onChange={this.onChangeHandleURL}/>\r\n                  <label> Category Sub Title </label>                    \r\n                   <input type=\"text\" className=\"form-control\" placeholder=\"Sub Title\"\r\n                        name=\"CM_Folder_Sub_Title\" value={this.state.CM_Folder_Sub_Title} onChange={this.onChangeHandleURL}/>\r\n                           <label>Category Icon</label>\r\n\r\n\r\n\r\n                              <div className=\"image-btun-box text-center\">\r\n                                <input type=\"radio\" checked={this.state.iconCheked} className=\"setCursor\" name=\"selection\" id=\"icon_chk\" value=\"icon\" onClick={this.showHideDiv}/>\r\n                                <label for=\"icon_chk\" className=\"setCursor\"> &nbsp;Icon&nbsp; </label>\r\n                                <input type=\"radio\"  checked={this.state.imageCheked} className=\"setCursor\"  name=\"selection\"  id=\"image_chk\" value=\"image\" onClick={this.showHideDiv}/>\r\n                                <label for=\"image_chk\" className=\"setCursor\"> \r\n                                      &nbsp;Image&nbsp;\r\n                                </label>\r\n                              </div>\r\n                              {/* icon */}\r\n                              <div style={{display:this.state.isDisplayIcon}}>\r\n                                <label>What would you like the icon to be?</label> \r\n                                <div className=\"image-btun-box\" >\r\n                                  <div className=\"iconbox\">\r\n                                      <div className=\"icon\"  \r\n                                          className={this.state.activeIcon === \"external-link-alt\" ? 'icon active' : 'icon'}  data-id=\"external-link-alt\"  onClick={this.setActive}>\r\n                                          <MDBIcon icon=\"external-link-alt\" size=\"2x\"/>                   \r\n                                        \r\n                                  \r\n                                      </div>\r\n                                      <div className=\"icon\"\r\n                                      className={this.state.activeIcon === \"lightbulb\" ? 'icon active' : 'icon'} data-id=\"lightbulb\"   onClick={this.setActive}>\r\n                                      \r\n                                        <MDBIcon icon=\"lightbulb\" size=\"2x\"/>\r\n                                      </div>\r\n                                      <div className=\"icon\"\r\n                                      className={this.state.activeIcon === \"anchor\" ? 'icon active' : 'icon'} data-id=\"anchor\"    onClick={this.setActive}>\r\n                                          <MDBIcon icon=\"anchor\" size=\"2x\"/>\r\n                                          \r\n                                      </div>\r\n                                      <div className=\"icon\"\r\n                                        className={this.state.activeIcon === \"link\" ? 'icon active' : 'icon'}  data-id=\"link\"  onClick={this.setActive}>\r\n                                          <MDBIcon icon=\"link\" size=\"2x\"/>\r\n                                      </div>\r\n                                      <div className=\"icon\"\r\n                                        className={this.state.activeIcon === \"external-link-square-alt\" ? 'icon active' : 'icon'} data-id=\"external-link-square-alt\"    onClick={this.setActive}>\r\n                                          <MDBIcon icon=\"external-link-square-alt\" size=\"2x\"/>\r\n                                      </div>\r\n\r\n                                      <div className=\"icon\"\r\n                                        className={this.state.activeIcon === \"archway\" ? 'icon active' : 'icon'} data-id=\"archway\" onClick={this.setActive}>\r\n                                          <MDBIcon icon=\"archway\" size=\"2x\"/>                   \r\n                                      </div>\r\n\r\n\r\n                                      <div className=\"icon\"  \r\n                                        className={this.state.activeIcon === \"ankh\" ? 'icon active' : 'icon'} data-id=\"ankh\" onClick={this.setActive}>\r\n                                          <MDBIcon icon=\"ankh\" size=\"2x\" />\r\n                                      </div>\r\n                                      <div className=\"icon\" \r\n                                      className={this.state.activeIcon === \"angle-double-right\" ? 'icon active' : 'icon'} data-id=\"angle-double-right\"  onClick={this.setActive}>\r\n                                        <MDBIcon icon=\"angle-double-right\" size=\"2x\" />                   \r\n                                      </div>\r\n                                      <div className=\"icon\"\r\n                                        className={this.state.activeIcon === \"cannabis\" ? 'icon active' : 'icon'} data-id=\"cannabis\"  onClick={this.setActive}>\r\n                                            <MDBIcon icon=\"cannabis\" data-id=\"cannabis\" size=\"2x\" />  \r\n                                      </div>\r\n                                      <div className=\"icon\"\r\n                                        className={this.state.activeIcon === \"chess-queen\" ? 'icon active' : 'icon'} data-id=\"chess-queen\" onClick={this.setActive}>\r\n                                            <MDBIcon icon=\"chess-queen\" data-id=\"chess-queen\"  size=\"2x\" />   \r\n                                      </div>\r\n                                    \r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n\r\n                              {/* image */}\r\n                              <div style={{display:this.state.isDisplayImage}}>\r\n                                    <label>What would you like the Image to be? </label>\r\n                                  <div className=\"image-btun-box\">\r\n                                    <div className=\"row\">\r\n                                      <div className=\"col-md-12\">\r\n                                          <div className=\"view-image\">\r\n                                            <img  src={this.state.CM_Folder_Back_Image}/>\r\n                                          </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">                   \r\n                                            <label className=\"up-ico\" htmlFor=\"foldr_img\">\r\n                                              Upload an Icon               </label>        \r\n                                              <input type=\"file\" id=\"foldr_img\" accept=\"image/*\" name=\"photo\" style={{ display:\"none\"}} \r\n                                                    onChange={this.onChangeFolderImage}/>         \r\n                                              {/* <input id='foldr_img' type=\"file\" style={{ display:\"none\"}}  onClick={this.clickhandler} onChange={this.imageonChange} /> */}\r\n                                          </div>                 \r\n                                      </div>\r\n                                  </div>\r\n                                </div>\r\n\r\n\r\n\r\n                    {/* <label className=\"roundPlus\" htmlFor='foldr_img'>\r\n                       <AddCircleOutlineOutlinedIcon/>\r\n                    </label> \r\n                    <img style={{width:'60px',height:'60px',borderRadius: '60%',margin:'5px'}} src={this.state.CM_Folder_Back_Image_Current}></img>\r\n                    <input type=\"file\" id=\"foldr_img\"  style={{display:'none'}}\r\n                         value=\"\" onChange={this.onChangeFolderImage}/>\r\n                         <div>\r\n                           {\r\n                           \r\n                              this.state.isClose==='block' ? \r\n                               <>\r\n                              <i className=\"fa fa-close\" style={{color:'red',fontSize:'20px',display:this.state.isClose}} onClick={()=> this.setState({CM_Folder_Back_Image:'',selectedFile:null,isClose:'none'})}></i>\r\n                              <img style={{width:'100%',height:'100%',borderRadius: '5%',margin:'5px'}} src={this.state.CM_Folder_Back_Image}></img>\r\n                              </>\r\n                            :\r\n                            null\r\n                            }\r\n                           \r\n                         </div> */}\r\n         \r\n               \r\n\r\n\r\n\r\n\r\n                <div className=\"btun-box\">\r\n                  <button className=\"btun btun_1\">Update Folder</button>\r\n                  <button className=\"btun\" onClick={this.ModalClose}>Cancel</button>\r\n                  <p id=\"msg\" style={{color:'red'}}></p>\r\n                </div>\r\n              </div>\r\n              </form>\r\n            </Modal.Body>\r\n    \r\n          </Modal>\r\n        </>\r\n      );\r\n    }\r\n    \r\n    }\r\nexport default EditStackedLink;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\EmbedContent.js",["2684","2685"],"import React, { Component } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\n\r\n\r\nclass EmbedContent extends Component\r\n{\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       openModel:false,\r\n       base_url: process.env.REACT_APP_API_URL,\r\n       root_url: process.env.REACT_APP_ROOT_URL,\r\n       show:false,\r\n       open:false,\r\n       JM_ID:this.props.JM_ID,\r\n       LM_Title:'',\r\n       LM_Url:'',\r\n       LM_Image:'',\r\n       LM_Who_Will_See:1,\r\n       selectedFile: null,\r\n       linkMaster:[],\r\n      userDetails:[],\r\n      socialWidget:[],\r\n      embed_content:[],\r\n      category_master:[],\r\n      category_links:[],\r\n      title:'',\r\n      msg:'',\r\n      logo:''\r\n      \r\n    }\r\n    console.log(this.props.JM_User_Profile_Url_plus_JM_ID);\r\n  }\r\n  ModalClose=()=>{\r\n    this.setState({openModel:false,show:false});\r\n  }\r\n  ModalOpen=()=>{\r\n    this.setState({openModel:true,show:true});\r\n  }\r\n  openCollapse = () => {\r\n    !this.state.open ?\r\n      this.setState({ open: true })\r\n      :\r\n      this.setState({ open: false })\r\n      \r\n  }\r\n\r\n  onChangeHandle=(e)=>{\r\n    this.setState({[e.target.name]:e.target.value});     \r\n}\r\nonChangeHandleURL=(e)=>\r\n{\r\n // let value = e.target.value\r\n  //value = value.replace(/[^A-Za-z]/ig, '')\r\n  this.setState({ JM_User_Profile_Url: e.target.value.replace(/[^\\w\\s]/gi, \"\") });     \r\n}\r\nimageonChange=(e)=>{     \r\n  const file = e.target.files[0];\r\n  this.setState({ selectedFile: e.target.files[0] }); \r\n  this.setState({\r\n    LM_Image: URL.createObjectURL(file)\r\n  });\r\n}\r\ndoInsertLink=(event)=>{  \r\n      event.preventDefault();\r\n      const formData = new FormData(); \r\n      const files = event.target.files\r\n      let Api_url=this.state.base_url+'admin/InsertEmbedContent';\r\n      formData.append('sampleFile', this.state.selectedFile)\r\n      formData.append('JM_ID', this.state.JM_ID) \r\n      formData.append('LM_Title', this.state.LM_Title) \r\n      formData.append('LM_Url', this.state.LM_Url) \r\n      formData.append('LM_Image', this.state.LM_Image)\r\n      formData.append('LM_Who_Will_See', this.state.LM_Who_Will_See)\r\n      formData.append('JM_User_Profile_Url_plus_JM_ID', this.props.JM_User_Profile_Url_plus_JM_ID)\r\n      \r\n          fetch(Api_url, {\r\n            method: 'POST',         \r\n            body: formData\r\n          })\r\n          .then(response => response.json())\r\n          .then(data => \r\n            {                   \r\n               console.log(data);   \r\n               this.ModalClose();\r\n               this.Get_User_Details();              \r\n          })\r\n          .catch(error => {\r\n            console.error(error)\r\n          })\r\n}\r\n\r\nGet_User_Details = () => {\r\n    var JSONdata = {\r\n      JM_ID: this.state.JM_ID\r\n    };\r\n    const API_url = this.state.base_url + \"admin/userDetails\";\r\n  fetch(API_url,\r\n    {\r\n      method: 'post',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(JSONdata)\r\n    })\r\n  .then((response) => response.json())\r\n  .then(data => {\r\n    if(data.status===1)\r\n    {\r\n      this.setState({\r\n        userDetails:data.userDetails,\r\n        linkMaster:data.linkMaster,\r\n        LM_Title:'',\r\n        LM_Url:'',\r\n        LM_Image:'',\r\n        LM_Who_Will_See:1,\r\n        selectedFile: null,\r\n        title:'Success!!!',\r\n        msg:'Profile is updated',\r\n        socialWidget:data.socialWidget,\r\n        category_master:data.category_master,\r\n        category_links:data.category_links,\r\n        embed_content:data.embed_content,\r\n        productList:data.productList,\r\n        gifts: data.gifts,\r\n      });\r\n      this.props.setStateAfterInsert(this.state);\r\n    }   \r\n      else\r\n        this.setState({         \r\n            title:'Failed!!!',\r\n            msg:'Profile is not updated',\r\n        \r\n        });\r\n  });\r\n  \r\n\r\n}\r\n\r\nfileSelectHandler=()=> {\r\n  console.log(\"changed\")\r\n}\r\n\r\nclickhandler = () => {\r\nconsole.log(\"clicked\")\r\n}\r\n\r\n  render(){\r\n  return (\r\n    <>\r\n      <div className=\"card-btun\" onClick={this.ModalOpen}><AddCircleOutlineOutlinedIcon />\r\n        <h4>Embed Content </h4> <p>Share your latest work</p>\r\n      </div>\r\n      <Modal\r\n        show={this.state.show}\r\n        onHide={this.ModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <p className=\"addnew-title\"> Add a Embed Content to your profile </p>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n         <form  onSubmit={this.doInsertLink}>\r\n          <div className=\"addnew-box\">\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Title\"\r\n             name=\"LM_Title\" value={this.state.LM_Title} onChange={this.onChangeHandle}/>\r\n\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Enter URL to Embed\"\r\n           name=\"LM_Url\" value={this.state.LM_Url} onChange={this.onChangeHandle} />\r\n\r\n           \r\n            <div className=\"image-btun-box\" style={{display:'none'}}>\r\n              <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"view-image\">\r\n                            <img  src={this.state.LM_Image}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\" >\r\n                    \r\n                        <label className=\"up-ico\" htmlFor=\"selectImage\">\r\n                            Upload an Image    </label>        \r\n                            <input type=\"file\" id=\"prop_up\" accept=\"image/*\" name=\"photo\" style={{ display:\"none\"}} \r\n                                onChange={this.imageonChange}/>         \r\n                            <input id='selectImage' type=\"file\" style={{ display:\"none\"}}  onClick={this.clickhandler} onChange={this.imageonChange} />\r\n                        </div>\r\n                    \r\n                  </div>\r\n            </div>\r\n            {/* <label>Who should be able to see this?</label> */}\r\n            <select style={{display:'none'}} className=\"form-control\" name=\"LM_Who_Will_See\" value={this.state.LM_Who_Will_See} onChange={this.onChangeHandle}>\r\n                <option value=\"1\">Everyone</option>\r\n                <option value=\"2\">My Followers</option>\r\n                <option value=\"3\">People I follow</option>\r\n            </select>\r\n            <div className=\"btun-box\">\r\n              <button className=\"btun btun_1\">Add</button>\r\n              <button className=\"btun\" onClick={this.ModalClose}>Cancel</button>\r\n            </div>\r\n          </div>\r\n          </form>\r\n        </Modal.Body>\r\n\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n}\r\n\r\nexport default EmbedContent;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\EditPremiumFeature.js",["2686","2687","2688","2689","2690","2691","2692"],"import React, { Component } from 'react';\r\n\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Popover from 'react-bootstrap/Popover'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n\r\nimport PersonalVideoIcon from '@material-ui/icons/PersonalVideo';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nclass EditPremiumFeature extends Component \r\n{\r\n        fileObj = [];\r\n        fileArray = [];\r\n        albumArray=[];\r\n        Files = [];\r\n        constructor(props) \r\n        {\r\n            super(props)\r\n        \r\n            this.state = {\r\n              base_url: process.env.REACT_APP_API_URL,\r\n              root_url: process.env.REACT_APP_ROOT_URL,\r\n              openModel:false,\r\n              show:false,\r\n              open:false,\r\n              directAccess:this.props.data,\r\n              userDetails:this.props.userDetails,\r\n              confirm:false,\r\n              videoFile:null,\r\n              imageFile:null,\r\n              selectedFile:null,\r\n          \r\n              title:'',\r\n              description:'',\r\n              price:0,\r\n              handleDisabled:true,\r\n              toolTip:false,\r\n              chargesInfo:'',\r\n              showIconCharges:'none',\r\n              videoData:'NA',\r\n              audioData:'',\r\n              album:[null],\r\n              cover_Image_video:'',\r\n              coverImageorVideo:null,\r\n              audioFile:null,\r\n              showAlert:true,\r\n              title:'',\r\n              msg:'',\r\n              logo:'',\r\n\r\n\r\n              DA_ID:0,\r\n              DA_Title:'',\r\n              DA_Description:'',\r\n              DA_Price:0.0,\r\n              JM_ID:0,\r\n              DA_Type:'',\r\n              DA_Collection:[],\r\n              videoData_Edit:'',\r\n              audioData_edit:'',\r\n              hideVideoAudio:false,\r\n            }\r\n\r\n            this.imageonMultiChange = this.imageonMultiChange.bind(this)\r\n        }\r\n        ModalClose=()=>\r\n        {    \r\n            this.setState({\r\n              openModel:false,show:false,\r\n              audioData:'',audioFile:null,\r\n              videoData:'NA',videoFile:null\r\n            \r\n            });\r\n\r\n        }\r\n        ModalOpen=()=>{\r\n                this.setState({openModel:true,show:true,chargesInfo:'',showIconCharges:'none'});\r\n                console.log(this.props.data)\r\n                this.setState({ \r\n                  DA_Title:this.props.data.DA_Title,\r\n                  DA_Description:this.props.data.DA_Description,\r\n                  JM_ID:this.props.data.JM_ID,\r\n                  DA_Type:this.props.data.DA_Type,\r\n                  DA_ID:this.props.data.DA_ID,\r\n                  DA_Collection:'',\r\n                  DA_Price: this.props.data.DA_Price,                            \r\n              });\r\n              if(this.props.data.DA_Type==='video')\r\n              {\r\n                let arr=JSON.parse(this.props.data.DA_Collection);\r\n                if(arr!==null && arr.length >0)\r\n                {\r\n                  this.setState({ \r\n                    videoData_Edit:process.env.REACT_APP_API_URL+\"adm/uploads/Profile/\"+this.props.JM_User_Profile_Url_plus_JM_ID+\"/\"+arr[0],\r\n                    hideVideoAudio:false\r\n                  });\r\n                  console.log(arr[0]);\r\n                }\r\n               \r\n              }\r\n            else  if(this.props.data.DA_Type==='audio')\r\n              {\r\n                let arr=JSON.parse(this.props.data.DA_Collection);\r\n                if(arr!==null && arr.length >0)\r\n                {\r\n                  this.setState({ \r\n                    audioData_edit:process.env.REACT_APP_API_URL+\"adm/uploads/Profile/\"+this.props.JM_User_Profile_Url_plus_JM_ID+\"/\"+arr[0],\r\n                    hideVideoAudio:false\r\n                  });\r\n                  console.log(arr[0]);\r\n                }\r\n               \r\n              }\r\n              else  if(this.props.data.DA_Type==='images')\r\n              {\r\n                let arr=JSON.parse(this.props.data.DA_Collection);\r\n                if(arr!==null && arr.length >0)\r\n                {\r\n                  this.setState({ \r\n                    audioData_edit:process.env.REACT_APP_API_URL+\"adm/uploads/Profile/\"+this.props.JM_User_Profile_Url_plus_JM_ID+\"/\"+arr[0],\r\n                    hideVideoAudio:false\r\n                  });\r\n                  console.log(arr[0]);\r\n                }\r\n               \r\n              }\r\n              else  if(this.props.data.DA_Type==='image')\r\n              {\r\n                let arr=JSON.parse(this.props.data.DA_Collection);\r\n                if(arr!==null && arr.length >0)\r\n                {\r\n                  this.setState({ \r\n                    cover_Image_video:process.env.REACT_APP_API_URL+\"adm/uploads/Profile/\"+this.props.JM_User_Profile_Url_plus_JM_ID+\"/\"+arr[0],\r\n               \r\n                  });\r\n                  console.log(arr[0]);\r\n                }\r\n               \r\n              }\r\n        }\r\n        openCollapse = () => {\r\n            !this.state.open ?\r\n            this.setState({ open: true })\r\n            :\r\n            this.setState({ open: false })\r\n            \r\n        }\r\n        isConfirm = () => {\r\n            confirmAlert({\r\n            title: 'Confirm !!!',\r\n            message: 'Are you sure to Exit',\r\n            buttons: [\r\n                {\r\n                label: 'Yes',\r\n                onClick: () => this.setState({confirm:true})\r\n                },\r\n                {\r\n                label: 'No',\r\n                onClick: () => this.setState({confirm:false})\r\n                }\r\n            ]\r\n            });\r\n        };\r\n        popOver=(data)=>{\r\n        }\r\n        videoonChange=(e)=>{\r\n           this.setState({ audioData: ''  , audioFile:null}); \r\n            const file = e.target.files[0];\r\n            if(typeof file!=='undefined')\r\n            {\r\n              var fileUrl = window.URL.createObjectURL(file);\r\n              this.setState({ imageFile: e.target.files[0] }); \r\n              this.setState({\r\n              videoFile: file,\r\n              videoData:fileUrl,\r\n              hideVideoAudio:true,\r\n              audioFile:null,\r\n              audioData:'',\r\n              });\r\n              \r\n              this.hidePopover();\r\n            }\r\n        }\r\n        audioChange=(e)=>\r\n        {\r\n          this.setState({\r\n            videoFile: null,\r\n            videoData:'NA'\r\n            });\r\n            const file = e.target.files[0];\r\n            if(typeof file!=='undefined')\r\n            {\r\n              this.setState({ audioFile: e.target.files[0] }); \r\n              this.getBase64(file).then(\r\n                data =>{\r\n                  console.log(data);\r\n                  this.setState({ audioData: data ,   hideVideoAudio:true,\r\n                    videoFile: null,\r\n                    videoData:'NA',\r\n                  \r\n                  }); \r\n                } \r\n              );\r\n            }\r\n        }\r\n        onClickResetAudioFile (e) {\r\n            this.setState({audioData:''}); // celears state\r\n            \r\n        }\r\n        //12-mar-2021\r\n        getBase64=(file)=> {\r\n          return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n          });\r\n        }\r\n\r\n        imageonChange=(e)=>{\r\n            const file = e.target.files[0];\r\n            this.setState({ coverImageorVideo: e.target.files[0] }); \r\n            this.setState({\r\n            cover_Image_video: URL.createObjectURL(file)\r\n            });\r\n            this.hidePopover();\r\n        }\r\n        nextClick=(event)=>{\r\n            event.preventDefault();\r\n            let isValid=this.validation();\r\n            if(isValid)\r\n            {\r\n                //alert(\"ok\");\r\n            \r\n                  const formData = new FormData(); \r\n\r\n                  let Api_url=process.env.REACT_APP_API_URL+'admin/updateProduct';\r\n                  //const Api_url =\"http://localhost:9000/admin/updateProduct\";\r\n                  if(this.state.videoFile !==null && this.state.videoData!=='NA' && this.state.videoData!=='')\r\n                  {  \r\n                      formData.append('sampleFile', this.state.videoFile);\r\n                      formData.append('DA_Type', 'video'); \r\n                  }\r\n                  else  if(this.state.audioFile !==null && this.state.audioData!=='')\r\n                  {   \r\n                     formData.append('sampleFile', this.state.audioFile)\r\n                     formData.append('DA_Type', 'audio'); \r\n                  }\r\n                  else  if(this.state.coverImageorVideo !==null && this.state.cover_Image_video!=='')\r\n                  {   \r\n\r\n                     formData.append('sampleFile', this.state.coverImageorVideo)\r\n                     formData.append('DA_Type', 'image'); \r\n                  }\r\n                  else\r\n                  {\r\n                    let file=[];\r\n                    if(this.state.audioData_edit!=='')\r\n                    {\r\n                          formData.append('sampleFile', file)\r\n                          formData.append('DA_Type', 'audio');       \r\n                    }                  \r\n                    if(this.state.videoData_Edit!=='')\r\n                    {  \r\n                      formData.append('sampleFile', file);\r\n                      formData.append('DA_Type', 'video');                    \r\n                    }\r\n\r\n                  }\r\n            \r\n                // if(this.state.directAccess.DA_Type===\"image\")\r\n                // {\r\n                //         formData.append('coverFile', this.state.coverImageorVideo) \r\n                //         // const ins = document.getElementById('img_multiple').files.length;\r\n                //         const ins = this.Files.length;\r\n                //         const arr=[];\r\n                //             for (var x = 0; x < ins; x++)\r\n                //             {\r\n                        \r\n                //                 // formData.append('img_multiple',document.getElementById('img_multiple').files[x]);\r\n                //                 formData.append('img_multiple',this.Files[x]);\r\n                                \r\n                //             }\r\n                        \r\n                // }\r\n\r\n                \r\n                formData.append('DA_DA_ID', 1) // for premium featured id\r\n                formData.append('DA_ID', this.state.DA_ID) \r\n                formData.append('JM_ID', this.state.JM_ID)         \r\n                formData.append('DA_Title', this.state.DA_Title)  \r\n                formData.append('DA_Description', this.state.DA_Description)  \r\n                formData.append('DA_Cover', \"\") \r\n                formData.append('DA_Price', this.state.DA_Price)      \r\n                formData.append('JM_User_Profile_Url_plus_JM_ID',this.props.JM_User_Profile_Url_plus_JM_ID)\r\n                \r\n                    fetch(Api_url, {\r\n                    method: 'POST',         \r\n                    body: formData\r\n                    })\r\n                    .then(response => response.json())\r\n                    .then(data => \r\n                    {                   \r\n                        console.log(data);   \r\n                       if(data.status > 0)\r\n                       {\r\n                            this.setState({\r\n                                  videoFile:null,\r\n                                  videoData:'NA',\r\n                                  audioFile:null,\r\n                                  audioData:''\r\n                            });\r\n                            this.fileArray=[];     \r\n                            this.ModalClose();                     \r\n                            this.Get_User_Details();   \r\n                           \r\n                       }\r\n                                             \r\n                    })\r\n                    .catch(error => {\r\n\r\n                      console.error(error)\r\n                           \r\n                    })\r\n\r\n            }\r\n            else\r\n            {\r\n\r\n            }\r\n        }\r\n        validation =()=>{\r\n             \r\n              \r\n                if(this.state.DA_Title.length > 0 && this.state.DA_Description.length > 0 && parseInt(this.state.DA_Price) > 0)\r\n                    return true;\r\n                else\r\n                    return false;         \r\n               \r\n        }\r\n        handleChange=(e)=>{\r\n            let val=parseFloat(e.target.value);\r\n        this.setState({[e.target.name]:e.target.value})\r\n        let chargesInfo=\"\";\r\n        if(e.target.name==='DA_Price' && val > 0)\r\n            {\r\n              let twoPer=val * 2/100;\r\n              let TenPer=val * 10/100;\r\n              let razorPay=(twoPer+(twoPer*18/100));\r\n              console.log(twoPer)\r\n              console.log(razorPay)\r\n              console.log(TenPer)\r\n              let charges=val - razorPay - TenPer;\r\n              \r\n              let chargesInfo=\"You'll receive INR \"+ charges.toFixed(2) + \" \";\r\n              let showIconCharges='block';\r\n         \r\n                this.setState({chargesInfo,showIconCharges});\r\n            }\r\n            // else\r\n            // {      \r\n            //     let chargesInfo=\"\";\r\n            //     let showIconCharges='none';\r\n            //     this.setState({chargesInfo,showIconCharges});\r\n            // }\r\n            \r\n        }\r\n        hidePopover=()=>{\r\n            document.getElementById(\"popover-basic\").style.display='none';\r\n        }\r\n        handleClose=()=>{\r\n            this.setState({toolTip:true});\r\n        }\r\n        handleOpen=()=>{\r\n            this.setState({toolTip:false});\r\n        }\r\n        \r\n\r\n        imageonMultiChange(e) {\r\n            var numFiles = e.target.files.length; \r\n            for (var i = 0, numFiles = e.target.files.length; i < numFiles; i++) \r\n            { \r\n            var file = e.target.files[i];\r\n            this.albumArray.push(URL.createObjectURL(file));\r\n            //this.fileArray.push(URL.createObjectURL(this.fileObj[0][i]))\r\n            this.Files.push(file);\r\n            }\r\n\r\n            this.setState({ album: this.albumArray })\r\n\r\n        }\r\n\r\n        hideToast=()=>{\r\n          this.setState({showAlert:false})\r\n        }\r\n        showToast =() =>{\r\n          this.setState({showAlert:true})\r\n        }\r\n       \r\n        Get_User_Details = () => \r\n        {\r\n                var JSONdata = {\r\n                  JM_ID: this.state.JM_ID\r\n                };\r\n                const API_url = this.state.base_url + \"admin/userDetails\";\r\n              fetch(API_url,\r\n                {\r\n                  method: 'post',\r\n                  headers: { \"Content-Type\": \"application/json\" },\r\n                  body: JSON.stringify(JSONdata)\r\n                })\r\n              .then((response) => response.json())\r\n              .then(data => {\r\n                if(data.status===1)\r\n                {\r\n                  this.setState({\r\n                    userDetails:data.userDetails,\r\n                    linkMaster:data.linkMaster,\r\n                    directAccess:data.directAccess,\r\n                    productList:data.productList,\r\n                    socialWidget:data.socialWidget,\r\n                    category_master:data.category_master,\r\n                    category_links:data.category_links,\r\n                    embed_content:data.embed_content,\r\n                    title:'Success!!!',\r\n                    msg:'Profile is updated',\r\n                    gifts: data.gifts,\r\n                  });\r\n                  this.props.setStateAfterInsert(this.state);\r\n                }   \r\n                  else\r\n                    alert('not fetch');\r\n              });\r\n        }\r\n    render() {\r\n\r\n        const longText = `\r\n        Aliquam eget finibus ante, non facilisis lectus. Sed vitae dignissim est, vel aliquam tellus.\r\n        Praesent non nunc mollis, fermentum neque at, semper arcu.\r\n        Nullam eget est sed sem iaculis gravida eget vitae justo.\r\n        `;\r\n        \r\n        const useStyles = {\r\n          button: {\r\n            margin: '5px',\r\n          },\r\n          customWidth: {\r\n            maxWidth: 500,\r\n            fontSize:'25px',\r\n           \r\n          },\r\n          noMaxWidth: {\r\n            maxWidth: 'none',\r\n          },\r\n        };\r\n        let chargesMessage=\"You receive 90% of the transaction value minus a 2% transaction fee that is collected by our payment provider.\";\r\n        const HtmlTooltip = withStyles((theme) => ({\r\n          arrow: {\r\n            color: theme.palette.common.black,\r\n          },\r\n          tooltip: {\r\n            backgroundColor: '#212529',\r\n            color: 'white',\r\n            maxWidth: '50%',\r\n            fontSize: theme.typography.pxToRem(10),\r\n            // border: '1px solid #dadde9',\r\n          },\r\n        }))(Tooltip);\r\n        \r\n        const iconStyle={\r\n            display:this.state.showIconCharges,\r\n            fontSize: \"23px\",\r\n            color: \"gray\"\r\n        }\r\n        const chargesStyle={\r\n          fontFamily: \"consolas\",\r\n          fontSize: \"13px\",\r\n          textTransform: \"capitalize\",\r\n          marginTop: \"-6%\",\r\n          fontWeight: \"bold\",\r\n          color: \"gray\",\r\n        }\r\n        \r\n        let typeOfProduct;        \r\n          typeOfProduct= <> <div className=\"col-md-8\">\r\n                              <label for=\"upImage\" style={{    marginTop: \"10px\"}}>\r\n                                Upload {this.state.DA_Type}         \r\n                              </label>\r\n                          </div>  \r\n                          <div className=\"col-md-10 offset-md-1\">           \r\n                            {\r\n                              this.state.videoData!=='NA' && this.state.videoData!=='' ?              \r\n                                    <video className=\"img-thumbnail-custom\" width=\"100%\" controls src={this.state.videoData} type=\"video/mp4\" >                                   \r\n                                    </video>\r\n                                    : null\r\n                            }\r\n                               {\r\n                              this.state.cover_Image_video!=='NA' && this.state.cover_Image_video!=='' ?              \r\n                                    <img className=\"img-thumbnail-custom\" width=\"200px\"  src={this.state.cover_Image_video} type=\"image/*\" >                                   \r\n                                    </img>\r\n                                    : null\r\n                            }\r\n                            {\r\n                            this.state.audioData!=='' ?     \r\n                                <audio autoplay controls src={this.state.audioData}>\r\n                                  The “audio tag is not supported by your browser.\r\n                                </audio>\r\n                                : \r\n                                null\r\n                            }\r\n                                  \r\n                           </div>  \r\n                          </>\r\n      \r\n\r\n    let type='video';\r\n    const popover = (\r\n      <Popover id=\"popover-basic\" style={{zIndex:'99999'}}>\r\n         <button type=\"button\" className=\"pop-close\"><span aria-hidden=\"true\" onClick={this.hidePopover}>×</span>\r\n          <span className=\"sr-only\">Close</span>\r\n        </button>\r\n        <Popover.Title as=\"h6\"><h6>Select  {this.state.DA_Type}</h6>\r\n       \r\n        </Popover.Title>\r\n        <Popover.Content>\r\n          {           \r\n            this.state.DA_Type==='video' ?   \r\n            <>         \r\n             <label htmlFor=\"video\" style={{cursor:'pointer'}} ><h6>Video</h6></label> <PersonalVideoIcon/>  <br/>\r\n            \r\n             </>            \r\n            : null\r\n          }\r\n          {\r\n            this.state.DA_Type==='audio' ?   \r\n            <>     \r\n             <label htmlFor=\"audio\" style={{cursor:'pointer'}}><h6>Audio</h6></label> <AudiotrackIcon/>  \r\n             </>            \r\n            : null\r\n          }\r\n           {\r\n            this.state.DA_Type==='image' ?   \r\n            <>     \r\n             <label htmlFor=\"photo\" style={{cursor:'pointer'}}><h6>Photo</h6></label> <ImageIcon/>  \r\n             </>            \r\n            : null\r\n          }\r\n        </Popover.Content>  \r\n      </Popover>\r\n    );\r\n\r\n    const popover2 = (\r\n      <Popover id=\"popover-basic\" style={{zIndex:'99999',background: 'black',color:'#fff'}}  >\r\n         <button type=\"button\" className=\"pop-close\"><span aria-hidden=\"true\" onClick={this.hidePopover}>×</span>\r\n          <span className=\"sr-only\">Close</span>\r\n        </button>       \r\n        <Popover.Content style={{background: 'black',color:'#fff'}}>\r\n        {chargesMessage}\r\n          \r\n        </Popover.Content>    \r\n       \r\n      </Popover>\r\n    );\r\n        return (\r\n            <>\r\n               <button onClick={this.ModalOpen}><CreateIcon />     \r\n      </button>\r\n                 \r\n                 <Modal\r\n        show={this.state.show}\r\n        onHide={this.ModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}         \r\n        size=\"lg\"\r\n        contentClassName=\"modal-radius\"\r\n        centered\r\n\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <p className=\"addnew-title\">{\"Personalized video or audio message\"}</p>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"direct-access-pop\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-2 setCursor\">\r\n                    <center>\r\n                      <OverlayTrigger  trigger=\"click\" placement=\"bottom\" overlay={popover}>\r\n                        <div className=\"up-ico\" >\r\n                           <AddIcon style={{fontSize:'25px'}}/>\r\n                         </div>\r\n                      </OverlayTrigger >                       \r\n                    </center>     \r\n              </div>\r\n              {\r\n               typeOfProduct\r\n              }\r\n       \r\n              <form>                          \r\n                <input type=\"file\" id=\"video\" accept=\".mp4\" style={{display:'none'}} onChange={this.videoonChange}/>      \r\n             </form>   \r\n             <form>                          \r\n                <input type=\"file\" id=\"audio\" accept=\"audio/*\" style={{display:'none'}} onChange={this.audioChange}/>      \r\n             </form>\r\n             <form>                          \r\n                <input type=\"file\" id=\"photo\" accept=\"image/*\" style={{display:'none'}} onChange={this.imageonChange}/>      \r\n             </form>\r\n             <div className=\"col-md-12\">\r\n                  {           \r\n                    this.state.DA_Type==='video' && this.state.hideVideoAudio===false?\r\n                                    <video className=\"img-thumbnail-custom\" width=\"100%\" controls src={this.state.videoData_Edit} type=\"video/mp4\" >                                   \r\n                                    </video>\r\n                                :\r\n                                null\r\n                  \r\n                  }\r\n                  {            \r\n                               this.state.DA_Type==='audio' && this.state.hideVideoAudio===false?\r\n                                    <audio autoplay controls src={this.state.audioData_edit}>\r\n                                          The “audio tag is not supported by your browser.\r\n                                      </audio>\r\n                                :\r\n                                null\r\n                  \r\n                  }\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <input type=\"text\" name=\"DA_Title\" value={this.state.DA_Title} onChange={this.handleChange} className=\"form-control\" placeholder=\"Title\" />       \r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <textarea className=\"form-control area\" value={this.state.DA_Description} name=\"DA_Description\" onChange={this.handleChange} \r\n                  placeholder=\"enter description\"/>\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <input type=\"number\" name=\"DA_Price\" onChange={this.handleChange} value={this.state.DA_Price} className=\"form-control\" placeholder=\" Price\" />       \r\n              </div>\r\n              <div className=\"col-md-12 desktopCharge\">\r\n                  <HtmlTooltip arrow\r\n                      title={\r\n                        <React.Fragment>\r\n                          <Typography color=\"inherit\">Transaction Info</Typography>                \r\n                          <p style={{fontFamily:'monospace',fontSize:'12px'}}>{chargesMessage}</p>\r\n                        </React.Fragment>\r\n                      } placement=\"top-start\"\r\n                    >\r\n                  <Button style={chargesStyle}>{this.state.chargesInfo}<i class=\"fa fa-question-circle\" aria-hidden=\"true\" \r\n                  style={iconStyle}></i></Button>\r\n                </HtmlTooltip>\r\n              </div>\r\n              <div className=\"col-md-12 mobileCharge\" style={{fontFamily: 'consolas', fontSize: '13px',textTransform: 'capitalize'}}>\r\n                      &nbsp;{this.state.chargesInfo}\r\n                     <OverlayTrigger  className=\"mobile\" style={chargesStyle} trigger=\"click\" placement=\"top\" overlay={popover2}>           \r\n                         <i class=\"fa fa-question-circle\" aria-hidden=\"true\"  style={iconStyle}></i>                     \r\n                      </OverlayTrigger >  \r\n                </div>        \r\n                    \r\n            </div>\r\n            <div className=\"btun-box\">\r\n              <button className=\"btun\"  onClick={this.nextClick}> Save <NavigateNextIcon/></button>\r\n              {/* <button className=\"btun\" onClick={this.isConfirm}>Cancel</button> */}\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n\r\n      </Modal>\r\n\r\n    \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nEditPremiumFeature.propTypes = {\r\n\r\n};\r\n\r\nexport default EditPremiumFeature;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\LivePreview.js",["2693","2694","2695","2696","2697","2698","2699","2700","2701","2702","2703","2704","2705","2706","2707","2708","2709","2710","2711","2712","2713"],"import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport Embed from 'react-embed';\r\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\r\nimport LoaderMobile from './LoaderMobile';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\n import PictureAsPdfOutlinedIcon from '@material-ui/icons/PictureAsPdfOutlined';\r\n import DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\n import CameraAltOutlinedIcon from '@material-ui/icons/CameraAltOutlined';\r\n import { MDBIcon } from 'mdbreact';\r\nimport $ from \"jquery\";\r\n class LivePreview extends Component {\r\n    constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n        JM_Email: localStorage.getItem('JM_Email'),\r\n        JM_ID: parseInt(localStorage.getItem('JM_ID')),  \r\n        linkMaster:[],\r\n        userDetails:[],\r\n        themeMasterUser:[],\r\n        category_master:[],\r\n        socialWidget:[],\r\n        category_links:[],\r\n        embed_content:[],   \r\n          productList:[],\r\n          gifts:[],\r\n        isLoggedIn: false,\r\n        JM_Name: '',\r\n        JM_Email: '',\r\n        JM_Url: '',\r\n        JM_Profile_Pic: '',\r\n        JM_User_Profile_Url:  localStorage.getItem('JM_User_Profile_Url'),  \r\n        base_url: process.env.REACT_APP_API_URL,\r\n        root_url: process.env.REACT_APP_ROOT_URL,\r\n        ProfilePath: 'Profile/',\r\n        linkPath: '',\r\n        ProfileimagePath: '',\r\n        open: false,\r\n        isChecked: false,       \r\n        logo:\"\",\r\n        bgColor:'',\r\n        bgImage:\"\",\r\n        showPage:false\r\n  \r\n      }\r\n  console.log(this.props.Url);\r\n    }\r\n    componentDidMount() { \r\n      this.Get_User_Details();\r\n      $(document).ready(function() {\r\n        $('#previewBtn').on('click', function() {\r\n          $('#previewbox').toggleClass('view');\r\n          $('#previewUp').toggleClass('rot');\r\n        });\r\n      })\r\n\r\n    }\r\n  async  Get_User_Details()\r\n  {\r\n     var user_url = this.state.JM_User_Profile_Url;  \r\n      var JSONdata = {\r\n        JM_User_Profile_Url: user_url,\r\n        livePreview:1\r\n      };   \r\n      const API_url = this.state.base_url + \"admin/isExistUrl\";\r\n      const response=await fetch(API_url,{\r\n            method: 'post',\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(JSONdata)\r\n          });\r\n      const data=await response.json();\r\n      if(data.status===1)\r\n        this.setState({\r\n          userDetails:data.userDetails,\r\n          linkMaster:data.linkMaster,\r\n          themeMasterUser:data.themeMasterUser,\r\n          socialWidget:data.socialWidget,\r\n          category_master:data.category_master,\r\n          category_links:data.category_links,\r\n          embed_content:data.embed_content,\r\n          productList:data.productList,\r\n          gifts:data.gifts,\r\n          showPage:true\r\n        });\r\n      else\r\n         this.setState({showPage:false})\r\n\r\n         console.log(data)\r\n  }\r\n\r\n  UpdateMobileView=()=> \r\n  {\r\n    this.Get_User_Details();\r\n  }\r\n  openCollapse = CM_ID=> e => \r\n  {\r\n      CM_ID > 0 ?\r\n        this.setState({ CM_ID_Collapse: CM_ID })\r\n      :\r\n        this.setState({ CM_ID_Collapse : 0 })      \r\n  }\r\n\r\n  render() \r\n  {\r\n    let imagePath=\"\";\r\n    let base_url=this.state.base_url;\r\n    let linkPath=\"\";\r\n    let JM_User_Profile_Url_plus_JM_ID =\"\";\r\n    let JM_Name,JM_Email,JM_Description='';let  JM_Social_Widget_Position=\"\",JM_Verified=0;\r\n\r\n    if(this.state.userDetails !=null && this.state.userDetails.length > 0)\r\n    {\r\n      let len=this.state.userDetails.length;\r\n      for(var i=0;i < len ;i++)\r\n      {\r\n        \r\n        imagePath=process.env.REACT_APP_UPLOAD_URL+this.state.userDetails[i].JM_Profile_Pic;\r\n        linkPath=process.env.REACT_APP_UPLOAD_URL+\"Profile/\"+this.state.userDetails[i].JM_User_Profile_Url+\"_\"+this.state.userDetails[i].JM_ID+\"/\";\r\n        JM_User_Profile_Url_plus_JM_ID = this.state.userDetails[i].JM_User_Profile_Url+\"_\"+this.state.userDetails[i].JM_ID;\r\n        JM_Name=this.state.userDetails[i].JM_Name;\r\n        JM_Email=this.state.userDetails[i].JM_Email;\r\n        JM_Description=this.state.userDetails[i].JM_Description;\r\n        JM_Social_Widget_Position=this.state.userDetails[i].JM_Social_Widget_Position;\r\n        JM_Verified=this.state.userDetails[i].JM_Verified;\r\n        break;\r\n      }\r\n    }\r\n    var bgImage=\"\",fontColor=\"\",back_color=\"\";\r\n    var font_family=\"\",cssClass=\"\",highlightColor=\"\",item_color=\"\",  item_style=\"\",item_border_color='';\r\n    if(this.state.themeMasterUser !=null && this.state.themeMasterUser.length > 0)\r\n    {\r\n      let len=this.state.themeMasterUser.length;\r\n      for(var j=0;j < len ;j++)\r\n      {\r\n        bgImage='url('+process.env.REACT_APP_UPLOAD_URL+this.state.themeMasterUser[j].TM_Back_Image+')';\r\n        fontColor=this.state.themeMasterUser[j].TM_Font_Color\r\n        back_color= this.state.themeMasterUser[j].TM_Back_Color;\r\n        font_family =this.state.themeMasterUser[j].TM_Font;\r\n        highlightColor =this.state.themeMasterUser[j].TM_Highlight_Color;\r\n        cssClass=this.state.themeMasterUser[j].TM_Class_Name+\" \"+font_family;\r\n        item_color= this.state.themeMasterUser[j].TM_Item_Color;\r\n        item_style=this.state.themeMasterUser[j].TM_Item_Style;\r\n        item_border_color=this.state.themeMasterUser[j].TM_Border_Color;\r\n        break;\r\n      }\r\n    }\r\n    const mystyle = {\r\n      color: fontColor,          \r\n      backgroundColor:item_color,\r\n      border:'1px solid '+ item_border_color\r\n    };\r\n    const mystyleForCustomLink = {\r\n      color: fontColor,          \r\n      backgroundColor:item_color ,\r\n      padding:'20px 35px',\r\n      border:'1px solid '+ item_border_color\r\n    };\r\n\r\n    const nameStyle = {\r\n      color: fontColor \r\n    };\r\n    const FolderSubStyle = {\r\n      color: fontColor ,\r\n      fontSize:'10px',\r\n    };\r\n    const mystyleForHightight = {\r\n      color: fontColor,     \r\n     // fontFamily: font_family,\r\n      backgroundColor:highlightColor,\r\n\r\n    };\r\n   const mystyleForHightightFolder={\r\n    color: fontColor,     \r\n     // fontFamily: font_family,\r\n      backgroundColor:highlightColor,\r\n      top:'30px'\r\n    }\r\n      //themeMasterUser\r\n      let SocialWidget;\r\n    \r\n      if(this.state.socialWidget !=null && this.state.socialWidget.length > 0)\r\n      {\r\n          SocialWidget=this.state.socialWidget.map((link,i) =>{\r\n              return (\r\n                      link.SWM_Active===1?\r\n                        <li>\r\n                          {\r\n                          \r\n                            link.SWM_Title==='Email' ?\r\n                            <a href={\"mailto:\"+ link.SWM_Url}>\r\n                               <img src={process.env.REACT_APP_UPLOAD_URL+link.SWM_Icon}/>\r\n                            </a>\r\n                            :\r\n                            <Link to={link.SWM_Url} data-id={link.SWM_ID}>                      \r\n                              <img src={process.env.REACT_APP_UPLOAD_URL+link.SWM_Icon}/>\r\n                            </Link>     \r\n                          }\r\n                                       \r\n                          </li> \r\n                        :\r\n                        null\r\n                    ) \r\n            })\r\n        }\r\n\r\n       \r\n        let productList;\r\n        if(this.state.productList !=null && this.state.productList.length > 0)\r\n        {\r\n          productList=this.state.productList.map((link,i) =>{\r\n                return (\r\n                        link.DA_Active===1?\r\n                         <div className=\"btun-box\">  \r\n                            <button className={\"big-btun mobile \"+item_style+ \" \"+font_family} style={mystyle}>{link.DA_Title}\r\n                            \r\n                            {\r\n                              link.DA_INR_Doller==='INR' ?\r\n                                    \" (Rs.\" + link.DA_Price+\")\"\r\n                              :\r\n                                    \" ($\" + link.DA_Price+\")\"\r\n                           }\r\n                             \r\n                             </button>\r\n                            <div className=\"icon mobile\" style={mystyleForHightight}>\r\n\r\n                             {\r\n                                link.DA_Type==='video'?\r\n                                <PlayCircleOutlineIcon/>\r\n                                :\r\n                                null\r\n                              }\r\n                              {\r\n                                link.DA_Type==='audio'?\r\n                                <AudiotrackIcon/>\r\n                                :\r\n                                null\r\n                              }\r\n                              {\r\n                                link.DA_Type==='image'?\r\n                                <ImageIcon/>\r\n                                :\r\n                                null\r\n                              }\r\n                              {\r\n                                link.DA_Type==='NA'?\r\n                                <CameraAltOutlinedIcon/>\r\n                                :\r\n                                null\r\n                              }\r\n                              {/* /DescriptionOutlinedIcon import PictureAsPdfOutlinedIcon from '@material-ui/icons/PictureAsPdfOutlined'; */}\r\n                              {\r\n                                link.DA_Type==='txt'?\r\n                               \r\n                                <DescriptionOutlinedIcon style={{ fontSize: 35 }}/>\r\n                                :\r\n                                null\r\n                              }\r\n                               {\r\n                                link.DA_Type==='pdf'?\r\n                               \r\n                                <PictureAsPdfOutlinedIcon style={{ fontSize: 35 }}/>\r\n                                :\r\n                                null\r\n                              }\r\n                              \r\n                            </div>\r\n                            <button className={\"buy mobile \" + font_family} data={this.state.productList[i]} style={mystyleForHightight}>Buy</button>\r\n                          </div>\r\n                          :\r\n                          null\r\n                      ) \r\n              })\r\n          }\r\n   \r\n          let gifts;\r\n          if(this.state.gifts!==null && this.state.gifts.length > 0)\r\n          {\r\n            gifts=<div className=\"btun-box\">\r\n                    <button className={\"big-btun mobile \"+item_style+ \" \"+font_family} style={mystyle}>Send Me a Gift</button>\r\n                    <div className=\"icon mobile\" style={mystyleForHightight}>\r\n                        <CardGiftcardIcon/>\r\n                    </div>\r\n                    <button className={\"buy mobile \" + font_family} style={{backgroundColor:highlightColor,color:fontColor}}>View</button>\r\n                </div>\r\n          }      \r\n          \r\n\r\n\r\n\r\n\r\n\r\n\r\n        let category_master;\r\n        category_master=this.state.category_master.map((link,i) =>{\r\n        return (\r\n                <Accordion>\r\n                      {link.CM_Active_Status===1 ?   \r\n                        <>                            \r\n                            <div className=\"btun-box\">                        \r\n                                      <Accordion.Toggle style={mystyle} variant=\"link\" eventKey={link.CM_ID} className={\"big-btun folder-shadow mobile \"+item_style} >\r\n                                         <span style={nameStyle} className={font_family}><b><u>{link.CM_Folder_Title}</u></b></span>\r\n                                            <p style={FolderSubStyle} className={font_family}>{link.CM_Folder_Sub_Title}  </p>\r\n                                    </Accordion.Toggle> \r\n                                         <div className=\"icon mobile\" style={{top:'30px'}} style={mystyleForHightightFolder}>\r\n                                                                                 \r\n                                                     {\r\n                                                            (link.CM_Folder_Back_Image === null || link.CM_Folder_Back_Image === '') && (link.CM_Icon==='' || link.CM_Icon===null)?\r\n                                                           <img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} />\r\n                                                            : (link.CM_Folder_Back_Image !== null || link.CM_Folder_Back_Image !== '') && link.CM_Icon===''?\r\n                                                            <img style={{ width: '100%' }} src={process.env.REACT_APP_UPLOAD_URL + link.CM_Folder_Back_Image} />\r\n                                                            : (link.CM_Icon!=='' || link.CM_Icon!==null) ?\r\n                                                            <MDBIcon icon={link.CM_Icon}/>\r\n                                                            :\r\n                                                            <img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} />\r\n                                                      }\r\n                                        </div>\r\n                                    <Accordion.Collapse eventKey={link.CM_ID} id=\"payout\"> \r\n                                        <>\r\n                                        <div  className={\"folder \"+item_style}>\r\n                                          {\r\n                                                                                             \r\n                                                this.state.linkMaster &&  this.state.linkMaster.map((lnk,i) =>(\r\n                                                  lnk.LM_Url !== \"\" && lnk.LM_Folder_ID > 0 && lnk.LM_Folder_ID===link.CM_ID && lnk.LM_Active===1?\r\n                                                  <div className=\"btun-box\" >\r\n                                                  <a className={\"big-btun mobile \"+item_style +\" \"+ font_family} href={lnk.LM_Url} target=\"_blank\" style={mystyle}>{lnk.LM_Title}</a>\r\n                                                  <div className=\"icon mobile\" style={mystyleForHightight}>\r\n                                                      {\r\n                                                          lnk.LM_Image === '' && (lnk.LM_Icon==='' || lnk.LM_Icon===null) ?\r\n                                                         <img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} />\r\n                                                          : lnk.LM_Image !== '' && lnk.LM_Icon===''  ?\r\n                                                          <img style={{ width: '100%' }} src={process.env.REACT_APP_UPLOAD_URL + lnk.LM_Image} />\r\n                                                          : lnk.LM_Icon !== '' && lnk.LM_Image===''  ?\r\n                                                           <MDBIcon icon={link.LM_Icon}/>\r\n                                                          :\r\n                                                          <img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} />\r\n                                                      }\r\n                                                  \r\n                                                  </div>\r\n                                                  </div>\r\n                                                  :\r\n                                                  null\r\n                                              ))\r\n                                            \r\n                                             }  \r\n                                          </div>        \r\n                                        </>                                \r\n                                    </Accordion.Collapse>\r\n                              \r\n                              </div>\r\n                        </>\r\n                        :\r\n                        null\r\n                      }\r\n                </Accordion>   \r\n               ) \r\n       })\r\n                    \r\n       let embed_content;\r\n       embed_content= this.state.embed_content &&  this.state.embed_content.map((link,i) =>{\r\n         return (\r\n\r\n                    link.LM_Url !== \"\" && link.LM_Folder_ID === 0 && link.LM_Active===1 ?  \r\n                      <div className=\"btun-box mobile\" >\r\n                         <div className={\"product-box \"+item_style +\" \"+ font_family}>\r\n                                 <Embed width={'100%'} url={link.LM_Url} />\r\n                               \r\n                    \r\n                         </div>   \r\n                   \r\n                    </div>\r\n                     :                            \r\n                     null\r\n         )\r\n      })\r\n    \r\n\r\n    return (\r\n           <>\r\n         <div className=\"col-md-4\">\r\n                <div className=\"preview\" id=\"previewbox\">\r\n                <div className=\"previewBtn\" id=\"previewBtn\"><span ><i className=\"fa fa-caret-up\" id=\"previewUp\" aria-hidden=\"true\"></i></span> Preview</div>\r\n                  <h4>Check out the live preview of your page below.</h4>\r\n                  <div className=\"preview-mobile\">\r\n                        {this.state.showPage ?\r\n                        <div className={\"per-prop live\"} data={bgImage} style={{backgroundImage:bgImage,backgroundColor:back_color}}>\r\n                        <div className={cssClass}>  \r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                    {/* <div className=\"per-prop-header\">\r\n                                            <button className=\"btun\">Follow</button>\r\n                                            <button className=\"btun_2\"><ChatOutlinedIcon style={{ fontSize: 35 }}/></button>\r\n                                    </div> */}\r\n                                    <div className=\"per-prop-body mobile\">\r\n                                        {/* <div className={\"overlay \"} style={mystyle}>\r\n\r\n                                        </div> */}\r\n                                        <div className=\"dtail-part\">\r\n                                        <div className=\"prop-pic mobile\">\r\n                                        <img src={imagePath} alt=\"\"/>\r\n                                        </div>                      \r\n                                            <div className={\"name mobile \"+font_family} >\r\n                                             \r\n                                               <h3 className={font_family} style={nameStyle}>{JM_Name}\r\n                                               {\r\n                                                JM_Verified===1 ?\r\n                                                <span className=\"verify-tick\"><img  src=\"/images/verifyIcon.png\"/></span>\r\n                                                :\r\n                                                null\r\n                                               }\r\n                                               \r\n                                                </h3>\r\n                                                  <p className={font_family} style={nameStyle}>{JM_Description}</p>\r\n                                                 </div>\r\n                                            \r\n                                            <div className=\"per-prop-footer\">\r\n                                                <ul className=\"Social-links\">\r\n                                                    { JM_Social_Widget_Position==='top' ? SocialWidget : null}\r\n                                                </ul>\r\n                                            </div>\r\n                                        <div className=\"button-part\">\r\n\r\n                                            {\r\n                                                this.state.linkMaster &&  this.state.linkMaster.map((link,i) =>(\r\n                                                  link.LM_Url !== \"\" && link.LM_Folder_ID === 0 && link.LM_Active===1?\r\n                                                  <div className=\"btun-box\" >\r\n                                                    <a className={\"big-btun mobile \"+item_style+ \" \"+font_family} href={link.LM_Url} target=\"_blank\" style={mystyleForCustomLink}>{link.LM_Title}</a>\r\n                                                    <div className=\"icon mobile\" style={mystyleForHightight}>\r\n                                                        {\r\n                                                            link.LM_Image === '' && (link.LM_Icon==='' || link.LM_Icon===null) ?\r\n                                                              <img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} />\r\n                                                            : link.LM_Image !== '' && link.LM_Icon===''  ?\r\n                                                                <img style={{ width: '100%' }} src={process.env.REACT_APP_UPLOAD_URL + link.LM_Image} />\r\n                                                            : link.LM_Icon !== '' && link.LM_Image===''  ?\r\n                                                               <MDBIcon icon={link.LM_Icon}/>\r\n                                                            :\r\n                                                               <img src={process.env.REACT_APP_UPLOAD_URL + 'no_image.png'} />\r\n                                                        }\r\n                                                    \r\n                                                    </div>\r\n                                                  </div>\r\n                                                  :\r\n                                                  null\r\n                                              ))\r\n                                            }\r\n                                          {embed_content}\r\n                                           \r\n                                            {/* premium content */}\r\n                                            {productList}\r\n                                            {/* <div className=\"btun-box\">\r\n                                              <button className=\"big-btun mobile\">I'll send you a video message</button>\r\n                                              <div className=\"icon mobile\"><PlayCircleOutlineIcon style={{ fontSize: 35 }}/></div>\r\n                                              <button className=\"buy mobile\">Buy</button>\r\n                                            </div> */}\r\n\r\n                                  {/* folder */}\r\n                                  {category_master}\r\n                                \r\n                                  {gifts}  \r\n\r\n                                            {/* <div className={\"reg-box mobile \"+ item_style}   style={mystyle}>\r\n                                                <div className=\"heading mobile\">\r\n                                                    <p style={mystyle} className={font_family}>Get updates about me</p>\r\n                                                </div>\r\n                                                    <input type=\"text\" className={\"form-control mobile \"+ item_style} placeholder=\"Your Name...\"/>\r\n                                                <div className=\"frm-btun\">\r\n                                                    <button className={\"next-btun mobile \"+ item_style +\" \"+ font_family} style={mystyleForHightight}>Next</button>\r\n                                                    <a className={\"log-btun mobile  \"+ font_family}  style={mystyle}>Log in now</a>\r\n                                                </div>\r\n                                            </div> */}\r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"per-prop-footer\">\r\n                                        <ul className=\"Social-links\">\r\n                                            { JM_Social_Widget_Position==='bottom' ? SocialWidget : null}\r\n                                        </ul>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                  <div className=\"col-md-12\">\r\n                                    <div className=\"page-footer-logo mobile \">\r\n                                        <img src={\"images/Logo.png\"} />\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"col-md-12\">\r\n                                  <ul className=\"page-footer-link text-center\" style={{color: fontColor }} >\r\n                                      <li><a href=\"/\" className={font_family} style={{color: fontColor }}  >Explore</a></li> |&nbsp; \r\n                                      <li><a href=\"/join\" className={font_family} style={{color: fontColor }}>Create Page</a></li>\r\n                                    </ul>\r\n                                    \r\n                                </div>\r\n                                </div>  \r\n                            </div>\r\n                        </div>\r\n                        </div> \r\n                        :\r\n                        <>\r\n                        {/* <h1>Page Not Found</h1> */}\r\n                         <LoaderMobile/> \r\n                        </>\r\n                        }\r\n                 </div>\r\n             </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default LivePreview;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\EditSocialWidget.js",["2714","2715"],"import React, { Component } from 'react';\r\n// import {Button} from 'react-bootstrap'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\n\r\n\r\nimport {  NavLink} from 'react-router-dom';\r\n\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport API  from '../services/API';\r\nclass EditSocialWidget extends Component\r\n{\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       openModel:false,\r\n       base_url: process.env.REACT_APP_API_URL,\r\n       root_url: process.env.REACT_APP_ROOT_URL,\r\n     \r\n       show:false,\r\n       open:false,\r\n       JM_ID: parseInt(localStorage.getItem('JM_ID')),  \r\n       SWM_Title:'',\r\n       SWM_Url:'',\r\n       SWM_Icon:'',\r\n       LM_Who_Will_See:1,\r\n       SWM_Style_Type:'',\r\n       selectedFile: null,\r\n       linkMaster:[],\r\n      userDetails:[],\r\n      socialWidget:[],\r\n      category_links:[],\r\n      embed_content:[],\r\n      productList:[],\r\n      title:'',\r\n      msg:'',\r\n      logo:'',\r\n      SWM_Icon_Position:'bottom',\r\n\r\n      Instagram:'https://www.instagram.com/',\r\n      Facebook:'https://www.facebook.com/',\r\n      YouTube:'https://www.youtube.com/',\r\n      Twitter:'https://twitter.com/',\r\n      Snapchat:'https://www.snapchat.com/',\r\n      LinkedIn:'https://www.linkedin.com/',\r\n      Twitch:'https://www.twitch.com/',\r\n      Pinterest:'https://www.pinterest.com/',\r\n      Spotify:'https://www.spotify.com/',\r\n      ClubHouse:'https://www.clubhouse.com/',\r\n      Discord:'https://www.discord.com/',\r\n      Medium:'https://www.medium.com/',\r\n      Whatsapp:'https://wa.me/',\r\n\r\n\r\n      \r\n\r\n    }\r\n    \r\n  }\r\n  ModalClose=()=>{\r\n    this.setState({openModel:false,show:false});\r\n  }\r\n  ModalOpen=()=>{\r\n    this.setState({\r\n        openModel:true,\r\n        show:true,\r\n        SWM_Title:this.props.socialWidget.title,\r\n        SWM_Url:this.props.socialWidget.URL,\r\n        SWM_Icon:this.props.socialWidget.icon,\r\n        SWM_Style_Type:this.props.socialWidget.ItemType==='socialBar' ? 'B' : 'W',\r\n    });\r\n    //console.log(this.props.socialWidget);\r\n  }\r\n  openCollapse = () => {\r\n    !this.state.open ?\r\n      this.setState({ open: true })\r\n      :\r\n      this.setState({ open: false })\r\n      \r\n  }\r\n\r\n  onChangeHandle=(e)=>{\r\n    document.getElementById(\"whatsApp\").innerHTML='';\r\n    document.getElementById('msg_social').innerText='';\r\n      let titleVal=e.target.value;\r\n    this.setState({[e.target.name]:e.target.value});  \r\n    let index = e.nativeEvent.target.selectedIndex;\r\n  //  let label = e.nativeEvent.target[index].text;\r\n    let SWM_Icon = e.target[e.target.selectedIndex].getAttribute('data-icon');\r\n    //console.log(SWM_Icon)\r\n    if(titleVal===\"Instagram\")\r\n        this.setState({SWM_Url:this.state.Instagram,SWM_Icon});\r\n    if(titleVal===\"Facebook\")\r\n        this.setState({SWM_Url:this.state.Facebook,SWM_Icon});\r\n    if(titleVal===\"YouTube\")\r\n        this.setState({SWM_Url:this.state.YouTube,SWM_Icon});\r\n    if(titleVal===\"Twitter\")\r\n        this.setState({SWM_Url:this.state.Twitter,SWM_Icon});\r\n    if(titleVal===\"Twitch\")\r\n        this.setState({SWM_Url:this.state.Twitch,SWM_Icon});\r\n    if(titleVal===\"Snapchat\")\r\n        this.setState({SWM_Url:this.state.Snapchat,SWM_Icon});\r\n    if(titleVal===\"LinkedIn\")\r\n        this.setState({SWM_Url:this.state.LinkedIn,SWM_Icon});\r\n    if(titleVal===\"Pinterest\")\r\n        this.setState({SWM_Url:this.state.Pinterest,SWM_Icon});\r\n    if(titleVal===\"Spotify\")\r\n        this.setState({SWM_Url:this.state.Spotify,SWM_Icon});\r\n    if(titleVal===\"Website\" || titleVal===\"Shop\")\r\n        this.setState({SWM_Url:'https://',SWM_Icon});\r\n    if(titleVal===\"Email\")\r\n         this.setState({SWM_Url:'example@gmail.com',SWM_Icon});\r\n   if(titleVal===\"ClubHouse\")\r\n         this.setState({SWM_Url:this.state.ClubHouse,SWM_Icon});\r\n    if(titleVal===\"Discord\")\r\n         this.setState({SWM_Url:this.state.Discord,SWM_Icon});\r\n    if(titleVal===\"Medium\")\r\n         this.setState({SWM_Url:this.state.Medium,SWM_Icon});\r\n         if(titleVal===\"Whatsapp\")\r\n         {\r\n           document.getElementById(\"whatsApp\").innerHTML='Example Url: https://wa.me/mynumber';\r\n           this.setState({SWM_Url:this.state.Whatsapp,SWM_Icon});\r\n         }\r\n   \r\n}\r\nonChangeHandleURL=(e)=>\r\n{\r\n  this.setState({[e.target.name]:e.target.value});     \r\n}\r\nimageonChange=(e)=>{     \r\n  const file = e.target.files[0];\r\n  this.setState({ selectedFile: e.target.files[0] }); \r\n  this.setState({\r\n    SWM_Icon: URL.createObjectURL(file)\r\n  });\r\n}\r\ndoInsertLink=(event)=>\r\n{  \r\n\r\n\r\n      event.preventDefault();\r\n      this.validate();\r\n      if(this.state.SWM_Url.length===0)\r\n      {\r\n        return false;\r\n      }\r\n      if(this.state.SWM_Title==='Whatsapp')\r\n      {\r\n        if(this.state.SWM_Url.startsWith('https://wa.me/'))\r\n        {\r\n            var whatsApp='https://wa.me/';\r\n             let url=this.state.SWM_Url;\r\n       \r\n            var right_number = parseInt(url.substring(whatsApp.length, url.length));\r\n            if(isNaN(right_number))  //if not number or text\r\n            {\r\n              document.getElementById('msg_social').innerText='* Enter your number after https://wa.me/';\r\n              return false;\r\n            }\r\n            if(right_number.toString().length!==10)  //if not number or text\r\n            {\r\n              document.getElementById('msg_social').innerText='* Enter your 10 digit number after https://wa.me/';\r\n              return false;\r\n            }\r\n  \r\n        }\r\n        else\r\n        {\r\n          document.getElementById('msg_social').innerText='* URL should be like https://wa.me/mynumber';\r\n          return false;\r\n        }\r\n      }\r\n\r\n      const formData = new FormData(); \r\n      const files = event.target.files\r\n      let Api_url=this.state.base_url+'admin/UpdateSocialWidget';\r\n      formData.append('sampleFile', this.state.selectedFile)\r\n      formData.append('SWM_ID', this.props.socialWidget.tableId) \r\n      formData.append('JM_ID', this.state.JM_ID) \r\n      formData.append('SWM_Title', this.state.SWM_Title) \r\n      formData.append('SWM_Url', this.state.SWM_Url)      \r\n      formData.append('SWM_Icon', this.state.SWM_Icon)  \r\n      formData.append('JM_User_Profile_Url_plus_JM_ID', this.props.JM_User_Profile_Url_plus_JM_ID)\r\n      formData.append('SWM_Style_Type', this.state.SWM_Style_Type)\r\n          fetch(Api_url, {\r\n            method: 'POST',       \r\n            headers: {\"authorization\": API.getAuth(),\"id\":API.getId()},  \r\n            body: formData\r\n          })\r\n          .then(response => response.json())\r\n          .then(data => \r\n            {                   \r\n               //console.log(data);   \r\n               this.ModalClose();\r\n               this.Get_User_Details();              \r\n          })\r\n          .catch(error => {\r\n            //console.error(error)\r\n          })\r\n}\r\n\r\nGet_User_Details=()=>{\r\n    var JSONdata = {\r\n      JM_ID: this.state.JM_ID\r\n    };\r\n    const API_url = this.state.base_url + \"admin/userDetailsAll\";\r\n  fetch(API_url,\r\n    {\r\n      method: 'post',\r\n      headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n      body: JSON.stringify(JSONdata)\r\n    })\r\n  .then((response) => response.json())\r\n  .then(data1 => {\r\n    if(data1.status===1)\r\n    {\r\n      const data=API.decryptJson(data1.flag);\r\n      this.setState({\r\n              userDetailsAll: data.data,\r\n              userDetails:data.userDetails,\r\n              themeMasterUser:data.themeMasterUser,\r\n              socialWidget:data.socialWidget,\r\n              gifts:data.gifts, \r\n              category_master:data.category_master,\r\n              title:'Success!!!',\r\n              msg:'Profile is updated',\r\n      });\r\n\r\n      this.props.setStateAfterInsert(this.state);\r\n    }   \r\n      else\r\n        alert('not fetch');\r\n  });\r\n}\r\n\r\nfileSelectHandler=()=> {\r\n  //console.log(\"changed\")\r\n}\r\n\r\nclickhandler = () => {\r\n//console.log(\"clicked\")\r\n}\r\nvalidate=(e)=>{\r\n\r\n    if(this.state.SWM_Title===\"SELECT\")\r\n        return false;\r\n\r\n}\r\n  render(){\r\n  return (\r\n    <>\r\n       <button onClick={this.ModalOpen}><CreateIcon />     \r\n      </button>\r\n      <Modal\r\n        show={this.state.show}\r\n        onHide={this.ModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <p className=\"addnew-title\">Update Social Widgets to your profile</p>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n         <form  onSubmit={this.doInsertLink}>\r\n          <div className=\"addnew-box\">\r\n               <label> Title</label>\r\n                <select className=\"form-control\" name=\"SWM_Title\" data-icon={this.state.SWM_Icon} value={this.state.SWM_Title} onChange={this.onChangeHandle}>\r\n                <option value=\"SELECT\">--SELECT--</option>\r\n                 <option value=\"Instagram\" data-icon=\"faInstagram\">Instagram</option>\r\n                <option value=\"Facebook\" data-icon=\"faFacebookF\">Facebook</option>\r\n                <option value=\"YouTube\" data-icon=\"faYoutube\">YouTube</option>\r\n                <option value=\"Snapchat\" data-icon=\"faSnapchatGhost\">Snapchat</option>\r\n                <option value=\"LinkedIn\" data-icon=\"faLinkedinIn\">LinkedIn</option>\r\n                <option value=\"Twitch\" data-icon=\"faTwitch\">Twitch</option>\r\n\r\n                <option value=\"Twitter\" data-icon=\"faTwitter\">Twitter</option>\r\n                <option value=\"Pinterest\" data-icon=\"faPinterestP\">Pinterest</option>\r\n                <option value=\"Spotify\" data-icon=\"faSpotify\">Spotify</option>\r\n                <option value=\"Website\" data-icon=\"faGlobe\">Website</option>\r\n                <option value=\"Shop\" data-icon=\"faShoppingCart\">Shop</option>\r\n                \r\n                <option value=\"Email\" data-icon=\"faEnvelope\">Email</option>\r\n                <option value=\"ClubHouse\" data-icon=\"faHandPaper\">ClubHouse</option>\r\n                <option value=\"Discord\" data-icon=\"faDiscord\">Discord</option>\r\n                <option value=\"Medium\" data-icon=\"faMedium\">Medium</option>\r\n                <option value=\"Whatsapp\" data-icon=\"faWhatsapp\">Whatsapp</option>\r\n                \r\n                </select>\r\n                <label>Url</label>\r\n                <span style={{fontSize: '12px',float: 'right',fontWeight:'500'}} id=\"whatsApp\"></span>\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"URL\"\r\n                    name=\"SWM_Url\" value={this.state.SWM_Url} onChange={this.onChangeHandleURL}/>\r\n              <label>Social Media Link Style </label>\r\n              <select style={{display:'block'}} className=\"form-control\" name=\"SWM_Style_Type\" value={this.state.SWM_Style_Type} onChange={this.onChangeHandle}>\r\n                <option value=\"W\">As icon</option>\r\n                <option value=\"B\">As bar</option>               \r\n              </select>\r\n              <span id=\"msg_social\" style={{fontSize: '12px',color: 'red'}}></span>\r\n                      {/* <label>Icons Position</label>\r\n                        <select className=\"form-control\" name=\"SWM_Icon_Position\" value={this.state.SWM_Icon_Position} onChange={this.onChangeHandle}>                         \r\n                          <option value=\"bottom\">Bottom</option>\r\n                          <option value=\"top\">Top</option>\r\n                        </select> */}\r\n         \r\n           \r\n            <div className=\"btun-box\">\r\n              <button className=\"btun btun_1\">Update Widget</button>\r\n              <button className=\"btun\" onClick={this.ModalClose}>Cancel</button>\r\n\r\n              <span  className=\"gotosetting\"> <i className=\"fa fa-cog\"></i>\r\n                  \r\n                  <NavLink \r\n                      to={{ pathname: \"/settings\", userDetails: this.props.userDetails }} >\r\n                              &nbsp; Change Widget Position\r\n                    </NavLink>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          </form>\r\n        </Modal.Body>\r\n\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n}\r\n\r\nexport default EditSocialWidget;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\SocialWidget.js",["2716","2717"],"import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\nimport API from '../services/API';\r\nclass SocialWidget extends Component\r\n{\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       openModel:false,\r\n       base_url: process.env.REACT_APP_API_URL,\r\n       root_url: process.env.REACT_APP_ROOT_URL,\r\n     \r\n       show:false,\r\n       open:false,\r\n       JM_ID:this.props.JM_ID,\r\n       SWM_Title:'',\r\n       SWM_Url:'',\r\n       SWM_Icon:'',\r\n       LM_Who_Will_See:1,\r\n       selectedFile: null,\r\n       linkMaster:[],\r\n      userDetails:[],\r\n      socialWidget:[],\r\n      title:'',\r\n      msg:'',\r\n      logo:'',\r\n      SWM_Icon_Position:'bottom',\r\n\r\n      Instagram:'https://www.instagram.com/',\r\n      Facebook:'https://www.facebook.com/',\r\n      YouTube:'https://www.youtube.com/',\r\n      Twitter:'https://twitter.com/',\r\n      Snapchat:'https://www.snapchat.com/',\r\n      LinkedIn:'https://www.linkedin.com/',\r\n      Twitch:'https://www.twitch.com/',\r\n      Pinterest:'https://www.pinterest.com/',\r\n      Spotify:'https://www.spotify.com/',\r\n      category_links:[],\r\n      embed_content:[],\r\n      productList:[],\r\n      \r\n\r\n    }\r\n    //console.log(this.props.JM_User_Profile_Url_plus_JM_ID);\r\n  }\r\n  ModalClose=()=>{\r\n    this.setState({openModel:false,show:false});\r\n  }\r\n  ModalOpen=()=>{\r\n    this.setState({openModel:true,show:true});\r\n  }\r\n  openCollapse = () => {\r\n    !this.state.open ?\r\n      this.setState({ open: true })\r\n      :\r\n      this.setState({ open: false })\r\n      \r\n  }\r\n\r\n  onChangeHandle=(e)=>{\r\n      let titleVal=e.target.value;\r\n    this.setState({[e.target.name]:e.target.value});  \r\n    let index = e.nativeEvent.target.selectedIndex;\r\n  //  let label = e.nativeEvent.target[index].text;\r\n    let SWM_Icon = e.target[e.target.selectedIndex].getAttribute('data-icon');\r\n    //console.log(SWM_Icon)\r\n    if(titleVal===\"Instagram\")\r\n        this.setState({SWM_Url:this.state.Instagram,SWM_Icon});\r\n    if(titleVal===\"Facebook\")\r\n        this.setState({SWM_Url:this.state.Facebook,SWM_Icon});\r\n    if(titleVal===\"YouTube\")\r\n        this.setState({SWM_Url:this.state.YouTube,SWM_Icon});\r\n    if(titleVal===\"Twitter\")\r\n        this.setState({SWM_Url:this.state.Twitter,SWM_Icon});\r\n    if(titleVal===\"Twitch\")\r\n        this.setState({SWM_Url:this.state.Twitch,SWM_Icon});\r\n    if(titleVal===\"Snapchat\")\r\n        this.setState({SWM_Url:this.state.Snapchat,SWM_Icon});\r\n    if(titleVal===\"LinkedIn\")\r\n        this.setState({SWM_Url:this.state.LinkedIn,SWM_Icon});\r\n    if(titleVal===\"Pinterest\")\r\n        this.setState({SWM_Url:this.state.Pinterest,SWM_Icon});\r\n    if(titleVal===\"Spotify\")\r\n        this.setState({SWM_Url:this.state.Spotify,SWM_Icon});\r\n    if(titleVal===\"Website\" || titleVal===\"Shop\")\r\n        this.setState({SWM_Url:'https://',SWM_Icon});\r\n    if(titleVal===\"Email\")\r\n         this.setState({SWM_Url:'example@gmail.com',SWM_Icon});\r\n\r\n\r\n   \r\n}\r\nonChangeHandleURL=(e)=>\r\n{\r\n  this.setState({[e.target.name]:e.target.value});     \r\n}\r\nimageonChange=(e)=>{     \r\n  const file = e.target.files[0];\r\n  this.setState({ selectedFile: e.target.files[0] }); \r\n  this.setState({\r\n    SWM_Icon: URL.createObjectURL(file)\r\n  });\r\n}\r\ndoInsertLink=(event)=>{  \r\n      event.preventDefault();\r\n      this.validate();\r\n      const formData = new FormData(); \r\n      const files = event.target.files\r\n      let Api_url=this.state.base_url+'admin/InsertSocialWidget';\r\n      formData.append('sampleFile', this.state.selectedFile)\r\n      formData.append('JM_ID', this.state.JM_ID) \r\n      formData.append('SWM_Title', this.state.SWM_Title) \r\n      formData.append('SWM_Url', this.state.SWM_Url)      \r\n      formData.append('SWM_Icon', this.state.SWM_Icon)  \r\n      formData.append('JM_User_Profile_Url_plus_JM_ID', this.props.JM_User_Profile_Url_plus_JM_ID)\r\n      \r\n          fetch(Api_url, {\r\n            method: 'POST',         \r\n            body: formData\r\n          })\r\n          .then(response => response.json())\r\n          .then(data => \r\n            {                   \r\n              if(data.status===1)\r\n              {\r\n                this.ModalClose();\r\n                this.Get_User_Details();  \r\n              }\r\n              else\r\n              {\r\n                API.minusResponse(data);  \r\n              }            \r\n          })\r\n          .catch(error => {\r\n         \r\n            \r\n          })\r\n}\r\n\r\nGet_User_Details = () => {\r\n    var JSONdata = {\r\n      JM_ID: this.state.JM_ID\r\n    };\r\n    const API_url = this.state.base_url + \"admin/userDetails\";\r\n  fetch(API_url,\r\n    {\r\n      method: 'post',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(JSONdata)\r\n    })\r\n  .then((response) => response.json())\r\n  .then(data => {\r\n    if(data.status===1)\r\n    {\r\n      this.setState({\r\n        userDetails:data.userDetails,\r\n        linkMaster:data.linkMaster,\r\n        LM_Title:'',\r\n        LM_Url:'',\r\n        LM_Image:'',\r\n        LM_Who_Will_See:1,\r\n        selectedFile: null,\r\n        title:'Success!!!',\r\n        msg:'Profile is updated',\r\n        socialWidget:data.socialWidget,\r\n        embed_content:data.embed_content,\r\n        category_master:data.category_master,\r\n        category_links:data.category_links,\r\n        productList:data.productList,\r\n        gifts: data.gifts,\r\n      });\r\n      this.props.setStateAfterInsert(this.state);\r\n    }   \r\n      else\r\n        alert('not fetch');\r\n  });\r\n  \r\n\r\n}\r\n\r\nfileSelectHandler=()=> {\r\n  //console.log(\"changed\")\r\n}\r\n\r\nclickhandler = () => {\r\n//console.log(\"clicked\")\r\n}\r\nvalidate=(e)=>{\r\n\r\n    if(this.state.SWM_Title===\"SELECT\")\r\n        return false;\r\n\r\n}\r\n  render(){\r\n  return (\r\n    <>\r\n      <div className=\"card-btun\" onClick={this.ModalOpen}><AddCircleOutlineOutlinedIcon />\r\n        <h4>Social Widgets  </h4>  <p>Share your socials</p>\r\n      </div>\r\n      <Modal\r\n        show={this.state.show}\r\n        onHide={this.ModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <p className=\"addnew-title\">Add Social Widgets to your profile </p>\r\n          \r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n         <form  onSubmit={this.doInsertLink}>\r\n          <div className=\"addnew-box\">\r\n               <label> Social media platform</label>\r\n                <select className=\"form-control\" name=\"SWM_Title\" data-icon={this.state.SWM_Icon} value={this.state.SWM_Title} onChange={this.onChangeHandle}>\r\n                <option value=\"SELECT\">--SELECT--</option>\r\n                <option value=\"Instagram\" data-icon=\"social/instagram.png\">Instagram</option>\r\n                <option value=\"Facebook\" data-icon=\"social/facebook.png\">Facebook</option>\r\n                <option value=\"YouTube\" data-icon=\"social/youtube.png\">YouTube</option>\r\n                <option value=\"Snapchat\" data-icon=\"social/snapchat.png\">Snapchat</option>\r\n                <option value=\"LinkedIn\" data-icon=\"social/linkedIn.png\">LinkedIn</option>\r\n                <option value=\"Twitch\" data-icon=\"social/twitch.png\">Twitch</option>\r\n                <option value=\"Twitter\" data-icon=\"social/twitter.png\">Twitter</option>\r\n                <option value=\"Pinterest\" data-icon=\"social/pinterest.png\">Pinterest</option>\r\n                <option value=\"Spotify\" data-icon=\"social/spotify.png\">Spotify</option>\r\n                <option value=\"Website\" data-icon=\"social/website.png\">Website</option>\r\n                <option value=\"Shop\" data-icon=\"social/shop.png\">Shop</option>\r\n                <option value=\"Email\" data-icon=\"social/email.png\">Email</option>\r\n                \r\n                <option value=\"Website\" data-icon=\"social/website.png\">Website</option>\r\n                <option value=\"Shop\" data-icon=\"social/shop.png\">Shop</option>\r\n                <option value=\"Email\" data-icon=\"social/email.png\">Email</option>\r\n                </select>\r\n                <label>URL</label>\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"URL\"\r\n                    name=\"SWM_Url\" value={this.state.SWM_Url} onChange={this.onChangeHandleURL}/>\r\n \r\n            <div className=\"btun-box\">\r\n              <button className=\"btun btun_1\">Add Widget</button>\r\n              <button className=\"btun\" onClick={this.ModalClose}>Cancel</button>\r\n             <span className=\"gotosetting\"> <i className=\"fa fa-cog\"></i>\r\n          \r\n                 <NavLink \r\n                     to={{ pathname: \"/settings\", userDetails: this.props.userDetails }} >\r\n                              &nbsp; Change Widget Position\r\n                    </NavLink>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          </form>\r\n        </Modal.Body>\r\n\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n}\r\n\r\nexport default SocialWidget;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\DirectAccess.js",[],"E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\AddNewLink.js",["2718","2719"],"import React, { Component } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport API  from '../services/API';\r\nimport { MDBIcon } from 'mdbreact';\r\nclass AddNewLink extends Component\r\n{\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       openModel:false,\r\n       base_url: process.env.REACT_APP_API_URL,\r\n       root_url: process.env.REACT_APP_ROOT_URL,\r\n       show:false,\r\n       open:false,\r\n       JM_ID:this.props.JM_ID,\r\n       LM_Title:'',\r\n       LM_Url:'',\r\n       LM_Image:'',\r\n       LM_Who_Will_See:1,\r\n       selectedFile: null,\r\n       linkMaster:[],\r\n      userDetails:[],\r\n      socialWidget:[],\r\n      embed_content:[],\r\n      productList:[],\r\n      title:'',\r\n      msg:'',\r\n      logo:'',\r\n      activeIcon:'',\r\n      isDisplayIcon:'block',\r\n      isDisplayImage:'none',\r\n      iconCheked:true,\r\n      imageCheked:false,\r\n\r\n      errMsg:'',\r\n      errColor:''\r\n      \r\n    }\r\n    console.log(this.props.JM_User_Profile_Url_plus_JM_ID);\r\n  }\r\n  ModalClose=()=>{\r\n    this.setState({openModel:false,show:false});\r\n  }\r\n  ModalOpen=()=>{\r\n    this.setState({openModel:true,show:true});\r\n  }\r\n  openCollapse = () => {\r\n    !this.state.open ?\r\n      this.setState({ open: true })\r\n      :\r\n      this.setState({ open: false })\r\n      \r\n  }\r\n\r\n  onChangeHandle=(e)=>{\r\n    this.setState({[e.target.name]:e.target.value});     \r\n}\r\nonChangeHandleURL=(e)=>\r\n{\r\n // let value = e.target.value\r\n  //value = value.replace(/[^A-Za-z]/ig, '')\r\n  this.setState({ JM_User_Profile_Url: e.target.value.replace(/[^\\w\\s]/gi, \"\") });     \r\n}\r\nimageonChange=(e)=>{     \r\n  const file = e.target.files[0];\r\n  this.setState({ selectedFile: e.target.files[0] }); \r\n  this.setState({\r\n    LM_Image: URL.createObjectURL(file)\r\n  });\r\n}\r\ndoInsertLink=(event)=>{  \r\n      event.preventDefault();\r\n\r\n      if(this.state.LM_Title.length === 0)\r\n      {\r\n        this.setState({\r\n          errMsg:'Enter Title',\r\n          errColor:'#ff6a6e'\r\n         })\r\n        return false;\r\n      }\r\n      if(this.state.LM_Url.length === 0)\r\n      {\r\n        this.setState({\r\n          errMsg:'Enter URL',\r\n          errColor:'#ff6a6e'\r\n         })\r\n        return false;\r\n      }\r\n     if(this.state.LM_Url.length > 0 && this.state.LM_Url.includes('https://')===false)\r\n      {\r\n          this.setState({\r\n          errMsg:'Invalid URL, Enter correct URL',\r\n          errColor:'#ff6a6e'\r\n          })\r\n        return false;\r\n      }\r\n      else\r\n      {\r\n      const formData = new FormData(); \r\n      const files = event.target.files\r\n      let Api_url=this.state.base_url+'admin/InsertLink';\r\n      formData.append('sampleFile', this.state.selectedFile)\r\n      formData.append('JM_ID', this.state.JM_ID) \r\n      formData.append('LM_Title', this.state.LM_Title) \r\n      formData.append('LM_Url', this.state.LM_Url) \r\n      formData.append('LM_Image', this.state.LM_Image)\r\n      formData.append('LM_Who_Will_See', this.state.LM_Who_Will_See)\r\n      formData.append('JM_User_Profile_Url_plus_JM_ID', this.props.JM_User_Profile_Url_plus_JM_ID)\r\n      formData.append('LM_Icon', this.state.activeIcon)\r\n      //activeIcon\r\n          fetch(Api_url, {\r\n            method: 'POST',         \r\n            body: formData\r\n          })\r\n          .then(response => response.json())\r\n          .then(data => \r\n            {                   \r\n               console.log(data);   \r\n               this.ModalClose();\r\n              this.Get_User_Details();    \r\n               \r\n               //this.GetuserDetailsAll();    \r\n          })\r\n          .catch(error => {\r\n            console.error(error)\r\n          })\r\n        }\r\n}\r\n//10-may-2021\r\nGetuserDetailsAll=()=>{\r\n  var JSONdata = {\r\n    JM_ID: this.state.JM_ID\r\n  };\r\n  const API_url = this.state.base_url + \"admin/userDetailsAll\";\r\nfetch(API_url,\r\n  {\r\n    method: 'post',\r\n    headers: { \"Content-Type\": \"application/json\",\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n    body: JSON.stringify(JSONdata)\r\n  })\r\n.then((response) => response.json())\r\n.then(data => {\r\n  if(data.status===1)\r\n  {\r\n   \r\n     this.setState({\r\n       userDetailsAll: data.data,\r\n       themeMasterUser:data.themeMasterUser   \r\n     });\r\n\r\n    this.props.setStateAfterInsert(this.state);\r\n  }   \r\n    else\r\n      alert('not fetch');\r\n});\r\n}\r\nvalidate=()=>{\r\n  if(this.state.LM_Url.length===0)\r\n  {\r\n\r\n  }\r\n}\r\nGet_User_Details = () => {\r\n    var JSONdata = {\r\n      JM_ID: this.state.JM_ID\r\n    };\r\n    const API_url = this.state.base_url + \"admin/userDetails\";\r\n  fetch(API_url,\r\n    {\r\n      method: 'post',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(JSONdata)\r\n    })\r\n  .then((response) => response.json())\r\n  .then(data => {\r\n    if(data.status===1)\r\n    {\r\n      this.setState({\r\n        userDetails:data.userDetails,\r\n        linkMaster:data.linkMaster,\r\n        LM_Title:'',\r\n        LM_Url:'',\r\n        LM_Image:'',\r\n        LM_Who_Will_See:1,\r\n        selectedFile: null,\r\n        title:'Success!!!',\r\n        msg:'Profile is updated',\r\n        socialWidget:data.socialWidget,\r\n        category_master:data.category_master,\r\n        category_links:data.category_links,\r\n        embed_content:data.embed_content,\r\n        productList:data.productList,\r\n        gifts: data.gifts,\r\n      });\r\n      this.props.setStateAfterInsert(this.state);\r\n    }   \r\n      else\r\n        alert('not fetch');\r\n  });\r\n  \r\n\r\n}\r\n\r\nfileSelectHandler=()=> {\r\n  console.log(\"changed\")\r\n}\r\n\r\nclickhandler = () => {\r\nconsole.log(\"clicked\")\r\n}\r\nsetActive=(e)=>{\r\n  e.preventDefault();\r\n\r\n  var icon = e.currentTarget.attributes['data-id'].value;\r\n  this.setState({\r\n    activeIcon:icon\r\n  })\r\n}\r\nshowHideDiv=(e)=>{\r\n\r\n  if(e.target.value==='icon')\r\n  {\r\n    this.setState({\r\n      isDisplayIcon:\"block\", isDisplayImage:\"none\",\r\n      iconCheked:true,imageCheked:false\r\n    })\r\n  }\r\n\r\n  if(e.target.value==='image')\r\n  {\r\n    this.setState({\r\n      isDisplayIcon:\"none\", isDisplayImage:\"block\",\r\n      iconCheked:false,imageCheked:true\r\n    })\r\n  }\r\n}\r\n  render(){\r\n  return (\r\n    <>\r\n      <div className=\"card-btun\" onClick={this.ModalOpen}><AddCircleOutlineOutlinedIcon />\r\n        <h4>Custom Links</h4> <p>Guide your followers</p>\r\n      </div>\r\n      <Modal\r\n        show={this.state.show}\r\n        onHide={this.ModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <p className=\"addnew-title\">Add a link to your profile</p>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n         <form  onSubmit={this.doInsertLink}>\r\n          <div className=\"addnew-box\">\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Title\"\r\n             name=\"LM_Title\" value={this.state.LM_Title} onChange={this.onChangeHandle}/>\r\n\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"https://\"\r\n           name=\"LM_Url\" value={this.state.LM_Url} onChange={this.onChangeHandle} />\r\n\r\n           <div className=\"image-btun-box text-center\">\r\n\r\n             <input type=\"radio\" checked={this.state.iconCheked} className=\"setCursor\" name=\"selection\" id=\"icon_chk\" value=\"icon\" onClick={this.showHideDiv}/>\r\n             <label for=\"icon_chk\" className=\"setCursor\"> &nbsp;Icon&nbsp; </label>\r\n              <input type=\"radio\"  checked={this.state.imageCheked} className=\"setCursor\"  name=\"selection\"  id=\"image_chk\" value=\"image\" onClick={this.showHideDiv}/>\r\n              <label for=\"image_chk\" className=\"setCursor\"> \r\n                   &nbsp;Image&nbsp;\r\n              </label>\r\n           </div>\r\n           {/* icon */}\r\n            <div style={{display:this.state.isDisplayIcon}}>\r\n                <label>What would you like the icon to be?</label> \r\n                <div className=\"image-btun-box\" >\r\n                  <div className=\"iconbox\">\r\n                      <div \r\n                          className={this.state.activeIcon === \"external-link-alt\" ? 'icon active' : 'icon'}  data-id=\"external-link-alt\"  onClick={this.setActive}>\r\n                          <MDBIcon icon=\"external-link-alt\" size=\"2x\"/>                   \r\n                        \r\n                  \r\n                      </div>\r\n                      <div className=\"icon\"\r\n                      className={this.state.activeIcon === \"lightbulb\" ? 'icon active' : 'icon'} data-id=\"lightbulb\"   onClick={this.setActive}>\r\n                      \r\n                        <MDBIcon icon=\"lightbulb\" size=\"2x\"/>\r\n                      </div>\r\n                      <div \r\n                      className={this.state.activeIcon === \"anchor\" ? 'icon active' : 'icon'} data-id=\"anchor\"    onClick={this.setActive}>\r\n                          <MDBIcon icon=\"anchor\" size=\"2x\"/>\r\n                          \r\n                      </div>\r\n                      <div \r\n                        className={this.state.activeIcon === \"link\" ? 'icon active' : 'icon'}  data-id=\"link\"  onClick={this.setActive}>\r\n                          <MDBIcon icon=\"link\" size=\"2x\"/>\r\n                      </div>\r\n                      <div \r\n                        className={this.state.activeIcon === \"external-link-square-alt\" ? 'icon active' : 'icon'} data-id=\"external-link-square-alt\"    onClick={this.setActive}>\r\n                          <MDBIcon icon=\"external-link-square-alt\" size=\"2x\"/>\r\n                      </div>\r\n    \r\n                      <div \r\n                        className={this.state.activeIcon === \"archway\" ? 'icon active' : 'icon'} data-id=\"archway\" onClick={this.setActive}>\r\n                          <MDBIcon icon=\"archway\" size=\"2x\"/>                   \r\n                      </div>\r\n\r\n\r\n                      <div  \r\n                        className={this.state.activeIcon === \"ankh\" ? 'icon active' : 'icon'} data-id=\"ankh\" onClick={this.setActive}>\r\n                          <MDBIcon icon=\"ankh\" size=\"2x\" />\r\n                      </div>\r\n                      <div \r\n                      className={this.state.activeIcon === \"angle-double-right\" ? 'icon active' : 'icon'} data-id=\"angle-double-right\"  onClick={this.setActive}>\r\n                        <MDBIcon icon=\"angle-double-right\" size=\"2x\" />                   \r\n                      </div>\r\n                      <div \r\n                        className={this.state.activeIcon === \"cannabis\" ? 'icon active' : 'icon'} data-id=\"cannabis\"  onClick={this.setActive}>\r\n                            <MDBIcon icon=\"cannabis\" data-id=\"cannabis\" size=\"2x\" />  \r\n                      </div>\r\n                      <div \r\n                        className={this.state.activeIcon === \"chess-queen\" ? 'icon active' : 'icon'} data-id=\"chess-queen\" onClick={this.setActive}>\r\n                            <MDBIcon icon=\"chess-queen\" data-id=\"chess-queen\"  size=\"2x\" />   \r\n                      </div>\r\n                    \r\n                  </div>\r\n                </div>\r\n            </div>\r\n\r\n            \r\n            {/* image */}\r\n            <div style={{display:this.state.isDisplayImage}}>\r\n                <label>What would you like the Image to be? </label>\r\n                <div className=\"image-btun-box\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                      <div className=\"view-image\">\r\n                        <img  src={this.state.LM_Image} alt=\"\"/>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">                   \r\n                        <label className=\"up-ico\" htmlFor=\"selectImage\">\r\n                          Upload an Image               </label>        \r\n                          <input type=\"file\" id=\"prop_up\" accept=\"image/*\" name=\"photo\" style={{ display:\"none\"}} \r\n                                onChange={this.imageonChange}/>         \r\n                          <input id='selectImage' type=\"file\" style={{ display:\"none\"}}  onClick={this.clickhandler} onChange={this.imageonChange} />\r\n                      </div>  \r\n                    \r\n                  </div>\r\n                </div>\r\n            </div>\r\n\r\n                <select style={{display:'none'}} className=\"form-control\" name=\"LM_Who_Will_See\" value={this.state.LM_Who_Will_See} onChange={this.onChangeHandle}>\r\n                  <option value=\"1\">Everyone</option>\r\n                  <option value=\"2\">My Followers</option>\r\n                  <option value=\"3\">People I follow</option>\r\n                </select>\r\n                <div className=\"btun-box\">\r\n                  <button className=\"btun btun_1\">Add Links</button>\r\n                  <button className=\"btun\" onClick={this.ModalClose}>Cancel</button>\r\n                </div>\r\n                <p style={{color:this.state.errColor}}>{this.state.errMsg}</p>\r\n\r\n            </div>          \r\n        \r\n     \r\n          </form>\r\n        </Modal.Body>\r\n\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n}\r\n\r\nexport default AddNewLink;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\EditLinks.js",["2720","2721","2722","2723","2724","2725","2726","2727","2728","2729","2730","2731","2732"],"import React, { Component } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport { MDBIcon } from 'mdbreact';\r\nclass EditLinks extends Component\r\n{\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       openModel:false,\r\n       base_url: process.env.REACT_APP_API_URL,\r\n       root_url: process.env.REACT_APP_ROOT_URL,\r\n       show:false,\r\n       open:false,\r\n       JM_ID:this.props.data.JM_ID,\r\n       LM_Title:this.props.data.LM_Title,\r\n       LM_Url:this.props.data.LM_Url,\r\n       LM_Image:this.props.data.LM_Image,\r\n       LM_Who_Will_See:this.props.data.LM_Who_Will_See,\r\n       selectedFile: null,\r\n       linkMaster:[],\r\n      userDetails:[],\r\n      productList:[],\r\n      activeIcon:'',\r\n      isDisplayIcon:'block',\r\n      isDisplayImage:'none',\r\n      iconCheked:true,\r\n      imageCheked:false,\r\n      fromEdit:true\r\n    }\r\n    console.log(this.props.data.LM_Who_Will_See);\r\n\r\n  }\r\n  ModalClose=()=>{\r\n    this.setState({openModel:false,show:false});\r\n  }\r\n  ModalOpen=()=>{\r\n    this.setState({openModel:true,show:true});\r\n\r\n   // console.log(this.props.data);\r\n      this.setState({ \r\n        JM_ID:this.props.data.JM_ID,\r\n        LM_ID:this.props.data.LM_ID,\r\n        LM_Title:this.props.data.LM_Title,\r\n        LM_Url:this.props.data.LM_Url,\r\n        LM_Image:this.props.data.LM_Image,\r\n        LM_Who_Will_See:this.props.data.LM_Who_Will_See,\r\n        selectedFile: null,\r\n        linkMaster:[],\r\n        userDetails:[],\r\n        category_master:[],\r\n        category_links:[],\r\n        embed_content:[],\r\n        fromEdit:true,\r\n        activeIcon:this.props.data.LM_Icon\r\n    });\r\n  }\r\n  openCollapse = () => {\r\n    !this.state.open ?\r\n      this.setState({ open: true })\r\n      :\r\n      this.setState({ open: false })\r\n      \r\n  }\r\n\r\n  onChangeHandle=(e)=>{\r\n          this.setState({[e.target.name]:e.target.value});     \r\n}\r\n\r\nimageonChange=(e)=>{     \r\n  const file = e.target.files[0];\r\n  this.setState({ selectedFile: e.target.files[0] }); \r\n  this.setState({\r\n    LM_Image: URL.createObjectURL(file),\r\n    fromEdit:false\r\n  });\r\n}\r\nonChangeHandleURL=(e)=>\r\n{\r\n // let value = e.target.value\r\n  //value = value.replace(/[^A-Za-z]/ig, '')\r\n  this.setState({ JM_User_Profile_Url: e.target.value.replace(/[^\\w\\s]/gi, \"\") });     \r\n}\r\n\r\ndoUpdateLink=(event)=>{  \r\n      event.preventDefault();\r\n\r\n      if(this.state.LM_Url.length === 0 || this.state.LM_Title.length === 0)\r\n      {\r\n        return false;\r\n      }\r\n      else\r\n      {\r\n      const formData = new FormData(); \r\n      const files = event.target.files\r\n      let Api_url=this.state.base_url+'admin/UpdateLink';\r\n      formData.append('sampleFile', this.state.selectedFile)\r\n      formData.append('LM_ID', this.props.data.LM_ID) \r\n      formData.append('LM_Title', this.state.LM_Title) \r\n      formData.append('LM_Url', this.state.LM_Url) \r\n      formData.append('LM_Image', this.state.LM_Image)\r\n      formData.append('LM_Who_Will_See', this.state.LM_Who_Will_See)\r\n      formData.append('JM_User_Profile_Url_plus_JM_ID', this.props.data.JM_User_Profile_Url+\"_\"+this.props.data.JM_ID)\r\n      formData.append('LM_Icon', this.state.activeIcon)\r\n          fetch(Api_url, {\r\n            method: 'POST',         \r\n            body: formData\r\n          })\r\n          .then(response => response.json())\r\n          .then(data => \r\n            {                   \r\n               console.log(data);   \r\n               this.ModalClose();\r\n               this.Get_User_Details();              \r\n          })\r\n          .catch(error => {\r\n            console.error(error)\r\n          })\r\n        }\r\n}\r\n\r\nGet_User_Details = () => {\r\n    var JSONdata = {\r\n      JM_ID: this.state.JM_ID\r\n    };\r\n    const API_url = this.state.base_url + \"admin/userDetails\";\r\n  fetch(API_url,\r\n    {\r\n      method: 'post',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(JSONdata)\r\n    })\r\n  .then((response) => response.json())\r\n  .then(data => {\r\n    if(data.status===1)\r\n    {\r\n      this.setState({\r\n        userDetails:data.userDetails,\r\n        linkMaster:data.linkMaster,\r\n        LM_Title:'',\r\n        LM_Url:'',\r\n        LM_Image:'',\r\n        LM_Who_Will_See:1,\r\n        selectedFile: null,\r\n        title:'Success!!!',\r\n        msg:'Profile is updated',\r\n        socialWidget:data.socialWidget,\r\n        category_master:data.category_master,\r\n        category_links:data.category_links,\r\n        embed_content:data.embed_content,\r\n        productList:data.productList,\r\n        gifts: data.gifts,\r\n      });\r\n      this.props.setStateAfterInsert(this.state);\r\n    }   \r\n      else\r\n        alert('not fetch');\r\n  });\r\n  \r\n\r\n}\r\n\r\n\r\nsetActive=(e)=>{\r\n  e.preventDefault();\r\n\r\n  var icon = e.currentTarget.attributes['data-id'].value;\r\n  this.setState({\r\n    activeIcon:icon\r\n  })\r\n}\r\nshowHideDiv=(e)=>{\r\n\r\n  if(e.target.value==='icon')\r\n  {\r\n    this.setState({\r\n      isDisplayIcon:\"block\", isDisplayImage:\"none\",\r\n      iconCheked:true,imageCheked:false\r\n    })\r\n  }\r\n\r\n  if(e.target.value==='image')\r\n  {\r\n    this.setState({\r\n      isDisplayIcon:\"none\", isDisplayImage:\"block\",\r\n      iconCheked:false,imageCheked:true\r\n    })\r\n  }\r\n}\r\n  render(){\r\n    var imagePath=process.env.REACT_APP_UPLOAD_URL+this.state.LM_Image;\r\n  return (\r\n    <>\r\n     <button onClick={this.ModalOpen}><CreateIcon />     \r\n      </button>\r\n      <Modal\r\n        show={this.state.show}\r\n        onHide={this.ModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <p className=\"addnew-title\">Edit Link</p>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <form  onSubmit={this.doUpdateLink}>\r\n          <div className=\"addnew-box\">\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Title\"\r\n             name=\"LM_Title\" value={this.state.LM_Title} onChange={this.onChangeHandle}/>\r\n\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"https://\"\r\n           name=\"LM_Url\" value={this.state.LM_Url} onChange={this.onChangeHandle} />\r\n\r\n           \r\n              <div className=\"image-btun-box text-center\">\r\n\r\n                    <input type=\"radio\" checked={this.state.iconCheked} className=\"setCursor\" name=\"selection\" id=\"icon_chk\" value=\"icon\" onClick={this.showHideDiv}/>\r\n                    <label for=\"icon_chk\" className=\"setCursor\"> &nbsp;Icon&nbsp; </label>\r\n                    <input type=\"radio\"  checked={this.state.imageCheked} className=\"setCursor\"  name=\"selection\"  id=\"image_chk\" value=\"image\" onClick={this.showHideDiv}/>\r\n                    <label for=\"image_chk\" className=\"setCursor\"> \r\n                          &nbsp;Image&nbsp;\r\n                    </label>\r\n              </div>\r\n              {/* icon */}\r\n              <div style={{display:this.state.isDisplayIcon}}>\r\n                  <label>What would you like the icon to be?</label> \r\n                  <div className=\"image-btun-box\" >\r\n                    <div className=\"iconbox\">\r\n                        <div className=\"icon\"  \r\n                            className={this.state.activeIcon === \"external-link-alt\" ? 'icon active' : 'icon'}  data-id=\"external-link-alt\"  onClick={this.setActive}>\r\n                            <MDBIcon icon=\"external-link-alt\" size=\"2x\"/>                   \r\n                          \r\n                    \r\n                        </div>\r\n                        <div className=\"icon\"\r\n                        className={this.state.activeIcon === \"lightbulb\" ? 'icon active' : 'icon'} data-id=\"lightbulb\"   onClick={this.setActive}>\r\n                        \r\n                          <MDBIcon icon=\"lightbulb\" size=\"2x\"/>\r\n                        </div>\r\n                        <div className=\"icon\"\r\n                        className={this.state.activeIcon === \"anchor\" ? 'icon active' : 'icon'} data-id=\"anchor\"    onClick={this.setActive}>\r\n                            <MDBIcon icon=\"anchor\" size=\"2x\"/>\r\n                            \r\n                        </div>\r\n                        <div className=\"icon\"\r\n                          className={this.state.activeIcon === \"link\" ? 'icon active' : 'icon'}  data-id=\"link\"  onClick={this.setActive}>\r\n                            <MDBIcon icon=\"link\" size=\"2x\"/>\r\n                        </div>\r\n                        <div className=\"icon\"\r\n                          className={this.state.activeIcon === \"external-link-square-alt\" ? 'icon active' : 'icon'} data-id=\"external-link-square-alt\"    onClick={this.setActive}>\r\n                            <MDBIcon icon=\"external-link-square-alt\" size=\"2x\"/>\r\n                        </div>\r\n      \r\n                        <div className=\"icon\"\r\n                          className={this.state.activeIcon === \"archway\" ? 'icon active' : 'icon'} data-id=\"archway\" onClick={this.setActive}>\r\n                            <MDBIcon icon=\"archway\" size=\"2x\"/>                   \r\n                        </div>\r\n\r\n\r\n                        <div className=\"icon\"  \r\n                          className={this.state.activeIcon === \"ankh\" ? 'icon active' : 'icon'} data-id=\"ankh\" onClick={this.setActive}>\r\n                            <MDBIcon icon=\"ankh\" size=\"2x\" />\r\n                        </div>\r\n                        <div className=\"icon\" \r\n                        className={this.state.activeIcon === \"angle-double-right\" ? 'icon active' : 'icon'} data-id=\"angle-double-right\"  onClick={this.setActive}>\r\n                          <MDBIcon icon=\"angle-double-right\" size=\"2x\" />                   \r\n                        </div>\r\n                        <div className=\"icon\"\r\n                          className={this.state.activeIcon === \"cannabis\" ? 'icon active' : 'icon'} data-id=\"cannabis\"  onClick={this.setActive}>\r\n                              <MDBIcon icon=\"cannabis\" data-id=\"cannabis\" size=\"2x\" />  \r\n                        </div>\r\n                        <div className=\"icon\"\r\n                          className={this.state.activeIcon === \"chess-queen\" ? 'icon active' : 'icon'} data-id=\"chess-queen\" onClick={this.setActive}>\r\n                              <MDBIcon icon=\"chess-queen\" data-id=\"chess-queen\"  size=\"2x\" />   \r\n                        </div>\r\n                      \r\n                    </div>\r\n                  </div>\r\n              </div>\r\n\r\n\r\n\r\n            {/* image */}\r\n            <div style={{display:this.state.isDisplayImage}}>\r\n              <label>What would you like the Image to be? </label>\r\n               <div className=\"image-btun-box\">\r\n              <div className=\"row\">\r\n                 <div className=\"col-md-12\">\r\n                    <div className=\"view-image\">\r\n                        {\r\n                          this.state.fromEdit ?\r\n                          <img  src={imagePath}/>\r\n                          :\r\n                          <img  src={this.state.LM_Image}/>\r\n                        }\r\n                      \r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-12\">\r\n                  <label className=\"up-ico\" for=\"selectImage\">\r\n                    Upload an Image\r\n                    <input id='selectImage' type=\"file\" style={{ display:\"none\"}}  onClick={this.clickhandler} onChange={this.imageonChange} />\r\n                  </label>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                          {/* <button className=\"up-ico\">Choose an Icon</button> */}\r\n                     {/* <Button onClick={this.openCollapse} className=\"btun\"\r\n                          aria-controls=\"example-collapse-text\"\r\n                          aria-expanded={this.state.open} >              \r\n                        Choose an Icon\r\n                      </Button> */}\r\n                      <Collapse in={this.state.open}>\r\n                          <div id=\"example-collapse-text\">\r\n                              <div className=\"row\">\r\n                                <div className=\"col-md-4\">\r\n\r\n                                       hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                 \r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                  \r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                      </Collapse>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            </div>\r\n\r\n\r\n\r\n            <label style={{display:'none'}}>Who should be able to see this?</label>\r\n            <select style={{display:'none'}}className=\"form-control\" name=\"LM_Who_Will_See\" value={this.state.LM_Who_Will_See} onChange={this.onChangeHandle}>\r\n              <option value=\"1\">Everyone</option>\r\n              <option value=\"2\">My Followers</option>\r\n              <option value=\"3\">People I follow</option>\r\n            </select>\r\n\r\n\r\n            <div className=\"btun-box\">\r\n              <button className=\"btun btun_1\">Update Links</button>\r\n              <button className=\"btun\" onClick={this.ModalClose}>Cancel</button>\r\n            </div>\r\n          </div>\r\n          </form>\r\n        </Modal.Body>\r\n\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n}\r\n\r\nexport default EditLinks;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\ContestReport.js",["2733","2734"],"import React, { Component } from 'react';\r\nimport { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table';\r\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport API  from '../services/API';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nclass ContestReport extends Component {\r\n    checkArray=[];\r\n    emailArray=[];\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            base_url: process.env.REACT_APP_API_URL,\r\n            root_url: process.env.REACT_APP_ROOT_URL,\r\n            openModel: false,\r\n            show: false,\r\n            open: false,\r\n            reportData:[],\r\n            checkedIds:[],\r\n            DA_ID:0,\r\n        }\r\n    }\r\n\r\n   async  componentDidMount() \r\n    {\r\n       \r\n    }\r\n    ModalClose = () => {\r\n        this.setState({\r\n            openModel: false, show: false,        \r\n        });\r\n\r\n    }\r\n    ModalOpen = async (e) => \r\n    {\r\n       \r\n        var flagData={\r\n            DA_ID:this.props.data.tableId,\r\n            JM_ID:parseInt(API.getId())\r\n        }\r\n\r\n        const flag=API.encryptData(flagData);\r\n        let  jsonData = {\r\n            flag: flag\r\n          };\r\n\r\n        const resp=await API.postData(jsonData,'contestReport');\r\n        if(resp.status===1)\r\n        {\r\n            const data=API.decryptJson(resp.flag);\r\n           // console.log(data)\r\n            this.setState({\r\n                openModel: true, show: true,\r\n                reportData:data.reportData\r\n            })\r\n        }\r\n      \r\n    }\r\n\r\n    sortTable=(tableName,n)=>e=> \r\n    {\r\n      var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;\r\n      table = document.getElementById(tableName);\r\n      switching = true;\r\n      //Set the sorting direction to ascending:\r\n      dir = \"asc\"; \r\n      /*Make a loop that will continue until\r\n      no switching has been done:*/\r\n      while (switching) {\r\n        //start by saying: no switching is done:\r\n        switching = false;\r\n        rows = table.rows;\r\n        /*Loop through all table rows (except the\r\n        first, which contains table headers):*/\r\n        for (i = 1; i < (rows.length - 1); i++) {\r\n          //start by saying there should be no switching:\r\n          shouldSwitch = false;\r\n          /*Get the two elements you want to compare,\r\n          one from current row and one from the next:*/\r\n          x = rows[i].getElementsByTagName(\"TD\")[n];\r\n          y = rows[i + 1].getElementsByTagName(\"TD\")[n];\r\n          /*check if the two rows should switch place,\r\n          based on the direction, asc or desc:*/\r\n          if (dir === \"asc\") {\r\n            if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\r\n              //if so, mark as a switch and break the loop:\r\n              shouldSwitch= true;\r\n              break;\r\n            }\r\n          } else if (dir === \"desc\") {\r\n            if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\r\n              //if so, mark as a switch and break the loop:\r\n              shouldSwitch = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        if (shouldSwitch) {\r\n          /*If a switch has been marked, make the switch\r\n          and mark that a switch has been done:*/\r\n          rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\r\n          switching = true;\r\n          //Each time a switch is done, increase this count by 1:\r\n          switchcount ++;      \r\n        } else {\r\n          /*If no switching has been done AND the direction is \"asc\",\r\n          set the direction to \"desc\" and run the while loop again.*/\r\n          if (switchcount === 0 && dir === \"asc\") {\r\n            dir = \"desc\";\r\n            switching = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    myFunction=(tableName,id)=>e=>{\r\n        ////console.log(tableName + \" \"+ id)\r\n      var input, filter, table, tr, td, i, txtValue;\r\n      input = document.getElementById(id);\r\n      filter = input.value.toUpperCase();\r\n      table = document.getElementById(tableName);\r\n      tr = table.getElementsByTagName(\"tr\");\r\n      for (i = 0; i < tr.length; i++) {\r\n        td = tr[i].getElementsByTagName(\"td\")[1];\r\n        if (td) {\r\n          txtValue = td.textContent || td.innerText;\r\n          if (txtValue.toUpperCase().indexOf(filter) > -1) {\r\n            tr[i].style.display = \"\";\r\n          } else {\r\n            tr[i].style.display = \"none\";\r\n          }\r\n        }       \r\n      }\r\n    }\r\n\r\n    checkHandle=(data)=>e=>{\r\n\r\n        let CM_ID=data.CM_ID;\r\n      \r\n        if(e.target.checked===true)\r\n        {\r\n            this.checkArray.push(CM_ID)\r\n            this.emailArray.push({\r\n                CM_Email:data.CM_Email,\r\n                JM_User_Profile_Url:data.JM_User_Profile_Url,\r\n                CM_ID:CM_ID,\r\n                CM_Name:data.CM_Name,\r\n                JM_Name:data.JM_Name,\r\n            })\r\n        }\r\n        else\r\n        {\r\n            var filteredAry = this.checkArray.filter(e => e !== data.CM_ID)\r\n            this.checkArray=filteredAry;\r\n\r\n            var filteredAry2 = this.emailArray.filter(e => e.CM_ID !== data.CM_ID)\r\n            this.emailArray=filteredAry2;\r\n           \r\n        }\r\n    }\r\n\r\n\r\n    SubmitWinner=async (e)=>{\r\n\r\n        //console.log(this.props.data.tableId)\r\n        if(this.checkArray!==null && this.checkArray.length > 0)\r\n        {\r\n            var flagData={\r\n                JM_ID:parseInt(API.getId()),\r\n                CM_ID:this.checkArray,\r\n                DA_ID:this.props.data.tableId,\r\n                email:this.emailArray,\r\n                DA_Title:this.props.data.title,\r\n                JM_User_Profile_Url: localStorage.getItem('JM_User_Profile_Url')\r\n            }\r\n\r\n            const flag=API.encryptData(flagData);\r\n            let  JSONdata = {\r\n                flag: flag\r\n              };\r\n\r\n\r\n\r\n            document.getElementById(\"btn_contest\").disabled = true;\r\n            document.getElementById('btn_contest').innerHTML='Processing...'\r\n            document.getElementById('msg_contest').style.color='red';\r\n            const resp=await API.postData(JSONdata,'setWinner');\r\n\r\n            if(resp.status===1)\r\n            {\r\n                this.checkArray=[];\r\n                \r\n                document.getElementById(\"btn_contest\").disabled = false;\r\n                document.getElementById('btn_contest').innerHTML='Submit Winner'\r\n                document.getElementById('msg_contest').style.color='green'\r\n                document.getElementById('msg_contest').innerHTML='Congratulations on picking the winner! Please contact the winner through the submitted details.';\r\n                await API.DoSleep(3000);\r\n                document.getElementById(\"msg_contest\").innerHTML='';\r\n                this.ModalClose();\r\n            }\r\n            else\r\n            {\r\n                \r\n                document.getElementById(\"btn_contest\").disabled = false;\r\n                document.getElementById('btn_contest').innerHTML='Submit Winner'\r\n                document.getElementById('msg_contest').innerHTML='unable to set winner,try again later';\r\n                return false;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            document.getElementById('msg_contest').innerHTML='Please, check atleast one person to select a winner'\r\n            return false;\r\n        }\r\n\r\n      \r\n    }\r\n\r\n    download_csv=(csv, filename)=> {\r\n        var csvFile;\r\n        var downloadLink;\r\n    \r\n        // CSV FILE\r\n        csvFile = new Blob([csv], {type: \"text/csv\"});\r\n    \r\n        // Download link\r\n        downloadLink = document.createElement(\"a\");\r\n    \r\n        // File name\r\n        downloadLink.download = filename;\r\n    \r\n        // We have to create a link to the file\r\n        downloadLink.href = window.URL.createObjectURL(csvFile);\r\n    \r\n        // Make sure that the link is not displayed\r\n        downloadLink.style.display = \"none\";\r\n    \r\n        // Add the link to your DOM\r\n        document.body.appendChild(downloadLink);\r\n    \r\n        // Lanzamos\r\n        downloadLink.click();\r\n    }\r\n    \r\n     export_table_to_csv=(html, filename)=> {\r\n        var csv = [];\r\n        var rows = document.querySelectorAll(\"table tr\");\r\n        \r\n        for (var i = 0; i < rows.length; i++) {\r\n            var row = [], cols = rows[i].querySelectorAll(\"td, th\");\r\n            \r\n            for (var j = 0; j < cols.length; j++) \r\n                row.push(cols[j].innerText);\r\n            \r\n            csv.push(row.join(\",\"));\t\t\r\n        }\r\n    \r\n        // Download CSV\r\n        this.download_csv(csv.join(\"\\n\"), filename);\r\n    }\r\n    \r\n    exportTable=fileName=>(e)=>{\r\n        let file=fileName.replace(\" \",\"\");\r\n        var html = document.querySelector(\"table\").outerHTML;\r\n        this.export_table_to_csv(html, file+\".csv\");\r\n    }\r\n       \r\n    \r\n    \r\n    render() {\r\n\r\n        let Q1='',Q2='',Q3='',Q4='';let isWinner=false;\r\n        if(this.state.reportData && this.state.reportData.length > 0)\r\n        {\r\n            var len=this.state.reportData.length\r\n            let item=this.state.reportData;\r\n            for (let i = 0; i < item.length; i++) \r\n            {\r\n                Q1=item[i].Q1;\r\n                Q2=item[i].Q2;\r\n                Q3=item[i].Q3;\r\n                Q4=item[i].Q4; \r\n                if(item[i].Status==='W')           \r\n                {\r\n                    isWinner=true;\r\n                    break;\r\n                }\r\n              \r\n                \r\n            }\r\n        }\r\n\r\n        let tableContest=this.state.reportData && this.state.reportData.map((item, i) => {\r\n            return (  <>          \r\n                    \r\n                        <Tbody>\r\n                       \r\n\r\n                            <Tr style={{background:item.Status==='W'?'green':'white',color: item.Status==='W'?'white':'black'}}>\r\n                                <Td>{item.submitDate}</Td>\r\n                                <Td>{item.CM_Name}</Td>\r\n                                <Td>{item.CM_Email}</Td>\r\n                                <Td>{item.CM_A1}</Td>\r\n                                <Td>{item.CM_A2}</Td>\r\n                                <Td>{item.CM_A3}</Td>\r\n                                <Td>{item.CM_A4}</Td>\r\n                                <Td>\r\n                              \r\n                               {\r\n                                        item.CM_File.length > 0 ?\r\n                                        <a href={\"/adm/uploads/\"+item.CM_File} target=\"_blank\" style={{cursor:'pointer'}}>View File</a>\r\n                                        :\r\n                                        <p>No File</p>\r\n                                      \r\n                               } \r\n                                </Td>\r\n                                <Td>\r\n                                    {\r\n                                        item.Status==='C'? \r\n                                        <p></p>                                \r\n                                        :\r\n                                        item.Status==='W'?\r\n                                        <p style={{background:'green',color:'white'}}>Won</p>   \r\n                                        :\r\n                                        <>\r\n                                        <input type=\"checkbox\" onChange={this.checkHandle(item)} />    Winner\r\n                                        </>                             \r\n                                    }\r\n                                 \r\n                                </Td>\r\n                            </Tr>\r\n                        </Tbody>\r\n                    </>\r\n                )\r\n      })\r\n        return (\r\n            <>\r\n            {\r\n                this.props.from==='P'?\r\n                 <Tooltip title=\"View Details\" placement=\"top\">                        \r\n                        <button onClick={this.ModalOpen}><AssessmentIcon />\r\n                    </button>                                 \r\n                 </Tooltip>\r\n                 : this.props.from==='C'?\r\n                 <button className=\"contest-btn\" onClick={this.ModalOpen}>{this.props.data.title}</button>\r\n                 :\r\n                 null\r\n            }\r\n        \r\n                \r\n\r\n                <Modal\r\n                    show={this.state.show}\r\n                    onHide={this.ModalClose}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    size=\"xl\"\r\n                    contentClassName=\"modal-radius\"\r\n                    centered\r\n\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>\r\n                            <h3 className=\"addnew-title\">{this.props.data.title}</h3>\r\n                            <p className=\"addnew-title\">{this.props.data.description}</p>\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"direct-access-pop\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-5\">\r\n                                   <input type=\"text\"  className=\"form-control\" style={{margin: '10px 0',height:'40px'}} id=\"inp_contest\" onKeyUp={this.myFunction('tbl_contest','inp_contest')} placeholder=\"Search for names..\" title=\"Type in a name\"/>\r\n                                </div>   \r\n                                <div className=\"col-md-7 text-right\">\r\n                                     <button className=\"btun\" style={{margin: '10px 0',height:'40px'}} onClick={this.exportTable(this.props.data.title)}>Export CSV</button>\r\n                                </div>                       \r\n                            </div>\r\n                                                  \r\n                            <div  className=\"table-responsive overflow-auto contestReport\" style={{maxHeight: '450px'}}>\r\n                                <Table  id=\"tbl_contest\" className=\"table table-bordered\">\r\n                                  <Thead>\r\n                                        <Tr>\r\n                                            <Th>{\"Date\"}</Th>\r\n                                            <Th>{\"Name\"}</Th>\r\n                                            <Th>{\"Email\"}</Th>\r\n                                            <Th>{Q1}</Th>\r\n                                            <Th>{Q2}</Th>\r\n                                            <Th>{Q3}</Th>\r\n                                            <Th>{Q4}</Th>\r\n                                            <Th>{\"File\"}</Th>\r\n                                            <Th>{\"Action\"}</Th>\r\n                                        </Tr>\r\n                                    </Thead>\r\n                                        {tableContest} \r\n\r\n                                </Table>\r\n                            </div>\r\n\r\n                         \r\n                            <div className=\"btun-box text-center\">   \r\n                               {\r\n\r\n                                isWinner===false?\r\n                                <button className=\"btun\" id=\"btn_contest\" onClick={this.SubmitWinner}>Submit Winner</button>\r\n                                :\r\n                                 null\r\n                               }                             \r\n                             <p id=\"msg_contest\" style={{color:'red'}}></p>\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n\r\n                </Modal>\r\n\r\n\r\n\r\n                \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nContestReport.propTypes = {\r\n\r\n};\r\n\r\nexport default ContestReport;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\EditContestGiveAway.js",[],"E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\EditDigitalEcommerce.js",["2735","2736","2737","2738","2739","2740","2741","2742","2743","2744","2745","2746","2747","2748","2749","2750","2751","2752","2753","2754","2755","2756","2757","2758","2759"],"import React, { Component } from 'react';\r\n\r\nimport Modal from 'react-bootstrap/Modal'\r\n// import './MyStyle.css'\r\n// import './animate.css'\r\n// import './bootstrap.css'\r\n// import './resonsive.css'\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\nimport {ProgressBar} from 'react-bootstrap';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Popover from 'react-bootstrap/Popover'\r\n\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n\r\nimport PersonalVideoIcon from '@material-ui/icons/PersonalVideo';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport FileViewer from 'react-file-viewer';\r\nimport { CustomErrorComponent } from 'custom-error';\r\nimport API  from '../services/API';\r\nclass EditDigitalEcommerce extends Component \r\n{\r\n    fileObj = [];\r\n    fileArray = [];\r\n    albumArray=[];\r\n     Files = [];\r\n     cancelFileUpload=null;\r\n        constructor(props) {\r\n            super(props)\r\n        \r\n            this.state = {\r\n              base_url: process.env.REACT_APP_API_URL,\r\n              root_url: process.env.REACT_APP_ROOT_URL,\r\n            openModel:false,\r\n            show:false,\r\n            open:false,\r\n            directAccess:this.props.data,\r\n            userDetails:[],\r\n            confirm:false,\r\n            videoFile:null,\r\n            imageFile:null,\r\n            selectedFile:null,\r\n            coverImageorVideo:null,\r\n            title:'',\r\n            description:'',\r\n            price:0,\r\n            handleDisabled:true,\r\n            toolTip:false,\r\n            chargesInfo:'',\r\n            showIconCharges:'none',\r\n            videoData:'NA',\r\n            audioData:'',\r\n            album:[null],\r\n            cover_Image_video:'',\r\n            audioFile:null,\r\n            showAlert:true,\r\n            title:'',\r\n            msg:'',\r\n            logo:'',\r\n            textFileUrl:'',\r\n            textFile:[],\r\n            uploadPercentage: 0,\r\n            avatar: '',\r\n\r\n            disabledBtn:false,\r\n            BtnName:'Save',\r\n            pdfFileUrl:'',\r\n            pdfFile:null,\r\n\r\n            chooseType_1:false,\r\n            chooseType_2:false,\r\n            chooseType_3:false,\r\n            chooseType_4:false,\r\n            errMsg:''\r\n\r\n            }\r\n            //console.log(this.state.userDetails)\r\n            this.imageonMultiChange = this.imageonMultiChange.bind(this)\r\n        \r\n        }\r\n        ModalClose=()=>\r\n        {    \r\n\r\n            this.setState({openModel:false,show:false});\r\n            this.setState({ \r\n              audioFile: null ,\r\n              audioData: '',\r\n              textFile: null ,\r\n              textFileUrl: '',\r\n              videoData:'',\r\n              videoFile:null,           \r\n              pdfFile:null,pdfFileUrl:''\r\n            }); \r\n            this.albumArray=[];\r\n\r\n        }\r\n        ModalOpen=()=>{\r\n                this.setState({openModel:true,show:true,chargesInfo:'',showIconCharges:'none'});\r\n\r\n                //console.log(this.props.data)\r\n                this.setState({ \r\n                  title:this.props.data.title,\r\n                  description:this.props.data.description,\r\n                  JM_ID:this.props.data.JM_ID,\r\n                  DA_Type:this.props.data.prodType,\r\n                  DA_ID:this.props.data.tableId,\r\n                  DA_Collection:'',\r\n                  price: this.props.data.price,       \r\n                  allowCustomertoPay: this.props.data.DA_Allow_Cust_Pay,                       \r\n                  min_amt: this.props.data.DA_Min_Amount,   \r\n                  suggested_amt: this.props.data.DA_Suggested_Amont,   \r\n                  showDiv:this.props.data.DA_Allow_Cust_Pay===1 ? true : false,\r\n                  isPriceDisabled: this.props.data.DA_Allow_Cust_Pay===1 ? true : false     \r\n              });\r\n\r\n             var files = JSON.parse(this.props.data.collection); \r\n            \r\n            if(this.props.data.prodType===\"album\")    \r\n              {  \r\n                for (var i = 0, numFiles = files.length; i < numFiles; i++) \r\n                { \r\n                var file =files[i];\r\n                this.albumArray.push(file);           \r\n                \r\n                }\r\n                this.setState({ \r\n                  chooseType_1:true,\r\n                  chooseType_2:false,\r\n                  chooseType_3:false,\r\n                  chooseType_4:false,     \r\n                  radioStyle1:{fontWeight:'600',color:'#ff746e'},\r\n                  radioStyle2:'',\r\n                  radioStyle3:'',\r\n                  radioStyle4:'',              \r\n                });\r\n            }\r\n            if(this.props.data.prodType===\"image\")    \r\n            {  \r\n              this.albumArray=[];\r\n              for (var i = 0, numFiles = files.length; i < numFiles; i++) \r\n              { \r\n              var file =files[i];\r\n\r\n              this.albumArray.push(file);           \r\n              \r\n              }\r\n              this.setState({ \r\n                  chooseType_1:true,\r\n                  chooseType_2:false,\r\n                  chooseType_3:false,\r\n                  chooseType_4:false,     \r\n                  radioStyle1:{fontWeight:'600',color:'#ff746e'},\r\n                  radioStyle2:{},\r\n                  radioStyle3:{},\r\n                  radioStyle4:{},\r\n                      \r\n              });\r\n          }\r\n            if(this.props.data.prodType===\"video\")    \r\n            {   \r\n                \r\n                if(files!=null && files.length > 0)                \r\n                    this.setState({ \r\n                        videoData:files[0],\r\n                        chooseType_1:false,\r\n                        chooseType_2:true,\r\n                        chooseType_3:false,\r\n                        chooseType_4:false,  \r\n                        radioStyle1:{},\r\n                        radioStyle2:{fontWeight:'600',color:'#ff746e'},\r\n                        radioStyle3:{},\r\n                        radioStyle4:{},                    \r\n                    });\r\n            }\r\n            if(this.props.data.prodType===\"audio\")    \r\n                   { \r\n                     \r\n                    this.setState({ \r\n                        chooseType_1:false,\r\n                        chooseType_2:false,\r\n                        chooseType_3:true,\r\n                        chooseType_4:false, \r\n                        audioData:files[0],  \r\n                        radioStyle1:{},\r\n                        radioStyle2:{},\r\n                        radioStyle3:{fontWeight:'600',color:'#ff746e'},\r\n                        radioStyle4:{},  \r\n                    });\r\n                  \r\n                  }\r\n               if(this.props.data.prodType===\"txt\")    \r\n                  {  \r\n          \r\n\r\n                    this.setState({ \r\n                        chooseType_1:false,\r\n                        chooseType_2:false,\r\n                        chooseType_3:false,\r\n                        chooseType_4:true,  \r\n                        textFileUrl:files[0],  \r\n                        type:'docx',\r\n                        radioStyle1:{},\r\n                        radioStyle2:{},\r\n                        radioStyle3:{},\r\n                        radioStyle4:{fontWeight:'600',color:'#ff746e'},                      \r\n                    });\r\n                         \r\n                  }\r\n                  if(this.props.data.prodType===\"pdf\")    \r\n                  {  \r\n            \r\n                    this.setState({ \r\n                        chooseType_1:false,\r\n                        chooseType_2:false,\r\n                        chooseType_3:false,\r\n                        chooseType_4:true,  \r\n                        pdfFileUrl:files[0],  \r\n                        type:'pdf',\r\n                        radioStyle1:{},\r\n                        radioStyle2:{},\r\n                        radioStyle3:{},\r\n                        radioStyle4:{fontWeight:'600',color:'#ff746e'},                      \r\n                    });                   \r\n        \r\n                  }\r\n            \r\n\r\n        }\r\n        openCollapse = () => {\r\n            !this.state.open ?\r\n            this.setState({ open: true })\r\n            :\r\n            this.setState({ open: false })\r\n            \r\n        }\r\n        isConfirm = () => {\r\n            confirmAlert({\r\n            title: 'Confirm !!!',\r\n            message: 'Are you sure to Exit',\r\n            buttons: [\r\n                {\r\n                label: 'Yes',\r\n                onClick: () => this.setState({confirm:true})\r\n                },\r\n                {\r\n                label: 'No',\r\n                onClick: () => this.setState({confirm:false})\r\n                }\r\n            ]\r\n            });\r\n        };\r\n        popOver=(data)=>{\r\n\r\n        }\r\n        videoonChange=(e)=>{\r\n\r\n          \r\n          var filePath = e.target.value;            \r\n          // Allowing file type\r\n          var allowedExtensions = /(\\.mp4)$/i;                \r\n          if (!allowedExtensions.exec(filePath)) \r\n          {\r\n              alert('Invalid file type');\r\n              e.target.value = '';\r\n              return false;\r\n          } \r\n\r\n           this.setState({ \r\n              audioFile: null ,\r\n              audioData: '',\r\n              textFile: null ,\r\n              textFileUrl: '',\r\n            }); \r\n            this.albumArray=[];\r\n\r\n            const file = e.target.files[0];\r\n            if(typeof file!=='undefined')\r\n            {\r\n              var fileUrl = window.URL.createObjectURL(file);\r\n              this.setState({ imageFile: e.target.files[0] }); \r\n              this.setState({\r\n              videoFile: file,\r\n              videoData:fileUrl\r\n              });\r\n              \r\n           \r\n            }\r\n        }\r\n\r\n      \r\n\r\n        audioChange=(e)=>\r\n        {\r\n\r\n          this.setState({\r\n            videoFile: null,\r\n            videoData:'NA'\r\n            });\r\n            const file = e.target.files[0];\r\n\r\n            var filePath = e.target.value;            \r\n            // Allowing file type  .ogv\r\n            var allowedExtensions = /(\\.mp3|\\.ogv)$/i;             \r\n            if (!allowedExtensions.exec(filePath)) \r\n            {\r\n                alert('Invalid file type');\r\n                e.target.value = '';\r\n                return false;\r\n            } \r\n            if(typeof file!=='undefined')\r\n            {\r\n              this.setState({ audioFile: e.target.files[0] }); \r\n              this.getBase64(file).then(\r\n                data =>{\r\n                  //console.log(data);\r\n                  this.setState({ audioData: data }); \r\n                } \r\n              );\r\n            }\r\n            \r\n        }\r\n        onClickResetAudioFile (e) {\r\n            this.setState({audioData:''}); // celears state\r\n            \r\n           }\r\n\r\n           //12-mar-2021\r\n           getBase64=(file)=> {\r\n            return new Promise((resolve, reject) => {\r\n              const reader = new FileReader();\r\n              reader.readAsDataURL(file);\r\n              reader.onload = () => resolve(reader.result);\r\n              reader.onerror = error => reject(error);\r\n            });\r\n          }\r\n\r\n        imageonChange=(e)=>{\r\n            const file = e.target.files[0];\r\n            this.setState({ coverImageorVideo: e.target.files[0] }); \r\n            this.setState({\r\n            cover_Image_video: URL.createObjectURL(file)\r\n            });\r\n           //console.log(this.state.cover_Image_video)\r\n        }\r\n        nextClick=(event)=>{\r\n            event.preventDefault();\r\n            let isValid=true;\r\n            if(isValid)\r\n            {\r\n                //alert(\"ok\");\r\n            \r\n              \r\n              \r\n                if(this.state.title.length ===0 )\r\n                {\r\n                  var errMsg=\"* Enter Title\";\r\n                    this.setState({\r\n                      errMsg\r\n                    })\r\n                  return false;\r\n                }\r\n                if(this.state.description.length ===0 ) \r\n                {\r\n               \r\n                  var errMsg=\"* Enter Description\";\r\n                    this.setState({\r\n                      errMsg\r\n                    })       \r\n                    return true;      \r\n                }\r\n                  var price=parseInt(this.state.price);\r\n                  if(isNaN(price))\r\n                  {\r\n                    price=0;\r\n                  }\r\n    \r\n                  if( parseInt(price) < 0)\r\n                  {\r\n                    var errMsg=\"* Enter Price\";\r\n                    this.setState({\r\n                      errMsg\r\n                    })                                       \r\n                      return true;\r\n              \r\n                  }\r\n\r\n                var errMsg='';\r\n                this.setState({\r\n                  errMsg\r\n                })   \r\n                if(this.state.title.length ===0)\r\n                {\r\n                  var errMsg=\"* Enter Title\";\r\n                      this.setState({\r\n                        errMsg\r\n                      })                                       \r\n                  return true;\r\n                }\r\n                if(this.state.description.length===0)\r\n                {\r\n                \r\n                      var errMsg='* Enter Description';\r\n                      this.setState({\r\n                        errMsg\r\n                      })                                       \r\n                      return true;\r\n                }\r\n                if(isNaN(parseInt(this.state.price)) || parseInt(this.state.price) < 0)\r\n                {\r\n                 \r\n                    var errMsg='* Enter Price';\r\n                    this.setState({\r\n                      errMsg\r\n                    })                                       \r\n                    return true;\r\n                \r\n                }\r\n                    //23-aug-2021 dynamic pricing\r\n                if(this.state.allowCustomertoPay===1)\r\n                {\r\n                  if( isNaN(parseInt(this.state.min_amt)) || parseInt(this.state.min_amt) < 0 )\r\n                  {            \r\n                      var errMsg='* Enter minimum amount';\r\n                      this.setState({\r\n                        errMsg\r\n                      })                                       \r\n                      return true;                          \r\n                  }\r\n                }\r\n              \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                const formData = new FormData(); \r\n                formData.append('DA_Allow_Cust_Pay', this.state.allowCustomertoPay )  \r\n                formData.append('DA_Min_Amount',parseInt(this.state.min_amt))\r\n                formData.append('DA_Suggested_Amont', parseInt(this.state.suggested_amt))  \r\n\r\n                let Api_url=this.state.base_url+'admin/updateProduct';\r\n               // let Api_url='http://localhost:9000/admin/addProduct';\r\n                if(this.state.videoFile !==null && this.state.videoData!=='NA' && this.state.videoData!=='')\r\n                  {  \r\n                      formData.append('sampleFile', this.state.videoFile);\r\n                      formData.append('DA_Type', 'video'); \r\n                      this.albumArray=[]; \r\n                      this.setState({\r\n                        audioFile:null,album:null,textFile:null\r\n                      });\r\n                  }\r\n             else  if(this.state.audioFile !==null && this.state.audioData!=='')\r\n                 {   \r\n                    formData.append('sampleFile', this.state.audioFile)\r\n                    formData.append('DA_Type', 'audio'); \r\n                    this.albumArray=[];                 \r\n                    this.setState({\r\n                     album:null,textFile:null,videoFile:[]\r\n                    });\r\n                 }\r\n              else  if(this.state.album!==null && this.albumArray!==null && this.albumArray.length > 0)\r\n                {\r\n                        // formData.append('DA_Type', 'album');                \r\n                        // const ins = this.Files.length;\r\n                        // console.log(this.Files)\r\n                        // const arr=[];\r\n                        //    for (var x = 0; x < ins; x++)\r\n                        //   {                        \r\n                 \r\n                        //        formData.append('img_multiple',this.Files[x]);\r\n                                \r\n                        //    }\r\n\r\n                           formData.append('DA_Type', 'image'); \r\n                           formData.append('sampleFile', this.state.coverImageorVideo) \r\n             \r\n                \r\n                }\r\n               else if(this.state.pdfFile !==null && this.state.pdfFileUrl!=='')\r\n                 {   \r\n                    formData.append('sampleFile', this.state.pdfFile)\r\n                    formData.append('DA_Type', 'pdf'); \r\n                    this.albumArray=[];                 \r\n                    this.setState({\r\n                     album:null,textFile:null,videoFile:null,audioFile:null,\r\n                    });\r\n                 }\r\n               else  if(this.state.textFile !==null && this.state.textFileUrl!=='')\r\n                 {   \r\n                    formData.append('sampleFile', this.state.textFile)\r\n                    formData.append('DA_Type', 'txt'); \r\n                    this.albumArray=[];                 \r\n                    this.setState({\r\n                     album:null,videoFile:null,audioFile:null,pdfFile:null\r\n                    });\r\n                 }\r\n                 else   if(this.state.pdfFile !==null && this.state.pdfFileUrl!=='')\r\n                 {   \r\n                    formData.append('sampleFile', this.state.pdfFile)\r\n                    formData.append('DA_Type', 'pdf'); \r\n                    this.albumArray=[];                 \r\n                    this.setState({\r\n                     album:null,textFile:null,videoFile:null,audioFile:null,\r\n                    });\r\n                 }\r\n               \r\n                \r\n                formData.append('DA_DA_ID', 2) // for premium featured id\r\n                formData.append('JM_ID', this.props.data.JM_ID)       \r\n                formData.append('DA_ID', this.props.data.tableId)     \r\n                formData.append('DA_Title', this.state.title)  \r\n                formData.append('DA_Description', this.state.description)  \r\n                formData.append('DA_Cover', \"\") \r\n                formData.append('DA_Price', this.state.price)      \r\n                formData.append('JM_User_Profile_Url_plus_JM_ID',this.props.JM_User_Profile_Url_plus_JM_ID)\r\n                this.setState({BtnName:'Uploading..',disabledBtn:true});\r\n                fetch(Api_url, {\r\n                  method: 'POST',         \r\n                  headers: { \"authorization\": API.getAuth(),\"id\":API.getId()},\r\n                  body: formData\r\n                  })\r\n                  .then(response => response.json())\r\n                  .then(data => \r\n                  {                   \r\n                      //console.log(data);   \r\n                     if(data.status > 0)\r\n                     {\r\n                          this.setState({\r\n                                videoFile:null,\r\n                                videoData:'NA',\r\n                                audioFile:null,\r\n                                audioData:''\r\n                          });\r\n                          this.fileArray=[];     \r\n                          this.setState({disabledBtn:false,BtnName:'Save'});\r\n                          this.ModalClose();                     \r\n                          this.Get_User_Details();   \r\n                         \r\n                     }\r\n                      else\r\n                      {\r\n                        API.minusResponse(data);\r\n                        var errMsg=\"Internal error occered, Try later\";\r\n                        this.setState({disabledBtn:false,BtnName:'Save',errMsg}); \r\n                      }                     \r\n                  })\r\n                  .catch(error => \r\n                  {\r\n\r\n                   // this.props.showToast('error','internal error occered'); \r\n                     var errMsg=\"Network error occered, Try later\";\r\n                    this.setState({disabledBtn:false,BtnName:'Save',errMsg});                  \r\n                    \r\n                  })\r\n\r\n              //   const CancelToken = axios.CancelToken;\r\n              //   const source = CancelToken.source();\r\n              //   const options = {\r\n              //     onUploadProgress: (progressEvent) => \r\n              //     {\r\n              //       const {loaded, total} = progressEvent;\r\n              //       let percent = Math.floor( (loaded * 100) / total )\r\n              //       console.log( `${loaded}kb of ${total}kb | ${percent}% wait...` );\r\n        \r\n              //       if( percent < 100 )\r\n              //       {\r\n              //         this.setState({ uploadPercentage: percent })\r\n              //       }\r\n              //     },\r\n              //     cancelToken: source.token,\r\n                  \r\n              //   }\r\n           \r\n              //  this.setState({BtnName:'Uploading..',disabledBtn:true});\r\n              //   axios.post(Api_url, formData, options).then(res =>\r\n              //   { \r\n\r\n              //     if(res.data.status > 0)\r\n              //     {\r\n              //        this.setState({videoFile:null,videoData:'NA',audioFile:null,audioData:''});\r\n              //        this.fileArray=[];     \r\n                    \r\n              //        this.setState({ avatar: res.data.url, uploadPercentage: 100 }, ()=>{\r\n              //         setTimeout(() => {\r\n              //           this.setState({ uploadPercentage: 0 })\r\n              //         }, 1000);\r\n              //       })            \r\n              //         this.ModalClose();         \r\n              //        this.props.showToast('success','Premium feature is added to profile');                     \r\n              //        this.setState({disabledBtn:false,BtnName:'Save'});\r\n              //     }\r\n              //     else\r\n              //     {\r\n                    \r\n              //       this.props.showToast('error','internal error occered'); \r\n              //       this.setState({disabledBtn:false,BtnName:'Save'});\r\n              //     }     \r\n              //       console.log(res.data)\r\n              //   })\r\n              //   .catch(err => {\r\n              //     console.log(err);\r\n  \r\n              //     if (isCancel(err)) \r\n              //     {\r\n              //         //alert(err.message);\r\n              //         this.props.showToast('canceled',err.message); \r\n              //         this.setState({disabledBtn:false,BtnName:'Save'});\r\n              //     }\r\n              //     this.setState({ uploadPercentage: 0 })\r\n              // });\r\n\r\n              // this.setState({source});\r\n\r\n\r\n            }\r\n            else\r\n            {\r\n              var errMsg=\"fill all the neceessary fields and upload a file\";\r\n              this.setState({\r\n                errMsg\r\n              })           \r\n            }\r\n           \r\n        }\r\n\r\n        Get_User_Details = () => \r\n        {\r\n              var JSONdata = {\r\n                JM_ID: this.state.JM_ID\r\n              };\r\n              const API_url = this.state.base_url + \"admin/userDetailsAll\";\r\n            fetch(API_url,\r\n              {\r\n                method: 'post',\r\n                headers: { \"Content-Type\": \"application/json\",\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n                body: JSON.stringify(JSONdata)\r\n              })\r\n            .then((response) => response.json())\r\n            .then(data1 => {\r\n              if (data1 != null && data1.status > 0)\r\n              {\r\n                const data=API.decryptJson(data1.flag);\r\n                this.setState({\r\n                  userDetailsAll: data.data,\r\n                  userDetails:data.userDetails,\r\n                  themeMasterUser:data.themeMasterUser,\r\n                  socialWidget:data.socialWidget,\r\n                  gifts:data.gifts,\r\n                  title:'Success!!!',\r\n                  msg:'Profile is updated',\r\n                });\r\n                this.props.setStateAfterInsert(this.state);\r\n              }      \r\n              else\r\n                this.setState({showPage:false})\r\n       \r\n            });\r\n        }       \r\n        validation =()=>\r\n        {            \r\n              \r\n          // if(this.state.description.length > 0 && parseInt(this.state.price) >= 0 && (this.state.audioFile!==null || this.state.videoFile!==null||  (this.albumArray!==null &&  this.albumArray.length > 0) || this.state.textFile!==null  || this.state.pdfFile!==null ))\r\n          //     return true;\r\n          // else\r\n          //     return false;        \r\n         \r\n        }\r\n        handleChange=(e)=>{\r\n            let val=parseFloat(e.target.value);\r\n        this.setState({[e.target.name]:e.target.value})\r\n        let chargesInfo=\"\";\r\n        if(e.target.name==='price' && val > 0)\r\n            {\r\n              let fee=val * API.razorPayTax();\r\n              let gst=fee * API.razorPayGST();         \r\n              let razorPay=(fee+gst); // 1.65 + 0.297\r\n              let TenPer=(val - razorPay) * 10/100; // 10 if val is 100                  \r\n              let charges= val - razorPay - TenPer; // 100 - 1.65- 0.297                      \r\n              let chargesInfo=\"You'll receive INR \"+ charges.toFixed(2) + \" \";\r\n\r\n\r\n              let showIconCharges='block';         \r\n              this.setState({chargesInfo,showIconCharges});\r\n            }\r\n            else\r\n            {      \r\n                let chargesInfo=\"\";\r\n                let showIconCharges='none';\r\n                this.setState({chargesInfo,showIconCharges});\r\n            }\r\n            \r\n        }\r\n        hidePopover=()=>{\r\n            document.getElementById(\"popover-basic\").style.display='none';\r\n        }\r\n        handleClose=()=>{\r\n            this.setState({toolTip:true});\r\n        }\r\n        handleOpen=()=>{\r\n            this.setState({toolTip:false});\r\n        }\r\n        \r\n\r\n\r\n        imageonMultiChange(e) {\r\n          \r\n          var filePath = e.target.value;            \r\n          // Allowing file type\r\n          var allowedExtensions = /(\\.jpg|\\.jpeg|\\.png)$/i;                \r\n          if (!allowedExtensions.exec(filePath)) \r\n          {\r\n              alert('Invalid file type');\r\n              e.target.value = '';\r\n              return false;\r\n          } \r\n\r\n          var numFiles = e.target.files.length; \r\n          for (var i = 0, numFiles = e.target.files.length; i < numFiles; i++) \r\n          { \r\n            var file = e.target.files[i];\r\n            this.albumArray.push(URL.createObjectURL(file));              \r\n            this.Files.push(file);\r\n          }\r\n      \r\n          this.setState({ album: this.albumArray })\r\n\r\n          const fileMain = e.target.files[0];\r\n          this.setState({ coverImageorVideo: e.target.files[0] }); \r\n          this.setState({\r\n          cover_Image_video: URL.createObjectURL(fileMain)\r\n          });\r\n         //console.log(this.state.cover_Image_video)\r\n      \r\n      }\r\n\r\n        hideToast=()=>{\r\n          this.setState({showAlert:false})\r\n        }\r\n        showToast =() =>{\r\n          this.setState({showAlert:true})\r\n        }\r\n\r\n        openBrowsFile=id=>e=>{\r\n            document.getElementById(id).click();\r\n         \r\n\r\n           this.setState({ \r\n            audioFile: null ,\r\n            audioData: '',\r\n            textFile: null ,\r\n            textFileUrl: '',\r\n            albumArray:null,\r\n            videoData:'',\r\n            videoFile:null,\r\n          }); \r\n        }\r\n        cancelAlbum=id=>e=>\r\n        {\r\n            //console.log(this.albumArray) \r\n            //console.log(id)\r\n            const i = id\r\n            if(this.albumArray!==null)\r\n            {\r\n                const filteredItems = this.albumArray.slice(0, i).concat(this.albumArray.slice(i + 1, this.albumArray.length))\r\n                this.albumArray=filteredItems;\r\n                this.setState({ album: null })\r\n                const ins = document.getElementById('upImage').files.length;\r\n                this.Files.splice(id, 1);\r\n            }\r\n            //console.log(this.Files);\r\n            this.setState({\r\n              cover_Image_video: '',\r\n              coverImageorVideo:null\r\n              });\r\n        }\r\n\r\n        textFileChange=e=>{\r\n\r\n          if (!e || !e.target || !e.target.files || e.target.files.length === 0) {\r\n            return;\r\n          }\r\n\r\n          var filePath = e.target.value;            \r\n          // Allowing file type  .ogv\r\n          var allowedExtensions = /(\\.docx|\\.pdf)$/i;             \r\n          if (!allowedExtensions.exec(filePath)) \r\n          {\r\n              alert('Invalid file type');\r\n              e.target.value = '';\r\n              return false;\r\n          } \r\n        \r\n            const name = e.target.files[0].name;\r\n            const lastDot = name.lastIndexOf('.');        \r\n            const fileName = name.substring(0, lastDot);\r\n            const ext = name.substring(lastDot + 1);\r\n\r\n            const file = e.target.files[0];\r\n            const type=  e.currentTarget.dataset.filetype; \r\n            //console.log( e.target.files[0].type)   \r\n          if(ext==='docx')\r\n          {\r\n            this.setState({ textFile: e.target.files[0] }); \r\n            this.setState({\r\n                textFileUrl: URL.createObjectURL(file),\r\n                type:ext\r\n            });\r\n\r\n          }\r\n         else if(ext==='pdf')\r\n          {\r\n            this.setState({ pdfFile: e.target.files[0] }); \r\n            this.setState({\r\n                pdfFileUrl: URL.createObjectURL(file),\r\n                type:ext\r\n            });\r\n            //console.log(URL.createObjectURL(file))\r\n          }   \r\n           \r\n   \r\n        }\r\n        onError(e) {\r\n           //console.log('error in file-viewer');\r\n          }\r\n          onInputClick = (event) => {\r\n            if(event.target.name==='upImage' || event.target.name==='upVideo' || event.target.name==='upAudio' || event.target.name==='upText')\r\n                event.target.value = ''\r\n\r\n\r\n                this.setState({ \r\n                  audioFile: null ,\r\n                  audioData: '',\r\n                  textFile: null ,\r\n                  textFileUrl: '',\r\n                  videoData:'',\r\n                  videoFile:null,\r\n                  pdfFile:null,pdfFileUrl:''\r\n                }); \r\n                this.albumArray=[];\r\n        }\r\n           \r\n        onchangeCheck=(e)=>{\r\n\r\n          if(e.target.checked===true)\r\n          {\r\n            this.setState({\r\n              allowCustomertoPay:1,\r\n              showDiv:true,\r\n              price:0,isPriceDisabled:true\r\n            })\r\n            let chargesInfo=\"\";\r\n            let showIconCharges='none';\r\n            this.setState({chargesInfo,showIconCharges});\r\n          }\r\n          else\r\n          {\r\n            this.setState({\r\n              allowCustomertoPay:0,\r\n              showDiv:false,\r\n              isPriceDisabled:false\r\n            })\r\n            let chargesInfo=\"\";\r\n            let showIconCharges='none';\r\n            this.setState({chargesInfo,showIconCharges});\r\n          }\r\n        }\r\n  \r\n    render() {\r\n      const {uploadPercentage} = this.state;\r\n        const longText = `\r\n        Aliquam eget finibus ante, non facilisis lectus. Sed vitae dignissim est, vel aliquam tellus.\r\n        Praesent non nunc mollis, fermentum neque at, semper arcu.\r\n        Nullam eget est sed sem iaculis gravida eget vitae justo.\r\n        `;\r\n        \r\n        const useStyles = {\r\n          button: {\r\n            margin: '5px',\r\n          },\r\n          customWidth: {\r\n            maxWidth: 500,\r\n            fontSize:'25px',\r\n           \r\n          },\r\n          noMaxWidth: {\r\n            maxWidth: 'none',\r\n          },\r\n        };\r\n        //let chargesMessage=\"You receive 90% of the transaction value minus a 2% transaction fee that is collected by our payment provider.\";\r\n        let chargesMessage=\"You receive 90% of the transaction value. We take care of the rest.\";\r\n        \r\n        const HtmlTooltip = withStyles((theme) => ({\r\n          arrow: {\r\n            color: theme.palette.common.black,\r\n          },\r\n          tooltip: {\r\n            backgroundColor: '#212529',\r\n            color: 'white',\r\n            maxWidth: '50%',\r\n            fontSize: theme.typography.pxToRem(10),\r\n            // border: '1px solid #dadde9',\r\n          },\r\n        }))(Tooltip);\r\n        \r\n        const iconStyle={\r\n            display:this.state.showIconCharges,\r\n            fontSize: \"23px\",\r\n            color: \"gray\"\r\n        }\r\n        const chargesStyle={\r\n          fontFamily: \"consolas\",\r\n          fontSize: \"13px\",\r\n          textTransform: \"capitalize\",\r\n          marginTop: \"-6%\",\r\n          fontWeight: \"bold\",\r\n          color: \"gray\",\r\n        }\r\n        const radioStyle={\r\n          color: \"#ff626f\",\r\n          fontWeight: \"600\",        \r\n        }\r\n\r\n        let typeOfProduct;\r\n        \r\n          typeOfProduct= <> <div className=\"col-md-8\">\r\n                              <label for=\"upImage\" style={{    marginTop: \"10px\"}}>\r\n                                Upload a Video or Audio             \r\n                              </label>\r\n                          </div>  \r\n                          <div className=\"col-md-10 offset-md-1\">           \r\n                            {\r\n                            this.state.videoData!=='NA' && this.state.videoData!=='' ?              \r\n                                    <video className=\"img-thumbnail-custom\" width=\"100%\" controls src={this.state.videoData} type=\"video/mp4\" >                                   \r\n                                    </video>\r\n                                    : null\r\n                            }\r\n                            {\r\n                            this.state.audioData!=='' ?     \r\n                                <audio autoplay controls src={this.state.audioData}>\r\n                                  The “audio tag is not supported by your browser.\r\n                                </audio>\r\n                                : \r\n                                null\r\n                            }\r\n                                  \r\n                           </div>  \r\n                          </>\r\n      \r\n\r\n    let type='video';\r\n    const popover = (\r\n      <Popover id=\"popover-basic\">\r\n         <button type=\"button\" className=\"pop-close\"><span aria-hidden=\"true\" onClick={this.hidePopover}>×</span>\r\n          <span className=\"sr-only\">Close</span>\r\n        </button>\r\n        <Popover.Title as=\"h6\"><h6>Select  video or Audio</h6>\r\n       \r\n        </Popover.Title>\r\n        <Popover.Content>\r\n          {           \r\n            type==='video' ?   \r\n            <>         \r\n             <label htmlFor=\"video\" style={{cursor:'pointer'}}><h6>Video</h6></label> <PersonalVideoIcon/>  <br/>\r\n             <label htmlFor=\"audio\" style={{cursor:'pointer'}}><h6>Audio</h6></label> <AudiotrackIcon/>  \r\n             </>            \r\n            : null\r\n          \r\n          }\r\n          \r\n        </Popover.Content>    \r\n       \r\n      </Popover>\r\n    );\r\n    const popover2 = (\r\n      <Popover id=\"popover-basic\" style={{zIndex:'99999',background: 'black',color:'#fff'}}  >\r\n         <button type=\"button\" className=\"pop-close\"><span aria-hidden=\"true\" onClick={this.hidePopover}>×</span>\r\n          <span className=\"sr-only\">Close</span>\r\n        </button>       \r\n        <Popover.Content style={{background: 'black',color:'#fff'}}>\r\n        {chargesMessage}\r\n          \r\n        </Popover.Content>    \r\n       \r\n      </Popover>\r\n    );\r\n        return (\r\n            <>\r\n                                          \r\n                            {/* <button class=\"btun\"  onClick={this.ModalOpen}><AddCircleOutlineIcon/> Add This</button> */}\r\n                            <button onClick={this.ModalOpen}><CreateIcon />     \r\n      </button>\r\n                          \r\n                 \r\n       <Modal\r\n        show={this.state.show}\r\n        onHide={this.ModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}         \r\n        size=\"lg\"\r\n        contentClassName=\"modal-radius\"\r\n        centered\r\n\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <p className=\"addnew-title\">Sell Digital Goods</p>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"direct-access-pop\" id=\"myform\">\r\n            <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n                <label>Choose Your File Type</label>\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <div className=\"choose-part\">\r\n                  <input type=\"radio\" id=\"chooseType_1\"  name=\"chooseType\" onClick={this.openBrowsFile('upImage')}/><label for=\"chooseType_1\"   style={this.state.radioStyle1}>Images</label>\r\n                </div>\r\n                <div className=\"choose-part\">\r\n                  <input type=\"radio\" id=\"chooseType_2\"  name=\"chooseType\" onClick={this.openBrowsFile('upVideo')}/><label for=\"chooseType_2\"  style={this.state.radioStyle2}>Video</label>\r\n                </div>\r\n                <div className=\"choose-part\">\r\n                  <input type=\"radio\" id=\"chooseType_3\"  name=\"chooseType\" onClick={this.openBrowsFile('upAudio')}/><label for=\"chooseType_3\"  style={this.state.radioStyle3}>Audio</label>\r\n                </div>\r\n                <div className=\"choose-part\">\r\n                  <input type=\"radio\" id=\"chooseType_4\"  name=\"chooseType\" onClick={this.openBrowsFile('upText')}/><label for=\"chooseType_4\"  style={this.state.radioStyle4}>Text or PDF</label>\r\n                </div>\r\n               \r\n                \r\n              </div>\r\n              <div className=\"col-md-12\" >                    \r\n                      <input type=\"file\" id=\"upImage\" name=\"upImage\" style={{ display: \"none\" }} accept=\"image/png, image/jpeg,image/gif\" onClick={this.onInputClick} onChange={this.imageonMultiChange}/>       \r\n                      <input type=\"file\" id=\"upVideo\" name=\"upVideo\" style={{ display: \"none\" }} accept=\"video/mp4\" onClick={this.onInputClick} onChange={this.videoonChange}/>       \r\n                      <input type=\"file\" id=\"upAudio\" name=\"upAudio\" style={{ display: \"none\" }} accept=\"audio/mp3\" onClick={this.onInputClick} onChange={this.audioChange} />\r\n                      <input type=\"file\" id=\"upText\" name=\"upText\"  data-filetype=\"docx\" style={{ display: \"none\" }}  onClick={this.onInputClick} accept=\".docx,.pdf\" onChange={this.textFileChange}/>       \r\n              </div>\r\n              \r\n              <div className=\"col-md-12\">\r\n                <div className=\"row\">\r\n                            {\r\n                              this.albumArray!==null &&  this.albumArray.length > 0 ?\r\n                                (this.albumArray || []).map((url,i) => (\r\n                                  <>                                  \r\n                                    <div className=\"col-md-3\">\r\n                                          <div className=\"img-grid\">                                                                             \r\n                                          <img src={url.includes('blob') ? url : process.env.REACT_APP_UPLOAD_URL+\"Profile/\"+this.props.JM_User_Profile_Url_plus_JM_ID+\"/\"+url} />\r\n                                          <div className=\"cls\"  onClick={this.cancelAlbum(i)}>x</div>\r\n                                          </div>\r\n                                      </div>\r\n                                    </>\r\n                                ))\r\n                                :\r\n                                null\r\n                            }\r\n                             <div className=\"col-md-8 offset-md-2\">\r\n                            {\r\n                               \r\n                                this.state.videoData!=='NA' && this.state.videoData!=='' ?              \r\n                                        <video className=\"img-thumbnail-custom\" width=\"100%\" controls \r\n                                        src={this.state.videoData.includes('blob') ? this.state.videoData : process.env.REACT_APP_UPLOAD_URL+\"Profile/\"+this.props.JM_User_Profile_Url_plus_JM_ID+\"/\"+this.state.videoData} type=\"video/mp4\" >                                   \r\n                                        </video>\r\n                                        : null\r\n                               \r\n                            }  \r\n                            {\r\n                            this.state.audioData!=='' ?     \r\n                                <audio autoplay controls src={this.state.audioData.includes('blob') ? this.state.audioData : process.env.REACT_APP_UPLOAD_URL+\"Profile/\"+this.props.JM_User_Profile_Url_plus_JM_ID+\"/\"+ this.state.audioData}>\r\n                                  The “audio tag is not supported by your browser.\r\n                                </audio>\r\n                                : \r\n                                null\r\n                            }\r\n                             </div>\r\n                             <div className=\"col-md-12\">\r\n                                {\r\n                                      this.state.textFileUrl!=='' && this.state.textFileUrl.includes('blob')===false?                           \r\n                                      \r\n                                          <a  target=\"_blank\" href={process.env.REACT_APP_UPLOAD_URL+\"Profile/\"+this.props.JM_User_Profile_Url_plus_JM_ID+\"/\"+ this.state.textFileUrl}>\r\n                                              View file\r\n                                          </a>\r\n                                        : this.state.textFileUrl!=='' && this.state.textFileUrl.includes('blob') ? \r\n                                          <FileViewer\r\n                                            fileType={this.state.type}\r\n                                            filePath={this.state.textFileUrl}\r\n                                            errorComponent={CustomErrorComponent}\r\n                                            onError={this.onError}/>    \r\n                                        :\r\n                                           null \r\n                                    \r\n                                  }\r\n\r\n                                {\r\n                                  this.state.pdfFileUrl!=='' && this.state.pdfFileUrl.includes('blob')===false?                                \r\n                                      \r\n                                        <a  target=\"_blank\" href={process.env.REACT_APP_UPLOAD_URL+\"Profile/\"+this.props.JM_User_Profile_Url_plus_JM_ID+\"/\"+ this.state.pdfFileUrl}>\r\n                                            View PDF file\r\n                                        </a>\r\n                                      : this.state.pdfFileUrl!=='' && this.state.pdfFileUrl.includes('blob') ? \r\n                                        <FileViewer\r\n                                        fileType={this.state.type}\r\n                                        filePath={this.state.pdfFileUrl}\r\n                                        errorComponent={CustomErrorComponent}\r\n                                        onError={this.onError}/>    \r\n                                        :\r\n                                        null \r\n                                    \r\n                                  }\r\n                                  \r\n                            </div>\r\n                          \r\n                        \r\n                </div>\r\n              </div>\r\n              <form>                          \r\n                <input type=\"file\" id=\"video\" accept=\".mp4\" style={{display:'none'}} onChange={this.videoonChange}/>      \r\n             </form>   \r\n             <form>                          \r\n                <input type=\"file\" id=\"audio\" accept=\"audio/*\" style={{display:'none'}} onChange={this.audioChange}/>      \r\n             </form>\r\n              <div className=\"col-md-12\">\r\n                <input type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleChange} className=\"form-control\" placeholder=\"Title\" />       \r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <textarea className=\"form-control area\" name=\"description\" value={this.state.description}  onChange={this.handleChange} \r\n                placeholder=\"enter description\"/>\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <input type=\"text\" name=\"price\" value={this.state.price}\r\n                 onChange={this.handleChange} \r\n                 className=\"form-control\" placeholder=\" Price\"  disabled={this.state.isPriceDisabled}\r\n                 onKeyPress={(event) => {\r\n                  if (!/[0-9]/.test(event.key)) {\r\n                    event.preventDefault();\r\n                  }\r\n                }}\r\n                 />       \r\n              </div>\r\n              <div className=\"col-md-12 desktopCharge\">\r\n                  <HtmlTooltip arrow\r\n                      title={\r\n                        <React.Fragment>\r\n                          <Typography color=\"inherit\">Transaction Info</Typography>                \r\n                          <p style={{fontFamily:'monospace',fontSize:'12px'}}>{chargesMessage}</p>\r\n                        </React.Fragment>\r\n                      } placement=\"top-start\"\r\n                    >\r\n                  <Button style={chargesStyle}>{this.state.chargesInfo}<i class=\"fa fa-question-circle\" aria-hidden=\"true\" \r\n                  style={iconStyle}></i></Button>\r\n                </HtmlTooltip>\r\n              </div>\r\n              <div className=\"col-md-12 mobileCharge\" style={{fontFamily: 'consolas', fontSize: '13px',textTransform: 'capitalize'}}>\r\n                      &nbsp;{this.state.chargesInfo}\r\n                     <OverlayTrigger  className=\"mobile\" style={chargesStyle} trigger=\"click\" placement=\"top\" overlay={popover2}>           \r\n                         <i class=\"fa fa-question-circle\" aria-hidden=\"true\"  style={iconStyle}></i>                     \r\n                      </OverlayTrigger >  \r\n                </div>    \r\n\r\n\r\n                            \r\n                <div className=\"col-md-12\">\r\n                        <label>\r\n                               <strong>  \r\n                                  Settings \r\n                              </strong>     \r\n                       </label>\r\n                </div>                  \r\n                <div className=\"col-md-8 col-9\">\r\n                    <label >\r\n                    Let your followers pay what they want     \r\n                      </label>\r\n                </div>  \r\n              <div className=\"col-md-4 col-3\">\r\n                    \r\n                    <label class=\"switch\"  for=\"allowCustomertoPay\">\r\n                    <input type=\"checkbox\" id=\"allowCustomertoPay\" checked={this.state.allowCustomertoPay===1?true:false} onChange={this.onchangeCheck} />\r\n                        <div class=\"slider round\"></div>\r\n                      </label>\r\n                </div>\r\n                {\r\n                  this.state.showDiv===true ?      \r\n                  <>            \r\n                        <div className=\"col-md-6\">\r\n                        <label >\r\n                               <strong>  \r\n                                  Minimum Amount \r\n                              </strong>     \r\n                       </label>\r\n                        <input type=\"text\" name=\"min_amt\" \r\n                        value={this.state.min_amt}  onChange={this.handleChange} \r\n                        className=\"form-control\" placeholder=\"Enter Price\" \r\n                        onKeyPress={(event) => {\r\n                          if (!/[0-9]/.test(event.key)) {\r\n                            event.preventDefault();\r\n                          }\r\n                        }}\r\n                        />       \r\n                          <p style={{fontSize:'12px',fontWeight:'600'}}>{API.dynamicPriceMessage()}</p>    \r\n                      </div>\r\n                      <div className=\"col-md-6\" style={{display:'none'}}>\r\n                    <label >\r\n                               <strong>  \r\n                                  Suggested Amount \r\n                              </strong>     \r\n                       </label>\r\n                      <input type=\"text\" name=\"suggested_amt\" \r\n                      value={this.state.suggested_amt} onChange={this.handleChange} \r\n                      className=\"form-control\" placeholder=\"Enter Price\" \r\n                      onKeyPress={(event) => {\r\n                        if (!/[0-9]/.test(event.key)) {\r\n                          event.preventDefault();\r\n                        }\r\n                      }}\r\n                      />       \r\n                    </div>\r\n                  </>\r\n                  :\r\n                  null\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n\r\n              { uploadPercentage > 0 && \r\n                  <>\r\n                        <ProgressBar animated  variant=\"success\" style={{width:'80%',margin: '15px'}} now={uploadPercentage} active label={`${uploadPercentage}%`} /> \r\n                                   \r\n                                   <span\r\n                                        style={{cursor:'pointer'}}\r\n                                        onClick={this.cancelUpload}\r\n                                    >\r\n                                        <i className=\"fa fa-close\" style={{fontSize:'22px',marginTop: '56%'}}></i>\r\n                                    </span>\r\n                   </>\r\n              }\r\n            </div>\r\n            <div className=\"btun-box\">\r\n              <button className=\"btun\" id=\"btn_save\" disabled={this.state.disabledBtn} onClick={this.nextClick}> {this.state.BtnName} <NavigateNextIcon/></button>\r\n          \r\n            </div>\r\n            <p style={{fontSize: '14px',color: '#ff746e',padding:'5px'}}>{this.state.errMsg}</p>\r\n          </div>\r\n        </Modal.Body>\r\n\r\n      </Modal>\r\n\r\n    \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nEditDigitalEcommerce.propTypes = {\r\n\r\n};\r\n\r\nexport default EditDigitalEcommerce;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\EditSupportMe2.js",["2760","2761","2762","2763"],"import React, { Component } from 'react';\r\n// import {Button} from 'react-bootstrap'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\n\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport Popover from 'react-bootstrap/Popover'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport API  from '../services/API';\r\nclass EditPopGift2 extends Component\r\n{\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       openModel:false,\r\n       show:false,\r\n       open:false,\r\n       DA_Title:'',\r\n       price:0,\r\n       chargesInfo:'',\r\n       JM_ID: 0,\r\n       showIconCharges:'none',\r\n       title:'',\r\n       msg:'',\r\n\r\n       allowCustomertoPay: 0,\r\n       min_amt: '',\r\n       suggested_amt: '',\r\n       showDiv: false,\r\n       isPriceDisabled:false,\r\n    }\r\n    //console.log(this.props.gift)\r\n  }\r\n\r\n\r\n  ModalClose=()=>{\r\n    this.setState({\r\n      openModel:false,\r\n      show:false,\r\n      DA_Title:'',\r\n      price:0\r\n    });\r\n\r\n  }\r\n  ModalOpen=(e)=>{\r\n    this.setState({\r\n        openModel:true,\r\n        show:true,\r\n        DA_Title:this.props.gift.DA_Title,     \r\n        price:this.props.gift.DA_Price,\r\n        JM_ID: this.props.gift.JM_ID,\r\n        allowCustomertoPay: this.props.gift.DA_Allow_Cust_Pay,                       \r\n        min_amt: this.props.gift.DA_Min_Amount,   \r\n        suggested_amt: this.props.gift.DA_Suggested_Amont,   \r\n        showDiv:this.props.gift.DA_Allow_Cust_Pay===1 ? true : false,\r\n        isPriceDisabled:this.props.gift.DA_Allow_Cust_Pay===1 ? true : false,\r\n    });\r\n  }\r\n\r\n  \r\n  handleChange=(e)=>{\r\n     let val=parseFloat(e.target.value);\r\n     this.setState({[e.target.name]:e.target.value})\r\n     if(e.target.name==='price' && val > 0)\r\n     {\r\n          let fee=val * API.razorPayTax();\r\n          let gst=fee * API.razorPayGST();         \r\n          let razorPay=(fee+gst); // 1.65 + 0.297\r\n          let TenPer=(val - razorPay) * 10/100; // 10 if val is 100                  \r\n          let charges= val - razorPay - TenPer; // 100 - 1.65- 0.297                      \r\n          let chargesInfo=\"You'll receive INR \"+ charges.toFixed(2) + \" \";\r\n\r\n        let showIconCharges='block';\r\n         this.setState({chargesInfo,showIconCharges});\r\n     }\r\n     else\r\n     {\r\n      let chargesInfo=\"\";\r\n      let showIconCharges='none';\r\n       this.setState({chargesInfo,showIconCharges});\r\n     }\r\n }\r\n SaveItem=e=>\r\n {\r\n\r\n\r\n\r\n   document.getElementById('msg').innerHTML='';\r\n   document.getElementById('msg').style.color='red';\r\n   if(isNaN(parseInt(this.state.price)) || parseInt(this.state.price) < 0)\r\n   {\r\n     document.getElementById('msg').style.color='red';\r\n     document.getElementById('msg').innerHTML='* Enter Price';\r\n     return false;\r\n   }\r\n       //23-aug-2021 dynamic pricing\r\n   if(this.state.allowCustomertoPay===1)\r\n   {\r\n     if( isNaN(parseInt(this.state.min_amt)) || parseInt(this.state.min_amt) === 0 )\r\n     {            \r\n       document.getElementById('msg').style.color='red';\r\n       document.getElementById('msg').innerHTML='* Enter minimum amount';\r\n       return false;              \r\n     }\r\n   }\r\n   //console.log(JSONdata)\r\n   var flagData = {  \r\n    DA_ID:this.props.gift.DA_ID,\r\n     JM_ID:this.props.gift.JM_ID,\r\n     DA_Title:this.state.DA_Title,\r\n     DA_Price:this.state.price,\r\n     DA_Type:'gifts',\r\n     image:this.props.src ,\r\n     DA_Allow_Cust_Pay:this.state.allowCustomertoPay,\r\n     DA_Min_Amount:parseInt(this.state.min_amt),\r\n     DA_Suggested_Amont:parseInt(this.state.suggested_amt)\r\n\r\n   };\r\n   const flag=API.encryptData(flagData);\r\n\r\n   var JSONdata = {\r\n     flag: flag\r\n   };\r\n\r\n         const API_url = process.env.REACT_APP_API_URL + \"admin/updateGifts\";\r\n       fetch(API_url,\r\n         {\r\n           method: 'post',\r\n           headers: { \"Content-Type\": \"application/json\", \"authorization\": API.getAuth(),\"id\":API.getId()},    \r\n           body: JSON.stringify(JSONdata)\r\n         })\r\n       .then((response) => response.json())\r\n       .then(data => {\r\n         \r\n         //console.log(data)\r\n         if(data.status ===1)\r\n         {\r\n            \r\n            this.setState({            \r\n              DA_Title:'',\r\n              price:0\r\n            });\r\n            this.ModalClose();  \r\n            this.Get_User_Details();            \r\n         }\r\n         else\r\n         {\r\n            API.minusResponse(data);   \r\n            this.setState({\r\n              show:true,\r\n              title:'info !!!',\r\n              msg:'Network error, try later',\r\n            });\r\n         }\r\n       \r\n          \r\n         //this.ModalClose();         \r\n        \r\n       }).catch(error=>{\r\n            document.getElementById(\"msg\").innerText='Network error occured';\r\n       });\r\n }\r\n Get_User_Details = () => {\r\n        var JSONdata = {\r\n          JM_ID: this.state.JM_ID\r\n        };\r\n        const API_url =process.env.REACT_APP_API_URL + \"admin/userDetailsAll\";\r\n      fetch(API_url,\r\n        {\r\n          method: 'post',\r\n          headers: { \"Content-Type\": \"application/json\",\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n          body: JSON.stringify(JSONdata)\r\n        })\r\n      .then((response) => response.json())\r\n      .then(data1 => {\r\n        if (data1 != null && data1.status > 0)\r\n        {\r\n          const data=API.decryptJson(data1.flag);\r\n          this.setState({\r\n            userDetailsAll: data.data,\r\n            userDetails:data.userDetails,\r\n            themeMasterUser:data.themeMasterUser,\r\n            socialWidget:data.socialWidget,\r\n            gifts:data.gifts,\r\n            title:'Success!!!',\r\n            msg:'Profile is updated',\r\n          });\r\n          this.props.setStateAfterInsert(this.state);\r\n        }      \r\n        else\r\n          this.setState({showPage:false})\r\n      //console.log(data)\r\n      });\r\n}\r\nhidePopover=()=>{\r\n  document.getElementById(\"popover-basic\").style.display='none';\r\n}\r\n\r\nonchangeCheck=(e)=>{\r\n\r\n  if(e.target.checked===true)\r\n  {\r\n\r\n    this.setState({\r\n      allowCustomertoPay:1,\r\n      showDiv:true,  \r\n      isPriceDisabled:true,\r\n      chargesInfo:'', showIconCharges:'none'\r\n    })\r\n\r\n\r\n  }\r\n  else\r\n  {\r\n    this.setState({\r\n      allowCustomertoPay:0,\r\n      showDiv:false, isPriceDisabled:false\r\n    })\r\n  }\r\n}\r\n  render(){\r\n    const {uploadPercentage} = this.state;\r\n    const longText = `\r\n    Aliquam eget finibus ante, non facilisis lectus. Sed vitae dignissim est, vel aliquam tellus.\r\n    Praesent non nunc mollis, fermentum neque at, semper arcu.\r\n    Nullam eget est sed sem iaculis gravida eget vitae justo.\r\n    `;\r\n    \r\n    const useStyles = {\r\n      button: {\r\n        margin: '5px',\r\n      },\r\n      customWidth: {\r\n        maxWidth: 500,\r\n        fontSize:'25px',\r\n       \r\n      },\r\n      noMaxWidth: {\r\n        maxWidth: 'none',\r\n      },\r\n    };\r\n   // let chargesMessage=\"You receive 90% of the transaction value minus a 2% transaction fee that is collected by our payment provider.\";\r\n    let chargesMessage=API.chargesMessage();\r\n  \r\n    const HtmlTooltip = withStyles((theme) => ({\r\n      arrow: {\r\n        color: theme.palette.common.black,\r\n      },\r\n      tooltip: {\r\n        backgroundColor: '#212529',\r\n        color: 'white',\r\n        maxWidth: '50%',\r\n        fontSize: theme.typography.pxToRem(10),\r\n        // border: '1px solid #dadde9',\r\n      },\r\n    }))(Tooltip);\r\n    \r\n    const iconStyle={\r\n        display:this.state.showIconCharges,\r\n        fontSize: \"23px\",\r\n        color: \"gray\"\r\n    }\r\n    const chargesStyle={\r\n      fontFamily: \"consolas\",\r\n      fontSize: \"13px\",\r\n      textTransform: \"capitalize\",\r\n      marginTop: \"-6%\",\r\n      fontWeight: \"bold\",\r\n      color: \"gray\",\r\n    }\r\n    const popover2 = (\r\n      <Popover id=\"popover-basic\" style={{zIndex:'99999',background: 'black',color:'#fff'}}  >\r\n         <button type=\"button\" className=\"pop-close\"><span aria-hidden=\"true\" onClick={this.hidePopover}>×</span>\r\n          <span className=\"sr-only\">Close</span>\r\n        </button>       \r\n        <Popover.Content style={{background: 'black',color:'#fff'}}>\r\n        {chargesMessage}\r\n          \r\n        </Popover.Content>    \r\n       \r\n      </Popover>\r\n    );\r\n  return (\r\n    <>\r\n      <button onClick={this.ModalOpen}><CreateIcon />     \r\n      </button>\r\n      <Modal\r\n        show={this.state.show}\r\n        onHide={this.ModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <p className=\"addnew-title\">Update {this.props.gift.DA_DA_ID=== 0 ? \"Gift Options\" : \"Support Options\"}</p>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"direct-access-pop\">\r\n            <div className=\"row\">\r\n              \r\n              <div className=\"col-md-6 offset-md-3\">\r\n                <div className=\"image\">\r\n                   <img src={this.props.src} />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <input type=\"text\" name=\"DA_Title\" value={this.state.DA_Title} onChange={this.handleChange} className=\"form-control\" placeholder=\"Set Title\" />\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <input type=\"text\" name=\"price\" value={this.state.price}  disabled={this.state.isPriceDisabled}\r\n                 onKeyPress={(event) => {\r\n                  if (!/[0-9]/.test(event.key)) {\r\n                    event.preventDefault();\r\n                  }\r\n                }}\r\n                onChange={this.handleChange}  className=\"form-control\" placeholder=\"Set Price\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-12 desktopCharge\">\r\n                  <HtmlTooltip arrow\r\n                      title={\r\n                        <React.Fragment>\r\n                          <Typography color=\"inherit\">Transaction Info</Typography>                \r\n                          <p style={{fontFamily:'monospace',fontSize:'12px'}}>{chargesMessage}</p>\r\n                        </React.Fragment>\r\n                      } placement=\"top-start\"\r\n                    >\r\n                  <Button style={chargesStyle}>{this.state.chargesInfo}<i class=\"fa fa-question-circle\" aria-hidden=\"true\" \r\n                  style={iconStyle}></i></Button>\r\n                </HtmlTooltip>\r\n              </div>\r\n              <div className=\"col-md-12 mobileCharge\" style={{fontFamily: 'consolas', fontSize: '13px',textTransform: 'capitalize'}}>\r\n                      &nbsp;{this.state.chargesInfo}\r\n                     <OverlayTrigger  className=\"mobile\" style={chargesStyle} trigger=\"click\" placement=\"top\" overlay={popover2}>           \r\n                         <i class=\"fa fa-question-circle\" aria-hidden=\"true\"  style={iconStyle}></i>                     \r\n                      </OverlayTrigger >  \r\n                </div>\r\n\r\n\r\n            <div className=\"btun-box\">\r\n              <button className=\"btun\" onClick={this.SaveItem}>Update Item</button>   \r\n              <span id=\"msg\"></span>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n}\r\n\r\nexport default EditPopGift2;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\profile\\FourZeroFour.js",[],"E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\Tipping.js",["2764","2765","2766","2767"],"import React, { Component } from 'react';\r\nimport API from '../services/API';\r\n\r\nclass Tipping extends Component {\r\n    state={\r\n        paymentId:'',\r\n        isloading:false,\r\n        disabled:false,\r\n        msgColor:'',\r\n        base_url: process.env.REACT_APP_API_URL,\r\n        root_url: process.env.REACT_APP_ROOT_URL,\r\n      }\r\n      constructor() {\r\n        super()\r\n    \r\n        this.openCheckout = this.openCheckout.bind(this);\r\n      }\r\n      componentDidMount()\r\n      {\r\n        //this.setState(this.props.state);\r\n       // console.log(this.props.state)\r\n       // console.log(this.props.userDetails)\r\n     \r\n      // console.log(API.userAgentType());\r\n       if(API.userAgentType()===false)\r\n       {\r\n         //alert('web browser ' + navigator.userAgent)\r\n       }\r\n       else\r\n       {\r\n       // alert('web view ' + navigator.userAgent)\r\n\r\n\r\n       }\r\n\r\n      }\r\n     \r\n     async CapturePayment(razorpay_payment_id,responseData){\r\n              this.setState({\r\n                isloading:true\r\n              });\r\n        try {\r\n    \r\n    \r\n              const paymentId = razorpay_payment_id;         \r\n              const payUrl = process.env.REACT_APP_API_URL+'admin/captureTipping';\r\n              var JSONdata = {\r\n                DA_ID:this.props.state.DA_ID,\r\n                BM_Instruction:this.props.state.message,\r\n                BM_Name:'Donator',\r\n                BM_Email:'Donator@gmail.com',\r\n                BM_Phone:'70000000000',\r\n                BM_Password:'123456',\r\n                BM_Purchase_Amt:this.props.DA_Price,\r\n                paymentId:paymentId,\r\n                amount:this.props.DA_Price,\r\n                Consent:0,\r\n                JM_Name:this.props.userDetails.JM_Name,\r\n                DA_Title:'Support Me',\r\n            \t\tresponseData:responseData\r\n              };\r\n              const response= await fetch(payUrl,{\r\n                  method: 'post',\r\n                  headers: { \"Content-Type\": \"application/json\" },\r\n                  body: JSON.stringify(JSONdata)\r\n              });\r\n              const data=await response.json();\r\n              if(data.status === 1)\r\n              {\r\n               // console.log(data)\r\n                this.setState({\r\n                  isloading:false,\r\n                  message:'Payment is Successfully captured '+ data.url,\r\n                  msgColor:\"#ff9272\",\r\n                });\r\n                \r\n                window.location.reload();\r\n              }\r\n              else{\r\n               \r\n                this.setState({\r\n                  isloading:false,               \r\n                  message:'Internal error - Please contact Expy support',\r\n                  msgColor:\"#ff5f70\"\r\n                });\r\n\r\n                 //do rest if payment done but data not captured\r\n                  const token=API.encryptData(paymentId)\r\n                  const url = process.env.REACT_APP_API_URL+'admin/dataUncaptured';\r\n                  const response1= await fetch(url,{\r\n                    method: 'post',\r\n                    headers: { \"Content-Type\": \"application/json\" ,\"token\":token},\r\n                    body: JSON.stringify(JSONdata)\r\n                    });\r\n                    const resp=await response1.json();\r\n                return false;\r\n              }\r\n        } \r\n        catch (err) \r\n        {\r\n         // console.log(err);\r\n        }\r\n    }\r\n    WaitAndReload=()=>\r\n    {\r\n      setTimeout(function() {\r\n        window.location.reload();\r\n       }, 5000);  \r\n    }\r\n    //BM_Type\r\n    async CapturePaymentDoner(razorpay_payment_id,responseData){\r\n      this.setState({\r\n        isloading:true\r\n      });\r\n    try {\r\n    \r\n    \r\n      const paymentId = razorpay_payment_id;         \r\n      const payUrl = process.env.REACT_APP_API_URL+'admin/addDoner';\r\n      var flagData = {\r\n        DA_ID:this.props.state.DA_ID,\r\n        BM_Instruction:this.props.state.DonarMsg,\r\n        BM_Name:this.props.state.DonarName,\r\n        BM_Email:this.props.state.DonarEmail,\r\n        BM_Phone:this.props.state.DonarPhone,\r\n        BM_Password:'*******',\r\n        BM_Purchase_Amt:this.props.state.DonarAmt,\r\n        paymentId:paymentId,\r\n        amount:this.props.DA_Price,\r\n        DA_Title:this.props.DA_Title,\r\n        JM_Name:this.props.userDetails.JM_Name,\r\n        JM_ID:this.props.userDetails.JM_ID,\r\n        JM_User_Profile_Url:this.props.userDetails.JM_User_Profile_Url,\r\n        JM_Email:this.props.userDetails.JM_Email,\r\n        JM_Phone:this.props.userDetails.JM_Phone,\r\n        LM_ID:this.props.state.LM_ID,   \r\n        responseData:responseData\r\n      };\r\n\r\n\r\n      const flag=API.encryptData(flagData);\r\n      var JSONdata={\r\n        flag:flag\r\n      }\r\n\r\n      \r\n      document.getElementById('btn_payment').innerHTML='Processing...';\r\n      document.getElementById('btn_payment').disabled=true;\r\n      const response= await fetch(payUrl,{\r\n          method: 'post',\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(JSONdata)\r\n      });\r\n      const data=await response.json();\r\n\r\n\r\n\r\n      if(data.status === 1)\r\n      {\r\n      \r\n   \r\n        document.getElementById('request').innerHTML='';\r\n        var p = document.createElement('p');\r\n        p.innerHTML= API.paidMonitizationMsg();  \r\n        p.style.color='green'\r\n        document.getElementById('request').appendChild(p);\r\n        this.WaitAndReload();\r\n       \r\n     \r\n      }\r\n      else\r\n      {       \r\n       \r\n          \r\n        // this.setState({\r\n        //   isloading:false,        \r\n        //   message:'Internal error - Please contact Expy support',\r\n        //   msgColor:\"#ff5f70\"\r\n        // });\r\n\r\n        document.getElementById('request').innerHTML='';\r\n        var p = document.createElement('p');\r\n        p.innerHTML= \"Internal error - Please contact Expy support\";  \r\n        p.style.color='red'\r\n        document.getElementById('request').appendChild(p);\r\n\r\n        //do rest if payment done but data not captured\r\n        const token=API.encryptData(paymentId)\r\n        const url = process.env.REACT_APP_API_URL+'admin/dataUncaptured';\r\n        const response1= await fetch(url,{\r\n          method: 'post',\r\n          headers: { \"Content-Type\": \"application/json\" ,\"token\":token},\r\n          body: JSON.stringify(JSONdata)\r\n          });\r\n          const resp=await response1.json();\r\n      }\r\n    } \r\n    catch (err) \r\n    {\r\n   // console.log(err);\r\n    }\r\n    }\r\n    \r\n      async openCheckout()\r\n      {\r\n\r\n        document.getElementById(\"msg_tipping\").innerHTML='';\r\n        document.getElementById(\"msg_tipping\").style.color='red';\r\n        if(this.props.DA_Price===0)\r\n        {\r\n          document.getElementById(\"msg_tipping\").innerHTML='* Enter tipping amount';\r\n          return false;\r\n        }\r\n       \r\n   \r\n     \r\n        if(this.props.state.DonarName.length===0)\r\n        {\r\n            document.getElementById(\"msg_tipping\").innerHTML='* Enter name';         \r\n            return false;\r\n        }\r\n        \r\n        if(this.props.state.DonarEmail.length===0)\r\n        {        \r\n          document.getElementById(\"msg_tipping\").innerHTML='* Enter email-id';\r\n          return false;\r\n        }\r\n        if(this.props.state.DonarEmail.length > 50)\r\n        {        \r\n          document.getElementById(\"msg_tipping\").innerHTML='* Enter email-id within 50 characters';\r\n          return false;\r\n        }\r\n\r\n\r\n        if(this.props.state.DonarEmail.length > 0)\r\n        {            \r\n          if(API.isValidEmail(this.props.state.DonarEmail)===false)\r\n          {           \r\n            document.getElementById(\"msg_tipping\").innerHTML='* Enter valid email-id';\r\n             return false\r\n          }    \r\n        } \r\n\r\n\r\n        if(this.props.state.DonarPhone.length === 0 )\r\n        {           \r\n      \r\n          document.getElementById(\"msg_tipping\").innerHTML='* Enter phone number';\r\n          return false\r\n          \r\n        } \r\n        if(this.props.state.DonarPhone.length !==10 )\r\n        {           \r\n    \r\n          document.getElementById(\"msg_tipping\").innerHTML='* Enter 10 digits phone number';\r\n          return false\r\n          \r\n        } \r\n\r\n        this.props.AddLeads();\r\n        this.setState({\r\n          isloading:true,\r\n          disabled:true\r\n        });\r\n    \r\n        var DA_Price=0;    \r\n        DA_Price=this.props.DA_Price * 100; \r\n        const API_url = process.env.REACT_APP_API_URL+'admin/order';  \r\n          var flagData = {\r\n            amount:DA_Price,\r\n            Product_Id:this.props.state.DA_ID,\r\n            Name:this.props.state.DonarName,\r\n            Email:'NA',\r\n            DA_Price:this.props.DA_Price,\r\n            currency:this.props.DA_INR_Doller,\r\n          };   \r\n        \r\n          const flag=API.encryptData(flagData);\r\n          let  JSONdata = {\r\n              flag: flag\r\n            };\r\n\r\n\r\n            const response=await fetch(API_url,{\r\n                method: 'post',\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(JSONdata)\r\n              });\r\n              const data1=await response.json();              \r\n              const data=API.decryptJson(data1.flag);\r\n\r\n\r\n              let options={};\r\n             // var isWebView=API.userAgentType();\r\n              var isWebView=false;\r\n              if(isWebView===false)\r\n              {\r\n                 options = {\r\n                  \"key\": process.env.REACT_APP_RAZOR_PAY_TEST_KEY,\r\n                  \"amount\":DA_Price, // 2000 paise = INR 20, amount in paisa\r\n                  \"name\": \"Expy\",\r\n                  \"description\": \"Donation\",\r\n                  \"image\"   : \"/favicon.png\",\r\n                  \"order_id\": data.id,\r\n                  \"method\": 'wallet',\r\n                  \"wallet\": 'paypal',\r\n                  \"handler\" :  response => \r\n                  {        \r\n                    //console.log(response.razorpay_payment_id);           \r\n                      this.CapturePaymentDoner(response.razorpay_payment_id,response);\r\n                  \r\n                  },\r\n                  \"prefill\": {\r\n                    \"name\": this.props.state.DonarName,\r\n                    \"email\": this.props.state.DonarEmail,\r\n                    \"contact\":this.props.state.DonarPhone,\r\n                  },\r\n                  \"notes\": {\r\n                    \"address\": \"\"\r\n                  },\r\n                  \"theme\": {\r\n                    \"color\": \"#fa217c\"\r\n                  },\r\n             \r\n                };    \r\n        \r\n              }\r\n              else //webview\r\n              {\r\n\r\n                  // dummy details\r\n                  const paymentId = '';         \r\n                  const payUrl_Dum = process.env.REACT_APP_API_URL+'admin/addDoner_Dum';\r\n                  var flagData_Dum = {\r\n                    ord_id:data.id,\r\n                    DA_ID:this.props.state.DA_ID,\r\n                    BM_Instruction:this.props.state.DonarMsg,\r\n                    BM_Name:this.props.state.DonarName,\r\n                    BM_Email:this.props.state.DonarEmail,\r\n                    BM_Phone:this.props.state.DonarPhone,\r\n                    BM_Password:'*******',\r\n                    BM_Purchase_Amt:this.props.state.DonarAmt,\r\n                    paymentId:paymentId,\r\n                    amount:this.props.DA_Price,\r\n                    DA_Title:this.props.DA_Title,\r\n                    JM_Name:this.props.userDetails.JM_Name,\r\n                    JM_ID:this.props.userDetails.JM_ID,\r\n                    JM_User_Profile_Url:this.props.userDetails.JM_User_Profile_Url,\r\n                    JM_Email:this.props.userDetails.JM_Email,\r\n                    JM_Phone:this.props.userDetails.JM_Phone,\r\n                    LM_ID:this.props.state.LM_ID,   \r\n                    responseData:[]\r\n                  };\r\n            \r\n            \r\n                  const flag_dum=API.encryptData(flagData_Dum);\r\n                   var JSONdata_Dum={\r\n                    flag:flag_dum\r\n                  }          \r\n                  \r\n      \r\n                  const response_Dum= await fetch(payUrl_Dum,{\r\n                      method: 'post',\r\n                      headers: { \"Content-Type\": \"application/json\" },\r\n                      body: JSON.stringify(JSONdata_Dum)\r\n                  });\r\n                  const data_Dum=await response_Dum.json();\r\n\r\n\r\n                    options = {\r\n                      \"key\": process.env.REACT_APP_RAZOR_PAY_TEST_KEY,\r\n                      \"amount\":DA_Price, // 2000 paise = INR 20, amount in paisa\r\n                      \"name\": \"Expy\",\r\n                      \"description\": \"Donation\",\r\n                      \"image\"   : \"/favicon.png\",\r\n                      \"order_id\": data.id,\r\n                      \"method\": 'wallet',\r\n                      \"wallet\": 'paypal',\r\n                      callback_url: process.env.REACT_APP_API_URL+'admin/success',\r\n                      redirect: true,\r\n                      \"handler\" :  response => \r\n                      {        \r\n                        //console.log(response.razorpay_payment_id);           \r\n                         // this.CapturePaymentDoner(response.razorpay_payment_id,response);\r\n                      \r\n                      },\r\n                      \"prefill\": {\r\n                        \"name\": this.props.state.DonarName,\r\n                        \"email\": this.props.state.DonarEmail,\r\n                        \"contact\":this.props.state.DonarPhone,\r\n                      },\r\n                      \"notes\": {\r\n                        \"address\": \"\"\r\n                      },\r\n                      \"theme\": {\r\n                        \"color\": \"#fa217c\"\r\n                      },\r\n                      \r\n                \r\n                    };   \r\n       \r\n              }\r\n    \r\n\r\n        let rzp = new window.Razorpay(options);\r\n        rzp.on('payment.failed', function (response){\r\n          // alert(response.error.code);\r\n          // alert(response.error.description);\r\n          // alert(response.error.source);\r\n          // alert(response.error.step);\r\n          // alert(response.error.reason);\r\n          // alert(response.error.metadata.order_id);\r\n          // alert(response.error.metadata.payment_id);\r\n\r\n          //callback\r\n          // callback_url: process.env.REACT_APP_API_URL+'admin/callback_url',\r\n           //redirect: true\r\n        });\r\n        rzp.open();\r\n      }\r\n   \r\n\r\n    render() {\r\n        return (\r\n          <>\r\n            <button className=\"btun btun_1 setCursor\"  id=\"btn_payment\" disabled={this.props.DA_Price > 0 ?false:true} onClick={this.openCheckout} >Pay</button>\r\n           <p id=\"msg_tipping\"></p>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nTipping.propTypes = {\r\n\r\n};\r\n\r\nexport default Tipping;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\Buy.js",["2768","2769","2770","2771","2772","2773","2774","2775","2776"],"import React, { Component } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Grow from '@material-ui/core/Grow';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\r\nimport Checkout from './Checkout';\r\nimport Checkout_videoSession from './Checkout_videoSession';\r\nimport {DatePicker} from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport moment from 'moment';\r\n// import imageToBase64 from 'image-to-base64/browser';\r\n// import Blur from 'react-blur';\r\nimport API  from \"../services/API\";\r\n\r\n\r\nclass Buy extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openModel:false,\r\n            base_url: process.env.REACT_APP_API_URL,\r\n            root_url: process.env.REACT_APP_ROOT_URL,\r\n          \r\n            show:false,\r\n            open:false,\r\n            JM_ID:this.props.JM_ID,\r\n            JM_Name:'',  \r\n            SWM_Title:'',\r\n            SWM_Url:'',\r\n            SWM_Icon:'',\r\n            LM_Who_Will_See:1,\r\n            selectedFile: null,\r\n            linkMaster:[],\r\n           userDetails:[],\r\n           socialWidget:[],\r\n           title:'',\r\n           msg:'',\r\n           logo:'',\r\n           SWM_Icon_Position:'bottom',\r\n     \r\n           Instagram:'https://www.instagram.com/',\r\n           Facebook:'https://www.facebook.com/',\r\n           YouTube:'https://www.youtube.com/',\r\n           Twitter:'https://twitter.com/',\r\n           Snapchat:'https://www.snapchat.com/',\r\n           LinkedIn:'https://www.linkedin.com/',\r\n           Twitch:'https://www.twitch.com/',\r\n           Pinterest:'https://www.pinterest.com/',\r\n           Spotify:'https://www.spotify.com/',\r\n           category_links:[],\r\n     \r\n           checked:false,\r\n           request:true,\r\n           checkedRequest:true,\r\n           descript:false,\r\n           checkeddescript:false,\r\n           FanDetails:false,\r\n           checkedFanDetails:false,\r\n           DA_ID:this.props.productList.DA_ID,\r\n           DA_DA_ID:this.props.productList.DA_DA_ID,\r\n           BM_Instruction:'',\r\n           BM_Name:'',\r\n           BM_Email:'',\r\n           BM_Phone:'',\r\n           BM_Password:'123456',\r\n           BM_Purchase_Amt:this.props.productList.DA_Price,\r\n           DA_Title:this.props.productList.DA_Title,\r\n           mailText:this.props.productList.mailText,\r\n           duration:this.props.productList.duration,\r\n           planDays:this.props.productList.planDays,\r\n           Consent:0,\r\n           LM_ID:0,\r\n\r\n\r\n           showVideo:false,\r\n           ModalOpenVideo:false,\r\n           video_instruction:'',\r\n           video_email:'',\r\n           video_phone:'',\r\n           video_name:'',\r\n           btn_video_pay:true,\r\n           data:[],\r\n           dropdown:[],\r\n           slot_dropdown:0,\r\n           videoRequest:false,\r\n           dateString:'',\r\n           videoRequest1stTab:true,\r\n           session_timeing:'',\r\n           ES_ID:0,\r\n           dynamic_price:this.props.productList.DA_Min_Amount,\r\n     \r\n         }\r\n        \r\n    }\r\n \r\n     ModalClose=()=>{       \r\n        this.setState({openModel:false,show:false});\r\n     \r\n      }\r\n      ModalOpen=()=>{\r\n        this.setState({openModel:true,show:true});\r\n        this.setState({checkedRequest:true,request:true,checkedPayDetails:false,PayDetails:false,checkedFanDetails:false,FanDetails:false,checkeddescript:false,descript:false});\r\n        this.setState({openModel:true,show:true,\r\n          BM_Instruction:'',BM_Name:'',BM_Email:'',BM_Phone:''   \r\n        });\r\n     \r\n        ////console.log(this.props.userDetails[0]);\r\n        var JSONdata = {\r\n          Stat_Type: 'P',\r\n          Stat_ID: this.props.productList.DA_ID,\r\n          JM_ID: this.props.productList.JM_ID   \r\n        };\r\n        let data = API.doClick(JSONdata);\r\n\r\n\r\n        ////console.log(data)\r\n      }\r\n      OpenModalVideo=async()=>{\r\n\r\n        this.setState({ModalOpenVideo:true,\r\n          videoRequest1stTab:true,videoRequest:false,\r\n          dateString:'', slot_dropdown:0 ,video_name:'',video_email:'',video_phone:''\r\n\r\n        });   \r\n\r\n        // this.setState({checkedRequest:true,request:true,checkedPayDetails:false,PayDetails:false,checkedFanDetails:false,FanDetails:false,checkeddescript:false,descript:false});\r\n        // this.setState({openModel:true,show:true,\r\n        //   BM_Instruction:'',BM_Name:'',BM_Email:'',BM_Phone:''   \r\n        // });\r\n        // //console.log(this.props.productList);\r\n        ////console.log(this.props.userDetails[0]);\r\n        var JSONdata = {\r\n          Stat_Type: 'P',\r\n          Stat_ID: this.props.productList.DA_ID,\r\n          JM_ID: this.props.productList.JM_ID   \r\n        };\r\n        let data1 = API.doClick(JSONdata);\r\n\r\n      \r\n        var flagData={\r\n          JM_ID: this.props.productList.JM_ID,\r\n          ES_EM_ID: this.props.productList.DA_ID    \r\n        }\r\n        const flag=API.encryptData(flagData);\r\n\r\n        var JSONData={\r\n         flag:flag\r\n        }\r\n        \r\n        var response=await API.Get_Config(JSONData);\r\n        if(response.status===1)\r\n        {\r\n          const data=API.decryptJson(response.flag);\r\n\r\n          this.setState({\r\n            data:data.data,slot_dropdown:0,dateString:'',dropdown:[]\r\n          })\r\n        }\r\n           \r\n        ////console.log(data)\r\n      // var json = {\r\n      //     \"status\": 0,\r\n      //     \"msg\": \"invalid api calling L2\"\r\n      //   }\r\n      //   let token=API.encryptData(json);\r\n      //   //console.log(token)\r\n\r\n      }\r\n    //26-jul-2021\r\n    btn_video_next=(e)=>{\r\n      document.getElementById('msg_video').innerHTML='';\r\n     if(this.state.dateString.length===0)\r\n     {\r\n       document.getElementById('msg_video').innerHTML='* Select Date';\r\n        return false;\r\n     }\r\n     if(parseInt(this.state.slot_dropdown)===0)\r\n     {\r\n       document.getElementById('msg_video').innerHTML='* Select Slot';\r\n        return false;\r\n     }\r\n     if(this.state.video_name.length===0)\r\n     {\r\n       document.getElementById('msg_video').innerHTML='* Enter Name';\r\n        return false;\r\n     }\r\n     if(this.state.video_email.length===0)\r\n     {\r\n       document.getElementById('msg_video').innerHTML='* Enter Email';\r\n        return false;\r\n     }\r\n     if(this.state.video_email.length > 50)\r\n     {\r\n       document.getElementById('msg_video').innerHTML='* Invalid Email length';\r\n        return false;\r\n     }\r\n    //  if(this.state.video_phone.length===0)\r\n    //  {\r\n    //    document.getElementById('msg_video').innerHTML='* Enter Phone Number';\r\n    //     return false;\r\n    //  }\r\n    // //console.log(this.state.dateString)\r\n     this.setState({\r\n       videoRequest:true,videoRequest1stTab:false,\r\n     })\r\n     \r\n     this.AddLeadsVideo();\r\n    }\r\n    btn_video_prev=(e)=>{\r\n      this.setState({\r\n        videoRequest:false,videoRequest1stTab:true,\r\n      })\r\n    }\r\n     \r\n      requestClick=(e)=>{\r\n        this.setState({checkeddescript:true,checkedRequest:false,descript:true,request:false});\r\n      }\r\n      nextClick=(e)=>{\r\n        if(this.state.DA_DA_ID===1)\r\n        {\r\n          if(this.state.BM_Instruction.length > 0)\r\n             this.setState({checkedFanDetails:true,FanDetails:true,checkeddescript:false,descript:false,checkedRequest:false,request:false});\r\n         else\r\n           return false;\r\n        }\r\n        else{\r\n       \r\n         this.setState({checkedFanDetails:true,FanDetails:true,checkeddescript:false,descript:false,checkedRequest:false,request:false});\r\n         this.setState({\r\n          BM_Instruction:'NA'\r\n        })\r\n          return true;\r\n        }      \r\n      }\r\n      continueClick=(e)=>{\r\n        if(this.state.BM_Name.length > 0 && this.state.BM_Email.length > 0  && this.state.BM_Password.length > 0)\r\n          {            \r\n            this.AddLeads();\r\n            this.setState({checkedPayDetails:true,PayDetails:true,checkedFanDetails:false,FanDetails:false,checkedRequest:false,request:false});\r\n          } \r\n        else\r\n          return false;\r\n      }\r\n      continueClickGift=(e)=>{\r\n        if(this.state.BM_Name.length > 0 && this.state.BM_Email.length > 0)\r\n          {            \r\n            this.AddLeads();\r\n            this.setState({checkedPayDetails:true,PayDetails:true,checkedFanDetails:false,FanDetails:false,checkedRequest:false,request:false});\r\n            \r\n          } \r\n        else\r\n          return false;\r\n      }\r\n      AddLeads=(price=0)=>{\r\n            \r\n        var flagData = {\r\n          DA_ID:this.props.productList.DA_ID,\r\n          BM_Instruction:this.state.BM_Instruction,\r\n          BM_Name:this.state.BM_Name,\r\n          BM_Email:this.state.BM_Email,\r\n          BM_Phone:this.state.BM_Phone,\r\n          BM_Purchase_Amt:price, \r\n          Consent:this.state.Consent,\r\n        };\r\n\r\n        const flag=API.encryptData(flagData);\r\n        let  JSONdata = {\r\n            flag: flag\r\n          };\r\n\r\n              const API_url = process.env.REACT_APP_API_URL + \"admin/addLeads\";\r\n            fetch(API_url,\r\n              {\r\n                method: 'post',\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(JSONdata)\r\n              })\r\n            .then((response) => response.json())\r\n            .then(data1 =>\r\n               {             \r\n                  if(data1.status===1)\r\n                  {\r\n                    const data=API.decryptJson(data1.flag);\r\n                    this.setState({\r\n                      LM_ID:data.LM_ID\r\n                    });\r\n                  }\r\n                  ////console.log(data)\r\n            });\r\n        \r\n      }\r\n      \r\n      AddLeadsVideo=(price=0)=>{\r\n        var flagData = {\r\n          DA_ID:this.props.productList.DA_ID,\r\n          BM_Instruction:this.state.video_instruction,\r\n          BM_Name:this.state.video_name,\r\n          BM_Email:this.state.video_email,\r\n          BM_Phone:this.state.video_phone,\r\n          BM_Purchase_Amt:price,\r\n          Consent:this.state.Consent,\r\n        };\r\n\r\n        const flag=API.encryptData(flagData);\r\n        let  JSONdata = {\r\n            flag: flag\r\n          };\r\n\r\n\r\n              const API_url = process.env.REACT_APP_API_URL + \"admin/addLeads\";\r\n            fetch(API_url,\r\n              {\r\n                method: 'post',\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(JSONdata)\r\n              })\r\n            .then((response) => response.json())\r\n            .then(data1 =>\r\n               {             \r\n\r\n                  if(data1.status===1)\r\n                  {\r\n                    const data=API.decryptJson(data1.flag);\r\n                    this.setState({\r\n                      LM_ID:data.LM_ID\r\n                    });\r\n                  }\r\n                  ////console.log(data)\r\n            });\r\n        \r\n      }\r\n      backClick=(e)=>{\r\n          if(this.state.descript)\r\n          {\r\n            this.setState({checkeddescript:false,checkedRequest:true,descript:false,request:true});\r\n          }\r\n         else if(this.state.FanDetails)\r\n          {\r\n            this.setState({checkedFanDetails:false,FanDetails:false,checkeddescript:true,descript:true});\r\n          }\r\n        else  if(this.state.PayDetails)\r\n          {\r\n            this.setState({checkedPayDetails:false,PayDetails:false,checkedFanDetails:true,FanDetails:true,\r\n            \r\n            });\r\n          }\r\n       \r\n      }\r\n\r\n      videoPayment=(e)=>{\r\n       \r\n     \r\n      }\r\n      handleChange=(e)=>{\r\n         // let val=parseFloat(e.target.value);\r\n          this.setState({[e.target.name]:e.target.value})\r\n   \r\n          if(e.target.name==='slot_dropdown')\r\n          {\r\n            const {options, selectedIndex} = e.target;\r\n            ////console.log(options[selectedIndex].innerHTML);\r\n            this.setState({\r\n              session_timeing:options[selectedIndex].innerHTML,ES_ID:e.target.value\r\n            })\r\n          }          \r\n      }\r\n\r\n      //23-aug-2021\r\n      handleDynamicPrice=(e)=>{\r\n        let val=parseInt(e.target.value);\r\n        //console.log(isNaN(val))\r\n       if(isNaN(val)===true)\r\n          val=0;\r\n\r\n        this.setState({[e.target.name]:val})\r\n      }\r\n\r\n\r\n      PayNow=e=>\r\n      {\r\n        var JSONdata = {\r\n          DA_ID:this.props.productList.DA_ID,\r\n          BM_Instruction:this.state.BM_Instruction,\r\n          BM_Name:this.state.BM_Name,\r\n          BM_Email:this.state.BM_Email,\r\n          BM_Phone:this.state.BM_Phone,\r\n          BM_Password:this.state.BM_Password,\r\n          BM_Purchase_Amt:this.props.productList.DA_Price\r\n        };\r\n              const API_url = process.env.REACT_APP_API_URL + \"admin/addBuyers\";\r\n            fetch(API_url,\r\n              {\r\n                method: 'post',\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(JSONdata)\r\n              })\r\n            .then((response) => response.json())\r\n            .then(data => {\r\n              \r\n              ////console.log(data)\r\n            });\r\n      }\r\n      openSpinner=()=>{\r\n        this.setState({\r\n          isLoading:true,\r\n          showLoading:true,\r\n          checkedPayDetails:false,\r\n          PayDetails:false,\r\n          checkedFanDetails:true,\r\n          FanDetails:false\r\n        });\r\n      }\r\n\r\n      showMessage=()=>{\r\n        this.refs.checkout.UpdateMobileView();\r\n      }\r\n\r\n      doConsent=(e)=>{\r\n        if(e.target.checked)\r\n          this.setState({\r\n            Consent:1\r\n          });\r\n\r\n      }\r\n     \r\n    capture=()=>{\r\n      var canvas = document.getElementById('canvas');\r\n      var video = document.getElementById('video');\r\n      canvas.getContext('2d').drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\r\n    }\r\n    handleClick() {\r\n      ////console.log('this is:', this);\r\n    }\r\n\r\n   onChange=async (date, dateString)=> {\r\n    \r\n    ////console.log(API.tConvert24To12('23:00'));\r\n     // //console.log(dateString)\r\n      this.setState({\r\n        dropdown:[],dateString\r\n      })\r\n\r\n\r\n      var flagData={\r\n        ES_EM_ID:this.props.productList.DA_ID,\r\n        date:dateString,\r\n        Duration:this.props.productList.duration,\r\n      }\r\n\r\n      const flag=API.encryptData(flagData);\r\n        var JSONdata = {\r\n          flag: flag\r\n        };\r\n\r\n\r\n\r\n      if(dateString.length > 8)\r\n      {\r\n        const response=await API.postData(JSONdata,'open_slots');\r\n        var minutesToAdd=60;\r\n        var currentDate = new Date();\r\n        const isToday=currentDate.toISOString().substring(0, 10);\r\n        var futureDate = new Date(currentDate.getTime() + minutesToAdd*60000);\r\n        var ES_Slot_Start=futureDate.getHours() * 60 + futureDate.getMinutes();\r\n        console.log(ES_Slot_Start);\r\n        \r\n        if(response.status===1)\r\n        {    \r\n            const slotData=API.decryptJson(response.flag);\r\n            let dropdown=[];\r\n          if(slotData.data.length > 0)\r\n          {\r\n            let data=slotData.data;\r\n            \r\n            for (let i = 0; i < data.length; i++) \r\n            {\r\n              var strTime= data[i].slotStartNum;\r\n              if(isToday===dateString && strTime > ES_Slot_Start)\r\n              {\r\n\r\n                  let startSlotTime = data[i].startSlotTime.split(':');\r\n                  let start='';let end='';\r\n                  let start2='';let end2='';\r\n                  if(startSlotTime.length  > 0)\r\n                  {\r\n                    start=startSlotTime[0];\r\n                    if(startSlotTime[0].length===1)\r\n                    {\r\n                      start=\"0\"+startSlotTime[0];\r\n                    }\r\n                    end=startSlotTime[1];\r\n                    if(startSlotTime[1].length===1)\r\n                    {\r\n                      end=\"0\"+startSlotTime[1];\r\n                    }\r\n                  }\r\n                  let endSlotTime = data[i].endSlotTime.split(':');           \r\n                  if(endSlotTime.length > 0)\r\n                  {\r\n                    start2=endSlotTime[0];\r\n                    if(endSlotTime[0].length===1)\r\n                    {\r\n                      start2=\"0\"+endSlotTime[0];\r\n                    }\r\n                    end2=endSlotTime[1];\r\n                    if(endSlotTime[1].length===1)\r\n                    {\r\n                      end2=\"0\"+endSlotTime[1];\r\n                    }\r\n                  }\r\n\r\n                  let newSlotStartTime=API.tConvert24To12(start+\":\"+end);\r\n                  let newSlotEndTime=API.tConvert24To12(start2+\":\"+end2);\r\n\r\n                  data[i].startSlotTime=newSlotStartTime;\r\n                  data[i].endSlotTime=newSlotEndTime;\r\n                  dropdown.push(data[i])\r\n              }\r\n              else if(isToday!==dateString)\r\n              {\r\n                      let startSlotTime = data[i].startSlotTime.split(':');\r\n                      let start='';let end='';\r\n                      let start2='';let end2='';\r\n                      if(startSlotTime.length  > 0)\r\n                      {\r\n                        start=startSlotTime[0];\r\n                        if(startSlotTime[0].length===1)\r\n                        {\r\n                          start=\"0\"+startSlotTime[0];\r\n                        }\r\n                        end=startSlotTime[1];\r\n                        if(startSlotTime[1].length===1)\r\n                        {\r\n                          end=\"0\"+startSlotTime[1];\r\n                        }\r\n                      }\r\n                      let endSlotTime = data[i].endSlotTime.split(':');           \r\n                      if(endSlotTime.length > 0)\r\n                      {\r\n                        start2=endSlotTime[0];\r\n                        if(endSlotTime[0].length===1)\r\n                        {\r\n                          start2=\"0\"+endSlotTime[0];\r\n                        }\r\n                        end2=endSlotTime[1];\r\n                        if(endSlotTime[1].length===1)\r\n                        {\r\n                          end2=\"0\"+endSlotTime[1];\r\n                        }\r\n                      }\r\n\r\n                      let newSlotStartTime=API.tConvert24To12(start+\":\"+end);\r\n                      let newSlotEndTime=API.tConvert24To12(start2+\":\"+end2);\r\n\r\n                      data[i].startSlotTime=newSlotStartTime;\r\n                      data[i].endSlotTime=newSlotEndTime;\r\n                      dropdown.push(data[i])\r\n              }\r\n            }\r\n          }\r\n\r\n          this.setState({\r\n            dropdown:dropdown\r\n          })\r\n        }\r\n      }\r\n    }\r\n\r\n   \r\n     disabledDate=(current) =>\r\n     {\r\n      // Can not select days before today and today\r\n      \r\n      // return current < moment().startOf('day') || \r\n      // current > moment('2021-07-15').add(60, 'days').endOf('day') \r\n      // || moment(current).day() !== 0 \r\n      // && moment(current).day() !== 3 \r\n      // &&  moment(current).day() !== 6;\r\n      //return moment(current).day() === 1 ;\r\n\r\n       \r\n          let mon_day=10;\r\n          let tue_day=20;\r\n          let wed_day=30;\r\n          let thu_day=40;\r\n          let fry_day=50;\r\n          let sat_day=60;\r\n          let sun_day=70;\r\n          let cal_start_date='',cal_end_date='';\r\n          for (let i = 0; i < this.state.data.length; i++)\r\n           {\r\n              let ESC_Day_ID = this.state.data[i].ESC_Day_ID;\r\n              cal_start_date = this.state.data[i].cal_start_date;\r\n              cal_end_date= this.state.data[i].cal_end_date;\r\n              if(ESC_Day_ID===0)\r\n                  sun_day=ESC_Day_ID;\r\n              if(ESC_Day_ID===1)\r\n                 mon_day=ESC_Day_ID;\r\n              if(ESC_Day_ID===2)\r\n                 tue_day=ESC_Day_ID;\r\n              if(ESC_Day_ID===3)\r\n                wed_day=ESC_Day_ID;\r\n              if(ESC_Day_ID===4)\r\n                  thu_day=ESC_Day_ID;\r\n              if(ESC_Day_ID===5)\r\n                  fry_day=ESC_Day_ID;\r\n              if(ESC_Day_ID===6)\r\n                  sat_day=ESC_Day_ID;\r\n           }\r\n\r\n     \r\n           ////console.log(cal_start_date)\r\n      let date=new Date(cal_start_date);\r\n    //  //console.log(date)\r\n      let customDate = date.toISOString().substr(0,10);;\r\n\r\n      let dateEnd=new Date(cal_end_date);\r\n//      //console.log(dateEnd)\r\n      let planDays=this.props.productList.planDays;\r\n\r\n     // return current && current < moment(customDate, \"YYYY-MM-DD\");\r\n     const start = moment(cal_start_date,'YYYY-MM-DD');  \r\n     const end = moment(dateEnd,'YYYY-MM-DD');  \r\n     // return  current < start || current > moment(dateEnd,'YYYY-MM-DD');\r\n      return current < moment().startOf('day')  || current >=  moment(customDate).add(planDays, 'days')\r\n      || (\r\n          moment(current).day() !== mon_day  && moment(current).day() !== tue_day &&         \r\n          moment(current).day() !== wed_day && moment(current).day() !== thu_day &&\r\n          moment(current).day() !== fry_day && moment(current).day() !== sat_day &&\r\n          moment(current).day() !== sun_day \r\n       )\r\n        \r\n    }\r\n\r\n\r\n\r\n    render() \r\n    {\r\n    \r\n      \r\n\r\n      const productList=this.props.productList;\r\n      var arrCover=[];\r\n      var cover_imageOrVideo='';var src=\"\";\r\n      \r\n      arrCover=JSON.parse(productList.DA_Collection);\r\n      ////console.log(arrCover)\r\n      src=process.env.REACT_APP_UPLOAD_URL+\"Profile/\"+this.props.JM_User_Profile_Url_plus_JM_ID+\"/\"+arrCover[0];\r\n      if(productList.DA_DA_ID!==2)\r\n      {\r\n        if(arrCover.length > 0)\r\n        {\r\n          cover_imageOrVideo=process.env.REACT_APP_UPLOAD_URL+\"Profile/\"+this.props.JM_User_Profile_Url_plus_JM_ID+\"/\"+arrCover[0];\r\n          //console.log(cover_imageOrVideo)\r\n        }\r\n      \r\n      }\r\n      if(productList.DA_DA_ID===2 || productList.DA_DA_ID===3)\r\n      {\r\n        if(arrCover.length > 0)\r\n        {\r\n          if(arrCover[0].endsWith('.mp4')===false && productList.DA_Type==='image')\r\n              cover_imageOrVideo=process.env.REACT_APP_ADM_URL+\"cover/\"+arrCover[0];\r\n          else\r\n          {\r\n            cover_imageOrVideo=process.env.REACT_APP_UPLOAD_URL+\"Profile/\"+this.props.JM_User_Profile_Url_plus_JM_ID+\"/\"+arrCover[0];\r\n          }\r\n        }\r\n        \r\n      }\r\n     \r\n         \r\n        const useStyles = makeStyles((theme) => ({\r\n            root: {\r\n              height: 180,\r\n            },\r\n            container: {\r\n              display: 'flex',\r\n            },\r\n            paper: {\r\n              margin: theme.spacing(1),\r\n            },\r\n            svg: {\r\n              width: 100,\r\n              height: 100,\r\n            },\r\n            polygon: {\r\n              fill: theme.palette.common.white,\r\n              stroke: theme.palette.divider,\r\n              strokeWidth: 1,\r\n            },\r\n          }));\r\n\r\n           \r\n          let createDropdown = this.state.dropdown.map(item => (\r\n           <option value={item.ES_ID}>{item.startSlotTime+\"-\"+item.endSlotTime}</option>\r\n          ));\r\n\r\n        return (\r\n          // 6 contest , 5 video seesion 1 pesronal video,2 unlock 3 digital goods\r\n           <>\r\n            { productList.DA_DA_ID!==5?\r\n            <button className={\"buy \"+  this.props.font_family} data={this.props.productList} style={this.props.mystyleForHightight} onClick={this.ModalOpen}>\r\n             {\r\n                   (productList.DA_Allow_Cust_Pay===0)?  \r\n                        (productList.DA_Price > 0)?\r\n                        'Buy'\r\n                        :          \r\n                        'Get'   \r\n                        :\r\n                   (productList.DA_Allow_Cust_Pay===1)?                                            \r\n                        (productList.DA_Min_Amount > 0)?\r\n                        'Buy'\r\n                        :          \r\n                        'Get'  \r\n                    :\r\n                    null\r\n             } \r\n              \r\n              </button>\r\n            : productList.DA_DA_ID===5?\r\n            <button className={\"buy \"+  this.props.font_family} data={this.props.productList} style={this.props.mystyleForHightight} onClick={this.OpenModalVideo}>Book</button>\r\n            :\r\n             null\r\n            }\r\n            <Modal\r\n            show={this.state.openModel}\r\n            onHide={this.ModalClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            centered\r\n    \r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>\r\n                <p className=\"addnew-title\">{this.props.productList.DA_Title}</p>\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                    \r\n                         <div className=\"request-sec\">                     \r\n                            <div className=\"request-box\">   \r\n                                        {\r\n                                        this.state.request ?\r\n                                        <Grow in={this.state.checkedRequest} >\r\n                                            <div className=\"body-part\" id=\"request\">\r\n                                                            {/* <div className=\"dtl-box\">                                                          \r\n                                                                <h4>{this.props.productList.DA_Title}</h4>                                                            \r\n                                                            </div> */}\r\n                                                    <div className=\"icon\">\r\n                                                      {\r\n                                                        this.props.productList.DA_Type==='NA' ?\r\n                                                         <img src={\"/images/play.gif\"} alt=\"\"/>\r\n                                                         :\r\n                                                         this.props.productList.DA_Type==='image' && this.props.productList.DA_DA_ID===1?\r\n                                                              <img src={cover_imageOrVideo} alt=\"\"/>                                                        \r\n                                                          :\r\n                                                            this.props.productList.DA_Type==='image' && this.props.productList.DA_DA_ID===2 ?\r\n                                                            <img id=\"unlock\" src={cover_imageOrVideo}  alt=\"\"/>\r\n                                                          :   \r\n                                                            this.props.productList.DA_Type==='image' && this.props.productList.DA_DA_ID===3?\r\n                                                            <img id=\"unlock\" src={cover_imageOrVideo}  alt=\"\"/>\r\n                                                          :    \r\n                                                          this.props.productList.DA_Type==='image' && this.props.productList.DA_DA_ID===5?\r\n                                                          <img id=\"unlock\" src={cover_imageOrVideo} alt=\"\"/>\r\n                                                          :                                                     \r\n                                                            this.props.productList.DA_Type==='video' && this.props.productList.DA_DA_ID===1 ?\r\n                                                            <video id=\"personal_video\" autoplay=\"autoplay\" loop=\"loop\" muted  style={{width: '100%'}} src={cover_imageOrVideo}/>\r\n                                                          :\r\n                                                             this.props.productList.DA_Type==='video' && this.props.productList.DA_DA_ID===2 ?\r\n                                                             <video   id=\"vip\"  src={cover_imageOrVideo}/>                                                        \r\n                                                          :\r\n                                                             this.props.productList.DA_Type==='video' && this.props.productList.DA_DA_ID===3 ?\r\n                                                             <video   id=\"vip\"  src={cover_imageOrVideo}/>                                                        \r\n                                                          :\r\n                                                          this.props.productList.DA_Type==='video' && this.props.productList.DA_DA_ID===5 ?\r\n                                                          <video  id=\"vip\"  src={cover_imageOrVideo}/>                                                        \r\n                                                          :\r\n                                                            <img src={\"/images/play.gif\"} alt=\"\"/>\r\n                                                      }\r\n                                                        \r\n                                                    </div>\r\n\r\n                                                    <div className=\"body-part\" id=\"descrip\">                                               \r\n                                                            <div className=\"form-box\">\r\n                                                              {\r\n                                                                this.props.productList.DA_DA_ID===2 || this.props.productList.DA_DA_ID===3 ?\r\n                                                                  <>\r\n                                                                    <h4>Your Message</h4>\r\n                                                                    <p>What would you like the Creator to know? {this.props.productList.DA_DA_ID===2 || this.props.productList.DA_DA_ID===0? '(Optional)' : null}</p>\r\n                                                                    <textarea className=\"form-control area\" name=\"BM_Instruction\" value={this.state.BM_Instruction} onChange={this.handleChange} \r\n                                                                    placeholder=\"Hi! Thank you for the great content.\"/>\r\n                                                                    {/* <button class=\"btun\" onClick={this.nextClick}>Next</button> */}\r\n                                                                  </>\r\n                                                                :\r\n                                                                <>\r\n                                                                    <h4>Your instructions</h4>\r\n                                                                    <p>What would you like the Creator to know? {this.props.productList.DA_DA_ID===2 || this.props.productList.DA_DA_ID===0? '(Optional)' : null}</p>\r\n                                                                    <textarea className=\"form-control area\" name=\"BM_Instruction\" value={this.state.BM_Instruction} onChange={this.handleChange} \r\n                                                                    placeholder=\"Hey! My friend loves your work. Could you please wish her a happy birthday? Thanks!\"/>\r\n                                                                    {/* <button class=\"btun\" onClick={this.nextClick}>Next</button> */}\r\n                                                                </>\r\n                                                              }\r\n                                                                \r\n\r\n\r\n                                                            </div>\r\n                                                         \r\n                                                           {/* <button className=\"back-btn\" onClick={this.backClick}><KeyboardBackspaceIcon style={{fontSize:'30px'}} /></button>  */}\r\n                                                     </div>\r\n                                                        <div className=\"body-part\" id=\"FanDetails\">                                               \r\n                                                            <div className=\"form-box\">\r\n                                                                <h4>Your details</h4>\r\n                                                                <p>Please leave some of your details for us to keep you updated with your request.</p>\r\n                                                                <input type=\"text\" name={\"BM_Name\"} value={this.state.BM_Name} onChange={this.handleChange}  placeholder=\"Your Name\" className=\"form-control\"/>\r\n                                                                <input type=\"email\" name={\"BM_Email\"} value={this.state.BM_Email} onChange={this.handleChange}  placeholder=\"Email Address\" className=\"form-control\"/>\r\n                                                                <p style={{ marginBottom:'10px',textAlign:'left'}}>\r\n                                                                <input type=\"checkbox\" name=\"consent\" onClick={this.doConsent}/> {API.consentLebel()}\r\n                                                              </p>\r\n                                                              \r\n                                                                <input type=\"number\" name={\"BM_Phone\"} value={this.state.BM_Phone} onChange={this.handleChange}  placeholder=\"Phone Number\" className=\"form-control\"/>\r\n                                                  \r\n                                                                <input type=\"text\" style={{display:'none'}}name={\"BM_Password\"} value={this.state.BM_Password} onChange={this.handleChange}  placeholder=\"Choose a password\" className=\"form-control\"/>\r\n                                                                \r\n                                                                <input type=\"hidden\" name={\"price\"} value={this.props.productList.DA_Price} />\r\n                                                                {\r\n                                                                   this.props.productList.DA_Allow_Cust_Pay===1 ?\r\n                                                                   <>\r\n                                                                   <h4>Pay what you want</h4>\r\n                                                                    <input type=\"text\" name={\"dynamic_price\"} \r\n                                                                    onChange={this.handleDynamicPrice} \r\n                                                                    placeholder={this.props.productList.DA_Min_Amount + \"+\"}  className=\"form-control\"\r\n                                                                    onKeyPress={(event) => {\r\n                                                                      if (!/[0-9]/.test(event.key)) {\r\n                                                                        event.preventDefault();\r\n                                                                      }\r\n                                                                    }}\r\n                                                                    onPaste={(e)=>{\r\n                                                                      e.preventDefault()\r\n                                                                      return false;\r\n                                                                    }} onCopy={(e)=>{\r\n                                                                      e.preventDefault()\r\n                                                                      return false;\r\n                                                                    }}\r\n                                                                    />\r\n                                                                    {/* dynamic price */}\r\n                                                                    <Checkout ref=\"checkout\" BM_Type={'B'}  DA_INR_Doller={ this.props.productList.DA_INR_Doller} DA_Price={this.state.dynamic_price} productList={this.props.productList}\r\n                                                                      AddLeads = {this.AddLeads}     name={this.state.BM_Name} email={this.state.BM_Email} DA_ID={this.props.productList.DA_ID}  DA_Allow_Cust_Pay={this.props.productList.DA_Allow_Cust_Pay}   phone={this.state.BM_Phone} state={this.state} userDetails={this.props.userDetails[0]} JM_ID={this.props.userDetails[0].JM_ID}/>\r\n                                              \r\n\r\n\r\n\r\n                                                                    </>\r\n                                                                    :\r\n                                                                      <Checkout ref=\"checkout\" BM_Type={'B'}  DA_INR_Doller={ this.props.productList.DA_INR_Doller} DA_Price={this.props.productList.DA_Price} productList={this.props.productList}\r\n                                                                          AddLeads = {this.AddLeads}     name={this.state.BM_Name} email={this.state.BM_Email} DA_ID={this.props.productList.DA_ID}  DA_Allow_Cust_Pay={this.props.productList.DA_Allow_Cust_Pay}   phone={this.state.BM_Phone} state={this.state} userDetails={this.props.userDetails[0]} JM_ID={this.props.userDetails[0].JM_ID}/>\r\n                                                        \r\n\r\n                                                                }\r\n\r\n                                                              \r\n                                                                {/* <Checkout ref=\"checkout\" BM_Type={'B'}  DA_INR_Doller={ this.props.productList.DA_INR_Doller} DA_Price={this.props.productList.DA_Price} productList={this.props.productList}\r\n                                                                 AddLeads = {this.AddLeads}     name={this.state.BM_Name} email={this.state.BM_Email} DA_ID={this.props.productList.DA_ID}  DA_Allow_Cust_Pay={this.props.productList.DA_Allow_Cust_Pay}   phone={this.state.BM_Phone} state={this.state} userDetails={this.props.userDetails[0]} JM_ID={this.props.userDetails[0].JM_ID}/>\r\n                                               */}\r\n\r\n\r\n                                                              </div>\r\n                                                              {/* <div className=\"dtl-box\">\r\n                                                                <p>Your request details:</p>\r\n                                                                <h4>{this.props.productList.DA_Title}</h4>\r\n                                                                <h3>\r\n                                                                    {\r\n                                                                      this.props.productList.DA_INR_Doller==='INR' ?\r\n                                                                            \"Rs.\" + this.props.productList.DA_Price\r\n                                                                      :\r\n                                                                            \"$\" + this.props.productList.DA_Price\r\n                                                                    }\r\n                                                                  </h3>\r\n                                                              </div> */}\r\n                                                              {/* <button className=\"back-btn\" onClick={this.backClick}><KeyboardBackspaceIcon style={{fontSize:'30px'}} /></button>  */}\r\n                                                        </div>               \r\n\r\n\r\n                                                    {/* <div className=\"text\">\r\n                                                        <h4>{this.props.productList.DA_Title}</h4>\r\n                                                        <p>{this.props.productList.DA_Description}</p>\r\n                                                        <br/>\r\n                                                        <button class=\"btun\" onClick={this.requestClick}>Request- \r\n                                                        {\r\n                                                            this.props.productList.DA_INR_Doller==='INR' ?\r\n                                                                  \"Rs.\" + this.props.productList.DA_Price\r\n                                                            :\r\n                                                                  \"$\" + this.props.productList.DA_Price\r\n                                                        }\r\n                                                        \r\n                                                        </button>\r\n                                                    </div> */}\r\n                                            </div>\r\n                                        </Grow>\r\n                                        :\r\n                                        null                            \r\n                                        }    \r\n                                              \r\n                                  {\r\n                                    this.state.descript ?\r\n                                        <Grow in={this.state.checkeddescript} >\r\n                                            {/* <Paper elevation={4} className={useStyles.paper}> */}\r\n                                          \r\n                                            <div className=\"body-part\" id=\"descrip\">                                               \r\n                                                            <div className=\"form-box\">\r\n                                                              {\r\n                                                                this.props.productList.DA_DA_ID===2 || this.props.productList.DA_DA_ID===3 ?\r\n                                                                  <>\r\n                                                                    <h4>Your Message</h4>\r\n                                                                    <p>What would you like the Creator to know? {this.props.productList.DA_DA_ID===2 || this.props.productList.DA_DA_ID===0? '(Optional)' : null}</p>\r\n                                                                    <textarea className=\"form-control area\" name=\"BM_Instruction\" value={this.state.BM_Instruction} onChange={this.handleChange} \r\n                                                                    placeholder=\"Hi! Thank you for the great content.\"/>\r\n                                                                    <button class=\"btun\" onClick={this.nextClick}>Next</button>\r\n                                                                  </>\r\n                                                                :\r\n                                                                <>\r\n                                                                    <h4>Your instructions</h4>\r\n                                                                    <p>What would you like the Creator to know? {this.props.productList.DA_DA_ID===2 || this.props.productList.DA_DA_ID===0? '(Optional)' : null}</p>\r\n                                                                    <textarea className=\"form-control area\" name=\"BM_Instruction\" value={this.state.BM_Instruction} onChange={this.handleChange} \r\n                                                                    placeholder=\"Hey! My friend loves your work. Could you please wish her a happy birthday? Thanks!\"/>\r\n                                                                    <button class=\"btun\" onClick={this.nextClick}>Next</button>\r\n                                                                </>\r\n                                                              }\r\n                                                                \r\n\r\n\r\n                                                            </div>\r\n                                                            <div className=\"dtl-box\">\r\n                                                                <p>Your request details:</p>    \r\n                                                                <h4>{this.props.productList.DA_Title}</h4>\r\n                                                                <br/>\r\n                                                                <h3>\r\n                                                                {\r\n                                                                    this.props.productList.DA_INR_Doller==='INR' ?\r\n                                                                          \"Rs.\" + this.props.productList.DA_Price\r\n                                                                    :\r\n                                                                          \"$\" + this.props.productList.DA_Price\r\n                                                                  }\r\n                                                                  </h3>\r\n                                                            </div>\r\n                                                           <button className=\"back-btn\" onClick={this.backClick}><KeyboardBackspaceIcon style={{fontSize:'30px'}} /></button> \r\n                                            </div>\r\n                                        </Grow>\r\n                                    :\r\n                                    null\r\n                                }\r\n                                 {\r\n                                    this.state.FanDetails ?\r\n                                        <Grow in={this.state.checkedFanDetails} >\r\n                                            {/* <Paper elevation={4} className={useStyles.paper}> */}\r\n                                          \r\n                                            <div className=\"body-part\" id=\"FanDetails\">                                               \r\n                                              <div className=\"form-box\">\r\n                                                  <h4>Your details</h4>\r\n                                                  <p>Please leave some of your details for us to keep you updated with your request.</p>\r\n                                                  <input type=\"text\" name={\"BM_Name\"} value={this.state.BM_Name} onChange={this.handleChange}  placeholder=\"Your Name\" className=\"form-control\"/>\r\n                                                  <input type=\"email\" name={\"BM_Email\"} value={this.state.BM_Email} onChange={this.handleChange}  placeholder=\"Email Address\" className=\"form-control\"/>\r\n                                                 <p>\r\n                                                   <input type=\"checkbox\" name=\"consent\" onClick={this.doConsent}/> Consent to providing your details to the Creator\r\n                                                 </p>\r\n                                                \r\n                                                  <input type=\"number\" name={\"BM_Phone\"} value={this.state.BM_Phone} onChange={this.handleChange}  placeholder=\"Phone Number (optional)\" className=\"form-control\"/>\r\n                                    \r\n                                                  <input type=\"password\" style={{display:'none'}}name={\"BM_Password\"} value={this.state.BM_Password} onChange={this.handleChange}  placeholder=\"Choose a password\" className=\"form-control\"/>\r\n                                                  \r\n                                                  <input type=\"hidden\" name={\"price\"} value={this.props.productList.DA_Price} />\r\n                                                  <button class=\"btun\"  onClick={this.continueClick}>Next</button>\r\n                                                </div>\r\n                                                <div className=\"dtl-box\">\r\n                                                  <p>Your request details:</p>\r\n                                                  <h4>{this.props.productList.DA_Title}</h4>\r\n                                                  <h3>\r\n                                                  {\r\n                                                    this.props.productList.DA_INR_Doller==='INR' ?\r\n                                                           \"Rs.\" + this.props.productList.DA_Price\r\n                                                    :\r\n                                                          \"$\" + this.props.productList.DA_Price\r\n                                                  }\r\n                                                    </h3>\r\n                                                </div>\r\n                                                <button className=\"back-btn\" onClick={this.backClick}><KeyboardBackspaceIcon style={{fontSize:'30px'}} /></button> \r\n                                            </div>\r\n                                        </Grow>\r\n                                    :\r\n                                    null\r\n                                }\r\n\r\n                                {\r\n                                    this.state.PayDetails ?\r\n                                        <Grow in={this.state.checkedPayDetails} >\r\n                                            {/* <Paper elevation={4} className={useStyles.paper}> */}\r\n                                          \r\n                                            <div className=\"body-part\" id=\"PayDetails\">\r\n                                               \r\n                                                  <div className=\"form-box\" id=\"payment\">\r\n                                                  <h4>Secure Payment</h4>\r\n                                                  {/* <p>Please enter your payment details to complete your request.</p>\r\n                                                  <input type=\"text\" placeholder=\"Card Number\" className=\"form-control\"/> */}\r\n                                                \r\n                                                \r\n                                                  <Checkout ref=\"checkout\" BM_Type={'B'}  DA_INR_Doller={ this.props.productList.DA_INR_Doller} DA_Price={this.props.productList.DA_Price} \r\n                                                  name={this.state.BM_Name} email={this.state.BM_Email} DA_ID={this.props.productList.DA_ID}  phone={this.state.BM_Phone} state={this.state} userDetails={this.props.userDetails[0]} JM_ID={this.props.userDetails[0].JM_ID}/>\r\n                                              \r\n                                                  {/* cashfree */}\r\n                                                  {/* <PaymentCashFree ref=\"checkout\" BM_Type={'B'}  DA_INR_Doller={ this.props.productList.DA_INR_Doller} DA_Price={this.props.productList.DA_Price} \r\n                                                  name={this.state.BM_Name} email={this.state.BM_Email} DA_ID={this.props.productList.DA_ID}  phone={this.state.BM_Phone} state={this.state} userDetails={this.props.userDetails[0]} JM_ID={this.props.userDetails[0].JM_ID}/>\r\n                                               */}\r\n                                              \r\n                                                  {/* <button class=\"btun\" onClick={this.PayNow}>Pay \r\n                                                  {\r\n                                                    this.props.productList.DA_INR_Doller==='INR' ?\r\n                                                           \" Rs.\" + this.props.productList.DA_Price\r\n                                                    :\r\n                                                          \" $\" + this.props.productList.DA_Price\r\n                                                  }\r\n                                                  \r\n                                                  </button> */}\r\n                                                  {/* <p>We currently accept:</p> */}\r\n                                                  {/* <ul>\r\n                                                    <li><img src={\"images/pay-1.png\"} /></li>\r\n                                                    <li><img src={\"images/pay-2.png\"} /></li>\r\n                                                    <li><img src={\"images/pay-3.png\"} /></li>\r\n                                                    <li><img src={\"images/pay-4.png\"} /></li>\r\n                                                  </ul> */}\r\n                                                </div>\r\n                                              \r\n                                                <button className=\"back-btn\" onClick={this.backClick}><KeyboardBackspaceIcon style={{fontSize:'30px'}} /></button> \r\n                                            </div>\r\n                                        </Grow>\r\n                                    :\r\n                                    null\r\n                                }\r\n\r\n                                  {\r\n                                        this.state.isLoading ?\r\n                                        <Grow in={this.state.showLoading} >\r\n                                            <div className=\"body-part\" id=\"request\">\r\n                                                <div class=\"spinner-grow\" style=\"width: 3rem; height: 3rem;\" role=\"status\">\r\n                                                    <span class=\"sr-only\">Please Wait...</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Grow>\r\n                                        :\r\n                                        null                            \r\n                                        }    \r\n                                      <div id=\"main_div\">\r\n                                          {\r\n                                            this.state.showVideo ?\r\n                                            <>\r\n                                            <video id=\"video\" src={cover_imageOrVideo} type=\"video/mp4\" style={{display:'none'}}></video>\r\n                                           \r\n                                            style={{ border: 'none', width: '100%'}}\r\n                                           \r\n                                            <button id=\"mybtn\" onClick={this.handleClick}>Capture</button><br/>\r\n                                              \r\n                                            </>                                   \r\n                                            :\r\n                                            null\r\n                                          }\r\n                                      </div>\r\n                                     \r\n                                        \r\n\r\n                            </div>\r\n                        </div>\r\n            </Modal.Body>\r\n    \r\n          </Modal>\r\n                       \r\n\r\n  {/* edit send me a gift option */}\r\n  <Modal\r\n              size=\"md\"\r\n              show={this.state.ModalOpenVideo}\r\n              onHide={() => this.setState({ ModalOpenVideo: false,video_name:'',video_email:'' })}\r\n              aria-labelledby=\"example-modal-sizes-title-sm\"\r\n              backdrop=\"static\"\r\n              keyboard={false}\r\n              centered\r\n            >\r\n              <Modal.Header closeButton>\r\n                <Modal.Title id=\"example-modal\" style={{ fontSize: '15px' }}>\r\n                {this.props.productList.DA_Title}\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n              <div className=\"request-sec\">\r\n               <div className=\"request-box\">\r\n                    <div className=\"body-part\" id=\"request\">\r\n                                                  <div className=\"icon\">\r\n                                                        {\r\n\r\n                                                         this.props.productList.DA_Type === 'videoCam' ?\r\n                                                               cover_imageOrVideo.endsWith('.mp4') ?\r\n                                                              <video  id=\"vip\"  src={cover_imageOrVideo}/>             \r\n                                                            : cover_imageOrVideo.endsWith('.jpg') || cover_imageOrVideo.endsWith('.png') \r\n                                                            ||  cover_imageOrVideo.endsWith('.jpeg') ?\r\n                                                            <img id=\"unlock\" src={cover_imageOrVideo}  alt=\"\"/>\r\n                                                            :\r\n                                                           null\r\n                                                          :\r\n                                                          <img src={\"/images/play.gif\"} alt=\"\" />\r\n                                                        }\r\n                                                    </div>\r\n\r\n                              <div className=\"form-box\" style={{display:this.state.videoRequest1stTab===true ?'block':'none'}}>    \r\n                                                    \r\n                                <div className=\"textLabel\">\r\n                                  <label className=\"lab\">Duration:</label> <span>{this.props.productList.duration+ ' mins'}</span>\r\n                                </div>\r\n                                \r\n                                \r\n                                <div className=\"row\">\r\n                                  <div className=\"col-md-6\">\r\n                                    <label className=\"lab\">Date:</label>\r\n                                    <DatePicker \r\n                                    getCalendarContainer={triggerNode => triggerNode.parentNode} \r\n                                    name=\"datepicker\" \r\n                                    disabledDate={this.disabledDate} onChange={this.onChange} />\r\n                                  </div>\r\n                                  <div className=\"col-md-6\">\r\n                                      <label className=\"lab\">Time Slot in IST :</label>     \r\n                                    \r\n                                      <select className=\"form-control\" name=\"slot_dropdown\" value={parseInt(this.state.slot_dropdown)} onChange={this.handleChange}>\r\n                                      <option value={0}>Select Slot</option>\r\n                                      {createDropdown}\r\n                                      </select>\r\n                                  </div>\r\n                                </div>                 \r\n                              \r\n                                  <label className=\"lab\">Heads up</label>                            \r\n                                    <p>Give {this.props.productList.JM_Name} a short intro note about the session </p>\r\n                                    <textarea className=\"form-control area\" name=\"video_instruction\" \r\n                                      value={this.state.video_instruction} onChange={this.handleChange} \r\n                                      placeholder=\"I'd like to speak about…\"/>                          \r\n                                    \r\n                                    <input type=\"text\" placeholder=\"Enter Name\" name=\"video_name\" value={this.state.video_name} className=\"form-control\" onChange={this.handleChange} />\r\n                                    <input type=\"email\" placeholder=\"Email Address\" name=\"video_email\" value={this.state.video_email} className=\"form-control\" onChange={this.handleChange} />\r\n                                    <p style={{ marginBottom:'10px',textAlign:'left'}}>\r\n                                      <input type=\"checkbox\" name=\"consent\" onClick={this.doConsent}/> {API.consentLebel()}\r\n                                    </p>\r\n                                   \r\n                                    <input type=\"text\" placeholder=\"Enter Phone\" \r\n                                    name=\"video_phone\" value={this.state.video_phone} \r\n                                    onKeyPress={(event) => {\r\n                                      if (!/[0-9]/.test(event.key)) {\r\n                                        event.preventDefault();\r\n                                      }\r\n                                    }}\r\n                                    className=\"form-control\" onChange={this.handleChange} />\r\n                                      \r\n                                      {/* <button class=\"btun\" onClick={this.btn_video_next}> Next </button>                                                         */}\r\n                                    \r\n\r\n                                                                        <input type=\"hidden\" name={\"price\"} value={this.props.productList.DA_Price} />\r\n                                                                        {\r\n                                                                          this.props.productList.DA_Allow_Cust_Pay===1 ?\r\n                                                                          <>\r\n                                                                      \r\n                                                                          <label className=\"lab\">Pay what you want</label>   \r\n                                                                            <input type=\"text\" name={\"dynamic_price\"} \r\n                                                                            onChange={this.handleDynamicPrice} \r\n                                                                            placeholder={this.props.productList.DA_Min_Amount + \"+\"} className=\"form-control\"\r\n                                                                            onKeyPress={(event) => {\r\n                                                                              if (!/[0-9]/.test(event.key)) {\r\n                                                                                event.preventDefault();\r\n                                                                              }\r\n                                                                            }}\r\n                                                                            onPaste={(e)=>{\r\n                                                                              e.preventDefault()\r\n                                                                              return false;\r\n                                                                            }} onCopy={(e)=>{\r\n                                                                              e.preventDefault()\r\n                                                                              return false;\r\n                                                                            }}\r\n                                                                            />\r\n                                                                            {/* dynamic price */}\r\n                                                                      \r\n                                                                            <div id=\"Checkout_videoSession\">    \r\n                                                                              <Checkout_videoSession ref=\"checkout\" BM_Type={'B'}  DA_INR_Doller={ this.props.productList.DA_INR_Doller} DA_Price={this.state.dynamic_price} productList={this.props.productList}\r\n                                                                                  name={this.state.video_name} email={this.state.video_email} DA_ID={this.props.productList.DA_ID}   DA_Allow_Cust_Pay={this.props.productList.DA_Allow_Cust_Pay}\r\n                                                                                  phone={this.state.video_phone} state={this.state} \r\n                                                                                  userDetails={this.props.userDetails[0]}   \r\n                                                                                  session_date={this.state.dateString}\r\n                                                                                  session_timeing={this.state.session_timeing}                                     \r\n                                                                                  JM_ID={this.props.userDetails[0].JM_ID} ES_ID={this.state.ES_ID}\r\n                                                                                  AddLeadsVideo={this.AddLeadsVideo}\r\n                                                                                  />\r\n                                                                            </div>\r\n\r\n                                                                            </>\r\n                                                                            :\r\n                                                                            <>                                                                  \r\n                                                                              <div id=\"Checkout_videoSession\">                                      \r\n                                                                                  <Checkout_videoSession ref=\"checkout\" BM_Type={'B'}  DA_INR_Doller={ this.props.productList.DA_INR_Doller} DA_Price={this.props.productList.DA_Price} productList={this.props.productList}\r\n                                                                                  name={this.state.video_name} email={this.state.video_email} DA_ID={this.props.productList.DA_ID}   DA_Allow_Cust_Pay={this.props.productList.DA_Allow_Cust_Pay}\r\n                                                                                  phone={this.state.video_phone} state={this.state} \r\n                                                                                  userDetails={this.props.userDetails[0]}   \r\n                                                                                  session_date={this.state.dateString}\r\n                                                                                  session_timeing={this.state.session_timeing}                                     \r\n                                                                                  JM_ID={this.props.userDetails[0].JM_ID} ES_ID={this.state.ES_ID}\r\n                                                                                  AddLeadsVideo={this.AddLeadsVideo}\r\n                                                                                  />\r\n                                        \r\n                                                                                    {/* <button className=\"back-btn\" onClick={this.btn_video_prev}><KeyboardBackspaceIcon style={{fontSize:'30px'}} /></button>  */}\r\n                                                                                  \r\n                                                                            \r\n                                                                              </div>\r\n                                                                              </>\r\n                                                                        }                    \r\n                                                                        <span id=\"msg_video_pay\" style={{color:'red'}}></span>\r\n                                \r\n                              </div>\r\n                              {                   \r\n                                this.state.videoRequest===true?\r\n                                  <div className=\"form-box\">     \r\n                                        <p>{this.props.productList.DA_Description}</p>                        \r\n                                        <div className=\"textLabel\">\r\n                                          <label className=\"lab\">Duration:</label> <span>{this.props.productList.duration +\"mins\"}</span>\r\n                                        </div>       \r\n                                          <Grow in={this.state.videoRequest} >\r\n                                            \r\n                                            \r\n                                          </Grow>\r\n                                      \r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                                  }\r\n\r\n                            </div>\r\n                       \r\n                  </div>\r\n              </div>\r\n\r\n\r\n              </Modal.Body>\r\n              <Modal.Footer>               \r\n                \r\n              \r\n              </Modal.Footer>\r\n            </Modal>\r\n\r\n\r\n\r\n           </>             \r\n                       \r\n                 \r\n          \r\n        );\r\n    }\r\n}\r\n\r\nBuy.propTypes = {\r\n\r\n};\r\n\r\nexport default Buy;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\BuyContestGiveAways.js",["2777","2778","2779","2780","2781","2782","2783","2784","2785","2786","2787","2788","2789","2790"],"import React, { Component } from 'react';\r\n\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport Grow from '@material-ui/core/Grow';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\r\n\r\nimport Checkout_videoSession from './Checkout_videoSession';\r\nimport {DatePicker} from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport moment from 'moment';\r\n// import imageToBase64 from 'image-to-base64/browser';\r\n// import Blur from 'react-blur';\r\nimport API  from \"../services/API\";\r\n\r\n\r\nclass BuyContestGiveAways extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openModel:false,\r\n            base_url: process.env.REACT_APP_API_URL,\r\n            root_url: process.env.REACT_APP_ROOT_URL,\r\n          \r\n            show:false,\r\n            open:false,\r\n            JM_ID:this.props.JM_ID,\r\n            JM_Name:'',  \r\n            SWM_Title:'',\r\n            SWM_Url:'',\r\n            SWM_Icon:'',\r\n            LM_Who_Will_See:1,\r\n            selectedFile: null,\r\n            linkMaster:[],\r\n           userDetails:[],\r\n           socialWidget:[],\r\n           title:'',\r\n           msg:'',\r\n           logo:'',\r\n           SWM_Icon_Position:'bottom',\r\n     \r\n           Instagram:'https://www.instagram.com/',\r\n           Facebook:'https://www.facebook.com/',\r\n           YouTube:'https://www.youtube.com/',\r\n           Twitter:'https://twitter.com/',\r\n           Snapchat:'https://www.snapchat.com/',\r\n           LinkedIn:'https://www.linkedin.com/',\r\n           Twitch:'https://www.twitch.com/',\r\n           Pinterest:'https://www.pinterest.com/',\r\n           Spotify:'https://www.spotify.com/',\r\n           category_links:[],\r\n     \r\n           checked:false,\r\n           request:true,\r\n           checkedRequest:true,\r\n           descript:false,\r\n           checkeddescript:false,\r\n           FanDetails:false,\r\n           checkedFanDetails:false,\r\n           DA_ID:this.props.productList.DA_ID,\r\n           DA_DA_ID:this.props.productList.DA_DA_ID,\r\n           BM_Instruction:'',\r\n           BM_Name:'',\r\n           BM_Email:'',\r\n           BM_Phone:'',\r\n           BM_Password:'123456',\r\n           BM_Purchase_Amt:this.props.productList.DA_Price,\r\n           DA_Title:this.props.productList.DA_Title,\r\n           mailText:this.props.productList.mailText,\r\n           duration:this.props.productList.duration,\r\n           planDays:this.props.productList.planDays,\r\n           Consent:0,\r\n           LM_ID:0,\r\n           payment_id:'',\r\n\r\n\r\n           showVideo:false,\r\n           ModalOpenVideo:false,\r\n           video_instruction:'',\r\n           video_email:'',\r\n           video_phone:'',\r\n           video_name:'',\r\n           btn_video_pay:true,\r\n           data:[],\r\n           dropdown:[],\r\n           slot_dropdown:0,\r\n           videoRequest:false,\r\n           dateString:'',\r\n           videoRequest1stTab:true,\r\n           session_timeing:'',\r\n           ES_ID:0,\r\n           BM_ans_1:'',\r\n           BM_ans_2:'',       \r\n           BM_ans_3:'',     \r\n           BM_ans_4:'',\r\n           anser_file:null,\r\n           file_size:0,\r\n           messageBox:false,\r\n           dynamic_price:this.props.productList.DA_Min_Amount,\r\n         }\r\n        \r\n    }\r\n \r\n     ModalClose=()=>{       \r\n        this.setState({openModel:false,show:false});\r\n     \r\n      }\r\n      ModalOpen=()=>{\r\n        this.setState({openModel:true,show:true,\r\n          messageBox:false,\r\n          descript:true,\r\n          checkeddescript:true,\r\n          BM_Name:'',BM_Email:'',Q1:'',Q2:'',Q3:'',Q4:''\r\n        });\r\n        this.setState({checkedRequest:true,request:true,\r\n          checkedPayDetails:false,PayDetails:false,\r\n          checkedFanDetails:false,FanDetails:false,checkeddescript:false,descript:false});\r\n        this.setState({openModel:true,show:true});\r\n\r\n      \r\n        ////console.log(this.props.productList);\r\n      //  //console.log(this.props.userDetails[0]);\r\n        var JSONdata = {\r\n          Stat_Type: 'P',\r\n          Stat_ID: this.props.productList.DA_ID,\r\n          JM_ID: this.props.productList.JM_ID   \r\n        };\r\n        let data = API.doClick(JSONdata);\r\n        ////console.log(data)\r\n      }\r\n      OpenModalVideo=async()=>{\r\n\r\n        this.setState({ModalOpenVideo:true});   \r\n        ////console.log(this.props.productList);\r\n        ////console.log(this.props.userDetails[0]);\r\n        var JSONdata = {\r\n          Stat_Type: 'P',\r\n          Stat_ID: this.props.productList.DA_ID,\r\n          JM_ID: this.props.productList.JM_ID   \r\n        };\r\n        let data1 = API.doClick(JSONdata);\r\n\r\n        var JSONData={\r\n          JM_ID: this.props.productList.JM_ID,\r\n          ES_EM_ID: this.props.productList.DA_ID    \r\n        }\r\n        var response=await API.Get_Config(JSONData);\r\n        if(response.status===1)\r\n            this.setState({\r\n              data:response.data,slot_dropdown:0,dateString:'',dropdown:[]\r\n            })\r\n        ////console.log(data)\r\n      }\r\n    //26-jul-2021\r\n    btn_video_next=(e)=>{\r\n      document.getElementById('msg_video').innerHTML='';\r\n     if(this.state.dateString.length===0)\r\n     {\r\n       document.getElementById('msg_video').innerHTML='* Select Date';\r\n        return false;\r\n     }\r\n     if(parseInt(this.state.slot_dropdown)===0)\r\n     {\r\n       document.getElementById('msg_video').innerHTML='* Select Slot';\r\n        return false;\r\n     }\r\n     if(this.state.video_name.length===0)\r\n     {\r\n       document.getElementById('msg_video').innerHTML='* Enter Name';\r\n        return false;\r\n     }\r\n     if(this.state.video_email.length===0)\r\n     {\r\n       document.getElementById('msg_video').innerHTML='* Enter Email';\r\n        return false;\r\n     }\r\n     if(this.state.video_phone.length===0)\r\n     {\r\n       document.getElementById('msg_video').innerHTML='* Enter Phone Number';\r\n        return false;\r\n     }\r\n     //console.log(this.state.dateString)\r\n     this.setState({\r\n       videoRequest:true,videoRequest1stTab:false,\r\n     })\r\n     \r\n     this.AddLeadsVideo();\r\n    }\r\n    btn_video_prev=(e)=>{\r\n      this.setState({\r\n        videoRequest:false,videoRequest1stTab:true,\r\n      })\r\n    }\r\n     \r\n      requestClick=(e)=>{\r\n        this.setState({checkeddescript:true,checkedRequest:false,descript:true,request:false});\r\n      }\r\n      nextClick=(e)=>{\r\n        if(this.state.DA_DA_ID===1)\r\n        {\r\n          if(this.state.BM_Instruction.length > 0)\r\n             this.setState({checkedFanDetails:true,FanDetails:true,checkeddescript:false,descript:false,checkedRequest:false,request:false});\r\n         else\r\n           return false;\r\n        }\r\n        else{\r\n       \r\n         this.setState({checkedFanDetails:true,FanDetails:true,checkeddescript:false,descript:false,checkedRequest:false,request:false});\r\n         this.setState({\r\n          BM_Instruction:'NA'\r\n        })\r\n          return true;\r\n        }      \r\n      }\r\n      continueClick=(e)=>{\r\n        if(this.state.BM_Name.length > 0 && this.state.BM_Email.length > 0  && this.state.BM_Password.length > 0)\r\n          {            \r\n            this.AddLeads();\r\n            this.setState({checkedPayDetails:true,PayDetails:true,checkedFanDetails:false,FanDetails:false,checkedRequest:false,request:false});\r\n          } \r\n        else\r\n          return false;\r\n      }\r\n      continueClickGift=(e)=>{\r\n        if(this.state.BM_Name.length > 0 && this.state.BM_Email.length > 0)\r\n          {            \r\n            this.AddLeads();\r\n            this.setState({checkedPayDetails:true,PayDetails:true,checkedFanDetails:false,FanDetails:false,checkedRequest:false,request:false});\r\n            \r\n          } \r\n        else\r\n          return false;\r\n      }\r\n  \r\n      \r\n  \r\n      backClick=(e)=>{\r\n          if(this.state.descript)\r\n          {\r\n            this.setState({checkeddescript:false,checkedRequest:true,descript:false,request:true});\r\n          }\r\n         else if(this.state.FanDetails)\r\n          {\r\n            this.setState({checkedFanDetails:false,FanDetails:false,checkeddescript:true,descript:true});\r\n          }\r\n        else  if(this.state.PayDetails)\r\n          {\r\n            this.setState({checkedPayDetails:false,PayDetails:false,checkedFanDetails:true,FanDetails:true,\r\n            \r\n            });\r\n          }\r\n       \r\n      }\r\n\r\n      videoPayment=(e)=>{\r\n       \r\n     \r\n      }\r\n      handleChange=(e)=>{\r\n         // let val=parseFloat(e.target.value);\r\n          this.setState({[e.target.name]:e.target.value})\r\n      }\r\n      PayNow=e=>\r\n      {\r\n        var JSONdata = {\r\n          DA_ID:this.props.productList.DA_ID,\r\n          BM_Instruction:this.state.BM_Instruction,\r\n          BM_Name:this.state.BM_Name,\r\n          BM_Email:this.state.BM_Email,\r\n          BM_Phone:this.state.BM_Phone,\r\n          BM_Password:this.state.BM_Password,\r\n          BM_Purchase_Amt:this.props.productList.DA_Price\r\n        };\r\n              const API_url = process.env.REACT_APP_API_URL + \"admin/addBuyers\";\r\n            fetch(API_url,\r\n              {\r\n                method: 'post',\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(JSONdata)\r\n              })\r\n            .then((response) => response.json())\r\n            .then(data => {\r\n              \r\n              ////console.log(data)\r\n            });\r\n      }\r\n      openSpinner=()=>{\r\n        this.setState({\r\n          isLoading:true,\r\n          showLoading:true,\r\n          checkedPayDetails:false,\r\n          PayDetails:false,\r\n          checkedFanDetails:true,\r\n          FanDetails:false\r\n        });\r\n      }\r\n\r\n      showMessage=()=>{\r\n        this.refs.checkout.UpdateMobileView();\r\n      }\r\n\r\n      doConsent=(e)=>{\r\n        if(e.target.checked)\r\n          this.setState({\r\n            Consent:1\r\n          });\r\n\r\n      }\r\n     \r\n    capture=()=>{\r\n      var canvas = document.getElementById('canvas');\r\n      var video = document.getElementById('video');\r\n      canvas.getContext('2d').drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\r\n    }\r\n    handleClick() {\r\n      ////console.log('this is:', this);\r\n    }\r\n\r\n   onChange=async (date, dateString)=> {\r\n    \r\n    ////console.log(API.tConvert24To12('23:00'));\r\n      //console.log(dateString)\r\n      this.setState({\r\n        dropdown:[],dateString\r\n      })\r\n      var JSONdata={\r\n        ES_EM_ID:this.props.productList.DA_ID,\r\n        date:dateString,\r\n        Duration:this.props.productList.duration,\r\n      }\r\n      if(dateString.length > 8)\r\n      {\r\n        const response=await API.postData(JSONdata,'open_slots');\r\n        if(response.status===1)\r\n        {    \r\n\r\n          if(response.data.length > 0)\r\n          {\r\n            let data=response.data;\r\n            let dropdown=[];\r\n            for (let i = 0; i < data.length; i++) \r\n            {\r\n              let startSlotTime = data[i].startSlotTime.split(':');\r\n              let start='';let end='';\r\n              let start2='';let end2='';\r\n              if(startSlotTime.length  > 0)\r\n              {\r\n                start=startSlotTime[0];\r\n                if(startSlotTime[0].length===1)\r\n                {\r\n                  start=\"0\"+startSlotTime[0];\r\n                }\r\n                end=startSlotTime[1];\r\n                if(startSlotTime[1].length===1)\r\n                {\r\n                  end=\"0\"+startSlotTime[1];\r\n                }\r\n              }\r\n              let endSlotTime = data[i].endSlotTime.split(':');           \r\n              if(endSlotTime.length > 0)\r\n              {\r\n                start2=endSlotTime[0];\r\n                if(endSlotTime[0].length===1)\r\n                {\r\n                  start2=\"0\"+endSlotTime[0];\r\n                }\r\n                end2=endSlotTime[1];\r\n                if(endSlotTime[1].length===1)\r\n                {\r\n                  end2=\"0\"+endSlotTime[1];\r\n                }\r\n              }\r\n\r\n              let newSlotStartTime=API.tConvert24To12(start+\":\"+end);\r\n              let newSlotEndTime=API.tConvert24To12(start2+\":\"+end2);\r\n\r\n              data[i].startSlotTime=newSlotStartTime;\r\n              data[i].endSlotTime=newSlotEndTime;\r\n            }\r\n          }\r\n\r\n          this.setState({\r\n            dropdown:response.data\r\n          })\r\n        }\r\n      }\r\n    }\r\n\r\n   \r\n     disabledDate=(current) =>\r\n     {\r\n      // Can not select days before today and today\r\n      \r\n      // return current < moment().startOf('day') || \r\n      // current > moment('2021-07-15').add(60, 'days').endOf('day') \r\n      // || moment(current).day() !== 0 \r\n      // && moment(current).day() !== 3 \r\n      // &&  moment(current).day() !== 6;\r\n      //return moment(current).day() === 1 ;\r\n\r\n       \r\n          let mon_day=10;\r\n          let tue_day=20;\r\n          let wed_day=30;\r\n          let thu_day=40;\r\n          let fry_day=50;\r\n          let sat_day=60;\r\n          let sun_day=70;\r\n          let cal_start_date='';\r\n          for (let i = 0; i < this.state.data.length; i++)\r\n           {\r\n              let ESC_Day_ID = this.state.data[i].ESC_Day_ID;\r\n              cal_start_date = this.state.data[i].cal_start_date;\r\n              if(ESC_Day_ID===0)\r\n                  sun_day=ESC_Day_ID;\r\n              if(ESC_Day_ID===1)\r\n                 mon_day=ESC_Day_ID;\r\n              if(ESC_Day_ID===2)\r\n                 tue_day=ESC_Day_ID;\r\n              if(ESC_Day_ID===3)\r\n                wed_day=ESC_Day_ID;\r\n              if(ESC_Day_ID===4)\r\n                  thu_day=ESC_Day_ID;\r\n              if(ESC_Day_ID===5)\r\n                  fry_day=ESC_Day_ID;\r\n              if(ESC_Day_ID===6)\r\n                  sat_day=ESC_Day_ID;\r\n           }\r\n\r\n \r\n\r\n      let date=new Date(cal_start_date);\r\n      let customDate = date.toISOString().substr(0,10);;\r\n\r\n   \r\n\r\n      let planDays=this.props.productList.planDays;\r\n\r\n     // return current && current < moment(customDate, \"YYYY-MM-DD\");\r\n      return current < moment(customDate, \"YYYY-MM-DD\") || (current >= moment(customDate).add(planDays, 'days'))\r\n      || (\r\n          moment(current).day() !== mon_day \r\n          && moment(current).day() !== tue_day &&\r\n          moment(current).day() !== wed_day && moment(current).day() !== thu_day &&\r\n          moment(current).day() !== fry_day && moment(current).day() !== sat_day &&\r\n          moment(current).day() !== sun_day \r\n       )\r\n        \r\n    }\r\n    fileChangedHandler = (event) => {\r\n\r\n            let file=event.target.files[0];\r\n            document.getElementById(\"msg_contest\").innerHTML=\"\";\r\n        if(typeof file==='undefined' || file===null)\r\n        {\r\n\r\n            return false;\r\n        }\r\n        let file_size = event.target.files[0].size;\r\n    \r\n        //or if you like to have name and type\r\n        let file_name = event.target.files[0].name;\r\n        let file_type = event.target.files[0].type;\r\n        let maxSize=5000000;\r\n        //console.log(file_size)\r\n        if(file_size > maxSize)\r\n        {\r\n            document.getElementById(\"msg_contest\").innerHTML=\"file size must be within 5mb\";\r\n            return false;\r\n        }\r\n\r\n        this.setState({ \r\n            anser_file: file,\r\n            anser_createObjectURL: URL.createObjectURL(file),\r\n            file_size         \r\n        }); \r\n       \r\n       \r\n        //\t5,000,000 Bytes\r\n       //do whatever operation you want to do here\r\n    };\r\n\r\n    submitData=async (e)=>{\r\n      document.getElementById(\"msg_contest\").innerHTML=\"\";\r\n        if(this.state.BM_Name.length ===0 )\r\n        {       \r\n          document.getElementById(\"msg_contest\").innerHTML=\"* Enter Name\";     \r\n          return false;\r\n        } \r\n        if(this.state.BM_Email.length===0)\r\n        {       \r\n          document.getElementById(\"msg_contest\").innerHTML=\"* Enter Email\";     \r\n          return false;\r\n        } \r\n        if(API.isValidEmail(this.state.BM_Email)===false)\r\n        {       \r\n          document.getElementById(\"msg_contest\").innerHTML=\"* Enter a valid email\";     \r\n          return false;\r\n        } \r\n        if(this.props.productList.Q1.length > 0)\r\n        {       \r\n            if(this.state.BM_ans_1.length === 0)\r\n            {\r\n                document.getElementById(\"msg_contest\").innerHTML=\"* Answer 1st question\";  \r\n                return false;\r\n            }        \r\n        } \r\n        if(this.props.productList.Q2.length > 0)\r\n        {       \r\n            if(this.state.BM_ans_2.length === 0)\r\n            {\r\n                document.getElementById(\"msg_contest\").innerHTML=\"* Answer 2nd question\";     \r\n                return false;\r\n            }        \r\n        } \r\n        if(this.props.productList.Q3.length > 0)\r\n        {       \r\n            if(this.state.BM_ans_3.length === 0)\r\n            {\r\n                document.getElementById(\"msg_contest\").innerHTML=\"* Answer 3rd question\";     \r\n                return false;\r\n            }        \r\n        } \r\n        if(this.props.productList.Q4.length > 0)\r\n        {       \r\n            if(this.state.BM_ans_4.length === 0)\r\n            {\r\n                document.getElementById(\"msg_contest\").innerHTML=\"* Answer 4th question\";     \r\n                return false;\r\n            }        \r\n        } \r\n        if(this.state.anser_file!==null)\r\n        {\r\n            let file = document.getElementById(\"upImage\").files[0];\r\n            let file_size=0;\r\n            if(file)\r\n            {\r\n                file_size=file.size;\r\n            } \r\n         \r\n            if(file_size > 5000000)\r\n            {\r\n                document.getElementById(\"msg_contest\").innerHTML=\"file size must be within 5mb\";\r\n                return false;\r\n            }\r\n          }\r\n     \r\n          if(this.props.productList.File_Upload=== 1 && this.state.anser_file===null)\r\n          {\r\n               document.getElementById(\"msg_contest\").innerHTML=\"* Select a file\";\r\n                return false;\r\n          }\r\n   \r\n          var flagData_new = {\r\n            amount:0,\r\n            currency:this.props.productList.DA_INR_Doller,                 \r\n            Product_Id:this.props.productList.DA_ID,\r\n            Name:this.state.BM_Name,\r\n            Email:this.state.BM_Email,\r\n            DA_Price:this.props.productList.DA_Price,   \r\n          };   \r\n        \r\n          const flag_new=API.encryptData(flagData_new);\r\n          let  JSONdata_new = {\r\n              flag: flag_new\r\n            };\r\n            \r\n            // check this email id already exists for this contest or not if not then allow else not allowed\r\n                                    \r\n            if(await API.email_Already_inContest(JSONdata_new)===false)\r\n            {\r\n              document.getElementById(\"msg_contest\").innerHTML=\"Use another email for this contest\";\r\n              return false;\t\r\n            }\r\n\r\n        \r\n        const formData = new FormData(); \r\n        let Api_url=\"\";     \r\n    \r\n\r\n\r\n\r\n        \r\n        Api_url=this.state.base_url+'admin/addFollowerContestFree';\r\n                  \r\n        // formData.append('DA_ID', this.props.productList.DA_ID) // for premium featured id\r\n        // formData.append('JM_ID', this.props.userDetails[0].JM_ID )         \r\n        // formData.append('CM_Name', this.state.BM_Name)  \r\n        // formData.append('CM_Email', this.state.BM_Email) \r\n        // formData.append('CM_A1', this.state.BM_ans_1)    \r\n        // formData.append('CM_A2', this.state.BM_ans_2)    \r\n        // formData.append('CM_A3', this.state.BM_ans_3) \r\n        // formData.append('CM_A4', this.state.BM_ans_4)   \r\n\r\n        // formData.append('sampleFile', this.state.anser_file);  \r\n        // formData.append('JM_User_Profile_Url_plus_JM_ID', this.props.userDetails[0].JM_User_Profile_Url+\"_\"+ this.props.userDetails[0].JM_ID);  \r\n        // formData.append('JM_Name',  this.props.userDetails[0].JM_Name) \r\n        // formData.append('JM_Email', this.props.userDetails[0].JM_Email) \r\n        // formData.append('JM_Phone', this.props.userDetails[0].JM_Phone) \r\n        // formData.append('JM_User_Profile_Url', this.props.userDetails[0].JM_User_Profile_Url) \r\n        // formData.append('dataTitle', this.props.productList.DA_Title) \r\n        var responseData=[];\r\n       // formData.append('responseData', JSON.stringify(responseData))\r\n        //formData.append('CM_Amount', 0) \r\n      \r\n           \r\n        formData.append('sampleFile', this.state.anser_file);  \r\n          \r\n              var flagData={\r\n                DA_ID:this.props.productList.DA_ID,\r\n                JM_ID:this.props.userDetails[0].JM_ID,\r\n                CM_Name:this.state.BM_Name,\r\n                CM_Email: this.state.BM_Email,\r\n                CM_Phone: this.state.BM_Phone,\r\n                Consent:this.state.Consent,\r\n                CM_A1:this.state.BM_ans_1,\r\n                CM_A2: this.state.BM_ans_2,\r\n                CM_A3: this.state.BM_ans_3,\r\n                CM_A4: this.state.BM_ans_4,            \r\n                JM_User_Profile_Url_plus_JM_ID:this.props.userDetails[0].JM_User_Profile_Url+\"_\"+ this.props.userDetails[0].JM_ID,\r\n                JM_Name: this.props.userDetails[0].JM_Name,\r\n                JM_Email:this.props.userDetails[0].JM_Email,\r\n                JM_Phone:this.props.userDetails[0].JM_Phone,\r\n                JM_User_Profile_Url: this.props.userDetails[0].JM_User_Profile_Url,\r\n                dataTitle: this.props.productList.DA_Title,\r\n                CM_Amount:0,\r\n                responseData: []\r\n              }\r\n              const flag=API.encryptData(flagData);\r\n              let  JSONdata = {\r\n                  flag: flag\r\n                };\r\n                formData.append('flag', flag) \r\n\r\n\r\n        let crsf_id=API.encryptData(this.props.userDetails[0].JM_ID);\r\n\r\n            try{\r\n                document.getElementById(\"sbmit\").disabled = true;\r\n                document.getElementById(\"sbmit\").innerHTML='Please Wait...';\r\n                fetch(Api_url, {\r\n                    method: 'POST',\r\n                    headers:{                         \r\n                        \"authorization\": API.getAuth(),\"id\":API.getId(),\r\n                        \"crsf_id\":crsf_id,\r\n                        \"token\":crsf_id,\r\n                        \"p\":this.state.payment_id,\r\n                         \"l\":this.state.LM_ID\r\n                        },\r\n                    body: formData,\r\n            \r\n                    \r\n                })\r\n                    .then(response => response.json())\r\n                    .then(async data => {\r\n                    //console.log(data);\r\n                    if (data.status > 0)\r\n                    {\r\n                       \r\n                     \r\n                       // document.getElementById(\"msg_contest\").innerHTML='Giveaways submitted successfully';  \r\n        \r\n                        document.getElementById(\"msg_contest\").innerHTML='';\r\n                        document.getElementById(\"req_div\").innerHTML='';\r\n                        document.getElementById(\"req_div\").style.display='none'\r\n                       this.setState({\r\n                        messageBox:true,                      \r\n                         Request:false,\r\n                           anser_file: null,\r\n                            BM_Email:'',\r\n                            BM_Name:'',\r\n                            BM_ans_1:'',\r\n                            BM_ans_2:'',\r\n                            BM_ans_3:'',\r\n                            BM_ans_4:'',   \r\n\r\n                       })\r\n                       this.WaitAndReload();\r\n                    }\r\n                    else \r\n                    {\r\n                        document.getElementById(\"sbmit\").disabled = false;\r\n                        document.getElementById(\"sbmit\").innerHTML='Submit';\r\n                        document.getElementById(\"msg_contest\").innerHTML='Internal error, try again later';  \r\n                        return false;\r\n                    }\r\n\r\n                    })\r\n                    .catch(error => \r\n                    { \r\n                        document.getElementById(\"sbmit\").disabled = false;\r\n                        document.getElementById(\"sbmit\").innerHTML='Submit';\r\n                        document.getElementById(\"msg_contest\").innerHTML='Internal error, try again later';  \r\n                        return false;\r\n                    })\r\n            }\r\n            catch(e)\r\n            {\r\n                // this.setState({BtnName:'Save',disabledBtn:false});\r\n                // this.props.showToast('Failed', 'Server Error');\r\n            }\r\n     \r\n\r\n    }\r\n    AddLeads= async (price=0)=>{\r\n      var flagData = {\r\n        DA_ID:this.props.productList.DA_ID,\r\n        BM_Instruction:'',\r\n        BM_Name:this.state.BM_Name,\r\n        BM_Email:this.state.BM_Email,\r\n        BM_Phone:this.state.BM_Phone,\r\n        BM_Purchase_Amt:price,\r\n        Consent:this.state.Consent,\r\n      };\r\n\r\n\r\n      \r\n      const flag=API.encryptData(flagData);\r\n      let  JSONdata = {\r\n          flag: flag\r\n        };\r\n\r\n\r\n\r\n\r\n            const API_url = process.env.REACT_APP_API_URL + \"admin/addLeads\";\r\n          fetch(API_url,\r\n            {\r\n              method: 'post',\r\n              headers: { \"Content-Type\": \"application/json\" },\r\n              body: JSON.stringify(JSONdata)\r\n            })\r\n          .then((response) => response.json())\r\n          .then(data1 =>\r\n             {             \r\n                if(data1.status===1)\r\n                {\r\n                  const data=API.decryptJson(data1.flag);\r\n                  this.setState({\r\n                    LM_ID:data.LM_ID\r\n                  });\r\n                }\r\n                ////console.log(data)\r\n          });\r\n      \r\n    }\r\n    openCheckout=async e=>\r\n    {\r\n      var isFree=false;   \r\n      document.getElementById(\"msg_contest\").innerHTML='';\r\n      if(this.state.BM_Name.length ===0 )\r\n        {       \r\n          document.getElementById(\"msg_contest\").innerHTML=\"* Enter Name\";     \r\n          return false;\r\n        } \r\n        if(this.state.BM_Email.length===0)\r\n        {       \r\n          document.getElementById(\"msg_contest\").innerHTML=\"* Enter Email\";     \r\n          return false;\r\n        } \r\n        if(API.isValidEmail(this.state.BM_Email)===false)\r\n        {       \r\n          document.getElementById(\"msg_contest\").innerHTML=\"* Enter a valid email\";     \r\n          return false;\r\n        } \r\n\r\n\r\n        if(this.state.BM_Phone.length === 0 )\r\n        {           \r\n      \r\n          document.getElementById(\"msg_contest\").innerHTML='* Enter phone number';\r\n          return false\r\n          \r\n        } \r\n        if(this.state.BM_Phone.length !==10 )\r\n        {           \r\n    \r\n          document.getElementById(\"msg_contest\").innerHTML='* Enter 10 digits phone number';\r\n          return false\r\n          \r\n        } \r\n\r\n        if(this.props.productList.Q1.length > 0)\r\n        {       \r\n            if(this.state.BM_ans_1.length === 0)\r\n            {\r\n                document.getElementById(\"msg_contest\").innerHTML=\"* Answer 1st question\";  \r\n                return false;\r\n            }        \r\n        } \r\n        if(this.props.productList.Q2.length > 0)\r\n        {       \r\n            if(this.state.BM_ans_2.length === 0)\r\n            {\r\n                document.getElementById(\"msg_contest\").innerHTML=\"* Answer 2nd question\";     \r\n                return false;\r\n            }        \r\n        } \r\n        if(this.props.productList.Q3.length > 0)\r\n        {       \r\n            if(this.state.BM_ans_3.length === 0)\r\n            {\r\n                document.getElementById(\"msg_contest\").innerHTML=\"* Answer 3rd question\";     \r\n                return false;\r\n            }        \r\n        } \r\n        if(this.props.productList.Q4.length > 0)\r\n        {       \r\n            if(this.state.BM_ans_4.length === 0)\r\n            {\r\n                document.getElementById(\"msg_contest\").innerHTML=\"* Answer 4th question\";     \r\n                return false;\r\n            }        \r\n        } \r\n        if(this.state.anser_file!==null)\r\n        {\r\n            let file = document.getElementById(\"upImage\").files[0];\r\n            let file_size=0;\r\n            if(file)\r\n            {\r\n                file_size=file.size;\r\n            } \r\n         \r\n            if(file_size > 5000000)\r\n            {\r\n                document.getElementById(\"msg_contest\").innerHTML=\"file size must be within 5mb\";\r\n                return false;\r\n            }\r\n          }\r\n\r\n          if(this.state.anser_file!==null)\r\n          {\r\n              let file = document.getElementById(\"upImage\").files[0];\r\n              let file_size=0;\r\n              if(file)\r\n              {\r\n                  file_size=file.size;\r\n              } \r\n           \r\n              if(file_size > 5000000)\r\n              {\r\n                  document.getElementById(\"msg_contest\").innerHTML=\"file size must be within 5mb\";\r\n                  return false;\r\n              }\r\n            }\r\n          //======\r\n          if(this.props.productList.File_Upload=== 1 && this.state.anser_file===null)\r\n          {\r\n\r\n               document.getElementById(\"msg_contest\").innerHTML=\"* Select a file\";\r\n                return false;\r\n          }\r\n\r\n\r\n          var DA_Price=0;   \r\n          if(this.props.productList.DA_Allow_Cust_Pay === 1 && parseInt(this.props.productList.DA_Min_Amount) > 0) \r\n          {\r\n      \r\n            if((this.state.dynamic_price > 0) && this.state.dynamic_price < parseInt(this.props.productList.DA_Min_Amount))\r\n            {        \r\n              \r\n              document.getElementById(\"msg_contest\").innerHTML='*Minimum amount required is '+this.props.productList.DA_INR_Doller + ' '+this.props.productList.DA_Min_Amount;\r\n              return false;            \r\n            }\r\n            else\r\n            {\r\n              if(this.props.productList.DA_Allow_Cust_Pay === 1 && this.state.dynamic_price > 0)\r\n              {\r\n                DA_Price=this.state.dynamic_price * 100; \r\n              }\r\n              else\r\n              {\r\n                DA_Price=parseInt(this.props.productList.DA_Min_Amount) * 100; \r\n              }\r\n            \r\n            }\r\n          }\r\n\r\n\r\n        \r\n             var leadPrice=parseFloat(DA_Price/100);\r\n              await this.AddLeads(leadPrice);  \r\n           \r\n\r\n              const API_url = process.env.REACT_APP_API_URL+'admin/order';  \r\n                var flagData = {\r\n                  amount:DA_Price,\r\n                  currency:this.props.productList.DA_INR_Doller,                 \r\n                  Product_Id:this.props.productList.DA_ID,\r\n                  Name:this.state.BM_Name,\r\n                  Email:this.state.BM_Email,\r\n                  DA_Price:this.props.productList.DA_Price,   \r\n                };   \r\n              \r\n                const flag=API.encryptData(flagData);\r\n                let  JSONdata = {\r\n                    flag: flag\r\n                  };\r\n                  \r\n                  \r\n                // check this email id already exists for this contest or not if not then allow else not allowed\r\n                      \r\n                if(await API.email_Already_inContest(JSONdata)===false)\r\n                {\r\n                  document.getElementById(\"msg_contest\").innerHTML=\"Use another email for this contest\";\r\n                  return false;\t\r\n                }\r\n\r\n\r\n\r\n\r\n                const response=await fetch(API_url,{\r\n                      method: 'post',\r\n                      headers: { \"Content-Type\": \"application/json\" },\r\n                      body: JSON.stringify(JSONdata)\r\n                    });\r\n                    \r\n                   \r\n                  const data1=await response.json();              \r\n                  const data=API.decryptJson(data1.flag)\r\n\r\n                  let options = {\r\n                    \"key\": process.env.REACT_APP_RAZOR_PAY_TEST_KEY,\r\n                    \"amount\":DA_Price, // 2000 paise = INR 20, amount in paisa\r\n                    \"name\": \"Expy\",\r\n                    \"description\": \"Purchase Description\",\r\n                    \"image\": \"/favicon.png\",\r\n                    \"order_id\": data.id,\r\n                    \"method\": 'wallet',\r\n                    \"wallet\": 'paypal',\r\n                    \"handler\":  response => \r\n                    {        \r\n                      ////console.log(response.razorpay_payment_id);\r\n                     \r\n                        this.CapturePayment(response.razorpay_payment_id,response,DA_Price);\r\n                    },\r\n                    \"prefill\": {\r\n                      \"name\": this.state.BM_Name,\r\n                      \"email\": this.state.BM_Email,\r\n                      \"contact\":''\r\n                    },\r\n                    \"notes\": {\r\n                      \"address\": \"\"\r\n                    },\r\n                    \"theme\": {\r\n                      \"color\": \"#fa217c\"\r\n                    }\r\n                  };\r\n  \r\n                  let rzp = new window.Razorpay(options);\r\n                  rzp.open();\r\n      \r\n    }\r\n    openCheckoutNormal=async e=>{\r\n      var isFree=false;   \r\n      document.getElementById(\"msg_contest\").innerHTML='';\r\n      if(this.state.BM_Name.length ===0 )\r\n        {       \r\n          document.getElementById(\"msg_contest\").innerHTML=\"* Enter Name\";     \r\n          return false;\r\n        } \r\n        if(this.state.BM_Email.length===0)\r\n        {       \r\n          document.getElementById(\"msg_contest\").innerHTML=\"* Enter Email\";     \r\n          return false;\r\n        } \r\n        if(API.isValidEmail(this.state.BM_Email)===false)\r\n        {       \r\n          document.getElementById(\"msg_contest\").innerHTML=\"* Enter a valid email\";     \r\n          return false;\r\n        } \r\n\r\n\r\n        if(this.state.BM_Phone.length === 0 )\r\n        {           \r\n      \r\n          document.getElementById(\"msg_contest\").innerHTML='* Enter phone number';\r\n          return false\r\n          \r\n        } \r\n        if(this.state.BM_Phone.length !==10 )\r\n        {           \r\n    \r\n          document.getElementById(\"msg_contest\").innerHTML='* Enter 10 digits phone number';\r\n          return false\r\n          \r\n        } \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        if(this.props.productList.Q1.length > 0)\r\n        {       \r\n            if(this.state.BM_ans_1.length === 0)\r\n            {\r\n                document.getElementById(\"msg_contest\").innerHTML=\"* Answer 1st question\";  \r\n                return false;\r\n            }        \r\n        } \r\n        if(this.props.productList.Q2.length > 0)\r\n        {       \r\n            if(this.state.BM_ans_2.length === 0)\r\n            {\r\n                document.getElementById(\"msg_contest\").innerHTML=\"* Answer 2nd question\";     \r\n                return false;\r\n            }        \r\n        } \r\n        if(this.props.productList.Q3.length > 0)\r\n        {       \r\n            if(this.state.BM_ans_3.length === 0)\r\n            {\r\n                document.getElementById(\"msg_contest\").innerHTML=\"* Answer 3rd question\";     \r\n                return false;\r\n            }        \r\n        } \r\n        if(this.props.productList.Q4.length > 0)\r\n        {       \r\n            if(this.state.BM_ans_4.length === 0)\r\n            {\r\n                document.getElementById(\"msg_contest\").innerHTML=\"* Answer 4th question\";     \r\n                return false;\r\n            }        \r\n        } \r\n        if(this.state.anser_file!==null)\r\n        {\r\n            let file = document.getElementById(\"upImage\").files[0];\r\n            let file_size=0;\r\n            if(file)\r\n            {\r\n                file_size=file.size;\r\n            } \r\n         \r\n            if(file_size > 5000000)\r\n            {\r\n                document.getElementById(\"msg_contest\").innerHTML=\"file size must be within 5mb\";\r\n                return false;\r\n            }\r\n          }\r\n          if(this.state.anser_file!==null)\r\n          {\r\n              let file = document.getElementById(\"upImage\").files[0];\r\n              let file_size=0;\r\n              if(file)\r\n              {\r\n                  file_size=file.size;\r\n              } \r\n           \r\n              if(file_size > 5000000)\r\n              {\r\n                  document.getElementById(\"msg_contest\").innerHTML=\"file size must be within 5mb\";\r\n                  return false;\r\n              }\r\n            }\r\n          //======\r\n          \r\n          if(this.props.productList.File_Upload=== 1 && this.state.anser_file===null)\r\n          {\r\n\r\n               document.getElementById(\"msg_contest\").innerHTML=\"* Select a file\";\r\n                return false;\r\n          }\r\n   \r\n\r\n\r\n             var DA_Price=parseFloat(this.props.productList.DA_Price * 100);\r\n             var leadPrice=parseFloat(this.props.productList.DA_Price);\r\n              await this.AddLeads(leadPrice);  \r\n\r\n              const API_url = process.env.REACT_APP_API_URL+'admin/order';  \r\n                var flagData = {\r\n                  amount:DA_Price,\r\n                  currency:this.props.productList.DA_INR_Doller,                 \r\n                  Product_Id:this.props.productList.DA_ID,\r\n                  Name:this.state.BM_Name,\r\n                  Email:this.state.BM_Email,\r\n                  DA_Price:this.props.productList.DA_Price,   \r\n                };                 \r\n\r\n                const flag=API.encryptData(flagData);\r\n                let  JSONdata = {\r\n                    flag: flag\r\n                  };\r\n\r\n                  // check this email id already exists for this contest or not if not then allow else not allowed\r\n                                      \r\n                  if(await API.email_Already_inContest(JSONdata)===false)\r\n                  {\r\n                    document.getElementById(\"msg_contest\").innerHTML=\"Use another email for this contest\";\r\n                    return false;\t\r\n                  }\r\n\r\n\r\n\r\n\r\n\r\n                const response=await fetch(API_url,{\r\n                      method: 'post',\r\n                      headers: { \"Content-Type\": \"application/json\" },\r\n                      body: JSON.stringify(JSONdata)\r\n                    });\r\n                    \r\n               \r\n                  const data1=await response.json();\r\n                  const data=API.decryptJson(data1.flag)\r\n\r\n                  let options = {\r\n                    \"key\": process.env.REACT_APP_RAZOR_PAY_TEST_KEY,\r\n                    \"amount\":DA_Price, // 2000 paise = INR 20, amount in paisa\r\n                    \"name\": \"Expy\",\r\n                    \"description\": \"Purchase Description\",\r\n                    \"image\": \"/favicon.png\",\r\n                    \"order_id\": data.id,\r\n                    \"method\": 'wallet',\r\n                    \"wallet\": 'paypal',\r\n                    \"handler\":  response => \r\n                    {        \r\n                      ////console.log(response.razorpay_payment_id);\r\n                     \r\n                        this.CapturePayment(response.razorpay_payment_id,response,DA_Price);\r\n                    },\r\n                    \"prefill\": {\r\n                      \"name\": this.state.BM_Name,\r\n                      \"email\": this.state.BM_Email,\r\n                      \"contact\":''\r\n                    },\r\n                    \"notes\": {\r\n                      \"address\": \"Hello World\"\r\n                    },\r\n                    \"theme\": {\r\n                      \"color\": \"#fa217c\"\r\n                    }\r\n                  };\r\n  \r\n                  let rzp = new window.Razorpay(options);\r\n                  rzp.open();\r\n    }\r\n    WaitAndReload=()=>\r\n    {\r\n      setTimeout(function() {\r\n        window.location.reload();\r\n       }, 5000);  \r\n    }\r\n  \r\n    async CapturePayment(razorpay_payment_id,responseData,DA_Price)\r\n    {\r\n     \r\n              const paymentId = razorpay_payment_id;         \r\n              \r\n              const formData = new FormData(); \r\n              let Api_url=\"\";     \r\n          \r\n              Api_url=this.state.base_url+'admin/addFollowerContest';\r\n                       \r\n     \r\n             \r\n              // formData.append('DA_ID', this.props.productList.DA_ID) // for premium featured id\r\n              // formData.append('JM_ID', this.props.userDetails[0].JM_ID )         \r\n              // formData.append('CM_Name', this.state.BM_Name)  \r\n              // formData.append('CM_Email', this.state.BM_Email) \r\n              // formData.append('CM_A1', this.state.BM_ans_1)    \r\n              // formData.append('CM_A2', this.state.BM_ans_2)    \r\n              // formData.append('CM_A3', this.state.BM_ans_3) \r\n              // formData.append('CM_A4', this.state.BM_ans_4)         \r\n              formData.append('sampleFile', this.state.anser_file);  \r\n\r\n              // formData.append('JM_User_Profile_Url_plus_JM_ID', this.props.userDetails[0].JM_User_Profile_Url+\"_\"+ this.props.userDetails[0].JM_ID);  \r\n              // formData.append('JM_Name',  this.props.userDetails[0].JM_Name) \r\n              // formData.append('JM_Email', this.props.userDetails[0].JM_Email) \r\n              // formData.append('JM_Phone', this.props.userDetails[0].JM_Phone) \r\n              // formData.append('JM_User_Profile_Url', this.props.userDetails[0].JM_User_Profile_Url) \r\n              // formData.append('dataTitle', this.props.productList.DA_Title)            \r\n              // formData.append('responseData', JSON.stringify(responseData))\r\n              let CM_Amount=DA_Price/100;\r\n             // formData.append('CM_Amount', CM_Amount) \r\n\r\n          \r\n              var flagData={\r\n                DA_ID:this.props.productList.DA_ID,\r\n                JM_ID:this.props.userDetails[0].JM_ID,\r\n                CM_Name:this.state.BM_Name,\r\n                CM_Email: this.state.BM_Email,\r\n                CM_Phone: this.state.BM_Phone,\r\n                Consent:this.state.Consent,\r\n                CM_A1:this.state.BM_ans_1,\r\n                CM_A2: this.state.BM_ans_2,\r\n                CM_A3: this.state.BM_ans_3,\r\n                CM_A4: this.state.BM_ans_4,            \r\n                JM_User_Profile_Url_plus_JM_ID:this.props.userDetails[0].JM_User_Profile_Url+\"_\"+ this.props.userDetails[0].JM_ID,\r\n                JM_Name: this.props.userDetails[0].JM_Name,\r\n                JM_Email:this.props.userDetails[0].JM_Email,\r\n                JM_Phone:this.props.userDetails[0].JM_Phone,\r\n                JM_User_Profile_Url: this.props.userDetails[0].JM_User_Profile_Url,\r\n                dataTitle: this.props.productList.DA_Title,\r\n                CM_Amount:CM_Amount,\r\n                responseData: JSON.stringify(responseData),\r\n                Payment_Id:paymentId,\r\n                LM_ID:this.state.LM_ID\r\n              }\r\n              const flag=API.encryptData(flagData);\r\n              let  JSONdata = {\r\n                  flag: flag\r\n                };\r\n                formData.append('flag', flag) \r\n\r\n              let crsf_id=API.encryptData(this.props.userDetails[0].JM_ID);\r\n      \r\n                  try{\r\n                      document.getElementById(\"sbmit\").disabled = true;\r\n                      document.getElementById(\"sbmit\").innerHTML='Please Wait...';\r\n                      fetch(Api_url, {\r\n                          method: 'POST',\r\n                          headers:{                         \r\n                              \"authorization\": API.getAuth(),\"id\":API.getId(),\r\n                              \"crsf_id\":crsf_id,\r\n                              \"token\":crsf_id,\r\n                              \"p\":'',\r\n                               \"l\":0\r\n                              },\r\n                          body: formData,\r\n                  \r\n                          \r\n                      })\r\n                          .then(response => response.json())\r\n                          .then(async data => {\r\n                        //  //console.log(data);\r\n                          if (data.status > 0)\r\n                          {\r\n                             \r\n                           \r\n                             // document.getElementById(\"msg_contest\").innerHTML='Giveaways submitted successfully';  \r\n                          \r\n                              document.getElementById(\"msg_contest\").innerHTML='';\r\n                              document.getElementById(\"req_div\").style.display='none'\r\n                             this.setState({\r\n                                  messageBox:true,\r\n                                  request:false,                        \r\n                                  anser_file: null,\r\n                                  BM_Email:'',\r\n                                  BM_Name:'',\r\n                                  BM_ans_1:'',\r\n                                  BM_ans_2:'',\r\n                                  BM_ans_3:'',\r\n                                  BM_ans_4:'',   \r\n      \r\n                             })\r\n                            //  document.getElementById(\"sbmit\").disabled = false;\r\n                            //  document.getElementById(\"sbmit\").innerHTML='Submit';\r\n                      \r\n                        \r\n                            this.WaitAndReload();\r\n                          }\r\n                          else \r\n                          {\r\n                              document.getElementById(\"sbmit\").disabled = false;\r\n                              document.getElementById(\"sbmit\").innerHTML='Submit';\r\n                              document.getElementById(\"msg_contest\").innerHTML='Internal error - Please contact Expy support';  \r\n                             \r\n\r\n                              var JSONdata={\r\n                                DA_ID:this.props.productList.DA_ID,\r\n                                JM_ID:this.props.userDetails[0].JM_ID,\r\n                                CM_Name:this.state.BM_Name,\r\n                                CM_Email: this.state.BM_Email,\r\n                                CM_A1:this.state.BM_ans_1,\r\n                                CM_A2:this.state.BM_ans_2,\r\n                                CM_A3:this.state.BM_ans_3,\r\n                                CM_A4: this.state.BM_ans_4,\r\n                                paymentId:paymentId,\r\n                                responseData:responseData\r\n                              }\r\n                              const token=API.encryptData(paymentId)\r\n                              const url = process.env.REACT_APP_API_URL+'admin/dataUncaptured';\r\n                              const response1= await fetch(url,{\r\n                                method: 'post',\r\n                                headers: { \"Content-Type\": \"application/json\" ,\"token\":token},\r\n                                body: JSON.stringify(JSONdata)\r\n                               });\r\n                               const resp=await response1.json();                             \r\n                              return false;\r\n                          }\r\n      \r\n                          })\r\n                          .catch(error => \r\n                          { \r\n                              // document.getElementById(\"sbmit\").disabled = false;\r\n                              // document.getElementById(\"sbmit\").innerHTML='Submit';\r\n                              document.getElementById(\"msg_contest\").innerHTML='Internal error - Please contact Expy support';  \r\n                              return false;\r\n                          })\r\n  \r\n            \r\n                      } \r\n                      catch (err) \r\n                      {\r\n                        ////console.log(err);\r\n                      }\r\n    }\r\n    handleDynamicPrice=(e)=>{\r\n      let val=parseInt(e.target.value);\r\n      //console.log(isNaN(val))\r\n     if(isNaN(val)===true)\r\n        val=0;\r\n\r\n      this.setState({[e.target.name]:val})\r\n    }\r\n    WaitAndReload=()=>\r\n    {\r\n      setTimeout(function() {\r\n        window.location.reload();\r\n       }, 3000);  \r\n    }\r\n    render() \r\n    {\r\n    \r\n      const productList=this.props.productList;\r\n      var arrCover=[];\r\n      var cover_imageOrVideo='';var src=\"\";\r\n      \r\n      arrCover=JSON.parse(productList.DA_Collection);\r\n      ////console.log(arrCover)\r\n      src=process.env.REACT_APP_UPLOAD_URL+\"Profile/\"+this.props.JM_User_Profile_Url_plus_JM_ID+\"/\"+arrCover[0];\r\n      if(productList.DA_DA_ID!==2)\r\n      {\r\n        cover_imageOrVideo=process.env.REACT_APP_UPLOAD_URL+\"Profile/\"+this.props.JM_User_Profile_Url_plus_JM_ID+\"/\"+arrCover[0];\r\n      }\r\n      if(productList.DA_DA_ID===2 || productList.DA_DA_ID===3)\r\n      {\r\n        if(arrCover[0].endsWith('.mp4')===false && productList.DA_Type==='image')\r\n           cover_imageOrVideo=process.env.REACT_APP_ADM_URL+\"cover/\"+arrCover[0];\r\n          else\r\n          {\r\n            cover_imageOrVideo=process.env.REACT_APP_UPLOAD_URL+\"Profile/\"+this.props.JM_User_Profile_Url_plus_JM_ID+\"/\"+arrCover[0];\r\n          }\r\n      }\r\n         \r\n        const useStyles = makeStyles((theme) => ({\r\n            root: {\r\n              height: 180,\r\n            },\r\n            container: {\r\n              display: 'flex',\r\n            },\r\n            paper: {\r\n              margin: theme.spacing(1),\r\n            },\r\n            svg: {\r\n              width: 100,\r\n              height: 100,\r\n            },\r\n            polygon: {\r\n              fill: theme.palette.common.white,\r\n              stroke: theme.palette.divider,\r\n              strokeWidth: 1,\r\n            },\r\n          }));\r\n\r\n           \r\n          let createDropdown = this.state.dropdown.map(item => (\r\n           <option value={item.ES_ID}>{item.startSlotTime+\"-\"+item.endSlotTime}</option>\r\n          ));\r\n\r\n        return (\r\n           <>\r\n            {/* { productList.DA_DA_ID!==5?\r\n            <button className={\"buy \"+  this.props.font_family} data={this.props.productList} style={this.props.mystyleForHightight} onClick={this.ModalOpen}>Buy</button>\r\n            : productList.DA_DA_ID===5?\r\n            <button className={\"buy \"+  this.props.font_family} data={this.props.productList} style={this.props.mystyleForHightight} onClick={this.OpenModalVideo}>Buy</button>\r\n            :\r\n             null\r\n            } */}\r\n             <button className={\"buy \"+  this.props.font_family} data={this.props.productList} style={this.props.mystyleForHightight} onClick={this.ModalOpen}>Join</button>\r\n            <Modal\r\n            show={this.state.openModel}\r\n            onHide={this.ModalClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            centered\r\n    \r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>\r\n                <p className=\"addnew-title\">{this.props.productList.DA_Title}</p>\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                    \r\n                         <div className=\"request-sec\">                     \r\n                            <div className=\"request-box\">   \r\n                                <div id=\"req_div\">\r\n                                        {\r\n                                        this.state.request ?\r\n                                        <Grow in={this.state.checkedRequest} >\r\n                                            <div className=\"body-part\" id=\"request\">\r\n                                              \r\n                                                    <div className=\"icon\">\r\n                                                      {\r\n                                                        this.props.productList.DA_Type==='NA' ?\r\n                                                         <img src={\"/images/play.gif\"} alt=\"\"/>\r\n                                                         :                                                                                                             \r\n                                                          this.props.productList.DA_Type==='image' && this.props.productList.DA_DA_ID===6?\r\n                                                          <img  src={cover_imageOrVideo} alt=\"\" />\r\n                                                          :     \r\n                                                          this.props.productList.DA_Type==='video' && this.props.productList.DA_DA_ID===6 ?\r\n                                                          <video  loop autoplay=\"autoplay\" muted playsinline=\"true\" style={{width:'100%'}}> \r\n                                                              <source id=\"vip\"  src={cover_imageOrVideo} type=\"video/mp4\"/>\r\n                                                          </video>\r\n                                                        //   <video  id=\"\"  src={cover_imageOrVideo} controls autoplay muted/>           \r\n                                                          :\r\n                                                          <img src={\"/images/play.gif\"} alt=\"\"/>\r\n                                                      }\r\n                                                \r\n                                                    </div>\r\n                                                    <label>{this.props.productList.DA_Description}</label> \r\n                                                       \r\n                                  \r\n                                               \r\n                                               <div className=\"form-box\">\r\n\r\n                                                                           \r\n                                                               <input type=\"text\" name={\"BM_Name\"} value={this.state.BM_Name} onChange={this.handleChange}  placeholder=\"Your Name\" className=\"form-control\"/>\r\n                                                                <input type=\"email\" name={\"BM_Email\"} value={this.state.BM_Email} onChange={this.handleChange}  placeholder=\"Email Address\" className=\"form-control\"/>\r\n                                                                <p style={{ marginBottom:'10px',textAlign:'left'}}>\r\n                                                                   <input type=\"checkbox\" name=\"consent\" onClick={this.doConsent}/> {API.consentLebel()}\r\n                                                               </p>\r\n\r\n                                                               <input type=\"number\" name={\"BM_Phone\"} value={this.state.BM_Phone} onChange={this.handleChange}  placeholder=\"Phone Number\" className=\"form-control\"/>\r\n                                                              \r\n                                                               <div className=\"row contestAns\">\r\n                                                                 <div className=\"col-md-12\">\r\n                                                           \r\n                                                                <p>Enter giveaway info</p>\r\n                                                               {\r\n                                                                   this.props.productList.Q1.length > 0 ?\r\n                                                                   <>\r\n                                                                   <label>{this.props.productList.Q1}</label>\r\n                                                                   <input type=\"text\" name={\"BM_ans_1\"} value={this.state.BM_ans_1} onChange={this.handleChange}  placeholder=\"Enter Answer\" className=\"form-control\"/>\r\n                                                                   </>\r\n                                                                   :\r\n                                                                   null\r\n                                                               }\r\n                                                               \r\n                                                               {\r\n                                                                   this.props.productList.Q2.length > 0 ?\r\n                                                                    <>\r\n                                                                   <label>{this.props.productList.Q2}</label>\r\n                                                                   <input type=\"text\" name={\"BM_ans_2\"} value={this.state.BM_ans_2} onChange={this.handleChange}  placeholder=\"Enter Answer\" className=\"form-control\"/>\r\n                                                                   </>\r\n                                                                   :\r\n                                                                   null\r\n                                                               }\r\n                                                               \r\n                                                               {\r\n                                                                   this.props.productList.Q3.length > 0 ?\r\n                                                                   <>\r\n                                                                    <label>{this.props.productList.Q3}</label>\r\n                                                                    <input type=\"text\" name={\"BM_ans_3\"} value={this.state.BM_ans_3} onChange={this.handleChange} placeholder=\"Enter Answer\" className=\"form-control\"/>\r\n                                                                  </>\r\n                                                                   :\r\n                                                                   null\r\n                                                               }\r\n                                                               \r\n                                                               {\r\n                                                                   this.props.productList.Q4.length > 0 ?\r\n                                                                   <>\r\n                                                                    <label>{this.props.productList.Q4}</label>\r\n                                                                    <input type=\"text\" name={\"BM_ans_4\"} value={this.state.BM_ans_4} onChange={this.handleChange}  placeholder=\"Enter Answer\" className=\"form-control\"/>\r\n                                                                   </>\r\n                                                                   :\r\n                                                                   null\r\n                                                               }\r\n                                                                {\r\n                                                                   this.props.productList.File_Upload=== 1 ?\r\n                                                                    <>\r\n                                                                      <label>{this.props.productList.File_upload_text}</label>\r\n                                                                       <label className=\"contestFileuplaod\" for=\"upImage\" style={{marginBottom: '20px'}}>                                                                              \r\n                                                                       Upload a file (max 5mb)\r\n                                                                         <input type=\"file\" id=\"upImage\" style={{ display: \"none\" }} onChange={this.fileChangedHandler}/>\r\n                                                                     </label>\r\n                                                                   \r\n                                                                     </>\r\n                                                                   :                                                                  \r\n                                                                     null\r\n                                                                 }\r\n\r\n\r\n                                                        {\r\n                                                         this.props.productList.DA_Allow_Cust_Pay===1   &&  this.props.productList.DA_Min_Amount > 0?\r\n                                                          <>\r\n                                                          <p>Pay what you want</p>\r\n                                                           <input type=\"text\" name={\"dynamic_price\"} \r\n                                                           onChange={this.handleDynamicPrice} \r\n                                                           placeholder={this.props.productList.DA_Min_Amount + \"+\"}  className=\"form-control\"\r\n                                                           onKeyPress={(event) => {\r\n                                                             if (!/[0-9]/.test(event.key)) {\r\n                                                               event.preventDefault();\r\n                                                             }\r\n                                                           }}\r\n                                                           onPaste={(e)=>{\r\n                                                            e.preventDefault()\r\n                                                            return false;\r\n                                                          }} onCopy={(e)=>{\r\n                                                            e.preventDefault()\r\n                                                            return false;\r\n                                                          }}\r\n                                                           />\r\n                                                         \r\n                                                                   <button class=\"btun\"  onClick={this.openCheckout} id=\"sbmit\">Submit                                                                   \r\n                                                                     </button>\r\n\r\n\r\n                                                           </>\r\n                                                           : \r\n                                                           this.props.productList.DA_Allow_Cust_Pay===0   &&  this.props.productList.DA_Price > 0 ?    \r\n                                                                <button class=\"btun\"  onClick={this.openCheckoutNormal} id=\"sbmit\">  Submit {\"Rs.\" + this.props.productList.DA_Price }  </button>\r\n                                                           :\r\n                                                            <button class=\"btun\"  onClick={this.submitData} id=\"sbmit\">Submit  </button>\r\n\r\n\r\n                                                          }\r\n\r\n\r\n\r\n\r\n                                                     <p id=\"msg_contest\" style={{color:'red'}}></p>   \r\n\r\n                                                           </div>\r\n                                                     </div>\r\n                                                             \r\n                                                   </div>\r\n\r\n\r\n                                                   \r\n                                                  {/* <button className=\"back-btn\" onClick={this.backClick}><KeyboardBackspaceIcon style={{fontSize:'30px'}} /></button>  */}\r\n                                             </div>\r\n                                        </Grow>\r\n                                        :\r\n                                        null                            \r\n                                        }    \r\n                                              \r\n                                 </div>\r\n                                 {\r\n                                    this.state.messageBox ?\r\n                                        <Grow in={true} >\r\n                                            {/* <Paper elevation={4} className={useStyles.paper}> */}\r\n                                          \r\n                                            <div className=\"body-part\" id=\"messageBox\">\r\n                                               \r\n                                            <i class=\"far fa-check-circle\" style={{fontSsize: '25px',color: 'green',marginRight:'5px'}}></i>\r\n                                             <span style={{fontSsize: '19px',color: 'green',textAlign:'center'}}>\r\n                                             You have successfully participated in {this.props.productList.DA_Title}\r\n                                               \r\n                                               </span>                                                 \r\n                                              \r\n                                                \r\n                                            </div>\r\n                                        </Grow>\r\n                                    :\r\n                                    null\r\n                                }\r\n\r\n                                {\r\n                                    this.state.PayDetails ?\r\n                                        <Grow in={this.state.checkedPayDetails} >\r\n                                            {/* <Paper elevation={4} className={useStyles.paper}> */}\r\n                                          \r\n                                            <div className=\"body-part\" id=\"PayDetails\">\r\n                                               \r\n                                                  <div className=\"form-box\" id=\"payment\">\r\n                                                  <h4>Secure Payment</h4>\r\n                                                  {/* <p>Please enter your payment details to complete your request.</p>\r\n                                                  <input type=\"text\" placeholder=\"Card Number\" className=\"form-control\"/> */}\r\n                                                \r\n                                                \r\n                                                 \r\n                                                  {/* cashfree */}\r\n                                                  {/* <PaymentCashFree ref=\"checkout\" BM_Type={'B'}  DA_INR_Doller={ this.props.productList.DA_INR_Doller} DA_Price={this.props.productList.DA_Price} \r\n                                                  name={this.state.BM_Name} email={this.state.BM_Email} DA_ID={this.props.productList.DA_ID}  phone={this.state.BM_Phone} state={this.state} userDetails={this.props.userDetails[0]} JM_ID={this.props.userDetails[0].JM_ID}/>\r\n                                               */}\r\n                                              \r\n                                                  {/* <button class=\"btun\" onClick={this.PayNow}>Pay \r\n                                                  {\r\n                                                    this.props.productList.DA_INR_Doller==='INR' ?\r\n                                                           \" Rs.\" + this.props.productList.DA_Price\r\n                                                    :\r\n                                                          \" $\" + this.props.productList.DA_Price\r\n                                                  }\r\n                                                  \r\n                                                  </button> */}\r\n                                                  {/* <p>We currently accept:</p> */}\r\n                                                  {/* <ul>\r\n                                                    <li><img src={\"images/pay-1.png\"} /></li>\r\n                                                    <li><img src={\"images/pay-2.png\"} /></li>\r\n                                                    <li><img src={\"images/pay-3.png\"} /></li>\r\n                                                    <li><img src={\"images/pay-4.png\"} /></li>\r\n                                                  </ul> */}\r\n                                                </div>\r\n                                              \r\n                                                <button className=\"back-btn\" onClick={this.backClick}><KeyboardBackspaceIcon style={{fontSize:'30px'}} /></button> \r\n                                            </div>\r\n                                        </Grow>\r\n                                    :\r\n                                    null\r\n                                }\r\n\r\n                                  {\r\n                                        this.state.isLoading ?\r\n                                        <Grow in={this.state.showLoading} >\r\n                                            <div className=\"body-part\" id=\"request\">\r\n                                                <div class=\"spinner-grow\" style={{width: '3rem', height: '3rem'}} role=\"status\">\r\n                                                    <span class=\"sr-only\">Please Wait...</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Grow>\r\n                                        :\r\n                                        null                            \r\n                                        }    \r\n                                      <div id=\"main_div\">\r\n                                          {\r\n                                            this.state.showVideo ?\r\n                                            <>\r\n                                            <video id=\"video\" src={cover_imageOrVideo} type=\"video/mp4\" style={{display:'none'}}></video>\r\n                                            <button id=\"mybtn\" onClick={this.handleClick}>Capture</button><br/>\r\n                                              \r\n                                            </>                                   \r\n                                            :\r\n                                            null\r\n                                          }\r\n                                      </div>\r\n                                     \r\n                                        \r\n\r\n                            </div>\r\n                        </div>\r\n            </Modal.Body>\r\n    \r\n          </Modal>\r\n                       \r\n\r\n  {/* edit send me a gift option */}\r\n  <Modal\r\n              size=\"md\"\r\n              show={this.state.ModalOpenVideo}\r\n              onHide={() => this.setState({ ModalOpenVideo: false })}\r\n              aria-labelledby=\"example-modal-sizes-title-sm\"\r\n              backdrop=\"static\"\r\n              keyboard={false}\r\n              centered\r\n            >\r\n              <Modal.Header closeButton>\r\n                <Modal.Title id=\"example-modal\" style={{ fontSize: '15px' }}>\r\n                {this.props.productList.DA_Title}\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n              <div className=\"request-sec\">\r\n               <div className=\"request-box\">\r\n                    <div className=\"body-part\">\r\n               \r\n                      <div className=\"form-box\" style={{display:this.state.videoRequest1stTab===true ?'block':'none'}}>    \r\n                          <p>{this.props.productList.DA_Description}</p>                        \r\n                         <div className=\"textLabel\">\r\n                           <label className=\"lab\">Duration:</label> <span>{this.props.productList.duration+ 'mins'}</span>\r\n                         </div>\r\n                         <div className=\"row\">\r\n                           <div className=\"col-md-6\">\r\n                             <label className=\"lab\">Date:</label>\r\n                             <DatePicker name=\"datepicker\" disabledDate={this.disabledDate} onChange={this.onChange} />\r\n                           </div>\r\n                           <div className=\"col-md-6\">\r\n                              <label className=\"lab\">Time Slot:</label>\r\n                              <select className=\"form-control\" name=\"slot_dropdown\" value={parseInt(this.state.slot_dropdown)} onChange={this.handleChange}>\r\n                              <option value={0}>Select Slot</option>\r\n                               {createDropdown}\r\n                              </select>\r\n                           </div>\r\n                         </div>\r\n                 \r\n                           <h4>Heads up</h4>                                \r\n                            <p>Give {this.props.productList.JM_Name} a short intro note about the session </p>\r\n                            <textarea className=\"form-control area\" name=\"video_instruction\" \r\n                              value={this.state.video_instruction} onChange={this.handleChange} \r\n                              placeholder=\"I'd like to speak about…\"/>                          \r\n                            \r\n                             <input type=\"text\" placeholder=\"Enter Name\" name=\"video_name\" value={this.state.video_name} className=\"form-control\" onChange={this.handleChange} />\r\n                             <input type=\"email\" placeholder=\"Email Address\" name=\"video_email\" value={this.state.video_email} className=\"form-control\" onChange={this.handleChange} />\r\n                             <input type=\"number\" placeholder=\"Enter Phone\" name=\"video_phone\" value={this.state.video_phone} className=\"form-control\" onChange={this.handleChange} />\r\n                              \r\n                              <button class=\"btun\" onClick={this.btn_video_next}> Next </button>                                                        \r\n                              <span id=\"msg_video\" style={{color:'red'}}></span>\r\n                          <br/>\r\n                      </div>\r\n                      {                   \r\n                        this.state.videoRequest===true?\r\n                           <div className=\"form-box\">     \r\n                                <p>{this.props.productList.DA_Description}</p>                        \r\n                                <div className=\"textLabel\">\r\n                                  <label className=\"lab\">Duration:</label> <span>{this.props.productList.duration +\"mins\"}</span>\r\n                                </div>       \r\n                                  <Grow in={this.state.videoRequest} >\r\n                                      <div id=\"Checkout_videoSession\">                                      \r\n                                          <Checkout_videoSession ref=\"checkout\" BM_Type={'B'}  DA_INR_Doller={ this.props.productList.DA_INR_Doller} DA_Price={this.props.productList.DA_Price} \r\n                                          name={this.state.video_name} email={this.state.video_email} DA_ID={this.props.productList.DA_ID}  \r\n                                          phone={this.state.video_phone} state={this.state} \r\n                                          userDetails={this.props.userDetails[0]}   \r\n                                          session_date={this.state.dateString}\r\n                                          session_timeing={this.state.session_timeing}                                     \r\n                                          JM_ID={this.props.userDetails[0].JM_ID} ES_ID={this.state.ES_ID}/>\r\n\r\n                                            <button className=\"back-btn\" onClick={this.btn_video_prev}><KeyboardBackspaceIcon style={{fontSize:'30px'}} /></button> \r\n                                            <span id=\"msg_video_pay\" style={{color:'red'}}></span>\r\n                                     \r\n                                      </div>\r\n                                    \r\n                                  </Grow>\r\n                              \r\n                            </div>\r\n                            :\r\n                            null\r\n                          }\r\n\r\n                    </div>\r\n                       \r\n                  </div>\r\n              </div>\r\n\r\n\r\n              </Modal.Body>\r\n              <Modal.Footer>               \r\n                \r\n              \r\n              </Modal.Footer>\r\n            </Modal>\r\n\r\n    \r\n           </>             \r\n                       \r\n                 \r\n          \r\n        );\r\n    }\r\n}\r\n\r\nBuyContestGiveAways.propTypes = {\r\n\r\n};\r\n\r\nexport default BuyContestGiveAways;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\profile\\Profile_Gift.js",["2791","2792","2793","2794","2795","2796","2797","2798","2799","2800","2801","2802","2803","2804","2805","2806","2807","2808","2809","2810","2811","2812","2813","2814","2815","2816","2817","2818","2819","2820","2821","2822","2823","2824","2825","2826","2827","2828","2829"],"import React, { Component } from 'react'\r\nimport {Link,Route,BrowserRouter as Router,Switch} from 'react-router-dom'\r\nimport {Nav,Navbar,Button} from 'react-bootstrap';\r\nimport JoinModal from '../JoinModal';\r\nimport SignInModal from '../SignInModal';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport ChatOutlinedIcon from '@material-ui/icons/ChatOutlined';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport ReactPlayer from 'react-player'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport {\r\n    faYoutube,\r\n    faFacebook,\r\n    faTwitter,\r\n    faInstagram\r\n  } from \"@fortawesome/free-brands-svg-icons\";\r\nimport Buy from '../premium/Buy';\r\nimport SendGift from '../premium/SendGift';\r\nimport ContactUs from '../pages/ContactUs';\r\nimport Tipping from '../premium/Tipping';\r\nimport SendSupport from '../premium/SendSupport';\r\nimport {Helmet} from 'react-helmet';\r\nimport API from '../services/API'\r\nclass Profile_Gift extends Component {\r\n    constructor(props) {\r\n      super(props)\r\n  \r\n      this.state = {\r\n         data:{\"name\":\"sam\"},\r\n         logo:\"Logo.png\",\r\n         bgColor:'#333',\r\n         bgImage:\"url('../images/profile_back_4.jpg')\"\r\n\r\n      }\r\n//      console.log(this.props.state.userDetails)\r\n    }\r\n    openSupportModal=(e)=>{\r\n      this.setState({\r\n        showSupport:true\r\n      })\r\n    }\r\n    closeSupportModal=(e)=>{\r\n      this.setState({\r\n        showSupport:false,\r\n        DonarName:'',\r\n        DonarMsg:'',\r\n        DonarAmt:0\r\n      })\r\n    }\r\n\r\n    doClick = (type, id) => e => {\r\n      //console.log(type + id)\r\n      var JSONdata = {\r\n        Stat_Type: type,\r\n        Stat_ID: id,\r\n        JM_ID: this.state.userDetails[0].JM_ID\r\n  \r\n      };\r\n      const API_url = this.state.base_url + \"admin/updateClick\";\r\n      fetch(API_url,\r\n        {\r\n          method: 'post',\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(JSONdata)\r\n        })\r\n        .then((response) => response.json())\r\n        .then(data => {\r\n          //console.log(data);\r\n        });\r\n    }\r\n  render() {\r\n\r\n    let imagePath=\"\";\r\n    let base_url=this.state.base_url;\r\n    let linkPath=\"\";\r\n    let JM_User_Profile_Url_plus_JM_ID =\"\";\r\n    let JM_Name,JM_Email,JM_Description='';\r\n    let JM_User_Profile_Url=\"\";\r\n    let  JM_Social_Widget_Position=\"\",JM_Verified=0;\r\n    let JM_Gift_Title='',JM_Gift_Active=0,JM_Payout_Details=0;\r\n    if(this.props.state.userDetails !=null && this.props.state.userDetails.length > 0)\r\n    {\r\n      let len=this.props.state.userDetails.length;\r\n      for(var i=0;i < len ;i++)\r\n      {\r\n        \r\n        imagePath=process.env.REACT_APP_UPLOAD_URL+this.props.state.userDetails[i].JM_Profile_Pic;\r\n        linkPath=process.env.REACT_APP_UPLOAD_URL+\"Profile/\"+this.props.state.userDetails[i].JM_User_Profile_Url+\"_\"+this.props.state.userDetails[i].JM_ID+\"/\";\r\n        JM_User_Profile_Url_plus_JM_ID = this.props.state.userDetails[i].JM_User_Profile_Url+\"_\"+this.props.state.userDetails[i].JM_ID;\r\n        JM_User_Profile_Url=this.props.state.userDetails[i].JM_User_Profile_Url;\r\n        JM_Name=this.props.state.userDetails[i].JM_Name;\r\n        JM_Email=this.props.state.userDetails[i].JM_Email;\r\n        JM_Description=this.props.state.userDetails[i].JM_Description;\r\n        JM_Social_Widget_Position=this.props.state.userDetails[i].JM_Social_Widget_Position;\r\n        JM_Verified=this.props.state.userDetails[i].JM_Verified;\r\n        JM_Gift_Title=this.props.state.userDetails[i].JM_Gift_Title;\r\n        JM_Gift_Active=parseInt(this.props.state.userDetails[i].JM_Gift_Active);\r\n          JM_Payout_Details=parseInt(this.props.state.userDetails[i].JM_Payout_Details);\r\n        break;\r\n      }\r\n    }\r\n    var bgImage=\"\",bgImageVideo=\"\",fontColor=\"\",back_color=\"\";\r\n    var font_family=\"\",cssClass=\"\",highlightColor=\"\",item_color=\"\",  item_style=\"\",TM_Bio_Color='',TM_Name_Color='',TM_Footer_Color='';\r\n    var item_border_color='';\r\n    \r\n    var TM_Thumbnail_Icon_Color='',TM_SocialWidget_Icon_Color='';\r\n    if(this.props.state.themeMasterUser !=null && this.props.state.themeMasterUser.length > 0)\r\n    {\r\n      let len=this.props.state.themeMasterUser.length;\r\n      for(var j=0;j < len ;j++)\r\n      {\r\n        bgImage = this.props.state.themeMasterUser[j].TM_Back_Image==='' ? '': 'url(' + process.env.REACT_APP_UPLOAD_URL + this.props.state.themeMasterUser[j].TM_Back_Image + ')';\r\n        bgImageVideo = process.env.REACT_APP_UPLOAD_URL + this.props.state.themeMasterUser[j].TM_Back_Image;\r\n        fontColor=this.props.state.themeMasterUser[j].TM_Font_Color;\r\n        back_color= this.props.state.themeMasterUser[j].TM_Back_Color;\r\n        font_family =this.props.state.themeMasterUser[j].TM_Font;\r\n        highlightColor =this.props.state.themeMasterUser[j].TM_Highlight_Color;\r\n        cssClass=this.props.state.themeMasterUser[j].TM_Class_Name+\" \"+font_family;\r\n        item_color= this.props.state.themeMasterUser[j].TM_Item_Color;\r\n        item_style=this.props.state.themeMasterUser[j].TM_Item_Style;\r\n         TM_Name_Color=this.props.state.themeMasterUser[j].TM_Name_Color;\r\n         TM_Bio_Color=this.props.state.themeMasterUser[j].TM_Bio_Color;\r\n         TM_Footer_Color=this.props.state.themeMasterUser[j].TM_Footer_Color;\r\n         item_border_color=this.props.state.themeMasterUser[j].TM_Border_Color;\r\n         TM_SocialWidget_Icon_Color=this.props.state.themeMasterUser[j].TM_SocialWidget_Icon_Color;\r\n         TM_Thumbnail_Icon_Color=this.props.state.themeMasterUser[j].TM_Thumbnail_Icon_Color;\r\n        break;\r\n      }\r\n    }\r\n\r\n   // TM_Footer_Color='white';\r\n   var h=window.screen.height;\r\n   var w=window.screen.width;\r\n   if(w <= 480) \r\n   {\r\n     TM_Footer_Color='white'\r\n   }\r\n   else\r\n   {\r\n     TM_Footer_Color=''\r\n   }\r\n\r\n    let isMobileView='';\r\n    if(w >= 480) //web\r\n    {\r\n    \r\n      isMobileView='';\r\n    }\r\n    else // mobile\r\n    {      \r\n      if(back_color!=='')\r\n      {\r\n         isMobileView='';        \r\n     }\r\n     else\r\n     {\r\n       if(bgImageVideo.includes('theme/profile_back_'))\r\n           isMobileView='last-footer';//last-footer\r\n       else\r\n       {\r\n         isMobileView='';        \r\n       }\r\n     }\r\n   \r\n    }\r\n\r\n    const mystyle = {\r\n      color: fontColor,     \r\n     // fontFamily: font_family,  \r\n      backgroundColor:item_color  \r\n    };\r\n    const nameStyle = {\r\n      color: TM_Name_Color,     \r\n     // fontFamily: font_family\r\n     \r\n    };\r\n    const mystyleSocialWidget = {\r\n      color: TM_SocialWidget_Icon_Color, \r\n    };\r\n    const mystyleGift = {\r\n      color: fontColor,     \r\n    };\r\n      const mystyleForHightight = {\r\n      color: fontColor,       \r\n      backgroundColor:item_color,\r\n    };\r\n\r\n    let SocialWidget;\r\n    \r\n    if(this.props.state.socialWidget !=null && this.props.state.socialWidget.length > 0)\r\n    {\r\n        SocialWidget=this.props.state.socialWidget.map((link,i) =>{\r\n            return (\r\n                       link.SWM_Active === 1 &&  link.SWM_Url!=='' &&  link.SWM_Style_Type==='W'?   \r\n                      <li >\r\n                        {\r\n                           \r\n                           link.SWM_Title==='Email' ?\r\n                           <a href={\"mailto:\"+ link.SWM_Url} target=\"_blank\" style={mystyleSocialWidget}>\r\n                                <FontAwesomeIcon icon={API.SocialIcons(link.SWM_Icon)} \r\n                                onClick={this.props.doClick('S', link.SWM_ID)}/>\r\n                                \r\n                           </a>\r\n                           :\r\n                           link.SWM_Url.startsWith(\"http://\") || link.SWM_Url.startsWith(\"https://\") ?\r\n                           <a href={link.SWM_Url} data-id={link.SWM_ID} target=\"_blank\" style={mystyleSocialWidget}>\r\n                              {\r\n                                 link.SWM_Icon==='faHandPaper'?\r\n                                 <FontAwesomeIcon icon={API.SocialIcons(link.SWM_Icon)} className=\"rotateCls\"\r\n                                 onClick={this.props.doClick('S', link.SWM_ID)}/>\r\n                                 :\r\n                                 <FontAwesomeIcon icon={API.SocialIcons(link.SWM_Icon)} \r\n                                 onClick={this.props.doClick('S', link.SWM_ID)}/>\r\n \r\n                              } \r\n                           </a>   \r\n                           :\r\n                             <a href={`https://${link.SWM_Url}`} data-id={link.SWM_ID} target=\"_blank\" style={mystyleSocialWidget}>\r\n                             {/* <img src={process.env.REACT_APP_UPLOAD_URL + link.SWM_Icon}  /> */}\r\n                               {\r\n                                 link.SWM_Icon==='faHandPaper'?\r\n                                 <FontAwesomeIcon icon={API.SocialIcons(link.SWM_Icon)} className=\"rotateCls\" \r\n                                 onClick={this.props.doClick('S', link.SWM_ID)}/>\r\n                                 :\r\n                                 <FontAwesomeIcon icon={API.SocialIcons(link.SWM_Icon)} onClick={this.props.doClick('S', link.SWM_ID)} />\r\n                               } \r\n                            </a>  \r\n                        }                  \r\n                      </li> \r\n                      :\r\n                      null\r\n                   ) \r\n          })\r\n      }\r\n      let gifts;\r\n      gifts=this.props.state.gifts.map((link,i) =>{\r\n          return (          \r\n          JM_Gift_Active===1 && JM_Payout_Details===1?\r\n            <div className=\"col-md-4\" style={{marginTop:'5px'}}>\r\n              <div className={\"gift \" + font_family}>\r\n         \r\n                 <img src={process.env.REACT_APP_UPLOAD_URL+link.DA_Collection} />                     \r\n                 <p style={mystyleGift}>{link.DA_Title}</p>\r\n                 {\r\n                   link.DA_DA_ID===999 ?\r\n                  // <button className=\"buy\" mystyleForHightight={mystyleForHightight} onClick={this.openSupportModal} >Go</button>\r\n                   <SendSupport className={\"buy \"+ font_family} JM_Name={JM_Name} productList={this.props.state.gifts[i]} mystyleForHightight={mystyleForHightight} src={process.env.REACT_APP_UPLOAD_URL+link.DA_Collection} userDetails={this.props.state.userDetails}/>\r\n                   :\r\n                   <SendGift className={\"buy \"+ font_family} JM_Name={JM_Name} productList={this.props.state.gifts[i]} mystyleForHightight={mystyleForHightight} src={process.env.REACT_APP_UPLOAD_URL+link.DA_Collection} userDetails={this.props.state.userDetails}/>\r\n                 }\r\n               \r\n                                     \r\n              </div>\r\n          </div>\r\n          :\r\n          null\r\n          )\r\n      })\r\n    \r\n\r\n      document\r\n      .getElementsByTagName('meta')\r\n      .namedItem('description')\r\n      .setAttribute('content',\"Everything about \"+JM_Name+\"  in one place. Follow and Connect!\")\r\n\r\n      document\r\n      .getElementById('og-title')     \r\n      .setAttribute('content',JM_Name+\" - Gifts | Expy\")\r\n\r\n      document\r\n      .getElementsByTagName('meta')\r\n      .namedItem('image')\r\n      .setAttribute('content',imagePath)\r\n    return (\r\n      <>\r\n        <Helmet>\r\n        <title>{ `${ JM_Name }- Gifts | Expy` }</title>\r\n           \r\n        </Helmet>\r\n          <div className=\"contact-us-modal\">\r\n              <div className=\"backbtn\">\r\n                <i className=\"fa fa-back\" aria-hidden=\"true\"></i>\r\n                <a href={process.env.REACT_APP_API_URL+JM_User_Profile_Url} style={{color:'#fff'}}><ArrowBackIcon/>Back To Profile</a>\r\n            </div>\r\n          </div>\r\n        <div className=\"per-prop\" style={{background:bgImage ==='' ? back_color : bgImage}}>\r\n         \r\n           {\r\n              bgImageVideo.endsWith('.mp4') ||  bgImageVideo.endsWith('.mov') ? \r\n              <div className=\"back-vodeo\">\r\n                  {/* <video src={bgImageVideo} autoPlay loop muted playsinline/> */}\r\n                  <video preload=\"true\" playsinline=\"true\" autoplay=\"autoplay\" loop muted>\r\n                      <source src={bgImageVideo} type=\"video/mp4\" />\r\n                  </video>\r\n              </div>\r\n              :\r\n              null\r\n            }\r\n          <div className={cssClass}>  \r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                  <div className=\"per-prop-body\">\r\n                    {/* <div className=\"overlay\"  style={mystyle}>\r\n                    </div> */}\r\n                    <div className=\"dtail-part\">\r\n                      <div className=\"prop-pic\">\r\n                        <img src={imagePath} />\r\n                      </div>\r\n                      <div className=\"name\" >\r\n                         \r\n                              <h3 className={font_family} style={nameStyle}>{JM_Name}\r\n                               {\r\n                                                JM_Verified===1 ?\r\n                                                <span className=\"verify-tick\"><img  src=\"/images/verifyIcon.png\"/></span>\r\n                                                :\r\n                                                null\r\n                                }\r\n                              </h3> \r\n                              <p className={font_family} style={nameStyle}>{JM_Description}</p>\r\n                          </div>\r\n                           <div className=\"per-prop-footer\">\r\n                            <ul className=\"Social-links\">\r\n                                { JM_Social_Widget_Position==='top' ? SocialWidget : null}\r\n                            </ul>\r\n                          </div>\r\n                      <div className=\"gift-part\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-md-12\">\r\n                            <div className=\"gift-text\">\r\n                              <p>Support your favorite Creator by sending a digital gift and include a message for them to read!</p>\r\n                            </div>\r\n                          </div>\r\n                          {gifts}\r\n                        </div>\r\n                      </div>\r\n\r\n                              {/* support me */}\r\n               <Modal\r\n                show={this.state.showSupport}\r\n                onHide={this.closeSupportModal}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                centered\r\n                className={font_family}         \r\n              >\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>\r\n                    <p className=\"addnew-title\">Send tips to @{JM_User_Profile_Url}</p>\r\n                  </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n          \r\n                  <div className=\"addnew-box\">\r\n                   <label>How much do you want to send?</label>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter Tip Amount\"\r\n                      name=\"DonarAmt\"  value={this.state.DonarAmt} \r\n                      onKeyPress={(event) => {\r\n                        if (!/[0-9]/.test(event.key)) {\r\n                          event.preventDefault();\r\n                        }\r\n                      }}\r\n                      onChange={this.onChangeHandle}/>\r\n\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter Your Name (optional)\"\r\n                      name=\"DonarName\" value={this.state.DonarName} onChange={this.onChangeHandle}/>\r\n\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Tip Messsage (optional)\"\r\n                      name=\"DonarMsg\" value={this.state.DonarMsg} onChange={this.onChangeHandle} />\r\n\r\n\r\n                      <div className=\"btun-box\">\r\n                      {\r\n                        this.state.DonarAmt > 0 ?\r\n                          <Tipping ref=\"checkout\" BM_Type={'D'}  DA_INR_Doller={'INR'} DA_Price={this.state.DonarAmt} \r\n                            DonarName={this.state.DonarName} JM_Name={JM_User_Profile_Url} message={this.state.DonarMsg} DA_ID={0}  state={this.state} userDetails={this.state.userDetails[0]}/>\r\n                        :\r\n                        null\r\n                      }\r\n                          \r\n                        <button className=\"btun\" onClick={this.closeSupportModal}>Cancel</button>\r\n                        </div>\r\n                        <p style={{color:this.state.errColor}}>{this.state.errMsg}</p>\r\n\r\n                    </div>   \r\n        \r\n                </Modal.Body>\r\n\r\n              </Modal>\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"per-prop-footer\">\r\n                     <ul className=\"Social-links\">\r\n                         { JM_Social_Widget_Position==='bottom' ? SocialWidget : null}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div className={\"row \" + isMobileView} style={{padding:'10px 0'}}>          \r\n                <div className=\"col-md-4 col-4 offset-md-2\">\r\n                  <div className=\"page-footer-logo\">                   \r\n                    <a href=\"/\"> <img src={process.env.REACT_APP_API_URL+\"adm/uploads/footer_logo.png\"} /></a>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-8 col-md-4\">\r\n                     <ul className=\"page-footer-link \" style={nameStyle} >\r\n                      <li><a href=\"/\" className={font_family } style={nameStyle}  >Explore</a></li> |&nbsp; \r\n                      <li><a href=\"/join\" className={font_family} style={nameStyle}>Create Page</a></li>\r\n                    </ul>\r\n                \r\n                </div>\r\n              </div>  \r\n            </div>\r\n          </div>\r\n        </div> \r\n      \r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default  Profile_Gift","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\ContestGiveAway.js",["2830","2831","2832","2833","2834"],"import React, { Component } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Popover from 'react-bootstrap/Popover'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport PersonalVideoIcon from '@material-ui/icons/PersonalVideo';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport EmojiEventsIcon from '@material-ui/icons/EmojiEvents';\r\n\r\nimport API  from '../services/API';\r\nclass ContestGiveAway extends Component \r\n{\r\n        fileObj = [];\r\n        fileArray = [];\r\n        albumArray=[];\r\n        Files = [];\r\n        constructor(props) {\r\n            super(props)\r\n            this.myRef = React.createRef();\r\n            this.state = {\r\n              base_url: process.env.REACT_APP_API_URL,\r\n              root_url: process.env.REACT_APP_ROOT_URL,\r\n            openModel:false,\r\n            show:false,\r\n            open:false,\r\n            directAccess:this.props.data,\r\n            userDetails:this.props.userDetails,\r\n            confirm:false,\r\n            videoFile:null,\r\n            imageFile:null,\r\n            selectedFile:null,\r\n            coverImageorVideo:null,\r\n            title:'',\r\n            description:'',\r\n            price:0,\r\n            handleDisabled:true,\r\n            toolTip:false,\r\n            chargesInfo:'',\r\n            showIconCharges:'none',\r\n            videoData:'NA',\r\n            audioData:'',\r\n            album:[null],\r\n            cover_Image_video:'',\r\n            audioFile:null,\r\n            showAlert:true,\r\n            title:'',\r\n            msg:'',\r\n            logo:'',\r\n            BtnName:'Save',\r\n            disabledBtn:false,\r\n            Overlayshow:false,\r\n            overlayTarget:null,\r\n            name_checked:true,\r\n            email_checked:true,     \r\n            dob_checked:false, \r\n            first_name_checked:false,\r\n            last_name_checked:false,\r\n            phone_checked:false,\r\n\r\n            question_1:'',\r\n            question_2:'',\r\n            question_3:'',\r\n            question_4:'',\r\n            File_upload_text:'',\r\n            allowCustomertoPay: 0,\r\n            min_amt: '',\r\n            suggested_amt: '',\r\n            showDiv: false,\r\n\r\n\r\n            }\r\n            //console.log(this.state.userDetails)\r\n            this.imageonMultiChange = this.imageonMultiChange.bind(this)\r\n            \r\n        }\r\n        ModalClose=()=>\r\n        {    \r\n            this.setState({openModel:false,show:false});\r\n        }\r\n        ModalOpen=()=>\r\n        {\r\n                this.setState({openModel:true,show:true,chargesInfo:'',showIconCharges:'none',\r\n                videoData:'',\r\n                videoFile:null,\r\n                coverImageorVideo:null,\r\n                cover_Image_video:'',\r\n                BtnName:'Save',\r\n                disabledBtn:false,\r\n                showDiv:false,price:0,                    \r\n                question_1:'',\r\n                question_2:'',\r\n                question_3:'',\r\n                question_4:'',\r\n                File_upload_text:'',\r\n                allowCustomertoPay: 0,\r\n                min_amt: '',\r\n                suggested_amt: '',\r\n                title:'',\r\n                description:'',\r\n              });\r\n          \r\n             \r\n        }\r\n        openCollapse = () => {\r\n            !this.state.open ?\r\n            this.setState({ open: true })\r\n            :\r\n            this.setState({ open: false })\r\n            \r\n        }\r\n        isConfirm = () => {\r\n            confirmAlert({\r\n            title: 'Confirm !!!',\r\n            message: 'Are you sure to Exit',\r\n            buttons: [\r\n                {\r\n                label: 'Yes',\r\n                onClick: () => this.setState({confirm:true})\r\n                },\r\n                {\r\n                label: 'No',\r\n                onClick: () => this.setState({confirm:false})\r\n                }\r\n            ]\r\n            });\r\n        };\r\n        popOver=(data)=>{\r\n\r\n        }\r\n        videoonChange=(e)=>{\r\n           this.setState({ audioData: '' }); \r\n            const file = e.target.files[0];\r\n            if(typeof file!=='undefined')\r\n            {\r\n              var fileUrl = window.URL.createObjectURL(file);\r\n              this.setState({ imageFile: e.target.files[0] }); \r\n              this.setState({\r\n              videoFile: file,\r\n              videoData:fileUrl,\r\n              coverImageorVideo:null,\r\n              cover_Image_video:''\r\n              });\r\n              \r\n              this.hidePopover();\r\n            }\r\n        }\r\n        audioChange=(e)=>\r\n        {\r\n\r\n          this.setState({\r\n            videoFile: null,\r\n            videoData:'NA'\r\n            });\r\n            const file = e.target.files[0];\r\n            if(typeof file!=='undefined')\r\n            {\r\n              this.setState({ audioFile: e.target.files[0] }); \r\n              this.getBase64(file).then(\r\n                data =>{\r\n                  //console.log(data);\r\n                  this.setState({ audioData: data }); \r\n                } \r\n              );\r\n            }\r\n            \r\n        }\r\n        onClickResetAudioFile (e) {\r\n            this.setState({audioData:''}); // celears state            \r\n           }\r\n\r\n           //12-mar-2021\r\n           getBase64=(file)=> {\r\n            return new Promise((resolve, reject) => {\r\n              const reader = new FileReader();\r\n              reader.readAsDataURL(file);\r\n              reader.onload = () => resolve(reader.result);\r\n              reader.onerror = error => reject(error);\r\n            });\r\n          }\r\n\r\n        imageonChange=(e)=>{\r\n            const file = e.target.files[0];\r\n            this.setState({ coverImageorVideo: e.target.files[0] }); \r\n            this.setState({\r\n            cover_Image_video: URL.createObjectURL(file),\r\n            videoFile: null,\r\n            videoData: ''\r\n            });\r\n            this.hidePopover();\r\n        }\r\n        nextClick=(event)=>{\r\n            event.preventDefault();\r\n            let isValid=this.validation();\r\n            if(isValid)\r\n            {\r\n                //alert(\"ok\");\r\n            \r\n                const upload=document.getElementById('upload_file').checked;\r\n                if(upload===true && this.state.File_upload_text.length ===0)\r\n                {\r\n                  document.getElementById('msg_contest').innerHTML='* Enter text for file upload'\r\n                    return false;\r\n                }\r\n                let chk_file=0;\r\n                if(upload===true)\r\n                  chk_file=1\r\n\r\n                              \r\n                  //27-aug-2021 dynamic pricing\r\n                  if(this.state.allowCustomertoPay===1)\r\n                  {\r\n                      if( isNaN(parseInt(this.state.min_amt)) || parseInt(this.state.min_amt) < 0 )\r\n                      {\r\n                          document.getElementById('msg_contest').style.color='red';\r\n                          document.getElementById('msg_contest').innerHTML='* Enter minimum amount';\r\n                          return false;\r\n                      }\r\n                  }\r\n\r\n\r\n\r\n                const formData = new FormData(); \r\n                let Api_url=\"\";             \r\n                if(this.state.videoFile !==null && this.state.videoData!=='NA' && this.state.videoData!=='')\r\n                  {  \r\n                      formData.append('sampleFile', this.state.videoFile);\r\n                      formData.append('DA_Type', 'video');   \r\n                      Api_url=this.state.base_url+'admin/addContest';\r\n                      formData.append('DA_DA_ID', 6) // for premium featured id\r\n                      formData.append('JM_ID', this.props.JM_ID)         \r\n                      formData.append('DA_Title', this.state.title)  \r\n                      formData.append('DA_Description', this.state.description)  \r\n                      formData.append('DA_Cover', \"\") \r\n                      formData.append('DA_Price', this.state.price)      \r\n                      formData.append('JM_User_Profile_Url_plus_JM_ID',this.props.JM_User_Profile_Url + \"_\" + this.props.JM_ID)\r\n                      \r\n                      formData.append('Q1', this.state.question_1)    \r\n                      formData.append('Q2', this.state.question_2)    \r\n                      formData.append('Q3', this.state.question_3) \r\n                      formData.append('Q4', this.state.question_4)\r\n\r\n                      formData.append('File_upload_text', this.state.File_upload_text)\r\n                      formData.append('DA_Allow_Cust_Pay', this.state.allowCustomertoPay)\r\n\r\n                      formData.append('File_Upload', chk_file)\r\n\r\n                      formData.append('DA_Allow_Cust_Pay', this.state.allowCustomertoPay)\r\n                      formData.append('DA_Min_Amount', parseInt(this.state.min_amt))\r\n                  \r\n\r\n\r\n                      this.setState({BtnName:'Uploading..',disabledBtn:true});\r\n\r\n                      try{\r\n\r\n\r\n                            fetch(Api_url, {\r\n                              method: 'POST',\r\n                              headers: { \"authorization\": API.getAuth(),\"id\":API.getId()},\r\n                              body: formData\r\n                            })\r\n                              .then(response => response.json())\r\n                              .then(data => {\r\n                                //console.log(data);\r\n                                if (data.status > 0) {\r\n                                  this.setState({ videoFile: null, videoData: 'NA', audioFile: null, audioData: '', coverImageorVideo: null, cover_Image_video: '' });\r\n                                  this.fileArray = [];\r\n                                  this.ModalClose();\r\n                                  this.props.showToast('success', 'Contest feature is added to profile');\r\n\r\n                                }\r\n                                else \r\n                                {\r\n\r\n                                  API.minusResponse(data);\r\n                                  this.setState({BtnName:'Save',disabledBtn:false});\r\n                                  this.props.showToast('Failed', 'Server Error');\r\n                                }\r\n\r\n                              })\r\n                              .catch(error => \r\n                              { \r\n                                this.setState({BtnName:'Save',disabledBtn:false});\r\n                                this.props.showToast('Failed', 'Network Error');\r\n                                console.error(error)\r\n                              })\r\n                      }\r\n                      catch(e)\r\n                      {\r\n                        this.setState({BtnName:'Save',disabledBtn:false});\r\n                        this.props.showToast('Failed', 'Server Error');\r\n                      }\r\n                 \r\n                  }           \r\n                else  if(this.state.coverImageorVideo !==null && this.state.cover_Image_video!=='')\r\n                 {   \r\n                    formData.append('sampleFile', this.state.coverImageorVideo)\r\n                    formData.append('DA_Type', 'image'); \r\n                    Api_url=this.state.base_url+'admin/addContest';\r\n                                  \r\n                      formData.append('DA_DA_ID', 6) // for premium featured id\r\n                      formData.append('JM_ID', this.props.JM_ID)         \r\n                      formData.append('DA_Title', this.state.title)  \r\n                      formData.append('DA_Description', this.state.description)  \r\n                      formData.append('DA_Cover', \"\") \r\n                      formData.append('DA_Price', this.state.price)      \r\n                      formData.append('JM_User_Profile_Url_plus_JM_ID',this.props.JM_User_Profile_Url + \"_\" + this.props.JM_ID)\r\n                      formData.append('Q1', this.state.question_1)    \r\n                      formData.append('Q2', this.state.question_2)    \r\n                      formData.append('Q3', this.state.question_3) \r\n                      formData.append('Q4', this.state.question_4) \r\n                      formData.append('File_Upload', chk_file)\r\n                      formData.append('File_upload_text', this.state.File_upload_text)\r\n                      formData.append('DA_Allow_Cust_Pay', this.state.allowCustomertoPay)  \r\n                      formData.append('DA_Min_Amount', parseInt(this.state.min_amt))   \r\n                      this.setState({BtnName:'Uploading..',disabledBtn:true});\r\n\r\n\r\n\r\n                        try{\r\n\r\n\r\n                              fetch(Api_url, {\r\n                                method: 'POST',\r\n                                headers: { \"authorization\": API.getAuth(),\"id\":API.getId()},\r\n                                body: formData\r\n                              })\r\n                                .then(response => response.json())\r\n                                .then(data => {\r\n                                  //console.log(data);\r\n                                  if (data.status > 0) \r\n                                  {\r\n                                    this.setState({ videoFile: null, videoData: 'NA', audioFile: null, audioData: '', coverImageorVideo: null, cover_Image_video: '' });\r\n                                    this.fileArray = [];\r\n                                    this.ModalClose();\r\n                                    this.props.showToast('success', 'Contest feature is added to profile');\r\n\r\n                                  }\r\n                                  else {\r\n                                    this.props.showToast('Failed', 'Server Error');\r\n                                  }\r\n\r\n                                })\r\n                                .catch(error => {\r\n                                  console.error(error)\r\n                                })\r\n                        }\r\n                        catch(e)\r\n                        {\r\n                          this.setState({BtnName:'Save',disabledBtn:false});\r\n                          this.props.showToast('Failed', 'Server Error');\r\n                        }\r\n                        \r\n\r\n                 }\r\n                 else\r\n                 {\r\n                               \r\n                      Api_url=this.state.base_url+'admin/addContestNoFile';\r\n                            var flagData={\r\n                              DA_DA_ID:6,\r\n                              JM_ID: this.props.JM_ID,\r\n                              DA_Title: this.state.title,\r\n                              DA_Description: this.state.description,\r\n                              DA_Price: this.state.price,\r\n                              Q1: this.state.question_1,\r\n                              Q2: this.state.question_2,\r\n                              Q3: this.state.question_3,\r\n                              Q4: this.state.question_4,\r\n                              File_Upload:chk_file,\r\n                              File_upload_text: this.state.File_upload_text,\r\n                              DA_Allow_Cust_Pay: this.state.allowCustomertoPay,\r\n                              DA_Min_Amount: parseInt(this.state.min_amt)                              \r\n                    \r\n                            }\r\n                       \r\n                            const flag=API.encryptData(flagData);\r\n                            let  JSONdata = {\r\n                                flag: flag\r\n                              };\r\n\r\n\r\n                        try{\r\n                          \r\n                          fetch(Api_url, {\r\n                            method: 'POST',\r\n                            headers: { \"Content-Type\": \"application/json\", \"authorization\": API.getAuth(),\"id\":API.getId()},\r\n                            body: JSON.stringify(JSONdata)\r\n                          })\r\n                            .then(response => response.json())\r\n                            .then(data => {\r\n                              //console.log(data);\r\n                              if (data.status > 0) {\r\n                                this.setState({ videoFile: null, videoData: 'NA', audioFile: null, audioData: '', coverImageorVideo: null, cover_Image_video: '' });\r\n                                this.fileArray = [];\r\n                                this.ModalClose();\r\n                                this.props.showToast('success', 'Contest feature is added to profile');\r\n\r\n                              }\r\n                              else {\r\n                                this.props.showToast('Failed', 'Server Error');\r\n                              }\r\n\r\n                            })\r\n                            .catch(error => {\r\n                              console.error(error)\r\n                            })\r\n                    }\r\n                    catch(e)\r\n                    {\r\n                      this.setState({BtnName:'Save',disabledBtn:false});\r\n                      this.props.showToast('Failed', 'Server Error');\r\n                    }\r\n             \r\n                 }\r\n           \r\n            }\r\n            else\r\n            {\r\n                document.getElementById('msg_contest').innerHTML=\"Empty title or description\";\r\n                //this.props.showToast('info', 'Empty title or description');\r\n            }\r\n        }\r\n        validation =()=>{\r\n             \r\n              \r\n                if(this.state.title.length > 0 && this.state.description.length > 0 \r\n                    && this.state.email_checked===true \r\n                    && this.state.name_checked===true)\r\n                    return true;\r\n                else\r\n                    return false;         \r\n               \r\n        }\r\n        handleChange=(e)=>{\r\n         \r\n           this.setState({[e.target.name]:e.target.value})   \r\n            \r\n        }\r\n        handlePrice=(e)=>{\r\n          let val=isNaN(parseFloat(e.target.value)) ? 0 : parseFloat(e.target.value);\r\n          this.setState({[e.target.name]:val}) \r\n          if(val > 0)\r\n          {\r\n            let fee=val * API.razorPayTax();\r\n            let gst=fee * API.razorPayGST();         \r\n            let razorPay=(fee+gst); // 1.65 + 0.297\r\n            let TenPer=(val - razorPay) * 10/100; // 10 if val is 100                  \r\n            let charges= val - razorPay - TenPer; // 100 - 1.65- 0.297                      \r\n            let chargesInfo=\"You'll receive INR \"+ charges.toFixed(2) + \" \";\r\n\r\n            let showIconCharges = 'block';\r\n            this.setState({ chargesInfo, showIconCharges });\r\n          }\r\n          else\r\n          {\r\n            let chargesInfo=\"\";\r\n            let showIconCharges = 'none';\r\n            this.setState({ chargesInfo, showIconCharges });\r\n          }\r\n        \r\n        }\r\n        hidePopover=()=>{\r\n            document.getElementById(\"popover-basic\").style.display='none';\r\n        }\r\n        handleClose=()=>{\r\n            this.setState({toolTip:true});\r\n        }\r\n        handleOpen=()=>{\r\n            this.setState({toolTip:false});\r\n        }\r\n        \r\n\r\n        imageonMultiChange(e) {\r\n            var numFiles = e.target.files.length; \r\n            for (var i = 0, numFiles = e.target.files.length; i < numFiles; i++) \r\n            { \r\n            var file = e.target.files[i];\r\n            this.albumArray.push(URL.createObjectURL(file));\r\n            //this.fileArray.push(URL.createObjectURL(this.fileObj[0][i]))\r\n            this.Files.push(file);\r\n            }\r\n\r\n            this.setState({ album: this.albumArray })\r\n\r\n        }\r\n\r\n        hideToast=()=>{\r\n          this.setState({showAlert:false})\r\n        }\r\n        showToast =() =>{\r\n          this.setState({showAlert:true})\r\n        }\r\n\r\n        overlayClick=(e)=>{\r\n          this.setState({\r\n            OverlayTrigger:e.target,\r\n            Overlayshow:true\r\n          })\r\n        }\r\n        onchangeCheck=(e)=>{\r\n\r\n          if(e.target.checked===true)\r\n          {\r\n            this.setState({\r\n              allowCustomertoPay:1,\r\n              showDiv:true,\r\n              price:0\r\n            })\r\n            \r\n            document.getElementById('enter_price').disabled=true;\r\n          }\r\n          else\r\n          {\r\n            this.setState({\r\n              allowCustomertoPay:0,\r\n              showDiv:false\r\n            })\r\n            document.getElementById('enter_price').disabled=false;\r\n          }\r\n        }\r\n      \r\n    render() {\r\n\r\n        const longText = `\r\n        Aliquam eget finibus ante, non facilisis lectus. Sed vitae dignissim est, vel aliquam tellus.\r\n        Praesent non nunc mollis, fermentum neque at, semper arcu.\r\n        Nullam eget est sed sem iaculis gravida eget vitae justo.\r\n        `;\r\n        \r\n        const useStyles = {\r\n          button: {\r\n            margin: '5px',\r\n          },\r\n          customWidth: {\r\n            maxWidth: 500,\r\n            fontSize:'25px',\r\n           \r\n          },\r\n          noMaxWidth: {\r\n            maxWidth: 'none',\r\n          },\r\n        };\r\n        //let chargesMessage=\"You receive 90% of the transaction value minus a 2% transaction fee that is collected by our payment provider.\";\r\n        let chargesMessage = API.chargesMessage();\r\n        \r\n        const HtmlTooltip = withStyles((theme) => ({\r\n          arrow: {\r\n            color: theme.palette.common.black,\r\n          },\r\n          tooltip: {\r\n            backgroundColor: '#212529',\r\n            color: 'white',\r\n            maxWidth: '50%',\r\n            fontSize: theme.typography.pxToRem(10),\r\n            // border: '1px solid #dadde9',\r\n          },\r\n        }))(Tooltip);\r\n        \r\n        const iconStyle={\r\n            display:this.state.showIconCharges,\r\n            fontSize: \"23px\",\r\n            color: \"gray\"\r\n        }\r\n        const chargesStyle={\r\n          fontFamily: \"consolas\",\r\n          fontSize: \"13px\",\r\n          textTransform: \"capitalize\",\r\n          marginTop: \"-6%\",\r\n          fontWeight: \"bold\",\r\n          color: \"gray\",\r\n        }\r\n        \r\n        let typeOfProduct;\r\n        \r\n          typeOfProduct= <> <div className=\"col-md-8\">\r\n                              <label for=\"upImage\" style={{    marginTop: \"10px\"}}>\r\n                              Upload intro photo/video (Optional)     \r\n                              </label>\r\n                          </div>  \r\n                          <div className=\"col-md-10 offset-md-1\">           \r\n                            {\r\n                               this.state.videoData!=='NA' && this.state.videoData!=='' ?              \r\n                                    <video className=\"img-thumbnail-custom\" width=\"100%\" controls src={this.state.videoData} type=\"video/mp4\" >                                   \r\n                                    </video>\r\n                                    : null\r\n                            }\r\n                            {\r\n                            this.state.audioData!=='' ?     \r\n                                <audio autoplay controls src={this.state.audioData}>\r\n                                  The “audio tag is not supported by your browser.\r\n                                </audio>\r\n                                : \r\n                                null\r\n                            }\r\n                            {\r\n                               this.state.cover_Image_video!=='NA' && this.state.cover_Image_video!=='' ?              \r\n                                    <img className=\"img-thumbnail-custom\" width=\"200px\"  src={this.state.cover_Image_video} type=\"image/*\" >                                   \r\n                                    </img>\r\n                                    : null\r\n                            }\r\n                           </div>  \r\n                          </>\r\n      \r\n\r\n    let type='video';\r\n    const popover = (\r\n      <Popover id=\"popover-basic\" style={{zIndex:'99999'}}>\r\n         <button type=\"button\" className=\"pop-close\"><span aria-hidden=\"true\" onClick={this.hidePopover}>×</span>\r\n          <span className=\"sr-only\">Close</span>\r\n        </button>\r\n        <Popover.Title as=\"h6\"><h6>Select  video or Photo</h6>\r\n       \r\n        </Popover.Title>\r\n        <Popover.Content>\r\n          {           \r\n            type==='video' ?   \r\n            <>         \r\n             <label htmlFor=\"video\" style={{cursor:'pointer'}}><h6>Video</h6></label> <PersonalVideoIcon/>  <br/>\r\n             {/* <label htmlFor=\"audio\" style={{cursor:'pointer'}}><h6>Audio</h6></label> <AudiotrackIcon/>   */}\r\n      \r\n             <label htmlFor=\"photo\" style={{cursor:'pointer'}}><h6>Photo</h6></label> <ImageIcon/>  \r\n             </>            \r\n            : null\r\n          \r\n          }\r\n          \r\n        </Popover.Content>    \r\n       \r\n      </Popover>\r\n    );\r\n\r\n    const popover2 = (\r\n      <Popover id=\"popover-basic\" style={{zIndex:'99999',background: 'black',color:'#fff'}}  >\r\n         <button type=\"button\" className=\"pop-close\"><span aria-hidden=\"true\" onClick={this.hidePopover}>×</span>\r\n          <span className=\"sr-only\">Close</span>\r\n        </button>       \r\n        <Popover.Content style={{background: 'black',color:'#fff'}}>\r\n        {chargesMessage}\r\n          \r\n        </Popover.Content>    \r\n       \r\n      </Popover>\r\n    );\r\n\r\n        return (\r\n            <>\r\n                   <div className=\"col-md-3\">\r\n                        <div className=\"item\">\r\n                          <div className=\"icon\">\r\n                            <EmojiEventsIcon style={{fontSize: '50px'}}/>\r\n                          </div>\r\n                          <div className=\"text\">\r\n                            <h4>Contests And Giveaways</h4>                           \r\n                            <button class=\"btun\"  onClick={this.ModalOpen}><AddCircleOutlineIcon/> Add This</button>\r\n                          \r\n                          </div>\r\n                        </div>\r\n                    </div>\r\n                 \r\n       <Modal\r\n        show={this.state.show}\r\n        onHide={this.ModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}         \r\n        size=\"lg\"\r\n        contentClassName=\"modal-radius\"\r\n        centered\r\n\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <p className=\"addnew-title\"> Contests and Giveaways</p>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"direct-access-pop\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-2 setCursor\">\r\n                    <center>\r\n                      <OverlayTrigger  trigger=\"click\" placement=\"bottom\" overlay={popover}>\r\n                        <div className=\"up-ico\" >\r\n                           <AddIcon style={{fontSize:'25px'}}/>\r\n                         </div>\r\n                      </OverlayTrigger >                       \r\n                    </center>     \r\n              </div>\r\n                   {/* <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popoverNew}>\r\n                    <Button variant=\"success\">Click me to see</Button>\r\n                  </OverlayTrigger> */}\r\n              {\r\n               typeOfProduct\r\n              }\r\n              <form>                          \r\n                <input type=\"file\" id=\"video\" accept=\".mp4\" style={{display:'none'}} onChange={this.videoonChange}/>      \r\n             </form>   \r\n             <form>                          \r\n                <input type=\"file\" id=\"audio\" accept=\"audio/*\" style={{display:'none'}} onChange={this.audioChange}/>      \r\n             </form>\r\n             <form>                          \r\n                <input type=\"file\" id=\"photo\" accept=\"image/*\" style={{display:'none'}} onChange={this.imageonChange}/>      \r\n             </form>\r\n              <div className=\"col-md-12\">\r\n                <input type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleChange} className=\"form-control\" placeholder=\"Enter Title\" />       \r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <textarea className=\"form-control area\" name=\"description\" onChange={this.handleChange} \r\n                placeholder=\"Enter description\"/>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-12 concert-box\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                  <label>Participation Form</label>\r\n                </div>\r\n              </div>\r\n              <div className=\"row concert-row\">\r\n                <div className=\"col-md-10 col-8\">\r\n                  <label>Name</label>\r\n                </div>\r\n                <div className=\"col-md-2 col-4 concert\">                 \r\n                  <label class=\"switch\" for=\"name\">\r\n                  <input type=\"checkbox\" id=\"name\" checked disabled/>\r\n                  <div class=\"slider round\"></div>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              <div className=\"row concert-row\">\r\n                <div className=\"col-md-10 col-8\">\r\n                  <label>Email</label>\r\n                </div>\r\n                <div className=\"col-md-2 col-4 concert\">\r\n                  \r\n                  <label for=\"email\" class=\"switch\">\r\n                  <input type=\"checkbox\" id=\"email\" checked disabled/>\r\n                      <div class=\"slider round\"></div>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              <div className=\"row concert-row\">\r\n                <div className=\"col-md-10 col-8\">\r\n                  <label>File upload</label>\r\n                </div>\r\n                <div className=\"col-md-2 col-4 concert\"> \r\n                  <label class=\"switch\" for=\"upload_file\">\r\n                    <input type=\"checkbox\" id=\"upload_file\" />\r\n                      <div class=\"slider round\"></div>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              <div className=\"row concert-row\">\r\n                <div className=\"col-md-4 col-8\">\r\n                  <label>Write the Text for file upload</label>\r\n                </div>\r\n                <div className=\"col-md-8 col-4 concert\">  \r\n                    <input type=\"text\" className=\"form-control\" name=\"File_upload_text\" id=\"text_for_file_upload\" placeholder=\"Enter the Text for file upload\" onChange={this.handleChange}/>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row concert-row\">\r\n                <div className=\"col-md-4 col-12\">\r\n                  <label>Question no 1.</label>\r\n                </div>\r\n                <div className=\"col-md-8 col-12\">\r\n                  <textarea className=\"form-control area\" row=\"3\" placeholder=\"Enter 1st Question (optional)\" name=\"question_1\" value={this.state.question_1} onChange={this.handleChange}></textarea>\r\n                {/* <input type=\"text\" className=\"form-control\" placeholder=\"Enter 1st Question\" name=\"question_1\" value={this.state.question_1} onChange={this.handleChange}/> */}\r\n                </div>\r\n                {/* <div className=\"col-md-2 col-4 concert\">\r\n                  <input type=\"checkbox\" id=\"q1\"/>\r\n                  <label for=\"q1\"></label>\r\n                </div> */}\r\n              </div>\r\n              <div className=\"row concert-row\">\r\n                    <div className=\"col-md-4 col-12\">\r\n                    <label>Question no 2.</label>\r\n                    </div>\r\n                    <div className=\"col-md-8 col-12\">\r\n                    {/* <input type=\"text\" className=\"form-control\"  placeholder=\"Enter 2nd Question\" name=\"question_2\" value={this.state.question_2} onChange={this.handleChange}/> */}\r\n                    <textarea className=\"form-control area\" row=\"3\" placeholder=\"Enter 2nd Question (optional)\" name=\"question_2\" value={this.state.question_2} onChange={this.handleChange}></textarea>\r\n                   \r\n                    </div>\r\n                    {/* <div className=\"col-md-2 col-4 concert\">\r\n                    <input type=\"checkbox\" id=\"q2\"/>\r\n                    <label for=\"q2\"></label>\r\n                    </div> */}\r\n              </div>\r\n              <div className=\"row concert-row\">\r\n                    <div className=\"col-md-4 col-12\">\r\n                    <label>Question no 3.</label>\r\n                    </div>\r\n                    <div className=\"col-md-8 col-12\">\r\n                    {/* <input type=\"text\" className=\"form-control\"  placeholder=\"Enter 3rd Question\" name=\"question_3\" value={this.state.question_3} onChange={this.handleChange}/> */}\r\n                    <textarea className=\"form-control area\" row=\"3\" placeholder=\"Enter 3rd Question (optional)\" name=\"question_3\" value={this.state.question_3} onChange={this.handleChange}></textarea>\r\n                   \r\n                    </div>\r\n                    {/* <div className=\"col-md-2 col-4 concert\">\r\n                    <input type=\"checkbox\" id=\"q3\"/>\r\n                    <label for=\"q3\"></label>\r\n                    </div> */}\r\n              </div>\r\n              <div className=\"row concert-row\">\r\n                    <div className=\"col-md-4 col-12\">\r\n                    <label>Question no 4.</label>\r\n                    </div>\r\n                    <div className=\"col-md-8 col-12\">\r\n                    {/* <input type=\"text\" className=\"form-control\"  placeholder=\"Enter 4th Question\" name=\"question_4\" value={this.state.question_4} onChange={this.handleChange}/> */}\r\n                   \r\n                    <textarea className=\"form-control area\" row=\"3\" placeholder=\"Enter 4th Question (optional)\" name=\"question_4\" value={this.state.question_4} onChange={this.handleChange}></textarea>\r\n                   \r\n                    </div>\r\n                \r\n              </div>\r\n              <div className=\"row concert-row\">\r\n                    <div className=\"col-md-4 col-12\">\r\n                    <label>Price to enter</label>\r\n                    </div>\r\n                    <div className=\"col-md-4 col-12\">\r\n                    {/* <input type=\"text\" className=\"form-control\"  placeholder=\"Enter 4th Question\" name=\"question_4\" value={this.state.question_4} onChange={this.handleChange}/> */}\r\n                   \r\n                    <input type=\"text\" className=\"form-control\" id=\"enter_price\" placeholder=\"Enter Price\" name=\"price\" \r\n                            value={this.state.price} onChange={this.handlePrice}\r\n                            onKeyPress={(event) => {\r\n                              if (!/[0-9]/.test(event.key)) {\r\n                                  event.preventDefault();\r\n                              }\r\n                              }}                    \r\n                            />\r\n                   \r\n                    </div>\r\n                \r\n                 {/* message info */}\r\n                <div className=\"col-md-4 col-12 desktopCharge\">\r\n                  <HtmlTooltip arrow\r\n                      title={\r\n                        <React.Fragment>\r\n                          <Typography color=\"inherit\">Transaction Info</Typography>                \r\n                          <p style={{fontFamily:'monospace',fontSize:'12px'}}>{chargesMessage}</p>\r\n                        </React.Fragment>\r\n                      } placement=\"top-start\"\r\n                    >\r\n                  <Button style={chargesStyle}>{this.state.chargesInfo}<i class=\"fa fa-question-circle\" aria-hidden=\"true\" \r\n                  style={iconStyle}></i></Button>\r\n                </HtmlTooltip>\r\n              </div>\r\n              <div className=\"col-md-4 col-12 mobileCharge\" style={{fontFamily: 'consolas', fontSize: '13px',textTransform: 'capitalize'}}>\r\n                      &nbsp;{this.state.chargesInfo}\r\n                     <OverlayTrigger  className=\"mobile\" style={chargesStyle} trigger=\"click\" placement=\"top\" overlay={popover2}>           \r\n                         <i class=\"fa fa-question-circle\" aria-hidden=\"true\"  style={iconStyle}></i>                     \r\n                      </OverlayTrigger >  \r\n                </div>\r\n\r\n\r\n              </div>\r\n\r\n              \r\n                  <div className=\"row concert-row\">\r\n                    <div className=\"col-md-8 col-9\">\r\n                          <label >\r\n                              Let your followers pay what they want\r\n                          </label>\r\n                      </div>\r\n                      <div className=\"col-md-4 col-3\">\r\n                          <label className=\"switch\" for=\"allowCustomertoPay\">\r\n                              <input type=\"checkbox\" id=\"allowCustomertoPay\" onChange={this.onchangeCheck} />\r\n                              <div className=\"slider round\"></div>\r\n                          </label>\r\n                      </div>\r\n                          {\r\n                            this.state.showDiv === true ?\r\n                                <>\r\n                                    <div className=\"col-md-6\">\r\n                                        <label >\r\n                                            <strong>\r\n                                                Minimum Amount\r\n                                            </strong>\r\n                                        </label>\r\n                                        <input type=\"text\" name=\"min_amt\"\r\n                                            value={this.state.min_amt} onChange={this.handleChange}\r\n                                            className=\"form-control\" placeholder=\"Enter Price\"\r\n                                            onKeyPress={(event) => {\r\n                                                if (!/[0-9]/.test(event.key)) {\r\n                                                    event.preventDefault();\r\n                                                }\r\n                                            }}\r\n                                        />\r\n                                        <p style={{ fontSize: '12px', fontWeight: '600' }}>{API.dynamicPriceMessage()}</p>\r\n                                    </div>\r\n                                    <div className=\"col-md-6\" style={{ display: 'none' }}>\r\n                                        <label >\r\n                                            <strong>\r\n                                                Suggested Amount\r\n                                            </strong>\r\n                                        </label>\r\n                                        <input type=\"text\" name=\"suggested_amt\"\r\n                                            value={this.state.suggested_amt} onChange={this.handleChange}\r\n                                            className=\"form-control\" placeholder=\"Enter Price\"\r\n                                            onKeyPress={(event) => {\r\n                                                if (!/[0-9]/.test(event.key)) {\r\n                                                    event.preventDefault();\r\n                                                }\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </>\r\n                                :\r\n                                null\r\n                        }\r\n                  \r\n                  </div>\r\n         </div>\r\n         \r\n            <div className=\"btun-box\">\r\n              <button className=\"btun\"  onClick={this.nextClick} disabled={this.state.disabledBtn}> {this.state.BtnName} <NavigateNextIcon/></button>\r\n              {/* <button className=\"btun\" onClick={this.isConfirm}>Cancel</button> */}\r\n              <p id=\"msg_contest\" style={{color:'red'}}></p>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n\r\n      </Modal>\r\n\r\n    \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nContestGiveAway.propTypes = {\r\n\r\n};\r\n\r\nexport default ContestGiveAway;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\DigitalEcommerce.js",["2835","2836","2837","2838","2839","2840","2841","2842","2843","2844","2845","2846","2847"],"import React, { Component } from 'react';\r\n\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\n\r\nimport axios, {  isCancel } from \"axios\";\r\nimport {ProgressBar} from 'react-bootstrap';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Popover from 'react-bootstrap/Popover'\r\n\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n\r\nimport PersonalVideoIcon from '@material-ui/icons/PersonalVideo';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FileViewer from 'react-file-viewer';\r\nimport { CustomErrorComponent } from 'custom-error';\r\nimport ExplicitIcon from '@material-ui/icons/Explicit';\r\nimport API  from '../services/API';\r\nclass DigitalEcommerce extends Component \r\n{\r\n    fileObj = [];\r\n    fileArray = [];\r\n    albumArray=[];\r\n     Files = [];\r\n     cancelFileUpload=null;\r\n        constructor(props) {\r\n            super(props)\r\n        \r\n            this.state = {\r\n              base_url: process.env.REACT_APP_API_URL,\r\n              root_url: process.env.REACT_APP_ROOT_URL,\r\n            openModel:false,\r\n            show:false,\r\n            open:false,\r\n            directAccess:this.props.data,\r\n            userDetails:this.props.userDetails,\r\n            confirm:false,\r\n            videoFile:null,\r\n            imageFile:null,\r\n            selectedFile:null,\r\n       \r\n            title:'',\r\n            description:'',\r\n            price:0,\r\n            handleDisabled:true,\r\n            toolTip:false,\r\n            chargesInfo:'',\r\n            showIconCharges:'none',\r\n            videoData:'NA',\r\n            audioData:'',\r\n            album:[null],\r\n            coverImageorVideo:null,\r\n            cover_Image_video:'',\r\n            audioFile:null,\r\n            showAlert:true,\r\n            title:'',\r\n            msg:'',\r\n            logo:'',\r\n            textFileUrl:'',\r\n            textFile:[],\r\n            uploadPercentage: 0,\r\n            avatar: '',\r\n            disabledBtn:false,\r\n            BtnName:'Save',\r\n            pdfFileUrl:'',\r\n            pdfFile:null,\r\n            allowCustomertoPay:0,\r\n            min_amt:'',\r\n            suggested_amt:'',\r\n            showDiv:false,\r\n            isPriceDisabled:false,\r\n\r\n\r\n\r\n\r\n            }\r\n            //console.log(this.state.userDetails)\r\n            this.imageonMultiChange = this.imageonMultiChange.bind(this)\r\n            \r\n        }\r\n        ModalClose=()=>\r\n        {    \r\n\r\n            this.setState({openModel:false,show:false});\r\n            this.setState({ \r\n              audioFile: null ,\r\n              audioData: '',\r\n              textFile: null ,\r\n              textFileUrl: '',\r\n              videoData:'',\r\n              videoFile:null,\r\n              pdfFile:null,pdfFileUrl:''\r\n            }); \r\n            this.albumArray=[];\r\n\r\n        }\r\n        ModalOpen=()=>{\r\n                this.setState({openModel:true,show:true,chargesInfo:'',showIconCharges:'none',\r\n                allowCustomertoPay:0,\r\n                min_amt:'',\r\n                suggested_amt:'',\r\n                showDiv:false,\r\n                isPriceDisabled:false,\r\n              \r\n              });\r\n        }\r\n        openCollapse = () => {\r\n            !this.state.open ?\r\n            this.setState({ open: true })\r\n            :\r\n            this.setState({ open: false })\r\n            \r\n        }\r\n        isConfirm = () => {\r\n            confirmAlert({\r\n            title: 'Confirm !!!',\r\n            message: 'Are you sure to Exit',\r\n            buttons: [\r\n                {\r\n                label: 'Yes',\r\n                onClick: () => this.setState({confirm:true})\r\n                },\r\n                {\r\n                label: 'No',\r\n                onClick: () => this.setState({confirm:false})\r\n                }\r\n            ]\r\n            });\r\n        };\r\n        popOver=(data)=>{\r\n\r\n        }\r\n        videoonChange=(e)=>{\r\n           this.setState({ \r\n              audioFile: null ,\r\n              audioData: '',\r\n              textFile: null ,\r\n              textFileUrl: '',\r\n              pdfFile:null,pdfFileUrl:''\r\n            }); \r\n            this.albumArray=[];\r\n\r\n            const file = e.target.files[0];\r\n\r\n            \r\n            var filePath = e.target.value;            \r\n            // Allowing file type\r\n            var allowedExtensions = /(\\.mp4)$/i;                \r\n            if (!allowedExtensions.exec(filePath)) \r\n            {\r\n                alert('Invalid file type');\r\n                e.target.value = '';\r\n                return false;\r\n            } \r\n\r\n\r\n            if(typeof file!=='undefined')\r\n            {\r\n              var fileUrl = window.URL.createObjectURL(file);\r\n              this.setState({ imageFile: e.target.files[0] }); \r\n              this.setState({\r\n              videoFile: file,\r\n              videoData:fileUrl\r\n              });\r\n              \r\n           \r\n            }\r\n        }\r\n\r\n      \r\n\r\n        audioChange=(e)=>\r\n        {\r\n\r\n          this.setState({\r\n            videoFile: null,\r\n            videoData:'NA',  \r\n            pdfFile:null,pdfFileUrl:'',\r\n            textFileUrl:'',textFile:null,\r\n            imageFile:null,\r\n            });\r\n            const file = e.target.files[0];\r\n\r\n            var filePath = e.target.value;            \r\n            // Allowing file type  .ogv\r\n            var allowedExtensions = /(\\.mp3|\\.ogv)$/i;             \r\n            if (!allowedExtensions.exec(filePath)) \r\n            {\r\n                alert('Invalid file type');\r\n                e.target.value = '';\r\n                return false;\r\n            } \r\n\r\n            if(typeof file!=='undefined')\r\n            {\r\n              this.setState({ audioFile: e.target.files[0] }); \r\n              this.getBase64(file).then(\r\n                data =>{\r\n                  //console.log(data);\r\n                  this.setState({ audioData: data }); \r\n                } \r\n              );\r\n            }\r\n            \r\n        }\r\n        onClickResetAudioFile (e) {\r\n            this.setState({audioData:''}); // celears state\r\n            \r\n           }\r\n\r\n           //12-mar-2021\r\n           getBase64=(file)=> {\r\n            return new Promise((resolve, reject) => {\r\n              const reader = new FileReader();\r\n              reader.readAsDataURL(file);\r\n              reader.onload = () => resolve(reader.result);\r\n              reader.onerror = error => reject(error);\r\n            });\r\n          }\r\n\r\n        imageonChange=(e)=>{\r\n            const file = e.target.files[0];\r\n            this.setState({ coverImageorVideo: e.target.files[0] }); \r\n            this.setState({\r\n            cover_Image_video: URL.createObjectURL(file)\r\n            });\r\n           //console.log(this.state.cover_Image_video)\r\n        }\r\n        nextClick=(event)=>{\r\n            event.preventDefault();\r\n            document.getElementById('msg_unlock').innerHTML='';\r\n            document.getElementById('msg_unlock').style.color='red';\r\n            let isValid=true;\r\n            if(isValid)\r\n            {\r\n             \r\n              if(\r\n                (this.albumArray===null || this.albumArray.length ===0)\r\n               && (this.state.audioFile===null  || this.state.audioFile.length===0)\r\n               && (this.state.videoFile===null || this.state.videoFile.length===0)\r\n               && (this.state.textFile===null || this.state.textFile.length===0)\r\n               && (this.state.pdfFile===null || this.state.pdfFile.length===0)\r\n               )\r\n              {\r\n                document.getElementById('msg_unlock').innerHTML='* Select a file';\r\n                return false;\r\n              }\r\n            \r\n              if(this.state.title.length ===0 )\r\n              {\r\n                document.getElementById('msg_unlock').innerHTML='* Enter Title';\r\n                return false;\r\n              }\r\n              if(this.state.description.length ===0 ) \r\n              {\r\n                document.getElementById('msg_unlock').innerHTML='* Enter Description';\r\n                return false;\r\n              }\r\n                var price=parseInt(this.state.price);\r\n                if(isNaN(price))\r\n                {\r\n                  price=0;\r\n                }\r\n  \r\n                if( parseInt(price) < 0)\r\n                {\r\n                  document.getElementById('msg_unlock').innerHTML='* Enter Price';\r\n                  return false;\r\n                }\r\n\r\n                   //23-aug-2021 dynamic pricing\r\n                   if(this.state.allowCustomertoPay===1)\r\n                   {\r\n                     if( isNaN(parseInt(this.state.min_amt)) || parseInt(this.state.min_amt) < 0 )\r\n                     {                     \r\n                       this.props.showToast('empty field','* Enter minimum amount'); \r\n                       return false;\r\n                     }\r\n                   }\r\n                  \r\n                   \r\n\r\n                const formData = new FormData(); \r\n                formData.append('DA_Allow_Cust_Pay', this.state.allowCustomertoPay )  \r\n                formData.append('DA_Min_Amount',parseInt(this.state.min_amt))\r\n                formData.append('DA_Suggested_Amont', parseInt(this.state.suggested_amt))  \r\n                let Api_url=this.state.base_url+'admin/addProduct';\r\n               // let Api_url='http://localhost:9000/admin/addProduct';\r\n                if(this.state.videoFile !==null && this.state.videoData!=='NA' && this.state.videoData!=='')\r\n                  {  \r\n                      formData.append('sampleFile', this.state.videoFile);\r\n                      formData.append('DA_Type', 'video'); \r\n                      this.albumArray=[]; \r\n                      this.setState({\r\n                        audioFile:null,album:null,textFile:null,pdfFile:null\r\n                      });\r\n                  }\r\n                if(this.state.audioFile !==null && this.state.audioData!=='')\r\n                 {   \r\n                    formData.append('sampleFile', this.state.audioFile)\r\n                    formData.append('DA_Type', 'audio'); \r\n                    this.albumArray=[];                 \r\n                    this.setState({\r\n                     album:null,textFile:null,videoFile:null,pdfFile:null\r\n                    });\r\n                 }\r\n                 if(this.state.pdfFile !==null && this.state.pdfFileUrl!=='')\r\n                 {   \r\n                    formData.append('sampleFile', this.state.pdfFile)\r\n                    formData.append('DA_Type', 'pdf'); \r\n                    this.albumArray=[];                 \r\n                    this.setState({\r\n                     album:null,textFile:null,videoFile:null,audioFile:null,\r\n                    });\r\n                 }\r\n                 if(this.state.textFile !==null && this.state.textFileUrl!=='')\r\n                 {   \r\n                    formData.append('sampleFile', this.state.textFile)\r\n                    formData.append('DA_Type', 'txt'); \r\n                    this.albumArray=[];                 \r\n                    this.setState({\r\n                     album:null,videoFile:null,audioFile:null,pdfFile:null\r\n                    });\r\n                 }\r\n                if(this.state.album!==null && this.albumArray!==null && this.albumArray.length > 0)\r\n                {\r\n                      \r\n                        formData.append('DA_Type', 'image'); \r\n                        formData.append('sampleFile', this.state.coverImageorVideo) \r\n                        // const ins = document.getElementById('img_multiple').files.length;\r\n                        const ins = this.Files.length;\r\n                        //console.log(this.Files)\r\n                        const arr=[];\r\n                          //  for (var x = 0; x < ins; x++)\r\n                          // {                        \r\n                          //     //formData.append(this.Files[x].name,this.Files[x]);\r\n                          //      formData.append('img_multiple',this.Files[0]);\r\n                                \r\n                          //  }\r\n                            // var input = document.querySelector('input[name=\"upImage\"]');\r\n                            // for (const file of input.files) {\r\n                            //   formData.append('img_multiple',file,file.name)\r\n                            // }\r\n                        \r\n                }\r\n\r\n                \r\n                formData.append('DA_DA_ID', 3) // for premium featured id\r\n                formData.append('JM_ID', this.props.JM_ID)         \r\n                formData.append('DA_Title', this.state.title)  \r\n                formData.append('DA_Description', this.state.description)  \r\n                formData.append('DA_Cover', \"\") \r\n                formData.append('DA_Price', this.state.price)      \r\n                formData.append('JM_User_Profile_Url_plus_JM_ID',this.props.JM_User_Profile_Url + \"_\" + this.props.JM_ID)\r\n                \r\n             \r\n                const CancelToken = axios.CancelToken;\r\n                const source = CancelToken.source();\r\n                const options = {\r\n                  onUploadProgress: (progressEvent) => \r\n                  {\r\n                    const {loaded, total} = progressEvent;\r\n                    let percent = Math.floor( (loaded * 100) / total )\r\n                    console.log( `${loaded}kb of ${total}kb | ${percent}% wait...` );\r\n        \r\n                    if( percent < 100 )\r\n                    {\r\n                      this.setState({ uploadPercentage: percent })\r\n                    }\r\n                  },\r\n                  cancelToken: source.token,\r\n                  headers: { \"authorization\": API.getAuth(),\"id\":API.getId()},\r\n\r\n                  \r\n                }\r\n           \r\n               this.setState({BtnName:'Uploading..',disabledBtn:true});\r\n                axios.post(Api_url, formData, options).then(res =>\r\n                { \r\n\r\n                  if(res.data.status > 0)\r\n                  {\r\n                     this.setState({videoFile:null,videoData:'NA',audioFile:null,audioData:''});\r\n                     this.fileArray=[];     \r\n                    \r\n                     this.setState({ avatar: res.data.url, uploadPercentage: 100 }, ()=>{\r\n                      setTimeout(() => {\r\n                        this.setState({ uploadPercentage: 0 })\r\n                      }, 1000);\r\n                    })            \r\n                      this.ModalClose();         \r\n                     this.props.showToast('success','Premium feature is added to profile');                     \r\n                     this.setState({disabledBtn:false,BtnName:'Save'});\r\n                  }\r\n                  else\r\n                  {\r\n                    \r\n                    API.minusResponse(res.data);\r\n                    this.props.showToast('error','internal error occurred'); \r\n                    this.setState({disabledBtn:false,BtnName:'Save'});\r\n                  }     \r\n                    //console.log(res.data)\r\n                })\r\n                .catch(err => {\r\n                  console.log(err);\r\n                 \r\n                  if (isCancel(err)) \r\n                  {\r\n                      //alert(err.message);\r\n                      this.props.showToast('canceled',err.message); \r\n                      this.setState({disabledBtn:false,BtnName:'Save'});\r\n                  }\r\n                  this.props.showToast('error','Network error occurred'); \r\n                  this.setState({disabledBtn:false,BtnName:'Save'});\r\n                  this.setState({ uploadPercentage: 0 })\r\n\r\n              });\r\n\r\n              this.setState({source});\r\n\r\n\r\n            }\r\n            else\r\n            {\r\n\r\n              var msg=\"fill all the neceessary fields and upload a file\";\r\n\r\n              this.props.showToast('empty field',msg); \r\n              \r\n            }\r\n           \r\n        }\r\n        cancelUpload = (e) => \r\n         {\r\n             this.state.source.cancel('Upload cancelled');\r\n            \r\n        }\r\n        validation =()=>{\r\n             \r\n              \r\n                if((this.state.title.length > 0 && this.state.description.length > 0 ) && \r\n                (this.state.audioFile!==null || this.state.videoFile!==null|| \r\n                   (this.albumArray!==null &&  this.albumArray.length > 0) || \r\n                   this.state.textFile!==null  || this.state.pdfFile!==null))\r\n                    return true;\r\n                else\r\n                    return false;         \r\n               \r\n        }\r\n        handleChange=(e)=>{\r\n            let val=parseFloat(e.target.value);\r\n        this.setState({[e.target.name]:e.target.value})\r\n        let chargesInfo=\"\";\r\n        if(e.target.name==='price' && val > 0)\r\n            {\r\n             \r\n              let fee=val * API.razorPayTax();\r\n              let gst=fee * API.razorPayGST();         \r\n              let razorPay=(fee+gst); // 1.65 + 0.297\r\n              let TenPer=(val - razorPay) * 10/100; // 10 if val is 100                  \r\n              let charges= val - razorPay - TenPer; // 100 - 1.65- 0.297                      \r\n              let chargesInfo=\"You'll receive INR \"+ charges.toFixed(2) + \" \";\r\n\r\n\r\n              let showIconCharges='block';\r\n         \r\n                this.setState({chargesInfo,showIconCharges});\r\n            }\r\n            else\r\n            {      \r\n                let chargesInfo=\"\";\r\n                let showIconCharges='none';\r\n                this.setState({chargesInfo,showIconCharges});\r\n            }\r\n            \r\n        }\r\n        hidePopover=()=>{\r\n            document.getElementById(\"popover-basic\").style.display='none';\r\n        }\r\n        handleClose=()=>{\r\n            this.setState({toolTip:true});\r\n        }\r\n        handleOpen=()=>{\r\n            this.setState({toolTip:false});\r\n        }\r\n        \r\n\r\n        imageonMultiChange(e) {\r\n\r\n\r\n\r\n          var filePath = e.target.value;            \r\n          // Allowing file type\r\n          var allowedExtensions = /(\\.jpg|\\.jpeg|\\.png)$/i;                \r\n          if (!allowedExtensions.exec(filePath)) \r\n          {\r\n              alert('Invalid file type');\r\n              e.target.value = '';\r\n              return false;\r\n          } \r\n\r\n\r\n            var numFiles = e.target.files.length; \r\n            this.albumArray=[];\r\n            for (var i = 0, numFiles = e.target.files.length; i < numFiles; i++) \r\n            { \r\n              var file = e.target.files[i];\r\n              this.albumArray.push(URL.createObjectURL(file));              \r\n              this.Files.push(file);\r\n            }\r\n        \r\n            this.setState({ album: this.albumArray })\r\n\r\n            const fileMain = e.target.files[0];\r\n            this.setState({ coverImageorVideo: e.target.files[0] }); \r\n            this.setState({\r\n            cover_Image_video: URL.createObjectURL(fileMain),\r\n            pdfFile:null,pdfFileUrl:''\r\n            });\r\n           console.log(this.state.cover_Image_video)\r\n        \r\n        }\r\n\r\n        hideToast=()=>{\r\n          this.setState({showAlert:false})\r\n        }\r\n        showToast =() =>{\r\n          this.setState({showAlert:true})\r\n        }\r\n\r\n        openBrowsFile=id=>e=>{\r\n            document.getElementById(id).click();   \r\n           this.setState({ \r\n            audioFile: null ,\r\n            audioData: '',\r\n            textFile: null ,\r\n            textFileUrl: '',\r\n            pdfFile:null,\r\n            pdfFileUrl:'',\r\n            albumArray:null,\r\n            videoData:'',\r\n            videoFile:null,\r\n          }); \r\n        }\r\n        cancelAlbum=id=>e=>\r\n        {\r\n            console.log(this.albumArray) \r\n            console.log(id)\r\n            const i = id\r\n            if(this.albumArray!==null)\r\n            {\r\n                const filteredItems = this.albumArray.slice(0, i).concat(this.albumArray.slice(i + 1, this.albumArray.length))\r\n                this.albumArray=filteredItems;\r\n                this.setState({ album: null })\r\n                const ins = document.getElementById('upImage').files.length;\r\n                this.Files.splice(id, 1);\r\n            }\r\n            console.log(this.Files);\r\n            this.setState({\r\n              cover_Image_video: '',\r\n              coverImageorVideo:null\r\n              });\r\n        }\r\n\r\n        textFileChange=e=>{\r\n\r\n          if (!e || !e.target || !e.target.files || e.target.files.length === 0) {\r\n            return;\r\n          }\r\n          var filePath = e.target.value;            \r\n          // Allowing file type  .ogv\r\n          var allowedExtensions = /(\\.docx|\\.pdf)$/i;             \r\n          if (!allowedExtensions.exec(filePath)) \r\n          {\r\n              alert('Invalid file type');\r\n              e.target.value = '';\r\n              return false;\r\n          } \r\n            const name = e.target.files[0].name;\r\n            const lastDot = name.lastIndexOf('.');        \r\n            const fileName = name.substring(0, lastDot);\r\n            const ext = name.substring(lastDot + 1);\r\n\r\n            const file = e.target.files[0];\r\n            const type=  e.currentTarget.dataset.filetype; \r\n            console.log( e.target.files[0].type)   \r\n          if(ext==='docx')\r\n          {\r\n            this.setState({ textFile: e.target.files[0] }); \r\n            this.setState({\r\n                textFileUrl: URL.createObjectURL(file),\r\n                type:ext\r\n            });\r\n\r\n          }\r\n         else if(ext==='pdf')\r\n          {\r\n            this.setState({ pdfFile: e.target.files[0] }); \r\n            this.setState({\r\n                pdfFileUrl: URL.createObjectURL(file),\r\n                type:ext\r\n            });\r\n\r\n          }   \r\n           \r\n          console.log(URL.createObjectURL(file))\r\n        }\r\n       \r\n        onError(e) {\r\n           console.log('error in file-viewer');\r\n          }\r\n\r\n          onInputClick = (event) => {\r\n            if(event.target.name==='upImage' || event.target.name==='upVideo' || event.target.name==='upAudio' || event.target.name==='upText')\r\n                event.target.value = ''\r\n\r\n                \r\n                this.setState({ \r\n                  audioFile: null ,\r\n                  audioData: '',\r\n                  textFile: null ,\r\n                  textFileUrl: '',\r\n                  videoData:'',\r\n                  videoFile:null,\r\n                  pdfFile:null,pdfFileUrl:''\r\n                }); \r\n\r\n                this.albumArray=[];\r\n        }\r\n        \r\n        onDocumentLoadSuccess=(numPages)=> {\r\n          this.setState({numPages});\r\n        }\r\n\r\n        onchangeCheck=(e)=>{\r\n\r\n          if(e.target.checked===true)\r\n          {\r\n            this.setState({\r\n              allowCustomertoPay:1,\r\n              showDiv:true,\r\n              price:0,isPriceDisabled:true,\r\n              chargesInfo:'',showIconCharges:'none'\r\n            })\r\n          }\r\n          else\r\n          {\r\n            this.setState({\r\n              allowCustomertoPay:0,\r\n              showDiv:false,\r\n              isPriceDisabled:false,   chargesInfo:'',showIconCharges:'none'\r\n            })\r\n          }\r\n        }\r\n  \r\n    render() {\r\n      const {uploadPercentage} = this.state;\r\n        const longText = `\r\n        Aliquam eget finibus ante, non facilisis lectus. Sed vitae dignissim est, vel aliquam tellus.\r\n        Praesent non nunc mollis, fermentum neque at, semper arcu.\r\n        Nullam eget est sed sem iaculis gravida eget vitae justo.\r\n        `;\r\n        \r\n        const useStyles = {\r\n          button: {\r\n            margin: '5px',\r\n          },\r\n          customWidth: {\r\n            maxWidth: 500,\r\n            fontSize:'25px',\r\n           \r\n          },\r\n          noMaxWidth: {\r\n            maxWidth: 'none',\r\n          },\r\n        };\r\n       // let chargesMessage=\"You receive 90% of the transaction value minus a 2% transaction fee that is collected by our payment provider.\";\r\n        let chargesMessage=API.chargesMessage();\r\n      \r\n        const HtmlTooltip = withStyles((theme) => ({\r\n          arrow: {\r\n            color: theme.palette.common.black,\r\n          },\r\n          tooltip: {\r\n            backgroundColor: '#212529',\r\n            color: 'white',\r\n            maxWidth: '50%',\r\n            fontSize: theme.typography.pxToRem(10),\r\n            // border: '1px solid #dadde9',\r\n          },\r\n        }))(Tooltip);\r\n        \r\n        const iconStyle={\r\n            display:this.state.showIconCharges,\r\n            fontSize: \"23px\",\r\n            color: \"gray\"\r\n        }\r\n        const chargesStyle={\r\n          fontFamily: \"consolas\",\r\n          fontSize: \"13px\",\r\n          textTransform: \"capitalize\",\r\n          marginTop: \"-6%\",\r\n          fontWeight: \"bold\",\r\n          color: \"gray\",\r\n        }\r\n        \r\n        let typeOfProduct;\r\n        \r\n          typeOfProduct= <> <div className=\"col-md-8\">\r\n                              <label for=\"upImage\" style={{    marginTop: \"10px\"}}>\r\n                                Upload a Video or Audio             \r\n                              </label>\r\n                          </div>  \r\n                          <div className=\"col-md-10 offset-md-1\">           \r\n                            {\r\n                            this.state.videoData!=='NA' && this.state.videoData!=='' ?              \r\n                                    <video className=\"img-thumbnail-custom\" width=\"100%\" controls src={this.state.videoData} type=\"video/mp4\" >                                   \r\n                                    </video>\r\n                                    : null\r\n                            }\r\n                            {\r\n                            this.state.audioData!=='' ?     \r\n                                <audio autoplay controls src={this.state.audioData}>\r\n                                  The “audio tag is not supported by your browser.\r\n                                </audio>\r\n                                : \r\n                                null\r\n                            }\r\n                                  \r\n                           </div>  \r\n                          </>\r\n      \r\n\r\n    let type='video';\r\n    const popover = (\r\n      <Popover id=\"popover-basic\">\r\n         <button type=\"button\" className=\"pop-close\"><span aria-hidden=\"true\" onClick={this.hidePopover}>×</span>\r\n          <span className=\"sr-only\">Close</span>\r\n        </button>\r\n        <Popover.Title as=\"h6\"><h6>Select  video or Audio</h6>\r\n       \r\n        </Popover.Title>\r\n        <Popover.Content>\r\n          {           \r\n            type==='video' ?   \r\n            <>         \r\n             <label htmlFor=\"video\" style={{cursor:'pointer'}}><h6>Video</h6></label> <PersonalVideoIcon/>  <br/>\r\n             <label htmlFor=\"audio\" style={{cursor:'pointer'}}><h6>Audio</h6></label> <AudiotrackIcon/>  \r\n             </>            \r\n            : null\r\n          \r\n          }\r\n          \r\n        </Popover.Content>    \r\n       \r\n      </Popover>\r\n    );\r\n\r\n    const popover2 = (\r\n      <Popover id=\"popover-basic\" style={{zIndex:'99999',background: 'black',color:'#fff'}}  >\r\n         <button type=\"button\" className=\"pop-close\"><span aria-hidden=\"true\" onClick={this.hidePopover}>×</span>\r\n          <span className=\"sr-only\">Close</span>\r\n        </button>       \r\n        <Popover.Content style={{background: 'black',color:'#fff'}}>\r\n        {chargesMessage}\r\n          \r\n        </Popover.Content>    \r\n       \r\n      </Popover>\r\n    );\r\n        return (\r\n            <>\r\n                   <div className=\"col-md-3\">\r\n                        <div className=\"item\">\r\n                          <div className=\"icon\">\r\n                            <ExplicitIcon  style={{fontSize: '50px'}}/>\r\n                          </div>\r\n                          <div className=\"text\">\r\n                            <h4>Sell Digital Goods</h4>                           \r\n                            <button class=\"btun\"  onClick={this.ModalOpen}><AddCircleOutlineIcon/> Add This</button>\r\n                          \r\n                          </div>\r\n                        </div>\r\n                    </div>\r\n                 \r\n       <Modal\r\n        show={this.state.show}\r\n        onHide={this.ModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}         \r\n        size=\"lg\"\r\n        contentClassName=\"modal-radius\"\r\n        centered\r\n\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <p className=\"addnew-title\">Sell Digital Goods</p>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"direct-access-pop\" id=\"myform\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                  <label>Choose Your File Type</label>\r\n                </div>\r\n              <div className=\"col-md-12\">\r\n                  <div className=\"choose-part\">\r\n                    <input type=\"radio\" id=\"chooseType_1\" name=\"chooseType\" onClick={this.openBrowsFile('upImage')}/><label for=\"chooseType_1\" >Image</label>\r\n                  </div>\r\n                  <div className=\"choose-part\">\r\n                    <input type=\"radio\" id=\"chooseType_2\" name=\"chooseType\" onClick={this.openBrowsFile('upVideo')}/><label for=\"chooseType_2\">Video</label>\r\n                  </div>\r\n                  <div className=\"choose-part\">\r\n                    <input type=\"radio\" id=\"chooseType_3\" name=\"chooseType\" onClick={this.openBrowsFile('upAudio')}/><label for=\"chooseType_3\">Audio</label>\r\n                  </div>\r\n                  <div className=\"choose-part\">\r\n                    <input type=\"radio\" id=\"chooseType_4\" name=\"chooseType\" onClick={this.openBrowsFile('upText')}/><label for=\"chooseType_4\">Text or PDF</label>\r\n                  </div>\r\n                 \r\n                  \r\n                </div>\r\n              <div className=\"col-md-12\" >                    \r\n                      <input type=\"file\" id=\"upImage\" name=\"upImage\" style={{ display: \"none\" }} accept=\"image/png, image/jpeg,image/gif\" onClick={this.onInputClick} onChange={this.imageonMultiChange}/>       \r\n                      <input type=\"file\" id=\"upVideo\" name=\"upVideo\" style={{ display: \"none\" }} accept=\"video/mp4\" onClick={this.onInputClick} onChange={this.videoonChange}/>       \r\n                      <input type=\"file\" id=\"upAudio\" name=\"upAudio\" style={{ display: \"none\" }} accept=\"audio/mp3\" onClick={this.onInputClick} onChange={this.audioChange} />\r\n                      <input type=\"file\" id=\"upText\" name=\"upText\"  data-filetype=\"docx\" style={{ display: \"none\" }}  onClick={this.onInputClick} accept=\".docx,.pdf\" onChange={this.textFileChange}/>       \r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <div className=\"row\">\r\n                          {\r\n                              (this.albumArray || []).map((url,i) => (\r\n                                 <>                                  \r\n                                   <div className=\"col-md-3\">\r\n                                        <div className=\"img-grid\">\r\n                                        <img src={url} />\r\n                                        <div className=\"cls\"  onClick={this.cancelAlbum(i)}>x</div>\r\n                                        </div>\r\n                                    </div>\r\n                                  </>\r\n                              ))\r\n                         }\r\n                             <div className=\"col-md-8 offset-md-2\">\r\n                            {\r\n                               \r\n                                this.state.videoData!=='NA' && this.state.videoData!=='' ?              \r\n                                        <video className=\"img-thumbnail-custom\" width=\"100%\" controls src={this.state.videoData} type=\"video/mp4\" >                                   \r\n                                        </video>\r\n                                        : null\r\n                               \r\n                            }  \r\n                            {\r\n                            this.state.audioData!=='' ?     \r\n                                <audio autoplay controls src={this.state.audioData}>\r\n                                  The “audio tag is not supported by your browser.\r\n                                </audio>\r\n                                : \r\n                                null\r\n                            }\r\n                             </div>\r\n                             <div className=\"col-md-12\">\r\n                          {\r\n                            this.state.textFileUrl!=='' ?                                \r\n                                \r\n                                   <FileViewer\r\n                                   fileType={this.state.type}\r\n                                   filePath={this.state.textFileUrl}\r\n                                   errorComponent={CustomErrorComponent}\r\n                                   onError={this.onError}/>\r\n                                 : \r\n                                null\r\n                              \r\n                            }\r\n\r\n                           {\r\n                            this.state.pdfFileUrl!=='' ?                                \r\n                                \r\n                                   <FileViewer\r\n                                   fileType={this.state.type}\r\n                                   filePath={this.state.pdfFileUrl}\r\n                                   errorComponent={CustomErrorComponent}\r\n                                   onError={this.onError}/>                                 \r\n                                 : \r\n                                null\r\n                              \r\n                            }\r\n                            </div>\r\n                          \r\n                        \r\n                </div>\r\n              </div>\r\n              <form>                          \r\n                <input type=\"file\" id=\"video\" accept=\".mp4\" style={{display:'none'}} onChange={this.videoonChange}/>      \r\n             </form>   \r\n              <form>                          \r\n                <input type=\"file\" id=\"audio\" accept=\"audio/*\" style={{display:'none'}} onChange={this.audioChange}/>      \r\n             </form>\r\n              <div className=\"col-md-12\">\r\n                <input type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleChange} className=\"form-control\" placeholder=\"Title\" />       \r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <textarea className=\"form-control area\" name=\"description\" onChange={this.handleChange} \r\n                  placeholder=\"Enter description\"/>\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <input type=\"text\" name=\"price\" onChange={this.handleChange} value={this.state.price}\r\n                className=\"form-control\" placeholder=\" Price\" id=\"price\" disabled={this.state.isPriceDisabled}\r\n                onKeyPress={(event) => {\r\n                  if (!/[0-9]/.test(event.key)) {\r\n                    event.preventDefault();\r\n                  }\r\n                }}\r\n                />       \r\n              </div>\r\n              <div className=\"col-md-12 desktopCharge\">\r\n                  <HtmlTooltip arrow\r\n                      title={\r\n                        <React.Fragment>\r\n                          <Typography color=\"inherit\">Transaction Info</Typography>                \r\n                          <p style={{fontFamily:'monospace',fontSize:'12px'}}>{chargesMessage}</p>\r\n                        </React.Fragment>\r\n                      } placement=\"top-start\"\r\n                    >\r\n                  <Button style={chargesStyle}>{this.state.chargesInfo}<i class=\"fa fa-question-circle\" aria-hidden=\"true\" \r\n                  style={iconStyle}></i></Button>\r\n                </HtmlTooltip>\r\n              </div>\r\n\r\n              <div className=\"col-md-12 mobileCharge\" style={{fontFamily: 'consolas', fontSize: '13px',textTransform: 'capitalize'}}>\r\n                      &nbsp;{this.state.chargesInfo}\r\n                     <OverlayTrigger  className=\"mobile\" style={chargesStyle} trigger=\"click\" placement=\"top\" overlay={popover2}>           \r\n                         <i class=\"fa fa-question-circle\" aria-hidden=\"true\"  style={iconStyle}></i>                     \r\n                      </OverlayTrigger >  \r\n                </div>   \r\n\r\n\r\n                <div className=\"col-md-12\">\r\n                        <label >\r\n                               <strong>  \r\n                                  Settings \r\n                              </strong>     \r\n                       </label>\r\n                </div>                  \r\n                <div className=\"col-md-8 col-9\">\r\n                    <label >\r\n                    Let your followers pay what they want     \r\n                      </label>\r\n                </div>  \r\n                <div className=\"col-md-4 col-3\">                    \r\n                    <label class=\"switch\"  for=\"allowCustomertoPay\">\r\n                    <input type=\"checkbox\" id=\"allowCustomertoPay\" onChange={this.onchangeCheck} />\r\n                        <div class=\"slider round\"></div>\r\n                      </label>\r\n                </div>\r\n                {\r\n                  this.state.showDiv===true ?      \r\n                  <>            \r\n                        <div className=\"col-md-6\">\r\n                        <label >\r\n                               <strong>  \r\n                                  Minimum Amount \r\n                              </strong>     \r\n                       </label>\r\n                        <input type=\"text\" name=\"min_amt\" \r\n                        value={this.state.min_amt} onChange={this.handleChange} \r\n                        className=\"form-control\" placeholder=\"Enter Price\" \r\n                        onKeyPress={(event) => {\r\n                          if (!/[0-9]/.test(event.key)) {\r\n                            event.preventDefault();\r\n                          }\r\n                        }}\r\n                        />   \r\n                         <p style={{fontSize:'12px',fontWeight:'600'}}>{API.dynamicPriceMessage()}</p>    \r\n                      </div>\r\n                      <div className=\"col-md-6\" style={{display:'none'}}>\r\n                    <label >\r\n                               <strong>  \r\n                                  Suggested Amount \r\n                              </strong>     \r\n                       </label>\r\n                      <input type=\"text\" name=\"suggested_amt\" \r\n                      value={this.state.suggested_amt} onChange={this.handleChange} \r\n                      className=\"form-control\" placeholder=\"Enter Price\" \r\n                      onKeyPress={(event) => {\r\n                        if (!/[0-9]/.test(event.key)) {\r\n                          event.preventDefault();\r\n                        }\r\n                      }}\r\n                      />       \r\n                    </div>\r\n                  </>\r\n                  :\r\n                  null\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n              { \r\n                      uploadPercentage > 0 && \r\n                       <>\r\n                        <ProgressBar animated  variant=\"success\" style={{width:'80%',margin: '15px'}} now={uploadPercentage} active label={`${uploadPercentage}%`} /> \r\n                        <span  style={{cursor:'pointer'}}  onClick={this.cancelUpload}>\r\n                             <i className=\"fa fa-close\" style={{fontSize:'22px',marginTop: '56%'}}></i>\r\n                        </span>\r\n                      </>\r\n              }\r\n            </div>\r\n            <div className=\"btun-box\">\r\n              <button className=\"btun\" id=\"btn_save\" disabled={this.state.disabledBtn} onClick={this.nextClick}> {this.state.BtnName} <NavigateNextIcon/></button>\r\n              </div>\r\n              <p id=\"msg_unlock\"></p>\r\n          </div>\r\n        </Modal.Body>\r\n\r\n      </Modal>\r\n\r\n    \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nDigitalEcommerce.propTypes = {\r\n\r\n};\r\n\r\nexport default DigitalEcommerce;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\AccessPopup.js",["2848","2849","2850","2851","2852","2853","2854"],"import React, { Component } from 'react';\r\n// import {Button} from 'react-bootstrap'\r\nimport Modal from 'react-bootstrap/Modal'\r\n// import './MyStyle.css'\r\n// import './animate.css'\r\n// import './bootstrap.css'\r\n// import './resonsive.css'\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Popover from 'react-bootstrap/Popover'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport PhotoIcon from '@material-ui/icons/Photo';\r\nimport PersonalVideoIcon from '@material-ui/icons/PersonalVideo';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nclass AccessPopUp extends Component\r\n{\r\n  fileObj = [];\r\n  fileArray = [];\r\n  albumArray=[];\r\n   Files = [];\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n      base_url: process.env.REACT_APP_API_URL,\r\n      root_url: process.env.REACT_APP_ROOT_URL,\r\n       openModel:false,\r\n       show:false,\r\n       open:false,\r\n       directAccess:this.props.data,\r\n       userDetails:this.props.userDetails,\r\n       confirm:false,\r\n       videoFile:null,\r\n       imageFile:null,\r\n       coverImageorVideo:null,\r\n       title:'',\r\n       description:'',\r\n       price:0,\r\n       handleDisabled:true,\r\n       toolTip:false,\r\n       chargesInfo:'',\r\n       showIconCharges:'none',\r\n       videoData:'NA',\r\n       album:[null],\r\n       cover_Image_video:''\r\n\r\n    }\r\n    console.log(this.state.userDetails)\r\n       this.imageonMultiChange = this.imageonMultiChange.bind(this)\r\n       \r\n  }\r\n  ModalClose=()=>\r\n  {    \r\n    this.setState({openModel:false,show:false});\r\n  }\r\n  ModalOpen=()=>{\r\n        this.setState({openModel:true,show:true,chargesInfo:'',showIconCharges:'none'});\r\n  }\r\n  openCollapse = () => {\r\n    !this.state.open ?\r\n      this.setState({ open: true })\r\n      :\r\n      this.setState({ open: false })\r\n      \r\n  }\r\n  isConfirm = () => {\r\n    confirmAlert({\r\n      title: 'Confirm !!!',\r\n      message: 'Are you sure to Exit',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => this.setState({confirm:true})\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => this.setState({confirm:false})\r\n        }\r\n      ]\r\n    });\r\n  };\r\n  popOver=(data)=>{\r\n  }\r\n  videoonChange=(e)=>{\r\n    const file = e.target.files[0];\r\n\r\n    var fileUrl = window.URL.createObjectURL(file);\r\n    this.setState({ imageFile: e.target.files[0] }); \r\n     this.setState({\r\n       videoFile: file,\r\n       videoData:fileUrl\r\n     });\r\n\r\n     this.hidePopover();\r\n  \r\n    //  let reader = new FileReader();\r\n\r\n    // //if reading completed\r\n    //   reader.onload = e => {\r\n    //       let blobData = e.target.result; //blob data\r\n    //       console.log(blobData);\r\n    //       // this.setState({\r\n    //       //   videoData: URL.createObjectURL(blobData)\r\n    //       // });\r\n    //       var binaryData = [];\r\n    //         binaryData.push(blobData); //My blob\r\n    //         var foo = URL.createObjectURL(new Blob(binaryData, {type: \"application/text\"}));\r\n    //         console.log(foo);\r\n    //          this.setState({\r\n    //         videoData:blobData\r\n    //       });\r\n    //   };\r\n\r\n    //   //read the file\r\n    //   reader.readAsDataURL(file);\r\n  }\r\n  imageonChange=(e)=>{\r\n    const file = e.target.files[0];\r\n    this.setState({ coverImageorVideo: e.target.files[0] }); \r\n    this.setState({\r\n      cover_Image_video: URL.createObjectURL(file)\r\n    });\r\n    this.hidePopover();\r\n  }\r\n  nextClick=(event)=>{\r\n    event.preventDefault();\r\n    let isValid=this.validation();\r\n    if(isValid)\r\n      {\r\n        //alert(\"ok\");\r\n      \r\n        const formData = new FormData(); \r\n\r\n        let Api_url=this.state.base_url+'admin/addProduct';\r\n        if(this.state.directAccess.DA_Type===\"video\")\r\n            formData.append('videoFile', this.state.videoFile)\r\n        if(this.state.directAccess.DA_Type===\"image\")\r\n        {\r\n          formData.append('coverFile', this.state.coverImageorVideo) \r\n         // const ins = document.getElementById('img_multiple').files.length;\r\n          const ins = this.Files.length;\r\n          const arr=[];\r\n          for (var x = 0; x < ins; x++)\r\n           {\r\n      \r\n            // formData.append('img_multiple',document.getElementById('img_multiple').files[x]);\r\n             formData.append('img_multiple',this.Files[x]);\r\n             \r\n            }\r\n          \r\n          // for (const file of myInput.files) {\r\n          //   formData.append('album',file,file.name)\r\n          //   console.log(file.name)\r\n          // }\r\n          \r\n        }\r\n\r\n        \r\n        formData.append('DA_DA_ID', this.state.directAccess.DA_ID)   \r\n        formData.append('DA_Type', this.state.directAccess.DA_Type)   \r\n        formData.append('JM_ID', this.props.JM_ID)         \r\n        formData.append('DA_Title', this.state.title)  \r\n        formData.append('DA_Description', this.state.description)  \r\n        formData.append('DA_Cover', \"\") \r\n        formData.append('DA_Price', this.state.price)      \r\n        formData.append('JM_User_Profile_Url_plus_JM_ID',this.props.JM_User_Profile_Url + \"_\" + this.props.JM_ID)\r\n        \r\n            fetch(Api_url, {\r\n              method: 'POST',         \r\n              body: formData\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => \r\n              {                   \r\n                 console.log(data);   \r\n                  alert(\"success\");   \r\n                  this.albumArray=[];\r\n                  this.fileArray=[];\r\n                  this.ModalClose();                      \r\n            })\r\n            .catch(error => {\r\n              console.error(error)\r\n            })\r\n\r\n      }\r\n      else\r\n      {\r\n\r\n      }\r\n  }\r\n   validation =()=>{\r\n        if(this.state.directAccess.DA_Type===\"image\")\r\n        {\r\n          if(this.state.description.length > 0 && parseInt(this.state.price) > 0 && (this.albumArray!==null && this.state.coverImageorVideo!==null))\r\n             return true;\r\n           else\r\n            return false;           \r\n        }\r\n        if(this.state.directAccess.DA_Type===\"video\")\r\n        {\r\n          if(this.state.description.length > 0 && parseInt(this.state.price) > 0 && (this.state.imageFile!==null || this.state.videoFile!==null))\r\n             return true;\r\n         else\r\n            return false;         \r\n        }\r\n   }\r\n   handleChange=(e)=>{\r\n    let val=parseFloat(e.target.value);\r\n   this.setState({[e.target.name]:e.target.value})\r\n   let chargesInfo=\"\";\r\n   if(e.target.name==='price' && val >0)\r\n     {\r\n       let charges=val * .75;\r\n       let chargesInfo=\"You'll receive $\"+ charges + \" \";\r\n       let showIconCharges='block';\r\n         this.setState({chargesInfo,showIconCharges});\r\n     }\r\n     else{      \r\n          let chargesInfo=\"\";\r\n          let showIconCharges='none';\r\n         this.setState({chargesInfo,showIconCharges});\r\n     }\r\n    \r\n  }\r\n   hidePopover=()=>{\r\n    document.getElementById(\"popover-basic\").style.display='none';\r\n   }\r\n   handleClose=()=>{\r\n      this.setState({toolTip:true});\r\n   }\r\n   handleOpen=()=>{\r\n    this.setState({toolTip:false});\r\n  }\r\n  \r\n\r\n  imageonMultiChange(e) {\r\n    var numFiles = e.target.files.length; \r\n    for (var i = 0, numFiles = e.target.files.length; i < numFiles; i++) \r\n    { \r\n      var file = e.target.files[i];\r\n      this.albumArray.push(URL.createObjectURL(file));\r\n      //this.fileArray.push(URL.createObjectURL(this.fileObj[0][i]))\r\n      this.Files.push(file);\r\n    }\r\n\r\n    this.setState({ album: this.albumArray })\r\n\r\n}\r\n\r\ncancelAlbum=id=>e=>\r\n{\r\n  console.log(this.albumArray) \r\n   console.log(id)\r\n\r\n   const i = id\r\n  const filteredItems = this.albumArray.slice(0, i).concat(this.albumArray.slice(i + 1, this.albumArray.length))\r\n  this.albumArray=filteredItems;\r\n  this.setState({ album: filteredItems })\r\n  const ins = document.getElementById('img_multiple').files.length;\r\n\r\n  this.Files.splice(id, 1);\r\n\r\n  console.log(this.Files);\r\n\r\n}\r\n  render()\r\n  {\r\n    let type=this.state.directAccess.DA_Type;\r\n    const popover = (\r\n      <Popover id=\"popover-basic\">\r\n         <button type=\"button\" className=\"pop-close\"><span aria-hidden=\"true\" onClick={this.hidePopover}>×</span>\r\n          <span className=\"sr-only\">Close</span>\r\n        </button>\r\n        <Popover.Title as=\"h6\"><h6>Select {type===\"image\"? 'image' : 'video'}</h6>\r\n       \r\n        </Popover.Title>\r\n        <Popover.Content>\r\n          {           \r\n            this.state.directAccess.DA_Type==='video' ?   \r\n            <>         \r\n             <label htmlFor=\"video\" style={{cursor:'pointer'}}><h6>Video</h6></label> <PersonalVideoIcon/>  \r\n            \r\n             </>            \r\n            : null\r\n          \r\n          }\r\n          {\r\n              this.state.directAccess.DA_Type==='image' ?  \r\n              <>          \r\n              <label htmlFor=\"img_cover\" style={{cursor:'pointer'}}><h6>Image</h6></label>\r\n              <PhotoIcon/>\r\n              <br/>\r\n              <label htmlFor=\"video_cover\" style={{cursor:'pointer'}}><h6>Video</h6></label>   \r\n              <PersonalVideoIcon/> \r\n              <form>\r\n                <input type=\"file\" id=\"img_cover\" accept=\"image/*\" style={{display:'none'}} onChange={this.imageonChange}/>\r\n                <input type=\"file\" id=\"video_cover\"  accept=\"video/mp4\" style={{display:'none'}} onChange={this.imageonChange}/>    \r\n             </form>  \r\n             </>            \r\n          : null\r\n          }\r\n        </Popover.Content>    \r\n       \r\n      </Popover>\r\n    );\r\n        let typeOfProduct;\r\n        if(this.state.directAccess.DA_Type==='video' )\r\n        {\r\n          typeOfProduct= <> <div className=\"col-md-8\">\r\n                              <label for=\"upImage\" style={{    marginTop: \"10px\"}}>\r\n                                Upload a Video             \r\n                              </label>\r\n                          </div>  \r\n                          <div className=\"col-md-10 offset-md-1\">           \r\n                          {\r\n                          this.state.videoData!=='NA' && this.state.videoData!=='' ?              \r\n                                  <video className=\"img-thumbnail-custom\" width=\"100%\" controls src={this.state.videoData} type=\"video/mp4\" >                                   \r\n                                  </video>\r\n                                  : null\r\n                          }\r\n                          </div>  \r\n                          </>\r\n        }\r\n        if(this.state.directAccess.DA_Type==='image' )\r\n        {\r\n          typeOfProduct= <> \r\n                               \r\n          \r\n                            <div className=\"col-md-10\">\r\n                              <label for=\"img_vid\" style={{marginTop:\"10px\"}}>\r\n                                Upload a Cover Photo or Video             \r\n                              </label>\r\n                            </div>\r\n                            {\r\n                              this.state.cover_Image_video!==\"\" && !this.state.cover_Image_video.startsWith('blob') ?\r\n                              <div className=\"col-md-12\">                 \r\n                                  <div className=\"img-grid\">\r\n                                    <img src={this.state.cover_Image_video} alt=\"\"/>\r\n                                    <div className=\"cls\"><CloseIcon style={{    fontSize: \"14px\"}} onClick={()=>{this.setState({cover_Image_video:\"\"})}}/></div>\r\n                                </div>     \r\n                              </div>\r\n                              :\r\n                              null\r\n                            }                                                 \r\n                            {\r\n                              this.state.coverImageorVideo!=null ?\r\n                              <div className=\"col-md-12\">                 \r\n                                  <div className=\"img-grid\">\r\n                                    <video src={this.state.coverImageorVideo} />\r\n                                    <div className=\"cls\"><CloseIcon style={{    fontSize: \"14px\"}} onClick={()=>{this.setState({coverImageorVideo:null})}}/></div>\r\n                                </div>     \r\n                              </div>\r\n                              :\r\n                              null\r\n                            }    \r\n                            <div className=\"col-md-2\">\r\n                              <label className=\"up-ico\" htmlFor=\"img_multiple\">\r\n                              <AddIcon style={{fontSize:'25px'}}/>       \r\n                              </label>\r\n                              <input type=\"file\" id=\"img_multiple\" multiple  accept=\"image/*\" style={{display:'none'}} onChange={this.imageonMultiChange}/>\r\n                            </div> \r\n                            <div className=\"col-md-6\">\r\n                              <label  for=\"img_album\">\r\n                                Upload a photo album            \r\n                              </label>\r\n                            </div> \r\n                           \r\n                            <div className=\"col-md-12\" id=\"diplay_album\">\r\n                              \r\n                            </div>\r\n                            <div className=\"col-md-12\">\r\n                              <div className=\"row\">\r\n                              {\r\n                              (this.albumArray || []).map((url,i) => (\r\n                                 <>\r\n                                  {/* <img className=\"\" src={url} width=\"50\" height=\"50\" style={{marginLeft:'20px'}}alt=\"...\" /> */}\r\n                                   <div className=\"col-md-2\">\r\n                                      <div className=\"img-grid\">\r\n                                        <img src={url} />\r\n                                        <div className=\"cls\"><CloseIcon style={{    fontSize: \"14px\"}} onClick={this.cancelAlbum(i)}/></div>\r\n                                    </div>\r\n                                  </div>\r\n                                  </>\r\n                              ))\r\n                              }\r\n                                \r\n                              </div>\r\n                            </div> \r\n                            <div className=\"form-group\">\r\n                              \r\n                          </div>\r\n                          </>\r\n        }\r\n\r\n    const longText = `\r\nAliquam eget finibus ante, non facilisis lectus. Sed vitae dignissim est, vel aliquam tellus.\r\nPraesent non nunc mollis, fermentum neque at, semper arcu.\r\nNullam eget est sed sem iaculis gravida eget vitae justo.\r\n`;\r\n\r\nconst useStyles = {\r\n  button: {\r\n    margin: '5px',\r\n  },\r\n  customWidth: {\r\n    maxWidth: 500,\r\n    fontSize:'25px',\r\n   \r\n  },\r\n  noMaxWidth: {\r\n    maxWidth: 'none',\r\n  },\r\n};\r\nlet chargesMessage=\"You receive a 75% share of the transaction value minus a 30c transaction fee which is collected by our payment provider.\";\r\nconst HtmlTooltip = withStyles((theme) => ({\r\n  arrow: {\r\n    color: theme.palette.common.black,\r\n  },\r\n  tooltip: {\r\n    backgroundColor: '#212529',\r\n    color: 'white',\r\n    maxWidth: '50%',\r\n    fontSize: theme.typography.pxToRem(10),\r\n    // border: '1px solid #dadde9',\r\n  },\r\n}))(Tooltip);\r\n\r\nconst iconStyle={\r\n    display:this.state.showIconCharges,\r\n    fontSize: \"23px\",\r\n    color: \"gray\"\r\n}\r\nconst chargesStyle={\r\n  fontFamily: \"consolas\",\r\n  fontSize: \"13px\",\r\n  textTransform: \"capitalize\",\r\n  marginTop: \"-6%\",\r\n  fontWeight: \"bold\",\r\n  color: \"gray\",\r\n}\r\n\r\n  return (\r\n    <>\r\n      <button class=\"btun\"  onClick={this.ModalOpen}><AddCircleOutlineIcon/> Add This</button>\r\n      <Modal\r\n        show={this.state.show}\r\n        onHide={this.ModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}         \r\n        size=\"lg\"\r\n        contentClassName=\"modal-radius\"\r\n        centered\r\n\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <p className=\"addnew-title\">{this.state.directAccess.DA_Title}</p>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"direct-access-pop\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-2\">\r\n                    <center>\r\n                      <OverlayTrigger  trigger=\"click\" placement=\"right\" overlay={popover}>\r\n                        <div className=\"up-ico\"  onClick={this.popOver}>\r\n                           <AddIcon style={{fontSize:'25px'}}/>\r\n                         </div>\r\n                      </OverlayTrigger >                       \r\n                    </center>     \r\n              </div>\r\n              {\r\n               typeOfProduct\r\n              }\r\n              <form>                          \r\n                <input type=\"file\" id=\"video\" accept=\".mp4\" style={{display:'none'}} onChange={this.videoonChange}/>      \r\n             </form>   \r\n\r\n              <div className=\"col-md-12\">\r\n                <input type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleChange} className=\"form-control\" placeholder=\"Title\" />       \r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <textarea className=\"form-control area\" name=\"description\" onChange={this.handleChange} \r\n                placeholder={this.state.directAccess.DA_Title}/>\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <input type=\"number\" name=\"price\" onChange={this.handleChange} className=\"form-control\" placeholder=\"$ Price\" />       \r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                  <HtmlTooltip arrow\r\n                      title={\r\n                        <React.Fragment>\r\n                          <Typography color=\"inherit\">Transaction Info</Typography>                \r\n                          <p style={{fontFamily:'monospace',fontSize:'12px'}}>{chargesMessage}</p>\r\n                        </React.Fragment>\r\n                      } placement=\"top-start\"\r\n                    >\r\n                  <Button style={chargesStyle}>{this.state.chargesInfo}<i class=\"fa fa-question-circle\" aria-hidden=\"true\" \r\n                  style={iconStyle}></i></Button>\r\n                </HtmlTooltip>\r\n              </div>\r\n               \r\n            </div>\r\n            <div className=\"btun-box\">\r\n              <button className=\"btun\"  onClick={this.nextClick}> Save <NavigateNextIcon/></button>\r\n              {/* <button className=\"btun\" onClick={this.isConfirm}>Cancel</button> */}\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n}\r\n\r\nexport default AccessPopUp;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\DonationAndGift.js",[],"E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\UnlockContent.js",["2855","2856","2857","2858","2859","2860","2861","2862","2863","2864","2865","2866","2867","2868","2869","2870"],"import React, { Component } from 'react';\r\n\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\n\r\nimport axios, {  isCancel } from \"axios\";\r\nimport {ProgressBar} from 'react-bootstrap';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport PersonalVideoIcon from '@material-ui/icons/PersonalVideo';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport FileViewer from 'react-file-viewer';\r\nimport { CustomErrorComponent } from 'custom-error';\r\n\r\n\r\nimport API  from '../services/API';\r\nclass UnlockContent extends Component \r\n{\r\n    fileObj = [];\r\n    fileArray = [];\r\n    albumArray=[];\r\n     Files = [];\r\n     cancelFileUpload=null;\r\n        constructor(props) {\r\n            super(props)\r\n        \r\n            this.state = {\r\n              base_url: process.env.REACT_APP_API_URL,\r\n              root_url: process.env.REACT_APP_ROOT_URL,\r\n            openModel:false,\r\n            show:false,\r\n            open:false,\r\n            directAccess:this.props.data,\r\n            userDetails:this.props.userDetails,\r\n            confirm:false,\r\n            videoFile:null,\r\n            imageFile:null,\r\n            selectedFile:null,\r\n       \r\n            title:'',\r\n            description:'',\r\n            price:0,\r\n            handleDisabled:true,\r\n            toolTip:false,\r\n            chargesInfo:'',\r\n            showIconCharges:'none',\r\n            videoData:'NA',\r\n            audioData:'',\r\n            album:[null],\r\n            coverImageorVideo:null,\r\n            cover_Image_video:'',\r\n            audioFile:null,\r\n            showAlert:true,\r\n            title:'',\r\n            msg:'',\r\n            logo:'',\r\n            textFileUrl:'',\r\n            textFile:[],\r\n            uploadPercentage: 0,\r\n            avatar: '',\r\n            disabledBtn:false,\r\n            BtnName:'Save',\r\n            pdfFileUrl:'',\r\n            pdfFile:null,\r\n            allowCustomertoPay:0,\r\n            min_amt:'',\r\n            suggested_amt:'',\r\n            showDiv:false,\r\n            isPriceDisabled:false,\r\n\r\n            }\r\n            //console.log(this.state.userDetails)\r\n            this.imageonMultiChange = this.imageonMultiChange.bind(this)\r\n            \r\n        }\r\n        //      var allowedExtensions =  /(\\.jpg|\\.jpeg|\\.png|\\.gif)$/i;\r\n        ModalClose=()=>\r\n        {    \r\n\r\n            this.setState({openModel:false,show:false});\r\n            this.setState({ \r\n              audioFile: null ,\r\n              audioData: '',\r\n              textFile: null ,\r\n              textFileUrl: '',\r\n              videoData:'',\r\n              videoFile:null,     pdfFileUrl:'',    pdfFile:null,\r\n            }); \r\n            this.albumArray=[];\r\n\r\n        }\r\n        ModalOpen=()=>{\r\n                this.setState({openModel:true,show:true,chargesInfo:'',showIconCharges:'none',              \r\n                allowCustomertoPay:0,\r\n                min_amt:'',\r\n                suggested_amt:'',\r\n                showDiv:false,\r\n                isPriceDisabled:false,\r\n                title:'',\r\n       \r\n          \r\n\r\n              });\r\n        }\r\n        openCollapse = () => {\r\n            !this.state.open ?\r\n            this.setState({ open: true })\r\n            :\r\n            this.setState({ open: false })\r\n            \r\n        }\r\n        isConfirm = () => {\r\n            confirmAlert({\r\n            title: 'Confirm !!!',\r\n            message: 'Are you sure to Exit',\r\n            buttons: [\r\n                {\r\n                label: 'Yes',\r\n                onClick: () => this.setState({confirm:true})\r\n                },\r\n                {\r\n                label: 'No',\r\n                onClick: () => this.setState({confirm:false})\r\n                }\r\n            ]\r\n            });\r\n        };\r\n        popOver=(data)=>{\r\n\r\n        }\r\n        videoonChange=(e)=>{\r\n\r\n\r\n          var filePath = e.target.value;            \r\n          // Allowing file type\r\n          var allowedExtensions = /(\\.mp4)$/i;                \r\n          if (!allowedExtensions.exec(filePath)) \r\n          {\r\n              alert('Invalid file type');\r\n              e.target.value = '';\r\n              return false;\r\n          } \r\n\r\n\r\n\r\n           this.setState({ \r\n              audioFile: null ,\r\n              audioData: '',\r\n              textFile: null ,\r\n              textFileUrl: '',\r\n            }); \r\n            this.albumArray=[];\r\n\r\n            const file = e.target.files[0];\r\n            if(typeof file!=='undefined')\r\n            {\r\n              var fileUrl = window.URL.createObjectURL(file);\r\n              this.setState({ imageFile: e.target.files[0] }); \r\n              this.setState({\r\n              videoFile: file,\r\n              videoData:fileUrl\r\n              });\r\n              \r\n           \r\n            }\r\n        }\r\n\r\n      \r\n\r\n        audioChange=(e)=>\r\n        {\r\n\r\n          var filePath = e.target.value;            \r\n          // Allowing file type  .ogv\r\n          var allowedExtensions = /(\\.mp3|\\.ogv)$/i;             \r\n          if (!allowedExtensions.exec(filePath)) \r\n          {\r\n              alert('Invalid file type');\r\n              e.target.value = '';\r\n              return false;\r\n          } \r\n\r\n\r\n          this.setState({\r\n            videoFile: null,\r\n            videoData:'NA'\r\n            });\r\n            const file = e.target.files[0];\r\n            if(typeof file!=='undefined')\r\n            {\r\n              this.setState({ audioFile: e.target.files[0] }); \r\n              this.getBase64(file).then(\r\n                data =>{\r\n                  //console.log(data);\r\n                  this.setState({ audioData: data }); \r\n                } \r\n              );\r\n            }\r\n            \r\n        }\r\n        onClickResetAudioFile (e) {\r\n            this.setState({audioData:''}); // celears state\r\n            \r\n           }\r\n\r\n           //12-mar-2021\r\n           getBase64=(file)=> {\r\n            return new Promise((resolve, reject) => {\r\n              const reader = new FileReader();\r\n              reader.readAsDataURL(file);\r\n              reader.onload = () => resolve(reader.result);\r\n              reader.onerror = error => reject(error);\r\n            });\r\n          }\r\n\r\n        imageonChange=(e)=>{\r\n            const file = e.target.files[0];\r\n            this.setState({ coverImageorVideo: e.target.files[0] }); \r\n            this.setState({\r\n            cover_Image_video: URL.createObjectURL(file)\r\n            });\r\n           //console.log(this.state.cover_Image_video)\r\n        }\r\n        nextClick=(event)=>{\r\n            event.preventDefault();\r\n            let isValid=this.validation();\r\n            document.getElementById('msg_unlock').innerHTML=''\r\n            document.getElementById('msg_unlock').style.color='red';\r\n            if(isValid)\r\n            {\r\n              if(this.state.title.length===0)\r\n              {\r\n                document.getElementById('msg_unlock').innerHTML='* Enter Title';\r\n                return false;\r\n              }\r\n              if(this.state.description.length===0)\r\n              {\r\n                document.getElementById('msg_unlock').innerHTML='* Enter Description';\r\n                return false;\r\n              }\r\n              var price=parseInt(this.state.price);\r\n              if(isNaN(price))\r\n              {\r\n                price=0;\r\n              }\r\n\r\n              if( parseInt(price) < 0)\r\n              {\r\n                document.getElementById('msg_unlock').innerHTML='* Enter Price';\r\n                return false;\r\n              }\r\n\r\n               \r\n                    //23-aug-2021 dynamic pricing\r\n                  if(this.state.allowCustomertoPay===1)\r\n                  {\r\n                    if( isNaN(parseInt(this.state.min_amt)) || parseInt(this.state.min_amt) < 0 )\r\n                    {                     \r\n                      this.props.showToast('empty field','* Enter minimum amount'); \r\n                      return false;\r\n                    }\r\n                  }\r\n                  \r\n\r\n            \r\n                const formData = new FormData(); \r\n                formData.append('DA_Allow_Cust_Pay', this.state.allowCustomertoPay )  \r\n                formData.append('DA_Min_Amount',parseInt(this.state.min_amt))\r\n                formData.append('DA_Suggested_Amont', parseInt(this.state.suggested_amt))  \r\n                  var filename_replace='';\r\n                let Api_url=this.state.base_url+'admin/addProduct';\r\n               // let Api_url='http://localhost:9000/admin/addProduct';\r\n                if(this.state.videoFile !==null && this.state.videoData!=='NA' && this.state.videoData!=='')\r\n                  {  \r\n                     filename_replace = this.state.videoFile.name.replace(/[/\\\\?%*:|\"<>]/g, '-');\r\n                      formData.append('sampleFile', this.state.videoFile,filename_replace);\r\n                      formData.append('DA_Type', 'video'); \r\n                      this.albumArray=[]; \r\n                      this.setState({\r\n                        audioFile:null,album:null,textFile:null,pdfFile:null\r\n                      });\r\n                  }\r\n                if(this.state.audioFile !==null && this.state.audioData!=='')\r\n                 {   \r\n                   filename_replace = this.state.audioFile.name.replace(/[/\\\\?%*:|\"<>]/g, '-');\r\n                    formData.append('sampleFile', this.state.audioFile,filename_replace)\r\n                    formData.append('DA_Type', 'audio'); \r\n                    this.albumArray=[];                 \r\n                    this.setState({\r\n                     album:null,textFile:null,videoFile:null,pdfFile:null\r\n                    });\r\n                 }\r\n                 if(this.state.pdfFile !==null && this.state.pdfFileUrl!=='')\r\n                 {   \r\n                  filename_replace = this.state.pdfFile.name.replace(/[/\\\\?%*:|\"<>]/g, '-');\r\n                    formData.append('sampleFile', this.state.pdfFile,filename_replace)\r\n                    formData.append('DA_Type', 'pdf'); \r\n                    this.albumArray=[];                 \r\n                    this.setState({\r\n                     album:null,textFile:null,videoFile:null,audioFile:null,\r\n                    });\r\n                 }\r\n                 if(this.state.textFile !==null && this.state.textFileUrl!=='')\r\n                 {   \r\n                    filename_replace = this.state.textFile.name.replace(/[/\\\\?%*:|\"<>]/g, '-');\r\n                    formData.append('sampleFile', this.state.textFile,filename_replace)\r\n                    formData.append('DA_Type', 'txt'); \r\n                    this.albumArray=[];                 \r\n                    this.setState({\r\n                     album:null,videoFile:null,audioFile:null,pdfFile:null\r\n                    });\r\n                 }\r\n                if(this.state.album!==null && this.albumArray!==null && this.albumArray.length > 0)\r\n                {\r\n                      \r\n                        formData.append('DA_Type', 'image'); \r\n                        filename_replace = this.state.coverImageorVideo.name.replace(/[/\\\\?%*:|\"<>]/g, '-');\r\n                        formData.append('sampleFile', this.state.coverImageorVideo,filename_replace) \r\n\r\n                      \r\n                        // const ins = document.getElementById('img_multiple').files.length;\r\n                        const ins = this.Files.length;\r\n                        //console.log(this.Files)\r\n                        const arr=[];\r\n                          //  for (var x = 0; x < ins; x++)\r\n                          // {                        \r\n                          //     //formData.append(this.Files[x].name,this.Files[x]);\r\n                          //      formData.append('img_multiple',this.Files[0]);\r\n                                \r\n                          //  }\r\n                            // var input = document.querySelector('input[name=\"upImage\"]');\r\n                            // for (const file of input.files) {\r\n                            //   formData.append('img_multiple',file,file.name)\r\n                            // }\r\n                        \r\n                }\r\n\r\n                \r\n                formData.append('DA_DA_ID', 2) // for premium featured id\r\n                formData.append('JM_ID', this.props.JM_ID)         \r\n                formData.append('DA_Title', this.state.title)  \r\n                formData.append('DA_Description', this.state.description)  \r\n                formData.append('DA_Cover', \"\") \r\n                formData.append('DA_Price', this.state.price)      \r\n                formData.append('JM_User_Profile_Url_plus_JM_ID',this.props.JM_User_Profile_Url + \"_\" + this.props.JM_ID)\r\n                \r\n               \r\n                const CancelToken = axios.CancelToken;\r\n                const source = CancelToken.source();\r\n                const options = {\r\n                  onUploadProgress: (progressEvent) => \r\n                  {\r\n                    const {loaded, total} = progressEvent;\r\n                    let percent = Math.floor( (loaded * 100) / total )\r\n                    //console.log( `${loaded}kb of ${total}kb | ${percent}% wait...` );\r\n        \r\n                    if( percent < 100 )\r\n                    {\r\n                      this.setState({ uploadPercentage: percent })\r\n                    }\r\n                  },\r\n                  cancelToken: source.token,\r\n                  headers: { \"authorization\": API.getAuth(),\"id\":API.getId()},\r\n                  \r\n                }\r\n           \r\n               this.setState({BtnName:'Uploading..',disabledBtn:true});\r\n                axios.post(Api_url, formData, options).then(res =>\r\n                { \r\n\r\n                  if(res.data.status > 0)\r\n                  {\r\n                     this.setState({videoFile:null,videoData:'NA',audioFile:null,audioData:''});\r\n                     this.fileArray=[];     \r\n                    \r\n                     this.setState({ avatar: res.data.url, uploadPercentage: 100 }, ()=>{\r\n                      setTimeout(() => {\r\n                        this.setState({ uploadPercentage: 0 })\r\n                      }, 1000);\r\n                    })            \r\n                      this.ModalClose();         \r\n                     this.props.showToast('success','Premium feature is added to profile');                     \r\n                     this.setState({disabledBtn:false,BtnName:'Save'});\r\n                  }\r\n                  else\r\n                  {\r\n                    API.minusResponse(res.data);\r\n                    this.props.showToast('error','internal error occurred'); \r\n                    this.setState({disabledBtn:false,BtnName:'Save'});\r\n                  }     \r\n                    //console.log(res.data)\r\n                })\r\n                .catch(err => {\r\n                  //console.log(err);\r\n                 \r\n                  if (isCancel(err)) \r\n                  {\r\n                      //alert(err.message);\r\n                      this.props.showToast('canceled',err.message); \r\n                      this.setState({disabledBtn:false,BtnName:'Save'});\r\n                  }\r\n                  this.props.showToast('error','Network error occurred'); \r\n                  this.setState({disabledBtn:false,BtnName:'Save'});\r\n                  this.setState({ uploadPercentage: 0 })\r\n\r\n              });\r\n\r\n              this.setState({source});\r\n\r\n\r\n            }\r\n            else\r\n            {\r\n\r\n              var msg=\"fill all the neceessary fields and upload a file\";\r\n              this.props.showToast('empty field',msg); \r\n              \r\n            }\r\n        }\r\n        cancelUpload = (e) => \r\n         {\r\n             this.state.source.cancel('Upload cancelled');\r\n            \r\n        }\r\n        validation =()=>{             \r\n              \r\n                if((this.state.title.length > 0 && this.state.description.length > 0 )&& \r\n                  (this.state.audioFile!==null || this.state.videoFile!==null||  \r\n                    (this.albumArray!==null &&  this.albumArray.length > 0) \r\n                    || this.state.textFile!==null  || this.state.pdfFile!==null)\r\n                  )\r\n                    return true;\r\n                else\r\n                    return false;         \r\n               \r\n        }\r\n        handleChange=(e)=>{\r\n            let val=parseFloat(e.target.value);\r\n            this.setState({[e.target.name]:e.target.value})\r\n        let chargesInfo=\"\";\r\n        if(e.target.name==='price' && val > 0)\r\n            {             \r\n              let fee=val * API.razorPayTax();\r\n              let gst=fee * API.razorPayGST();         \r\n              let razorPay=(fee+gst); // 1.65 + 0.297\r\n              let TenPer=(val - razorPay) * 10/100; // 10 if val is 100                  \r\n              let charges= val - razorPay - TenPer; // 100 - 1.65- 0.297                      \r\n              let chargesInfo=\"You'll receive INR \"+ charges.toFixed(2) + \" \";\r\n\r\n\r\n              let showIconCharges='block';         \r\n                this.setState({chargesInfo,showIconCharges});\r\n            }\r\n            else\r\n            {      \r\n                let chargesInfo=\"\";\r\n                let showIconCharges='none';\r\n                this.setState({chargesInfo,showIconCharges});\r\n            }\r\n            \r\n        }\r\n        hidePopover=()=>{\r\n            document.getElementById(\"popover-basic\").style.display='none';\r\n        }\r\n        handleClose=()=>{\r\n            this.setState({toolTip:true});\r\n        }\r\n        handleOpen=()=>{\r\n            this.setState({toolTip:false});\r\n        }\r\n        \r\n\r\n        imageonMultiChange(e) {\r\n\r\n              var filePath = e.target.value;            \r\n              // Allowing file type\r\n              var allowedExtensions = /(\\.jpg|\\.jpeg|\\.png)$/i;                \r\n              if (!allowedExtensions.exec(filePath)) \r\n              {\r\n                  alert('Invalid file type');\r\n                  e.target.value = '';\r\n                  return false;\r\n              } \r\n\r\n\r\n\r\n            var numFiles = e.target.files.length;   \r\n            this.albumArray=[];\r\n            for (var i = 0, numFiles = e.target.files.length; i < numFiles; i++) \r\n            { \r\n              var file = e.target.files[i];\r\n              this.albumArray.push(URL.createObjectURL(file));              \r\n              this.Files.push(file);\r\n            }\r\n        \r\n\r\n\r\n            this.setState({ album: this.albumArray })\r\n            const fileMain = e.target.files[0];\r\n\r\n            \r\n\r\n            this.setState({ coverImageorVideo: e.target.files[0] }); \r\n            this.setState({\r\n            cover_Image_video: URL.createObjectURL(fileMain)\r\n            });\r\n           //console.log(this.state.cover_Image_video)\r\n        \r\n        }\r\n\r\n        hideToast=()=>{\r\n          this.setState({showAlert:false})\r\n        }\r\n        showToast =() =>{\r\n          this.setState({showAlert:true})\r\n        }\r\n\r\n        openBrowsFile=id=>e=>{\r\n            document.getElementById(id).click();   \r\n           this.setState({ \r\n            audioFile: null ,\r\n            audioData: '',\r\n            textFile: null ,\r\n            textFileUrl: '',\r\n            pdfFile:null,\r\n            pdfFileUrl:'',\r\n            albumArray:null,\r\n            videoData:'',\r\n            videoFile:null,\r\n          }); \r\n        }\r\n        cancelAlbum=id=>e=>\r\n        {\r\n            //console.log(this.albumArray) \r\n            //console.log(id)\r\n            const i = id\r\n            if(this.albumArray!==null)\r\n            {\r\n                const filteredItems = this.albumArray.slice(0, i).concat(this.albumArray.slice(i + 1, this.albumArray.length))\r\n                this.albumArray=filteredItems;\r\n                this.setState({ album: null })\r\n                const ins = document.getElementById('upImage').files.length;\r\n                this.Files.splice(id, 1);\r\n            }\r\n            //console.log(this.Files);\r\n            this.setState({\r\n              cover_Image_video: '',\r\n              coverImageorVideo:null\r\n              });\r\n        }\r\n\r\n        textFileChange=e=>{\r\n\r\n\r\n\r\n\r\n          if (!e || !e.target || !e.target.files || e.target.files.length === 0) {\r\n            return;\r\n          }\r\n\r\n          var filePath = e.target.value;            \r\n          // Allowing file type  .ogv\r\n          var allowedExtensions = /(\\.docx|\\.pdf)$/i;             \r\n          if (!allowedExtensions.exec(filePath)) \r\n          {\r\n              alert('Invalid file type');\r\n              e.target.value = '';\r\n              return false;\r\n          } \r\n        \r\n            const name = e.target.files[0].name;\r\n            const lastDot = name.lastIndexOf('.');        \r\n            const fileName = name.substring(0, lastDot);\r\n            const ext = name.substring(lastDot + 1);\r\n\r\n            const file = e.target.files[0];\r\n            const type=  e.currentTarget.dataset.filetype; \r\n            //console.log( e.target.files[0].type)   \r\n          if(ext==='docx')\r\n          {\r\n            this.setState({ textFile: e.target.files[0] }); \r\n            this.setState({\r\n                textFileUrl: URL.createObjectURL(file),\r\n                type:ext\r\n            });\r\n\r\n          }\r\n         else if(ext==='pdf')\r\n          {\r\n            this.setState({ pdfFile: e.target.files[0] }); \r\n            this.setState({\r\n                pdfFileUrl: URL.createObjectURL(file),\r\n                type:ext\r\n            });\r\n\r\n          }   \r\n           \r\n          //console.log(URL.createObjectURL(file))\r\n        }\r\n       \r\n        onError(e) {\r\n           //console.log('error in file-viewer');\r\n          }\r\n\r\n          onInputClick = (event) => {\r\n            if(event.target.name==='upImage' || event.target.name==='upVideo' || event.target.name==='upAudio' || event.target.name==='upText')\r\n                event.target.value = ''\r\n\r\n                this.setState({ \r\n                  audioFile: null ,\r\n                  audioData: '',\r\n                  textFile: null ,\r\n                  textFileUrl: '',\r\n                  videoData:'',\r\n                  videoFile:null,\r\n                  pdfFile:null,pdfFileUrl:''\r\n                }); \r\n                this.albumArray=[];\r\n        }\r\n        \r\n        onDocumentLoadSuccess=(numPages)=> {\r\n          this.setState({numPages});\r\n        }\r\n  \r\n        onchangeCheck=(e)=>{\r\n\r\n          if(e.target.checked===true)\r\n          {\r\n            this.setState({\r\n              allowCustomertoPay:1,\r\n              showDiv:true,\r\n              price:0,isPriceDisabled:true,\r\n              chargesInfo:'',showIconCharges:'none'\r\n            })\r\n          }\r\n          else\r\n          {\r\n            this.setState({\r\n              allowCustomertoPay:0,\r\n              showDiv:false,\r\n              isPriceDisabled:false,\r\n              chargesInfo:'',showIconCharges:'none'\r\n            })\r\n\r\n          }\r\n        }\r\n\r\n     validateFileType=()=>{\r\n          var fileName = document.getElementById(\"fileName\").value;\r\n          var idxDot = fileName.lastIndexOf(\".\") + 1;\r\n          var extFile = fileName.substr(idxDot, fileName.length).toLowerCase();\r\n          if (extFile==\"jpg\" || extFile==\"jpeg\" || extFile==\"png\"){\r\n              //TO DO\r\n          }else{\r\n              alert(\"Only jpg/jpeg and png files are allowed!\");\r\n          }   \r\n      }\r\n    render() {\r\n      const {uploadPercentage} = this.state;\r\n        const longText = `\r\n        Aliquam eget finibus ante, non facilisis lectus. Sed vitae dignissim est, vel aliquam tellus.\r\n        Praesent non nunc mollis, fermentum neque at, semper arcu.\r\n        Nullam eget est sed sem iaculis gravida eget vitae justo.\r\n        `;\r\n        \r\n        const useStyles = {\r\n          button: {\r\n            margin: '5px',\r\n          },\r\n          customWidth: {\r\n            maxWidth: 500,\r\n            fontSize:'25px',\r\n           \r\n          },\r\n          noMaxWidth: {\r\n            maxWidth: 'none',\r\n          },\r\n        };\r\n       // let chargesMessage=\"You receive 90% of the transaction value minus a 2% transaction fee that is collected by our payment provider.\";\r\n        let chargesMessage=API.chargesMessage();\r\n      \r\n        const HtmlTooltip = withStyles((theme) => ({\r\n          arrow: {\r\n            color: theme.palette.common.black,\r\n          },\r\n          tooltip: {\r\n            backgroundColor: '#212529',\r\n            color: 'white',\r\n            maxWidth: '50%',\r\n            fontSize: theme.typography.pxToRem(10),\r\n            // border: '1px solid #dadde9',\r\n          },\r\n        }))(Tooltip);\r\n        \r\n        const iconStyle={\r\n            display:this.state.showIconCharges,\r\n            fontSize: \"23px\",\r\n            color: \"gray\"\r\n        }\r\n        const chargesStyle={\r\n          fontFamily: \"consolas\",\r\n          fontSize: \"13px\",\r\n          textTransform: \"capitalize\",\r\n          marginTop: \"-6%\",\r\n          fontWeight: \"bold\",\r\n          color: \"gray\",\r\n        }\r\n        \r\n        let typeOfProduct;\r\n        \r\n          typeOfProduct= <> <div className=\"col-md-8\">\r\n                              <label for=\"upImage\" style={{    marginTop: \"10px\"}}>\r\n                                Upload a Video or Audio             \r\n                              </label>\r\n                          </div>  \r\n                          <div className=\"col-md-10 offset-md-1\">           \r\n                            {\r\n                            this.state.videoData!=='NA' && this.state.videoData!=='' ?              \r\n                                    <video className=\"img-thumbnail-custom\" width=\"100%\" controls src={this.state.videoData} type=\"video/mp4\" >                                   \r\n                                    </video>\r\n                                    : null\r\n                            }\r\n                            {\r\n                            this.state.audioData!=='' ?     \r\n                                <audio autoplay controls src={this.state.audioData}>\r\n                                  The “audio tag is not supported by your browser.\r\n                                </audio>\r\n                                : \r\n                                null\r\n                            }\r\n                                  \r\n                           </div>  \r\n                          </>\r\n      \r\n\r\n    let type='video';\r\n    const popover = (\r\n      <Popover id=\"popover-basic\">\r\n         <button type=\"button\" className=\"pop-close\"><span aria-hidden=\"true\" onClick={this.hidePopover}>×</span>\r\n          <span className=\"sr-only\">Close</span>\r\n        </button>\r\n        <Popover.Title as=\"h6\"><h6>Select  video or Audio</h6>\r\n       \r\n        </Popover.Title>\r\n        <Popover.Content>\r\n          {           \r\n            type==='video' ?   \r\n            <>         \r\n             <label htmlFor=\"video\" style={{cursor:'pointer'}}><h6>Video</h6></label> <PersonalVideoIcon/>  <br/>\r\n             <label htmlFor=\"audio\" style={{cursor:'pointer'}}><h6>Audio</h6></label> <AudiotrackIcon/>  \r\n             </>            \r\n            : null\r\n          \r\n          }\r\n          \r\n        </Popover.Content>    \r\n       \r\n      </Popover>\r\n    );\r\n\r\n    const popover2 = (\r\n      <Popover id=\"popover-basic\" style={{zIndex:'99999',background: 'black',color:'#fff'}}  >\r\n         <button type=\"button\" className=\"pop-close\"><span aria-hidden=\"true\" onClick={this.hidePopover}>×</span>\r\n          <span className=\"sr-only\">Close</span>\r\n        </button>       \r\n        <Popover.Content style={{background: 'black',color:'#fff'}}>\r\n        {chargesMessage}\r\n          \r\n        </Popover.Content>    \r\n       \r\n      </Popover>\r\n    );\r\n        return (\r\n            <>\r\n                   <div className=\"col-md-3\">\r\n                        <div className=\"item\">\r\n                          <div className=\"icon\">\r\n                            <LockOpenIcon  style={{fontSize: '50px'}}/>\r\n                          </div>\r\n                          <div className=\"text\">\r\n                            <h4>Unlock Content</h4>                           \r\n                            <button class=\"btun\"  onClick={this.ModalOpen}><AddCircleOutlineIcon/> Add This</button>\r\n                          \r\n                          </div>\r\n                        </div>\r\n                    </div>\r\n                 \r\n       <Modal\r\n        show={this.state.show}\r\n        onHide={this.ModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}         \r\n        size=\"lg\"\r\n        contentClassName=\"modal-radius\"\r\n        centered\r\n\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <p className=\"addnew-title\">Unlock content</p>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"direct-access-pop\" id=\"myform\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                  <label>Choose Your File Type</label>\r\n                </div>\r\n              <div className=\"col-md-12\">\r\n                  <div className=\"choose-part\">\r\n                    <input type=\"radio\" id=\"chooseType_1\" name=\"chooseType\" onClick={this.openBrowsFile('upImage')}/><label for=\"chooseType_1\" >Image</label>\r\n                  </div>\r\n                  <div className=\"choose-part\">\r\n                    <input type=\"radio\" id=\"chooseType_2\" name=\"chooseType\" onClick={this.openBrowsFile('upVideo')}/><label for=\"chooseType_2\">Video</label>\r\n                  </div>\r\n                  <div className=\"choose-part\">\r\n                    <input type=\"radio\" id=\"chooseType_3\" name=\"chooseType\" onClick={this.openBrowsFile('upAudio')}/><label for=\"chooseType_3\">Audio</label>\r\n                  </div>\r\n                  <div className=\"choose-part\">\r\n                    <input type=\"radio\" id=\"chooseType_4\" name=\"chooseType\" onClick={this.openBrowsFile('upText')}/><label for=\"chooseType_4\">Text or PDF</label>\r\n                  </div>\r\n                 \r\n                  \r\n                </div>\r\n              <div className=\"col-md-12\" >                    \r\n                      <input type=\"file\" id=\"upImage\" name=\"upImage\" style={{ display: \"none\" }} accept=\"image/png, image/jpeg,image/jpg\" onClick={this.onInputClick} onChange={this.imageonMultiChange}/>       \r\n                      <input type=\"file\" id=\"upVideo\" name=\"upVideo\" style={{ display: \"none\" }} accept=\"video/mp4\" onClick={this.onInputClick} onChange={this.videoonChange}/>       \r\n                      <input type=\"file\" id=\"upAudio\" name=\"upAudio\" style={{ display: \"none\" }} accept=\"audio/mp3\" onClick={this.onInputClick} onChange={this.audioChange} />\r\n                      <input type=\"file\" id=\"upText\" name=\"upText\"  data-filetype=\"docx\" style={{ display: \"none\" }}  onClick={this.onInputClick} accept=\".docx,.pdf\" onChange={this.textFileChange}/>       \r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <div className=\"row\">\r\n                          {\r\n                              (this.albumArray || []).map((url,i) => (\r\n                                 <>                                  \r\n                                   <div className=\"col-md-3\">\r\n                                        <div className=\"img-grid\">\r\n                                        <img src={url} />\r\n                                        <div className=\"cls\"  onClick={this.cancelAlbum(i)}>x</div>\r\n                                        </div>\r\n                                    </div>\r\n                                  </>\r\n                              ))\r\n                         }\r\n                             <div className=\"col-md-8 offset-md-2\">\r\n                            {\r\n                               \r\n                                this.state.videoData!=='NA' && this.state.videoData!=='' ?              \r\n                                        <video className=\"img-thumbnail-custom\" width=\"100%\" controls src={this.state.videoData} type=\"video/mp4\" >                                   \r\n                                        </video>\r\n                                        : null\r\n                               \r\n                            }  \r\n                            {\r\n                            this.state.audioData!=='' ?     \r\n                                <audio autoplay controls src={this.state.audioData}>\r\n                                  The “audio tag is not supported by your browser.\r\n                                </audio>\r\n                                : \r\n                                null\r\n                            }\r\n                             </div>\r\n                             <div className=\"col-md-12\">\r\n                          {\r\n                            this.state.textFileUrl!=='' ?                                \r\n                                \r\n                                   <FileViewer\r\n                                   fileType={this.state.type}\r\n                                   filePath={this.state.textFileUrl}\r\n                                   errorComponent={CustomErrorComponent}\r\n                                   onError={this.onError}/>\r\n                                 : \r\n                                null\r\n                              \r\n                            }\r\n\r\n                           {\r\n                            this.state.pdfFileUrl!=='' ?                                \r\n                                \r\n                                   <FileViewer\r\n                                   fileType={this.state.type}\r\n                                   filePath={this.state.pdfFileUrl}\r\n                                   errorComponent={CustomErrorComponent}\r\n                                   onError={this.onError}/>                                 \r\n                                 : \r\n                                null\r\n                              \r\n                            }\r\n                            </div>\r\n                          \r\n                        \r\n                </div>\r\n              </div>\r\n              <form>                          \r\n                <input type=\"file\" id=\"video\" accept=\".mp4\" style={{display:'none'}} onChange={this.videoonChange}/>      \r\n             </form>   \r\n              <form>                          \r\n                <input type=\"file\" id=\"audio\" accept=\"audio/*\" style={{display:'none'}} onChange={this.audioChange}/>      \r\n             </form>\r\n              <div className=\"col-md-12\">\r\n                <input type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleChange} className=\"form-control\" placeholder=\"Title\" />       \r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <textarea className=\"form-control area\" name=\"description\" onChange={this.handleChange} \r\n                  placeholder=\"Enter description\"/>\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <input type=\"text\" name=\"price\" disabled={this.state.isPriceDisabled} \r\n                onChange={this.handleChange} className=\"form-control\" \r\n                placeholder=\" Price\"  value={this.state.price}\r\n                onKeyPress={(event) => {\r\n                  if (!/[0-9]/.test(event.key)) {\r\n                      event.preventDefault();\r\n                  }\r\n              }}\r\n                />       \r\n              </div>\r\n              <div className=\"col-md-12 desktopCharge\">\r\n                  <HtmlTooltip arrow\r\n                      title={\r\n                        <React.Fragment>\r\n                          <Typography color=\"inherit\">Transaction Info</Typography>                \r\n                          <p style={{fontFamily:'monospace',fontSize:'12px'}}>{chargesMessage}</p>\r\n                        </React.Fragment>\r\n                      } placement=\"top-start\"\r\n                    >\r\n                  <Button style={chargesStyle}>{this.state.chargesInfo}<i class=\"fa fa-question-circle\" aria-hidden=\"true\" \r\n                  style={iconStyle}></i></Button>\r\n                </HtmlTooltip>\r\n              </div>\r\n\r\n              <div className=\"col-md-12 mobileCharge\" style={{fontFamily: 'consolas', fontSize: '13px',textTransform: 'capitalize'}}>\r\n                      &nbsp;{this.state.chargesInfo}\r\n                     <OverlayTrigger  className=\"mobile\" style={chargesStyle} trigger=\"click\" placement=\"top\" overlay={popover2}>           \r\n                         <i class=\"fa fa-question-circle\" aria-hidden=\"true\"  style={iconStyle}></i>                     \r\n                      </OverlayTrigger >  \r\n                </div>   \r\n                \r\n                <div className=\"col-md-12\">\r\n                        <label >\r\n                               <strong>  \r\n                                  Settings \r\n                              </strong>     \r\n                       </label>\r\n                </div>                  \r\n                <div className=\"col-md-8 col-9\">\r\n                    <label >\r\n                    Let your followers pay what they want     \r\n                      </label>\r\n                </div>  \r\n                <div className=\"col-md-4 col-3\">                    \r\n                    <label class=\"switch\"  for=\"allowCustomertoPay\">\r\n                    <input type=\"checkbox\" id=\"allowCustomertoPay\" onChange={this.onchangeCheck} />\r\n                        <div class=\"slider round\"></div>\r\n                      </label>\r\n                </div>\r\n                {\r\n                  this.state.showDiv===true ?      \r\n                  <>            \r\n                        <div className=\"col-md-6\">\r\n                        <label >\r\n                               <strong>  \r\n                                  Minimum Amount \r\n                              </strong>     \r\n                       </label>\r\n                        <input type=\"text\" name=\"min_amt\" \r\n                        value={this.state.min_amt} onChange={this.handleChange} \r\n                        className=\"form-control\" placeholder=\"Enter Price\" \r\n                        onKeyPress={(event) => {\r\n                          if (!/[0-9]/.test(event.key)) {\r\n                            event.preventDefault();\r\n                          }\r\n                        }}\r\n                        />   \r\n                         <p style={{fontSize:'12px',fontWeight:'600'}}>{API.dynamicPriceMessage()}</p>    \r\n                      </div>\r\n                      <div className=\"col-md-6\" style={{display:'none'}}>\r\n                    <label >\r\n                               <strong>  \r\n                                  Suggested Amount \r\n                              </strong>     \r\n                       </label>\r\n                      <input type=\"text\" name=\"suggested_amt\" \r\n                      value={this.state.suggested_amt} onChange={this.handleChange} \r\n                      className=\"form-control\" placeholder=\"Enter Price\" \r\n                      onKeyPress={(event) => {\r\n                        if (!/[0-9]/.test(event.key)) {\r\n                          event.preventDefault();\r\n                        }\r\n                      }}\r\n                      />       \r\n                    </div>\r\n                  </>\r\n                  :\r\n                  null\r\n                }\r\n              { \r\n                      uploadPercentage > 0 && \r\n                       <>\r\n                        <ProgressBar animated  variant=\"success\" style={{width:'80%',margin: '15px'}} now={uploadPercentage} active label={`${uploadPercentage}%`} /> \r\n                        <span  style={{cursor:'pointer'}}  onClick={this.cancelUpload}>\r\n                             <i className=\"fa fa-close\" style={{fontSize:'22px',marginTop: '56%'}}></i>\r\n                        </span>\r\n                      </>\r\n              }\r\n            </div>\r\n            <div className=\"btun-box\">\r\n              <button className=\"btun\" id=\"btn_save\" disabled={this.state.disabledBtn} onClick={this.nextClick}> {this.state.BtnName} <NavigateNextIcon/></button>\r\n              </div>\r\n              <p id=\"msg_unlock\"></p>\r\n          </div>\r\n        </Modal.Body>\r\n\r\n      </Modal>\r\n\r\n    \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nUnlockContent.propTypes = {\r\n\r\n};\r\n\r\nexport default UnlockContent;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\GraphMonthly.js",["2871"],"import React, { Component } from 'react';\r\nimport { Line } from \"react-chartjs-2\";\r\nclass GraphMonthly extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n   \r\n    componentDidMount() {\r\n        console.log(this.props)\r\n    }\r\n\r\n    render() {\r\n        let dataLine={},lebels=[],dataValue=[];\r\n        if(this.props.graphMonthy!==null && this.props.graphMonthy.length > 0 )\r\n        {\r\n          for (let i = 0; i < this.props.graphMonthy.length; i++)\r\n          {\r\n             \r\n             if(this.props.id===3)\r\n             {\r\n              lebels.push(this.props.graphMonthyView[i].Lebels);  \r\n               let totalClick=parseInt(this.props.graphMonthyClick[i].dataValue);\r\n               let totalViews=parseInt(this.props.graphMonthyView[i].dataValue);\r\n               const CTR = (totalClick > 0 && totalViews > 0) ? parseFloat(totalClick / totalViews * 100).toFixed(2) : 0;\r\n               dataValue.push(CTR); \r\n             }\r\n             else\r\n             {\r\n              lebels.push(this.props.graphMonthy[i].Lebels);    \r\n              dataValue.push(this.props.graphMonthy[i].dataValue);   \r\n             }\r\n          }\r\n        }\r\n\r\n      \r\n        dataLine={\r\n            labels: lebels ,\r\n            datasets: [            \r\n              {\r\n                label: this.props.id===7? \r\n                      this.props.graphTitle +\" (in INR) #\"+ this.props.which_year\r\n                      : this.props.id===3?\r\n                      this.props.graphTitle +\" (in %) #\" + this.props.which_year\r\n                      : this.props.graphTitle +\" #\"+ this.props.which_year,\r\n                fill: true,\r\n                lineTension: 0.3,\r\n                backgroundImage: \"linear-gradient(to right top, #051937, #004d7a, #008793, #00bf72, #a8eb12)\",\r\n                borderColor: this.props.id===1? '#7004fa'\r\n                : this.props.id===2 ?\r\n                '#fc347f'\r\n                : this.props.id===3 ?\r\n                '#1482cc'\r\n                : this.props.id===4 ?\r\n                '#4eb232'\r\n                : this.props.id===5 ?\r\n                '#e60dc4'\r\n                : this.props.id===6 ?\r\n                '#73300d'\r\n                : this.props.id===7 ?\r\n                '#fca542'\r\n                :\r\n                '#7004fa'\r\n                ,           \r\n                data:dataValue\r\n              }    \r\n           \r\n            ]\r\n          }\r\n        const legend = {\r\n            display: true,\r\n            position: \"bottom\",\r\n            labels: {\r\n              fontColor: \"#323130\",\r\n              fontSize: 20\r\n            }\r\n          };\r\n\r\n          let max=0,stepSize=0;\r\n          if(this.props.id===3)\r\n          {\r\n            max=200;\r\n            stepSize=20\r\n           \r\n          }\r\n          else if(this.props.id===4)\r\n          {\r\n            max=100;\r\n            stepSize=10\r\n          }\r\n          else if(this.props.id===5)\r\n          {\r\n            max=100;\r\n            stepSize=10\r\n          }\r\n          else if(this.props.id===6)\r\n          {\r\n            max=200;\r\n            stepSize=20\r\n          }\r\n          else\r\n          {\r\n            max=1000;\r\n            stepSize=100\r\n          }\r\n        \r\n          const options = {\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                    max:max,\r\n                    stepSize:stepSize,\r\n                  },\r\n                  gridLines: {\r\n                    drawBorder: false,\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          };\r\n          \r\n        return (\r\n            <div>\r\n                 {/* <MDBContainer> */}\r\n                       {/* <h3 className=\"mt-5\">{this.props.id===4 ? \r\n                       <a href={process.env.REACT_APP_API_URL+\"notify\"} style={{textDecoration:'none'}}>View Report </a>\r\n                       : ''}</h3>     */}\r\n                       <Line data={dataLine} height={100}  legend={legend} options={options} />\r\n             \r\n\r\n                {/* </MDBContainer> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGraphMonthly.propTypes = {\r\n\r\n};\r\n\r\nexport default GraphMonthly;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\LineChart.js",["2872","2873"],"import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { MDBContainer } from \"mdbreact\";\r\nimport moment from 'moment'\r\nclass LineChart extends React.Component {\r\n constructor(props) {\r\n   super(props)\r\n \r\n   this.state = {\r\n   dataLine:[]\r\n   }\r\n }\r\n \r\n \r\n \r\n\r\n\r\n\r\n  render() {\r\n    let dataLine={},lebels=[],viewData=[],clickData=[],lebelsView=[],tranData=[];\r\n    const Chart=this.props.Chart;\r\n    const tranDetails=this.props.tranDetails;\r\n    const graphViewDetails=this.props.graphViewDetails;\r\n    if(Chart!==null && Chart.length > 0)\r\n    {\r\n      for (let i = 0; i < Chart.length; i++)\r\n      {\r\n        if(parseInt(this.props.graphType)===7)\r\n        {\r\n          var newFormat=moment(Chart[i].Create_Date).format('D MMM  YY');\r\n          lebels.push(Chart[i].Lebels+\" \"+ newFormat );  \r\n        }\r\n        else if(parseInt(this.props.graphType)===1)\r\n        {\r\n          lebels.push(Chart[i].Lebels+\" \"+ Chart[i].AM_PM );  \r\n        }\r\n        else\r\n        {\r\n          lebels.push(Chart[i].Lebels); \r\n        }\r\n        clickData.push(Chart[i].TotClicks); \r\n      }\r\n    }\r\n    if(graphViewDetails!==null && graphViewDetails.length > 0 )\r\n    {\r\n      for (let i = 0; i < graphViewDetails.length; i++)\r\n      {\r\n         //lebels.push(graphViewDetails[i].Lebels);    \r\n         viewData.push(graphViewDetails[i].TotalViews);    \r\n       \r\n      }\r\n    }\r\n  //tranDetails\r\n    if(tranDetails!==null && tranDetails.length > 0 )\r\n    {\r\n      for (let i = 0; i < tranDetails.length; i++)\r\n      {\r\n        // lebels.push(tranDetails[i].Lebels);    \r\n         tranData.push(tranDetails[i].TotTran);    \r\n       \r\n      }\r\n    }\r\n    ////console.log(Chart)\r\n    //console.log(lebels)\r\n    //console.log(this.props.graphType)\r\n\r\n    let max=1000,stepSize=200;\r\n    if(parseInt(this.props.graphType)===365)\r\n    { max=1000;stepSize=200 }\r\n    if(parseInt(this.props.graphType)===30)\r\n     { max=500;stepSize=50 }\r\n    if(parseInt(this.props.graphType)===7)\r\n     { max=100;stepSize=20 }\r\n    if(parseInt(this.props.graphType)===1)\r\n     { max=100;stepSize=20 }\r\n    dataLine={\r\n      labels: lebels,\r\n      datasets: [\r\n        {\r\n          label: \"Views\",\r\n          fill: true,\r\n          lineTension: 0.3,\r\n          backgroundImage: \"linear-gradient(to left bottom, #fe9e76, #ff856e, #ff696e, #ff4975, #fa1981);\",\r\n          borderColor: \"#ff696e\",\r\n          borderCapStyle: \"butt\",\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          borderJoinStyle: \"miter\",\r\n          pointBorderColor: \"rgb(205, 130,1 58)\",\r\n          pointBackgroundImage: \"linear-gradient(to left bottom, #fe9e76, #ff856e, #ff696e, #ff4975, #fa1981);\",\r\n          pointBorderWidth: 10,\r\n          pointHoverRadius: 5,\r\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n          pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHitRadius: 10,\r\n          data:viewData\r\n        },\r\n        {\r\n          label: \"Clicks\",\r\n          fill: true,\r\n          lineTension: 0.3,\r\n          backgroundImage: \"linear-gradient(to right top, #051937, #004d7a, #008793, #00bf72, #a8eb12)\",\r\n          borderColor: \"#7004fa\",\r\n          borderCapStyle: \"butt\",\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          borderJoinStyle: \"miter\",\r\n          pointBorderColor: \"rgb(35, 26, 136)\",\r\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n          pointBorderWidth: 10,\r\n          pointHoverRadius: 5,\r\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHitRadius: 10,\r\n          data: clickData\r\n        },\r\n\r\n        {\r\n          label: \"Transactions\",\r\n          fill: true,\r\n          lineTension: 0.3,\r\n          backgroundImage: \"linear-gradient(to right top, #051937, #004d7a, #008793, #00bf72, #a8eb12)\",\r\n          borderColor: \"#44ab31\",\r\n          borderCapStyle: \"butt\",\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          borderJoinStyle: \"miter\",\r\n          pointBorderColor: \"rgb(35, 26, 136)\",\r\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n          pointBorderWidth: 10,\r\n          pointHoverRadius: 5,\r\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHitRadius: 10,\r\n          data: tranData\r\n        }\r\n      ]\r\n    }\r\n\r\n    const legend = {\r\n      display: true,\r\n      position: \"bottom\",\r\n      labels: {\r\n        fontColor: \"#323130\",\r\n        fontSize: 20\r\n      }\r\n    };\r\n  \r\n    const options = {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      title: {\r\n        display: false,\r\n        text: '',//this.props.statType,\r\n       fullSize:true\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          \r\n          {\r\n            gridThickness: 2,\r\n            ticks: {\r\n              max:max,\r\n               min: 0,\r\n              stepSize: stepSize\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    };\r\n    \r\n    return (\r\n      <MDBContainer>\r\n        <h3 className=\"mt-5\"></h3>\r\n        <Line data={dataLine} height={'100%'} legend={legend} options={options} style={{height:'400px'}} />\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LineChart;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\VideoAudioMessage.js",["2874","2875","2876","2877","2878"],"import React, { Component } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport PersonalVideoIcon from '@material-ui/icons/PersonalVideo';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport API  from '../services/API';\r\nclass VideoAudioMessage extends Component \r\n{\r\n        fileObj = [];\r\n        fileArray = [];\r\n        albumArray=[];\r\n        Files = [];\r\n        constructor(props) {\r\n            super(props)\r\n            this.myRef = React.createRef();\r\n            this.state = {\r\n              base_url: process.env.REACT_APP_API_URL,\r\n              root_url: process.env.REACT_APP_ROOT_URL,\r\n            openModel:false,\r\n            show:false,\r\n            open:false,\r\n            directAccess:this.props.data,\r\n            userDetails:this.props.userDetails,\r\n            confirm:false,\r\n            videoFile:null,\r\n            imageFile:null,\r\n            selectedFile:null,\r\n            coverImageorVideo:null,\r\n            title:'',\r\n            description:'',\r\n            price:0,\r\n            handleDisabled:true,\r\n            toolTip:false,\r\n            chargesInfo:'',\r\n            showIconCharges:'none',\r\n            videoData:'NA',\r\n            audioData:'',\r\n            album:[null],\r\n            cover_Image_video:'',\r\n            audioFile:null,\r\n            showAlert:true,\r\n    \r\n            msg:'',\r\n            logo:'',\r\n            BtnName:'Save',\r\n            disabledBtn:false,\r\n            Overlayshow:false,\r\n            overlayTarget:null,\r\n            allowCustomertoPay:0,\r\n            min_amt:'',\r\n            suggested_amt:'',\r\n            showDiv:false,\r\n            min_amt_message:'You will receive 85% of the amount your follower pays for the product',\r\n            }\r\n            //console.log(this.state.userDetails)\r\n            this.imageonMultiChange = this.imageonMultiChange.bind(this)\r\n            \r\n        }\r\n        ModalClose=()=>\r\n        {    \r\n            this.setState({openModel:false,show:false});\r\n        }\r\n        ModalOpen=()=>\r\n        {\r\n                this.setState({openModel:true,show:true,chargesInfo:'',showIconCharges:'none',\r\n                videoData:'',\r\n                videoFile:null,\r\n                coverImageorVideo:null,\r\n                cover_Image_video:'',\r\n                BtnName:'Save',\r\n                disabledBtn:false,\r\n                allowCustomertoPay:0,\r\n                min_amt:'',\r\n                suggested_amt:'',\r\n                showDiv:false,\r\n                title:'',\r\n                description:'',\r\n                price:0,\r\n              });\r\n        }\r\n        openCollapse = () => {\r\n            !this.state.open ?\r\n            this.setState({ open: true })\r\n            :\r\n            this.setState({ open: false })\r\n            \r\n        }\r\n        isConfirm = () => {\r\n            confirmAlert({\r\n            title: 'Confirm !!!',\r\n            message: 'Are you sure to Exit',\r\n            buttons: [\r\n                {\r\n                label: 'Yes',\r\n                onClick: () => this.setState({confirm:true})\r\n                },\r\n                {\r\n                label: 'No',\r\n                onClick: () => this.setState({confirm:false})\r\n                }\r\n            ]\r\n            });\r\n        };\r\n        popOver=(data)=>{\r\n\r\n        }\r\n        videoonChange=(e)=>{\r\n           this.setState({ audioData: '' }); \r\n            const file = e.target.files[0];\r\n            if(typeof file!=='undefined')\r\n            {\r\n              var fileUrl = window.URL.createObjectURL(file);\r\n              this.setState({ imageFile: e.target.files[0] }); \r\n              this.setState({\r\n              videoFile: file,\r\n              videoData:fileUrl,\r\n              coverImageorVideo:null,\r\n              cover_Image_video:''\r\n              });\r\n              \r\n              this.hidePopover();\r\n            }\r\n        }\r\n        audioChange=(e)=>\r\n        {\r\n\r\n          this.setState({\r\n            videoFile: null,\r\n            videoData:'NA'\r\n            });\r\n            const file = e.target.files[0];\r\n            if(typeof file!=='undefined')\r\n            {\r\n              this.setState({ audioFile: e.target.files[0] }); \r\n              this.getBase64(file).then(\r\n                data =>{\r\n                  //console.log(data);\r\n                  this.setState({ audioData: data }); \r\n                } \r\n              );\r\n            }\r\n            \r\n        }\r\n        onClickResetAudioFile (e) {\r\n            this.setState({audioData:''}); // celears state\r\n            \r\n           }\r\n\r\n           //12-mar-2021\r\n           getBase64=(file)=> {\r\n            return new Promise((resolve, reject) => {\r\n              const reader = new FileReader();\r\n              reader.readAsDataURL(file);\r\n              reader.onload = () => resolve(reader.result);\r\n              reader.onerror = error => reject(error);\r\n            });\r\n          }\r\n\r\n        imageonChange=(e)=>{\r\n            const file = e.target.files[0];\r\n            this.setState({ coverImageorVideo: e.target.files[0] }); \r\n            this.setState({\r\n            cover_Image_video: URL.createObjectURL(file),\r\n            videoFile: null,\r\n            videoData: ''\r\n            });\r\n            this.hidePopover();\r\n        }\r\n        nextClick=(event)=>{\r\n            event.preventDefault();\r\n            document.getElementById('msg').innerHTML='';\r\n            document.getElementById('msg').style.color='red';\r\n            if(this.state.title.length ===0)\r\n            {\r\n              document.getElementById('msg').style.color='red';\r\n              document.getElementById('msg').innerHTML='* Enter Title';\r\n              return true;\r\n            }\r\n            if(this.state.description.length===0)\r\n            {\r\n              document.getElementById('msg').style.color='red';\r\n              document.getElementById('msg').innerHTML='* Enter Description';\r\n              return false;\r\n            }\r\n            if(isNaN(parseInt(this.state.price)) || parseInt(this.state.price) < 0)\r\n            {\r\n              document.getElementById('msg').style.color='red';\r\n              document.getElementById('msg').innerHTML='* Enter Price';\r\n              return false;\r\n            }\r\n                //23-aug-2021 dynamic pricing\r\n            if(this.state.allowCustomertoPay===1)\r\n            {\r\n              if( isNaN(parseInt(this.state.min_amt)) || parseInt(this.state.min_amt) < 0 )\r\n              {\r\n                document.getElementById('msg').style.color='red';\r\n                document.getElementById('msg').innerHTML='* Enter minimum amount';\r\n                return false;\r\n              }\r\n            }\r\n                  \r\n       \r\n            \r\n                //============dynamic price\r\n                const formData = new FormData(); \r\n                formData.append('DA_Allow_Cust_Pay', this.state.allowCustomertoPay )  \r\n                formData.append('DA_Min_Amount',parseInt(this.state.min_amt))\r\n                formData.append('DA_Suggested_Amont', parseInt(this.state.suggested_amt))  \r\n                let Api_url=\"\";             \r\n                if(this.state.videoFile !==null && this.state.videoData!=='NA' && this.state.videoData!=='')\r\n                  {  \r\n                      formData.append('sampleFile', this.state.videoFile);\r\n                      formData.append('DA_Type', 'video');   \r\n                      Api_url=this.state.base_url+'admin/addProduct';\r\n\r\n                                \r\n                      formData.append('DA_DA_ID', 1) // for premium featured id\r\n                      formData.append('JM_ID', this.props.JM_ID)         \r\n                      formData.append('DA_Title', this.state.title)  \r\n                      formData.append('DA_Description', this.state.description)  \r\n                      formData.append('DA_Cover', \"\") \r\n                      formData.append('DA_Price', this.state.price)      \r\n                      formData.append('JM_User_Profile_Url_plus_JM_ID',this.props.JM_User_Profile_Url + \"_\" + this.props.JM_ID)\r\n     \r\n\r\n                      this.setState({BtnName:'Uploading..',disabledBtn:true});\r\n\r\n                      try{\r\n\r\n\r\n                            fetch(Api_url, {\r\n                              method: 'POST',\r\n                              headers: { \"authorization\": API.getAuth(),\"id\":API.getId()},\r\n                              body: formData\r\n                            })\r\n                              .then(response => response.json())\r\n                              .then(data => {\r\n                                //console.log(data);\r\n                                if (data.status > 0) {\r\n                                  this.setState({ videoFile: null, videoData: 'NA', audioFile: null, audioData: '', coverImageorVideo: null, cover_Image_video: '' });\r\n                                  this.fileArray = [];\r\n                                  this.ModalClose();\r\n                                  this.props.showToast('success', 'Premium feature is added to profile');\r\n\r\n                                }\r\n                                else \r\n                                {\r\n\r\n                                  //this.props.showToast('Failed', 'Server Error');\r\n                                  API.minusResponse(data);\r\n                                  this.setState({BtnName:'Save',disabledBtn:false});\r\n                                  this.props.showToast('Failed', 'Server Error');\r\n                                }\r\n\r\n                              })\r\n                              .catch(error => \r\n                              { \r\n                                this.setState({BtnName:'Save',disabledBtn:false});\r\n                                this.props.showToast('Failed', 'Server Error');\r\n                                console.error(error)\r\n                              })\r\n                      }\r\n                      catch(e)\r\n                      {\r\n                        this.setState({BtnName:'Save',disabledBtn:false});\r\n                        this.props.showToast('Failed', 'Server Error');\r\n                      }\r\n                 \r\n                  }\r\n               else if(this.state.audioFile !==null && this.state.audioData!=='')\r\n                 {   \r\n                    formData.append('sampleFile', this.state.audioFile)\r\n                    formData.append('DA_Type', 'audio'); \r\n                    Api_url=this.state.base_url+'admin/addProduct';\r\n                          \r\n                      formData.append('DA_DA_ID', 1) // for premium featured id\r\n                      formData.append('JM_ID', this.props.JM_ID)         \r\n                      formData.append('DA_Title', this.state.title)  \r\n                      formData.append('DA_Description', this.state.description)  \r\n                      formData.append('DA_Cover', \"\") \r\n                      formData.append('DA_Price', this.state.price)      \r\n                      formData.append('JM_User_Profile_Url_plus_JM_ID',this.props.JM_User_Profile_Url + \"_\" + this.props.JM_ID)\r\n                      \r\n              \r\n                      this.setState({BtnName:'Uploading..',disabledBtn:true});\r\n\r\n                      try{\r\n\r\n                            fetch(Api_url, {\r\n                              method: 'POST',\r\n                              headers: { \"authorization\": API.getAuth(),\"id\":API.getId()},\r\n                              body: formData\r\n                            })\r\n                              .then(response => response.json())\r\n                              .then(data => {\r\n                                //console.log(data);\r\n                                if (data.status > 0) {\r\n                                  this.setState({ videoFile: null, videoData: 'NA', audioFile: null, audioData: '', coverImageorVideo: null, cover_Image_video: '' });\r\n                                  this.fileArray = [];\r\n                                  this.ModalClose();\r\n                                  this.props.showToast('success', 'Premium feature is added to profile');\r\n\r\n                                }\r\n                                else {\r\n                                  API.minusResponse(data);\r\n                                  this.props.showToast('Failed', 'Server Error');\r\n                                }\r\n\r\n                              })\r\n                              .catch(error => {\r\n                                console.error(error)\r\n                              })\r\n                      }\r\n                      catch(e)\r\n                      {\r\n                        this.setState({BtnName:'Save',disabledBtn:false});\r\n                        this.props.showToast('Failed', 'Server Error');\r\n                      }\r\n                 \r\n                 }\r\n               else if(this.state.coverImageorVideo !==null && this.state.cover_Image_video!=='')\r\n                 {   \r\n                    formData.append('sampleFile', this.state.coverImageorVideo)\r\n                    formData.append('DA_Type', 'image'); \r\n                    Api_url=this.state.base_url+'admin/addProduct';\r\n                                  \r\n                      formData.append('DA_DA_ID', 1) // for premium featured id\r\n                      formData.append('JM_ID', this.props.JM_ID)         \r\n                      formData.append('DA_Title', this.state.title)  \r\n                      formData.append('DA_Description', this.state.description)  \r\n                      formData.append('DA_Cover', \"\") \r\n                      formData.append('DA_Price', this.state.price)      \r\n                      formData.append('JM_User_Profile_Url_plus_JM_ID',this.props.JM_User_Profile_Url + \"_\" + this.props.JM_ID)\r\n               \r\n      \r\n\r\n\r\n                      this.setState({BtnName:'Uploading..',disabledBtn:true});\r\n\r\n                        try{\r\n\r\n\r\n                              fetch(Api_url, {\r\n                                method: 'POST',\r\n                                headers: { \"authorization\": API.getAuth(),\"id\":API.getId()},\r\n                                body: formData\r\n                              })\r\n                                .then(response => response.json())\r\n                                .then(data => {\r\n                                  //console.log(data);\r\n                                  if (data.status > 0) {\r\n                                    this.setState({ videoFile: null, videoData: 'NA', audioFile: null, audioData: '', coverImageorVideo: null, cover_Image_video: '' });\r\n                                    this.fileArray = [];\r\n                                    this.ModalClose();\r\n                                    this.props.showToast('success', 'Premium feature is added to profile');\r\n\r\n                                  }\r\n                                  else \r\n                                  {\r\n                                    API.minusResponse(data);\r\n                                    this.props.showToast('Failed', 'Server Error');\r\n                                  }\r\n\r\n                                })\r\n                                .catch(error => {\r\n                                  //console.error(error)\r\n\r\n                                })\r\n                        }\r\n                        catch(e)\r\n                        {\r\n                          this.setState({BtnName:'Save',disabledBtn:false});\r\n                          this.props.showToast('Failed', 'Network Error');\r\n                        }\r\n                        \r\n\r\n                 }\r\n                 else\r\n                 {\r\n                               \r\n                           Api_url=this.state.base_url+'admin/addProductNoFile';\r\n                        \r\n                            let flagData = {\r\n                              DA_DA_ID:1,\r\n                              JM_ID: this.props.JM_ID,\r\n                              DA_Title: this.state.title,\r\n                              DA_Description: this.state.description,\r\n                              DA_Price: this.state.price,\r\n                              DA_Allow_Cust_Pay: isNaN(parseInt(this.state.allowCustomertoPay)) ? 0: parseInt(this.state.allowCustomertoPay),\r\n                              DA_Min_Amount: isNaN(parseInt(this.state.min_amt)) ? 0: parseInt(this.state.min_amt),\r\n                              DA_Suggested_Amont: isNaN(parseInt(this.state.suggested_amt)) ? 0: parseInt(this.state.suggested_amt), \r\n\r\n                         };\r\n                         const flag=API.encryptData(flagData);\r\n                        var JSONdata = {\r\n                           flag: flag\r\n                         };\r\n                     \r\n                        //  var JSONdata={\r\n                        //   DA_DA_ID:1,\r\n                        //   JM_ID: this.props.JM_ID,\r\n                        //   DA_Title: this.state.title,\r\n                        //   DA_Description: this.state.description,\r\n                        //   DA_Price: this.state.price,\r\n                        //   DA_Allow_Cust_Pay: isNaN(parseInt(this.state.allowCustomertoPay)) ? 0: parseInt(this.state.allowCustomertoPay),\r\n                        //   DA_Min_Amount: isNaN(parseInt(this.state.min_amt)) ? 0: parseInt(this.state.min_amt),\r\n                        //   DA_Suggested_Amont: isNaN(parseInt(this.state.suggested_amt)) ? 0: parseInt(this.state.suggested_amt), \r\n\r\n                        // }          \r\n                        \r\n                        \r\n\r\n                        try{\r\n                          \r\n                          fetch(Api_url, {\r\n                            method: 'POST',\r\n                            headers: { \"Content-Type\": \"application/json\" ,\"authorization\": API.getAuth(),\"id\":API.getId()},\r\n                            body: JSON.stringify(JSONdata)\r\n                          })\r\n                            .then(response => response.json())\r\n                            .then(data => {\r\n                              //console.log(data);\r\n                              if (data.status > 0) {\r\n                                this.setState({ videoFile: null, videoData: 'NA', audioFile: null, audioData: '', coverImageorVideo: null, cover_Image_video: '' });\r\n                                this.fileArray = [];\r\n                                this.ModalClose();\r\n                                this.props.showToast('success', 'Premium feature is added to profile');\r\n\r\n                              }\r\n                              else \r\n                              {\r\n                               \r\n                                    API.minusResponse(data);\r\n                                   this.props.showToast('Failed', 'Server Error');                              \r\n\r\n                              }\r\n\r\n                            })\r\n                            .catch(error => {\r\n                              console.error(error)\r\n                            })\r\n                    }\r\n                    catch(e)\r\n                    {\r\n                      this.setState({BtnName:'Save',disabledBtn:false});\r\n                      this.props.showToast('Failed', 'Server Error');\r\n                    }\r\n             \r\n                 }\r\n           \r\n          \r\n        }\r\n\r\n     \r\n\r\n\r\n        validation =()=>{\r\n             \r\n              \r\n                if(this.state.title.length > 0 && this.state.description.length > 0 && parseInt(this.state.price) > 0)\r\n                    return true;\r\n                else\r\n                    return false;         \r\n               \r\n        }\r\n        handleChange=(e)=>{\r\n            let val=parseFloat(e.target.value);\r\n        this.setState({[e.target.name]:e.target.value})\r\n        let chargesInfo=\"\";\r\n        if(e.target.name==='price' && val > 0)\r\n            {\r\n              let fee=val * API.razorPayTax();\r\n              let gst=fee * API.razorPayGST();         \r\n              let razorPay=(fee+gst); // 1.65 + 0.297\r\n              let TenPer=(val - razorPay) * 10/100; // 10 if val is 100                  \r\n              let charges= val - razorPay - TenPer; // 100 - 1.65- 0.297                      \r\n              let chargesInfo=\"You'll receive INR \"+ charges.toFixed(2) + \" \";\r\n              //let chargesInfo=\"You'll receive on average \";\r\n              let showIconCharges='block';\r\n                this.setState({chargesInfo,showIconCharges});\r\n            }\r\n            else\r\n            {\r\n                let chargesInfo=\"\";\r\n                let showIconCharges='none';\r\n                this.setState({chargesInfo,showIconCharges});\r\n   \r\n            }\r\n            \r\n            \r\n        }\r\n        hidePopover=()=>{\r\n            document.getElementById(\"popover-basic\").style.display='none';\r\n        }\r\n        handleClose=()=>{\r\n            this.setState({toolTip:true});\r\n        }\r\n        handleOpen=()=>{\r\n            this.setState({toolTip:false});\r\n        }\r\n        \r\n\r\n        imageonMultiChange(e) {\r\n            var numFiles = e.target.files.length; \r\n            for (var i = 0, numFiles = e.target.files.length; i < numFiles; i++) \r\n            { \r\n            var file = e.target.files[i];\r\n            this.albumArray.push(URL.createObjectURL(file));\r\n            //this.fileArray.push(URL.createObjectURL(this.fileObj[0][i]))\r\n            this.Files.push(file);\r\n            }\r\n\r\n            this.setState({ album: this.albumArray })\r\n\r\n        }\r\n\r\n        hideToast=()=>{\r\n          this.setState({showAlert:false})\r\n        }\r\n        showToast =() =>{\r\n          this.setState({showAlert:true})\r\n        }\r\n\r\n        overlayClick=(e)=>{\r\n          this.setState({\r\n            OverlayTrigger:e.target,\r\n            Overlayshow:true\r\n          })\r\n        }\r\n\r\n        onchangeCheck=(e)=>{\r\n          if(e.target.checked===true)\r\n          {\r\n            this.setState({\r\n              allowCustomertoPay:1,\r\n              showDiv:true,\r\n              price:0\r\n            })\r\n            let chargesInfo=\"\";\r\n            let showIconCharges='none';\r\n            this.setState({chargesInfo,showIconCharges});\r\n            document.getElementById('price').disabled=true;\r\n          }\r\n          else\r\n          {\r\n            this.setState({\r\n              allowCustomertoPay:0,\r\n              showDiv:false\r\n            })\r\n            document.getElementById('price').disabled=false;\r\n          }\r\n        }\r\n    render() {\r\n\r\n        const longText = `\r\n        Aliquam eget finibus ante, non facilisis lectus. Sed vitae dignissim est, vel aliquam tellus.\r\n        Praesent non nunc mollis, fermentum neque at, semper arcu.\r\n        Nullam eget est sed sem iaculis gravida eget vitae justo.\r\n        `;\r\n        \r\n        const useStyles = {\r\n          button: {\r\n            margin: '5px',\r\n          },\r\n          customWidth: {\r\n            maxWidth: 500,\r\n            fontSize:'25px',\r\n           \r\n          },\r\n          noMaxWidth: {\r\n            maxWidth: 'none',\r\n          },\r\n        };\r\n        //let chargesMessage=\"You receive 90% of the transaction value minus a 2% transaction fee that is collected by our payment provider.\";\r\n        let chargesMessage=API.chargesMessage();\r\n        \r\n        const HtmlTooltip = withStyles((theme) => ({\r\n          arrow: {\r\n            color: theme.palette.common.black,\r\n          },\r\n          tooltip: {\r\n            backgroundColor: '#212529',\r\n            color: 'white',\r\n            maxWidth: '50%',\r\n            fontSize: theme.typography.pxToRem(10),\r\n            // border: '1px solid #dadde9',\r\n          },\r\n        }))(Tooltip);\r\n        \r\n        const iconStyle={\r\n            display:this.state.showIconCharges,\r\n            fontSize: \"23px\",\r\n            color: \"gray\"\r\n        }\r\n        const chargesStyle={\r\n          fontFamily: \"consolas\",\r\n          fontSize: \"13px\",\r\n          textTransform: \"capitalize\",\r\n          marginTop: \"-6%\",\r\n          fontWeight: \"bold\",\r\n          color: \"gray\",\r\n        }\r\n        \r\n        let typeOfProduct;\r\n        \r\n          typeOfProduct= <> <div className=\"col-md-8\">\r\n                              <label for=\"upImage\" style={{    marginTop: \"10px\"}}>\r\n                                  Upload an intro Photo or Video (optional)       \r\n                              </label>\r\n                          </div>  \r\n                          <div className=\"col-md-10 offset-md-1\">           \r\n                            {\r\n                               this.state.videoData!=='NA' && this.state.videoData!=='' ?              \r\n                                    <video className=\"img-thumbnail-custom\" width=\"100%\" controls src={this.state.videoData} type=\"video/mp4\" >                                   \r\n                                    </video>\r\n                                    : null\r\n                            }\r\n                            {\r\n                            this.state.audioData!=='' ?     \r\n                                <audio autoplay controls src={this.state.audioData}>\r\n                                  The “audio tag is not supported by your browser.\r\n                                </audio>\r\n                                : \r\n                                null\r\n                            }\r\n                            {\r\n                               this.state.cover_Image_video!=='NA' && this.state.cover_Image_video!=='' ?              \r\n                                    <img className=\"img-thumbnail-custom\" width=\"200px\"  src={this.state.cover_Image_video} type=\"image/*\" >                                   \r\n                                    </img>\r\n                                    : null\r\n                            }\r\n                           </div>  \r\n                          </>\r\n      \r\n\r\n    let type='video';\r\n    const popover = (\r\n      <Popover id=\"popover-basic\" style={{zIndex:'99999'}}>\r\n         <button type=\"button\" className=\"pop-close\"><span aria-hidden=\"true\" onClick={this.hidePopover}>×</span>\r\n          <span className=\"sr-only\">Close</span>\r\n        </button>\r\n        <Popover.Title as=\"h6\"><h6>Select  video or Photo</h6>\r\n       \r\n        </Popover.Title>\r\n        <Popover.Content>\r\n          {           \r\n            type==='video' ?   \r\n            <>         \r\n             <label htmlFor=\"video\" style={{cursor:'pointer'}}><h6>Video</h6></label> <PersonalVideoIcon/>  <br/>\r\n             {/* <label htmlFor=\"audio\" style={{cursor:'pointer'}}><h6>Audio</h6></label> <AudiotrackIcon/>   */}\r\n      \r\n             <label htmlFor=\"photo\" style={{cursor:'pointer'}}><h6>Photo</h6></label> <ImageIcon/>  \r\n             </>            \r\n            : null\r\n          \r\n          }\r\n          \r\n        </Popover.Content>    \r\n       \r\n      </Popover>\r\n    );\r\n\r\n    const popover2 = (\r\n      <Popover id=\"popover-basic\" style={{zIndex:'99999',background: 'black',color:'#fff'}}  >\r\n         <button type=\"button\" className=\"pop-close\"><span aria-hidden=\"true\" onClick={this.hidePopover}>×</span>\r\n          <span className=\"sr-only\">Close</span>\r\n        </button>       \r\n        <Popover.Content style={{background: 'black',color:'#fff'}}>\r\n        {chargesMessage}\r\n          \r\n        </Popover.Content>    \r\n       \r\n      </Popover>\r\n    );\r\n\r\n        return (\r\n            <>\r\n                   <div className=\"col-md-3\">\r\n                        <div className=\"item\">\r\n                          <div className=\"icon\">\r\n                            <PlayCircleOutlineIcon style={{fontSize: '50px'}}/>\r\n                          </div>\r\n                          <div className=\"text\">\r\n                            <h4>Personalized Video Or Audio Message</h4>                           \r\n                            <button class=\"btun\"  onClick={this.ModalOpen}><AddCircleOutlineIcon/> Add This</button>\r\n                          \r\n                          </div>\r\n                        </div>\r\n                    </div>\r\n                 \r\n       <Modal\r\n        show={this.state.show}\r\n        onHide={this.ModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}         \r\n        size=\"lg\"\r\n        contentClassName=\"modal-radius\"\r\n        centered\r\n\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <p className=\"addnew-title\">Personalized Video Or Audio Message</p>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"direct-access-pop\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-2 setCursor\">\r\n                    <center>\r\n                      <OverlayTrigger  trigger=\"click\" placement=\"bottom\" overlay={popover}>\r\n                        <div className=\"up-ico\" >\r\n                           <AddIcon style={{fontSize:'25px'}}/>\r\n                         </div>\r\n                      </OverlayTrigger >                       \r\n                    </center>     \r\n              </div>\r\n                   {/* <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popoverNew}>\r\n                    <Button variant=\"success\">Click me to see</Button>\r\n                  </OverlayTrigger> */}\r\n              {\r\n               typeOfProduct\r\n              }\r\n              <form>                          \r\n                <input type=\"file\" id=\"video\" accept=\".mp4\" style={{display:'none'}} onChange={this.videoonChange}/>      \r\n             </form>   \r\n             <form>                          \r\n                <input type=\"file\" id=\"audio\" accept=\"audio/*\" style={{display:'none'}} onChange={this.audioChange}/>      \r\n             </form>\r\n             <form>                          \r\n                <input type=\"file\" id=\"photo\" accept=\"image/*\" style={{display:'none'}} onChange={this.imageonChange}/>      \r\n             </form>\r\n              <div className=\"col-md-12\">\r\n                <input type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleChange} className=\"form-control\" placeholder=\"Enter Title\" />       \r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <textarea className=\"form-control area\" name=\"description\" onChange={this.handleChange} \r\n                placeholder=\"Enter description\"/>\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <input type=\"text\" name=\"price\" id=\"price\" value={this.state.price}  onChange={this.handleChange} \r\n                className=\"form-control\" placeholder=\"Enter Price\" \r\n                onKeyPress={(event) => {\r\n                  if (!/[0-9]/.test(event.key)) {\r\n                      event.preventDefault();\r\n                  }\r\n              }}\r\n                />       \r\n              </div>\r\n              <div className=\"col-md-12 desktopCharge\" >\r\n                  <HtmlTooltip arrow\r\n                      title={\r\n                        <React.Fragment>\r\n                          <Typography color=\"inherit\">Transaction Info</Typography>                \r\n                          <p style={{fontFamily:'monospace',fontSize:'12px'}}>{chargesMessage}</p>\r\n                        </React.Fragment>\r\n                      } placement=\"top-start\"\r\n                    >\r\n                  <Button style={chargesStyle}>{this.state.chargesInfo}\r\n                       <i class=\"fa fa-question-circle\" aria-hidden=\"true\" \r\n                      style={iconStyle}></i>\r\n                  </Button>\r\n                      \r\n                </HtmlTooltip>\r\n               \r\n              </div>\r\n               <div className=\"col-md-12 mobileCharge\" style={{fontFamily: 'consolas', fontSize: '13px',textTransform: 'capitalize'}}>\r\n                      &nbsp;{this.state.chargesInfo}\r\n                     <OverlayTrigger  className=\"mobile\" style={chargesStyle} trigger=\"click\" placement=\"top\" overlay={popover2}>           \r\n                         <i class=\"fa fa-question-circle\" aria-hidden=\"true\"  style={iconStyle}></i>                     \r\n                      </OverlayTrigger >  \r\n                </div>  \r\n\r\n                <div className=\"col-md-12\">\r\n                        <label >\r\n                               <strong>  \r\n                                  Settings \r\n                              </strong>     \r\n                       </label>\r\n                </div>                  \r\n                <div className=\"col-md-8 col-9\">\r\n                    <label >\r\n                    Let your followers pay what they want     \r\n                      </label>\r\n                </div>  \r\n                <div className=\"col-md-4 col-3\">\r\n                    \r\n                    <label class=\"switch\"  for=\"allowCustomertoPay\">\r\n                    <input type=\"checkbox\" id=\"allowCustomertoPay\" onChange={this.onchangeCheck} />\r\n                        <div class=\"slider round\"></div>\r\n                      </label>\r\n                </div>\r\n                {\r\n                  this.state.showDiv===true ?      \r\n                  <>            \r\n                        <div className=\"col-md-6\">\r\n                        <label >\r\n                               <strong>  \r\n                                  Minimum Amount \r\n                              </strong>     \r\n                       </label>\r\n                        <input type=\"text\" name=\"min_amt\" \r\n                          value={this.state.min_amt} onChange={this.handleChange} \r\n                          className=\"form-control\" placeholder=\"Enter Price\" \r\n                          onKeyPress={(event) => {\r\n                            if (!/[0-9]/.test(event.key)) {\r\n                              event.preventDefault();\r\n                            }\r\n                          }}\r\n                          />       \r\n                       <p style={{fontSize:'12px',fontWeight:'600'}}>{API.dynamicPriceMessage()}</p>\r\n                      </div>\r\n                    <div className=\"col-md-6\" style={{display:'none'}}>\r\n                    <label >\r\n                               <strong>  \r\n                                  Suggested Amount \r\n                              </strong>     \r\n                       </label>\r\n                      <input type=\"text\" name=\"suggested_amt\" \r\n                      value={this.state.suggested_amt} onChange={this.handleChange} \r\n                      className=\"form-control\" placeholder=\"Enter Price\" \r\n                      onKeyPress={(event) => {\r\n                        if (!/[0-9]/.test(event.key)) {\r\n                          event.preventDefault();\r\n                        }\r\n                      }}\r\n                      />       \r\n                    </div>\r\n                  </>\r\n                  :\r\n                  null\r\n                }\r\n               \r\n\r\n            </div>\r\n            <div className=\"btun-box\">\r\n              <button className=\"btun\"  onClick={this.nextClick} disabled={this.state.disabledBtn}> {this.state.BtnName} <NavigateNextIcon/></button>\r\n               <p id=\"msg\"></p> \r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n\r\n      </Modal>\r\n\r\n    \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nVideoAudioMessage.propTypes = {\r\n\r\n};\r\n\r\nexport default VideoAudioMessage;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\Checkout_videoSession.js",["2879","2880"],"import React from 'react';\r\n\r\nimport config from './config'\r\nimport API  from '../services/API';\r\nclass Checkout extends React.Component {\r\n  typingPrice=0;\r\n  state={\r\n    paymentId:'',\r\n    isloading:false,\r\n    disabled:false,\r\n    msgColor:'',\r\n    base_url: process.env.REACT_APP_API_URL,\r\n    root_url: process.env.REACT_APP_ROOT_URL,\r\n    cashfreePayUrl: config.paths[config.enviornment].cashfreePayUrl,\r\n    appId: config.appIdSecretKey[config.enviornment].appId,\r\n    secretKey: config.appIdSecretKey[config.enviornment].secretKey,\r\n  }\r\n\r\n\r\n   \r\n\r\n  constructor() {\r\n    super()\r\n    this.openCheckout = this.openCheckout.bind(this);\r\n  }\r\n  componentDidMount()\r\n  {\r\n    //console.log(this.props.session_date);\r\n   // console.log(this.props.session_timeing);\r\n   // console.log(this.props.state)\r\n   // console.log(this.props.userDetails)    \r\n   // console.log(config.paths[config.enviornment].cashfreePayUrl)\r\n  }\r\n \r\n  async CapturePayment(razorpay_payment_id,responseData)\r\n  {\r\n            // this.setState({\r\n            //   isloading:true\r\n            // });\r\n      try {\r\n            const paymentId = razorpay_payment_id;         \r\n            const payUrl = process.env.REACT_APP_API_URL+'admin/videoSession';\r\n            var flagData = {\r\n              DA_ID:this.props.state.DA_ID,\r\n              BM_Instruction:this.props.state.video_instruction,\r\n              BM_Name:this.props.state.video_name,\r\n              BM_Email:this.props.state.video_email,\r\n              BM_Phone:this.props.state.video_phone,\r\n              BM_Password:'xxxxxxxx',\r\n              BM_Purchase_Amt:this.props.DA_Price > 0 ? this.props.DA_Price : this.typingPrice,\r\n              paymentId:paymentId,\r\n              amount:this.props.DA_Price,\r\n              Consent:0,\r\n              JM_Name:this.props.userDetails.JM_Name,\r\n              DA_Title:this.props.state.DA_Title,\r\n              LM_ID:this.props.state.LM_ID,\r\n              JM_Email:this.props.userDetails.JM_Email,\r\n              JM_Phone:this.props.userDetails.JM_Phone,\r\n              mailText:this.props.state.mailText,\r\n              session_date:this.props.session_date,\r\n              session_timeing:this.props.session_timeing,\r\n              ES_ID:this.props.ES_ID,\r\n              userDetails:this.props.userDetails,\r\n              JM_User_Profile_Url:this.props.userDetails.JM_User_Profile_Url,\r\n              responseData:responseData,\r\n            };\r\n            \r\n            let token=API.encryptData(paymentId);\r\n            const flag=API.encryptData(flagData);\r\n            let  JSONdata = {\r\n                flag : flag\r\n              };\r\n\r\n\r\n            document.getElementById('btn_payout').innerHTML='Processing...';\r\n            document.getElementById('btn_payout').disabled=true;\r\n            const response= await fetch(payUrl,{\r\n                method: 'post',\r\n                headers: { \"Content-Type\": \"application/json\",\"token\":token },\r\n                body: JSON.stringify(JSONdata)\r\n            });\r\n            const data=await response.json();\r\n            if(data.status === 1)\r\n            {              \r\n              document.getElementById('request').innerHTML='';\r\n              var p = document.createElement('p');\r\n              p.innerHTML= API.paidMonitizationMsg();  \r\n              p.style.color='green'\r\n              document.getElementById('request').appendChild(p);\r\n              this.WaitAndReload();\r\n         \r\n            }\r\n            else\r\n            {           \r\n              // document.getElementById('request').innerHTML='';\r\n              // var p = document.createElement('p');\r\n              // p.innerHTML= API.paidMonitizationMsg();  \r\n              // p.style.color='green'\r\n              // document.getElementById('request').appendChild(p);\r\n              // this.WaitAndReload();\r\n\r\n               //do rest if payment done but data not captured\r\n               this.setState({\r\n                isloading:false,        \r\n                message:'Internal error - Please contact Expy support',\r\n                msgColor:\"#ff5f70\"\r\n              }); \r\n              //do rest if payment done but data not captured\r\n              const url = process.env.REACT_APP_API_URL+'admin/dataUncaptured';\r\n              const response1= await fetch(url,{\r\n                method: 'post',\r\n                headers: { \"Content-Type\": \"application/json\" ,\"token\":token},\r\n                body: JSON.stringify(JSONdata)\r\n               });\r\n               const resp=await response1.json();\r\n       \r\n            }\r\n      } \r\n      catch (err) \r\n      {\r\n       // console.log(err);\r\n      }\r\n  }\r\n  //BM_Type\r\n  async CapturePaymentDoner(razorpay_payment_id,responseData){\r\n    this.setState({\r\n      isloading:true\r\n    });\r\n  try {\r\n\r\n\r\n    const paymentId = razorpay_payment_id;         \r\n    const payUrl = process.env.REACT_APP_API_URL+'admin/addDoner';\r\n    var JSONdata = {\r\n      DA_ID:this.props.state.DA_ID,\r\n      BM_Instruction:this.props.state.BM_Instruction,\r\n      BM_Name:this.props.state.BM_Name,\r\n      BM_Email:this.props.state.BM_Email,\r\n      BM_Phone:this.props.state.BM_Phone,\r\n      BM_Password:this.props.state.BM_Password,\r\n      BM_Purchase_Amt:this.props.DA_Price,\r\n      paymentId:paymentId,\r\n      amount:this.props.DA_Price,\r\n      DA_Title:this.props.state.DA_Title,\r\n      JM_Name:this.props.state.JM_Name,\r\n      JM_ID:this.props.JM_ID,\r\n      LM_ID:this.props.state.LM_ID,\r\n      JM_User_Profile_Url:this.props.userDetails.JM_User_Profile_Url,\r\n      JM_Email:this.props.userDetails.JM_Email,\r\n      JM_Phone:this.props.userDetails.JM_Phone,\r\n      session_date:this.props.session_date,\r\n      session_timeing:this.props.session_timeing,\r\n      ES_ID:this.props.ES_ID,\r\n      userDetails:this.props.userDetails,\r\n      responseData:responseData\r\n    };\r\n    const response= await fetch(payUrl,{\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(JSONdata)\r\n    });\r\n    const data=await response.json();\r\n    if(data.status === 1)\r\n    {\r\n     // console.log(data)\r\n      this.setState({\r\n        isloading:false,\r\n        message:'Payment is Successfully captured ',\r\n        msgColor:\"#ff9272\",\r\n      });   \r\n\r\n      this.WaitAndReload();\r\n      \r\n    }\r\n    else\r\n    {\r\n    \r\n      this.setState({\r\n        isloading:false,\r\n        //message:'Payment is Successfully captured ',\r\n        message:'Failed to capture payment',\r\n        msgColor:\"#ff5f70\"\r\n      });\r\n    \r\n    }\r\n  } \r\n  catch (err) \r\n  {\r\n // console.log(err);\r\n  }\r\n  }\r\n\r\n  async openCheckout()\r\n  {\r\n\r\n    var isFree=false;\r\n    this.setState({\r\n      message:'',  msgColor:''\r\n    })\r\n\r\n    if(this.props.state.dateString.length===0)\r\n    {\r\n  \r\n      this.setState({\r\n        message:'* Select Date',\r\n        msgColor:'red'\r\n      })\r\n        return false;\r\n    }\r\n    if(parseInt(this.props.state.slot_dropdown)===0)\r\n    {\r\n\r\n      this.setState({\r\n        message:'* Select Slot',\r\n        msgColor:'red'\r\n      })\r\n        return false;\r\n    }\r\n\r\n\r\n    if(this.props.state.video_name.length===0 && this.props.state.DA_DA_ID===5 )\r\n    {\r\n\r\n      this.setState({\r\n        message:'* Enter name',\r\n        msgColor:'red'\r\n      })\r\n        return false;\r\n    }\r\n    \r\n    if(this.props.state.video_email.length === 0)\r\n    {            \r\n      this.setState({\r\n        message:'* Enter valid email-id',  msgColor:'red'\r\n      })\r\n      return false\r\n      \r\n    } \r\n    if(API.isValidEmail(this.props.state.video_email)===false)\r\n    {\r\n      this.setState({\r\n        message:'* Enter valid email-id',  msgColor:'red'\r\n      })\r\n      return false\r\n    } \r\n    if(this.props.state.video_phone.length === 0 )\r\n    {            \r\n      this.setState({\r\n        message:'* Enter phone number',  msgColor:'red'\r\n      })\r\n      return false\r\n      \r\n    } \r\n    if(this.props.state.video_phone.length !==10 )\r\n    {            \r\n      this.setState({\r\n        message:'* Enter 10 digits phone number',  msgColor:'red'\r\n      })\r\n      return false\r\n      \r\n    } \r\n\r\n    if(this.props.DA_Allow_Cust_Pay === 1 && parseInt(this.props.productList.DA_Min_Amount)===0) //free\r\n    {\r\n      \r\n      if(isNaN(parseInt(this.props.state.dynamic_price)) || parseInt(this.props.state.dynamic_price) === 0)\r\n      {\r\n        isFree=true;\r\n      }\r\n\r\n    }\r\n    else if(this.props.DA_Allow_Cust_Pay === 1 && parseInt(this.props.productList.DA_Min_Amount) > 0) \r\n    {\r\n\r\n      if((this.props.DA_Price > 0) && this.props.DA_Price < parseInt(this.props.productList.DA_Min_Amount))\r\n      {\r\n  \r\n        this.setState({\r\n          message:'*Minimum amount required is '+this.props.DA_INR_Doller + ' '+this.props.productList.DA_Min_Amount,\r\n          msgColor:'red'\r\n        })\r\n          return false;\r\n      }\r\n      else if(this.props.DA_Price===0)\r\n      {\r\n        this.typingPrice= parseInt(this.props.productList.DA_Min_Amount) * 100;\r\n      }\r\n\r\n    }\r\n    if(this.props.DA_Allow_Cust_Pay === 0 && parseInt(this.props.DA_Price)===0) //free\r\n    {\r\n      \r\n      if(parseInt(this.props.state.dynamic_price) === 0)\r\n      {\r\n        isFree=true;\r\n      }\r\n\r\n    }\r\n    if(isFree===true)\r\n    {\r\n      this.freeCapture();\r\n      return false;\r\n    }\r\n    else\r\n    {\r\n\r\n        var DA_Price=0;    \r\n          DA_Price=this.props.DA_Price > 0 ? this.props.DA_Price * 100 : this.typingPrice; \r\n          var leadPrice=parseFloat(DA_Price/100);\r\n            this.props.AddLeadsVideo(leadPrice);\r\n\r\n             \r\n              const API_url = process.env.REACT_APP_API_URL+'admin/order';  \r\n                var flagData = {\r\n                  amount:DA_Price,\r\n                  currency:this.props.DA_INR_Doller,                \r\n                  Product_Id:this.props.state.DA_ID,\r\n                  Name:this.props.name,\r\n                  Email:this.props.email,\r\n                  DA_Price:this.props.DA_Price,  \r\n\r\n                };   \r\n              \r\n                const flag=API.encryptData(flagData);\r\n                let  JSONdata = {\r\n                    flag: flag\r\n                  };\r\n          \r\n\r\n                const response=await fetch(API_url,{\r\n                      method: 'post',\r\n                      headers: { \"Content-Type\": \"application/json\" },\r\n                      body: JSON.stringify(JSONdata)\r\n                    });\r\n                    \r\n                    \r\n                  const data1=await response.json();              \r\n                  const data=API.decryptJson(data1.flag)\r\n\r\n                    let options = {\r\n                      \"key\": process.env.REACT_APP_RAZOR_PAY_TEST_KEY,\r\n                      \"amount\":DA_Price, // 2000 paise = INR 20, amount in paisa\r\n                      \"name\": \"Expy\",\r\n                      \"description\": \"Purchase Description\",\r\n                      \"image\": \"/favicon.png\",\r\n                      \"order_id\": data.id,\r\n                      \"method\": 'wallet',\r\n                      \"wallet\": 'paypal',\r\n                      \"handler\":  response => \r\n                      {        \r\n                        //console.log(response.razorpay_payment_id);\r\n                        if(this.props.BM_Type==='D')\r\n                          this.CapturePaymentDoner(response.razorpay_payment_id,response);\r\n                        else\r\n                          this.CapturePayment(response.razorpay_payment_id,response);\r\n                      },\r\n                      \"prefill\": {\r\n                        \"name\": this.props.name,\r\n                        \"email\": this.props.email,\r\n                        \"contact\":this.props.phone\r\n                      },\r\n                      \"notes\": {\r\n                        \"address\": \"\"\r\n                      },\r\n                      \"theme\": {\r\n                        \"color\": \"#fa217c\"\r\n                      }\r\n                    };\r\n\r\n                    let rzp = new window.Razorpay(options);\r\n                    rzp.open();\r\n    }\r\n  }\r\n\r\n  WaitAndReload=()=>{\r\n    setTimeout(function() {\r\n      window.location.reload();\r\n     }, 3000);    \r\n     \r\n  }\r\n\r\n  async freeCapture(){\r\n\r\n    try {\r\n      const paymentId = API.randomString(10);        \r\n      let payUrl=\"\";\r\n\r\n      payUrl = process.env.REACT_APP_API_URL+'admin/videoSessionFree';   \r\n\r\n       var flagData = {\r\n              DA_ID:this.props.state.DA_ID,\r\n              BM_Instruction:this.props.state.video_instruction,\r\n              BM_Name:this.props.state.video_name,\r\n              BM_Email:this.props.state.video_email,\r\n              BM_Phone:this.props.state.video_phone,\r\n              BM_Password:'xxxxxxxx',\r\n              BM_Purchase_Amt:this.props.DA_Price,\r\n              paymentId:paymentId,\r\n              amount:0,\r\n              Consent:0,\r\n              JM_Name:this.props.userDetails.JM_Name,\r\n              DA_Title:this.props.state.DA_Title,\r\n              LM_ID:this.props.state.LM_ID,\r\n              JM_Email:this.props.userDetails.JM_Email,\r\n              JM_Phone:this.props.userDetails.JM_Phone,\r\n              mailText:this.props.state.mailText,\r\n              session_date:this.props.session_date,\r\n              session_timeing:this.props.session_timeing,\r\n              ES_ID:this.props.ES_ID,\r\n              userDetails:this.props.userDetails,\r\n              JM_User_Profile_Url:this.props.userDetails.JM_User_Profile_Url,\r\n            };\r\n\r\n    \r\n      const flag=API.encryptData(flagData);\r\n      var JSONdata={\r\n        flag:flag\r\n      }\r\n\r\n\r\n      document.getElementById('btn_payout').innerHTML='Processing...';\r\n      document.getElementById('btn_payout').disabled=true;\r\n\r\n      const token=API.encryptData(paymentId)\r\n      const response= await fetch(payUrl,{\r\n          method: 'post',\r\n          headers: { \"Content-Type\": \"application/json\" ,\"token\":token},\r\n          body: JSON.stringify(JSONdata)\r\n      });\r\n      const data=await response.json();\r\n      if(data.status === 1)\r\n      {\r\n\r\n     \r\n            document.getElementById('request').innerHTML='';\r\n            var p = document.createElement('p');\r\n            p.innerHTML= API.freeMonitizationMsg();  \r\n            p.style.color='green'\r\n            document.getElementById('request').appendChild(p);\r\n            this.WaitAndReload();\r\n       \r\n      }\r\n      else\r\n      {           \r\n        document.getElementById('request').innerHTML='';\r\n        var p = document.createElement('p');\r\n        p.innerHTML= API.freeMonitizationMsg();  \r\n        p.style.color='green'\r\n        document.getElementById('request').appendChild(p);\r\n        this.WaitAndReload();\r\n      }\r\n} \r\ncatch (err) \r\n{\r\n  //console.log(err);\r\n}\r\n\r\n}\r\n  render(){\r\n  return (\r\n    <>\r\n      <div>\r\n        {/*<input type='text' onChange={\r\n           this.changeAmount\r\n          } />*/}\r\n        {/* <button onClick={this.openCheckout}>Pay Rs. {this.state.amount/100}</button>  */}\r\n                     <button onClick={this.openCheckout} class=\"btun\" id=\"btn_payout\" disabled={this.state.disabled}> \r\n                                                {\r\n                                                     this.props.DA_Allow_Cust_Pay===0 && this.props.DA_Price > 0?\r\n\r\n                                                            this.props.DA_INR_Doller==='INR' ?\r\n                                                                  \"Pay Rs.\" + this.props.DA_Price\r\n                                                            :\r\n                                                                  \"Pay $\" + this.props.DA_Price\r\n                                                      :\r\n                                                      \"Get\"\r\n\r\n                                                  }\r\n\r\n                                                  {/* {\r\n                                                    this.state.isloading?\r\n                                                      <i class=\"fa fa-spinner fa-spin\" style={{marginLeft: '20px',fontSize: '31px',float: 'right'}}></i>\r\n                                                    :\r\n                                                      null\r\n                                                  } */}\r\n                                                 \r\n                                                  </button>\r\n                                                  <span id=\"msg\" style={{color:this.state.msgColor,fontSize:'15px'}}>{this.state.message}</span>\r\n                               {/* <div class=\"spinner-grow\" style=\"width: 3rem; height: 3rem;\" role=\"status\">\r\n                                <span class=\"sr-only\">Loading...</span>\r\n                              </div> */}\r\n                                              \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n}\r\n\r\nexport default Checkout;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\Checkout.js",["2881","2882","2883","2884","2885","2886","2887","2888","2889","2890","2891","2892","2893","2894","2895","2896","2897","2898","2899","2900","2901","2902"],"import React from 'react';\r\nimport config from './config'\r\nimport API  from \"../services/API\";\r\nclass Checkout extends React.Component {\r\n  typingPrice=0;\r\n  state={\r\n    paymentId:'',\r\n    isloading:false,\r\n    disabled:false,\r\n    msgColor:'',\r\n    base_url: process.env.REACT_APP_API_URL,\r\n    root_url: process.env.REACT_APP_ROOT_URL,\r\n    cashfreePayUrl: config.paths[config.enviornment].cashfreePayUrl,\r\n    appId: config.appIdSecretKey[config.enviornment].appId,\r\n    secretKey: config.appIdSecretKey[config.enviornment].secretKey,\r\n    LM_ID:0,\r\n    dynamic_price:0\r\n  }\r\n\r\n\r\n   \r\n\r\n  constructor() {\r\n    super()\r\n    this.openCheckout = this.openCheckout.bind(this);\r\n  }\r\n  componentDidMount()\r\n  {\r\n    this.setState(this.props.productList);\r\n    //console.log(this.props.state)\r\n   // console.log(this.props.userDetails)    \r\n   // console.log(config.paths[config.enviornment].cashfreePayUrl)\r\n  }\r\n \r\n  async CapturePayment(razorpay_payment_id,responseData)\r\n  {\r\n            // this.setState({\r\n            //   isloading:true\r\n            // });\r\n            \r\n      try {\r\n            const paymentId = razorpay_payment_id;         \r\n            const payUrl = process.env.REACT_APP_API_URL+'admin/capture';\r\n            var flagData = {\r\n              DA_ID:this.props.state.DA_ID,\r\n              BM_Instruction:this.props.state.BM_Instruction,\r\n              BM_Name:this.props.state.BM_Name,\r\n              BM_Email:this.props.state.BM_Email,\r\n              BM_Phone:this.props.state.BM_Phone,\r\n              BM_Password:this.props.state.BM_Password,\r\n              BM_Purchase_Amt:this.props.DA_Price > 0 ? this.props.DA_Price : this.typingPrice,\r\n              paymentId:paymentId,\r\n              amount:this.props.DA_Price,\r\n              Consent:this.props.state.Consent,\r\n              JM_Name:this.props.userDetails.JM_Name,\r\n              DA_Title:this.props.state.DA_Title,\r\n              LM_ID:this.props.state.LM_ID,\r\n              JM_Email:this.props.userDetails.JM_Email,\r\n              JM_Phone:this.props.userDetails.JM_Phone,\r\n              responseData:responseData\r\n            };\r\n\r\n            const flag=API.encryptData(flagData);\r\n            var JSONdata={\r\n              flag:flag\r\n            }\r\n            document.getElementById('btn_payment').innerHTML='Processing...';\r\n            document.getElementById('btn_payment').disabled=true;\r\n            const token=API.encryptData(paymentId)\r\n            const response= await fetch(payUrl,{\r\n                method: 'post',\r\n                headers: { \"Content-Type\": \"application/json\" ,\"token\":token},\r\n                body: JSON.stringify(JSONdata)\r\n            });\r\n            const data1=await response.json();\r\n            if(data1.status === 1)\r\n            {\r\n\r\n              const data=API.decryptJson(data1.flag);\r\n             // console.log(resultData)\r\n\r\n              if(data.DA_DA_ID===2)\r\n              {\r\n\r\n                document.getElementById('request').innerHTML='';\r\n                var p = document.createElement('p');\r\n                p.innerHTML= API.paidMonitizationMsg();  \r\n                p.style.color='green'\r\n                document.getElementById('request').appendChild(p); \r\n        \r\n                if(data.url.endsWith('.mp4')===false)\r\n                {\r\n                    if(data.url.endsWith('.pdf') || data.url.endsWith('.docx'))\r\n                    {\r\n                      var iDiv = document.createElement('div');\r\n                      iDiv.id = 'pdf_docx';\r\n                      iDiv.className = 'icon';\r\n                    \r\n                      document.getElementById('request').appendChild(iDiv); \r\n                      var a = document.createElement('a');\r\n                      a.href = data.url;\r\n                      a.setAttribute('target', '_blank');\r\n                      a.click();\r\n                    }\r\n                  else if(data.url.endsWith('.mp3') || data.url.endsWith('.ogv'))\r\n                    {\r\n                      var iDiv = document.createElement('div');\r\n                      iDiv.id = 'content';\r\n                      iDiv.className = 'icon';\r\n                    \r\n                      document.getElementById('request').appendChild(iDiv); \r\n                      var a = document.createElement('a');\r\n                      a.href = data.url;\r\n                      a.setAttribute('target', '_blank');\r\n                      a.click();\r\n                    }\r\n                  else if(data.url.endsWith('.png') || data.url.endsWith('.jpg') || data.url.endsWith('.jpeg'))//image\r\n                    {\r\n                      var iDiv = document.createElement('div');\r\n                      iDiv.id = 'image';\r\n                      iDiv.className = 'icon';\r\n                      var img = document.createElement('img');\r\n                      img.src= data.url;   \r\n                      iDiv.appendChild(img);\r\n                      document.getElementById('request').appendChild(iDiv); \r\n                      var a = document.createElement('a');\r\n                      a.href = data.url;\r\n                      a.setAttribute('target', '_blank');\r\n                      a.click();\r\n                    }\r\n                    \r\n                }  \r\n                else\r\n                {\r\n                  var iDiv = document.createElement('div');\r\n                  iDiv.id = 'image';\r\n                  iDiv.className = 'icon';\r\n                  var video = document.createElement('video');\r\n                  video.src= data.url;   \r\n                  video.controls = true;\r\n                  video.style.width='100%';\r\n                  iDiv.appendChild(video);                  \r\n              \r\n                    document.getElementById('request').appendChild(iDiv);  \r\n                \r\n                    var a1 = document.createElement('a');\r\n                    a1.href = data.url;\r\n                    a1.setAttribute('target', '_blank');\r\n                    a1.click();\r\n                }            \r\n              \r\n              }\r\n              else if(data.DA_DA_ID===3) // for e-comm selling\r\n              {\r\n\r\n                document.getElementById('request').innerHTML='';\r\n                var p = document.createElement('p');\r\n                p.style.color='green'\r\n                p.innerHTML= API.paidMonitizationMsg();  \r\n\r\n                document.getElementById('request').appendChild(p);\r\n                var a1 = document.createElement('a');\r\n                a1.href = data.url;\r\n                a1.innerHTML = \"Click here to download\";\r\n                a1.download = data.url;\r\n                document.getElementById('request').appendChild(a1);  \r\n\r\n                \r\n              }\r\n              else\r\n              {\r\n\r\n                document.getElementById('request').innerHTML='';\r\n                var p = document.createElement('p');\r\n                p.innerHTML= API.paidMonitizationMsg();  \r\n                p.style.color='green'\r\n                document.getElementById('request').appendChild(p);\r\n                this.WaitAndReload();\r\n        \r\n              }              \r\n          \r\n            }\r\n            else\r\n            {           \r\n\r\n\r\n              this.setState({\r\n                isloading:false,        \r\n                message:'Internal error - Please contact Expy support',\r\n                msgColor:\"#ff5f70\"\r\n              }); \r\n              //do rest if payment done but data not captured\r\n              const url = process.env.REACT_APP_API_URL+'admin/dataUncaptured';\r\n              const response1= await fetch(url,{\r\n                method: 'post',\r\n                headers: { \"Content-Type\": \"application/json\" ,\"token\":token},\r\n                body: JSON.stringify(JSONdata)\r\n               });\r\n               const resp=await response1.json();\r\n              \r\n            }\r\n      } \r\n      catch (err) \r\n      {\r\n        //console.log(err);\r\n      }\r\n  }\r\n  //BM_Type\r\n  async CapturePaymentDoner(razorpay_payment_id,responseData){\r\n    this.setState({\r\n      isloading:true\r\n    });\r\n  try {\r\n\r\n\r\n    const paymentId = razorpay_payment_id;         \r\n    const payUrl = process.env.REACT_APP_API_URL+'admin/addDoner';\r\n    var flagData = {\r\n      DA_ID:this.props.state.DA_ID,\r\n      BM_Instruction:this.props.state.BM_Instruction,\r\n      BM_Name:this.props.state.BM_Name,\r\n      BM_Email:this.props.state.BM_Email,\r\n      BM_Phone:this.props.state.BM_Phone,\r\n      BM_Password:\"123456\",\r\n      BM_Purchase_Amt:this.props.DA_Price > 0 ? this.props.DA_Price : this.typingPrice,\r\n      paymentId:paymentId,\r\n      amount:this.props.DA_Price,\r\n      DA_Title:this.props.state.DA_Title,\r\n      JM_Name:this.props.state.JM_Name,\r\n      JM_ID:this.props.JM_ID,\r\n      LM_ID:this.props.state.LM_ID,\r\n      JM_User_Profile_Url:this.props.userDetails.JM_User_Profile_Url,\r\n      JM_Email:this.props.userDetails.JM_Email,\r\n      JM_Phone:this.props.userDetails.JM_Phone,\r\n      responseData:responseData,   \r\n    };\r\n\r\n    const flag=API.encryptData(flagData);\r\n    var JSONdata={\r\n      flag:flag\r\n    }\r\n\r\n\r\n    document.getElementById('btn_payment').innerHTML='Processing...';\r\n    document.getElementById('btn_payment').disabled=true;\r\n    const response= await fetch(payUrl,{\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(JSONdata)\r\n    });\r\n    const data=await response.json();\r\n    if(data.status === 1)\r\n    {\r\n\r\n\r\n      document.getElementById('request').innerHTML='';\r\n      var p = document.createElement('p');\r\n      p.innerHTML= \"Congratulations, your gift has successfully reached \"+this.props.state.JM_Name+\". Thank you for your support!\";\r\n      //API.paidMonitizationMsg();  \r\n      p.style.color='green'\r\n      document.getElementById('request').appendChild(p);\r\n     // document.getElementById('btn_payment').disabled=false;\r\n      this.WaitAndReload();  \r\n    }\r\n    else\r\n    {\r\n    \r\n        this.setState({\r\n          isloading:false,        \r\n          message:'Internal error - Please contact Expy support',\r\n          msgColor:\"#ff5f70\"\r\n        });\r\n\r\n        //do rest if payment done but data not captured\r\n        const token=API.encryptData(paymentId)\r\n        const url = process.env.REACT_APP_API_URL+'admin/dataUncaptured';\r\n        const response1= await fetch(url,{\r\n          method: 'post',\r\n          headers: { \"Content-Type\": \"application/json\" ,\"token\":token},\r\n          body: JSON.stringify(JSONdata)\r\n          });\r\n          const resp=await response1.json();\r\n\r\n    \r\n    }\r\n  } \r\n  catch (err) \r\n  {\r\n  //console.log(err);\r\n  }\r\n  }\r\n\r\n  async openCheckout()\r\n  {\r\n    var isFree=false;\r\n    this.setState({\r\n      message:'',  msgColor:''\r\n    })\r\n    if( this.props.state.DA_DA_ID===1 && this.props.state.BM_Instruction.length===0)\r\n    {\r\n\r\n      this.setState({\r\n        message:'* Enter instructions',\r\n        msgColor:'red'\r\n      })\r\n        return false;\r\n    }\r\n    if(this.props.state.BM_Instruction.length > 1000)\r\n    {\r\n\r\n      this.setState({\r\n        message:'* Enter instructions within 1000 characters',\r\n        msgColor:'red'\r\n      })\r\n        return false;\r\n    }\r\n\r\n    if(this.props.state.BM_Name.length===0)\r\n    {\r\n\r\n      this.setState({\r\n        message:'* Enter name',\r\n        msgColor:'red'\r\n      })\r\n        return false;\r\n    }\r\n    if(this.props.state.BM_Name.length > 100)\r\n    {\r\n\r\n      this.setState({\r\n        message:'* Enter name wothin 100 characters',\r\n        msgColor:'red'\r\n      })\r\n        return false;\r\n    }\r\n    if(this.props.state.BM_Email.length===0)\r\n    {\r\n      this.setState({\r\n        message:'* Enter email-id',  msgColor:'red'\r\n      })\r\n      return false\r\n    }\r\n    if(this.props.state.BM_Email.length > 0)\r\n    {            \r\n      if(API.isValidEmail(this.props.state.BM_Email)===false)\r\n      {\r\n        this.setState({\r\n          message:'* Enter valid email-id',  msgColor:'red'\r\n        })\r\n        return false\r\n      }    \r\n    } \r\n    if(this.props.state.BM_Email.length > 50 )\r\n    {           \r\n      this.setState({\r\n        message:'*  Enter valid email-id within 50 characters',  msgColor:'red'\r\n      })\r\n      return false    \r\n      \r\n    } \r\n\r\n    if(this.props.state.BM_Phone.length === 0 )\r\n    {           \r\n  \r\n      this.setState({\r\n        message:'* Enter phone number',  msgColor:'red'\r\n      })\r\n      return false    \r\n      \r\n    } \r\n    if(this.props.state.BM_Phone.length !==10 )\r\n    {           \r\n      this.setState({\r\n        message:'* Enter 10 digits phone number',  msgColor:'red'\r\n      })\r\n      return false    \r\n      \r\n    } \r\n\r\n\r\n    if(this.props.DA_Allow_Cust_Pay ===0  && this.props.DA_Price ===0)\r\n    {\r\n      isFree=true;\r\n    } \r\n\r\n\r\n    if(this.props.DA_Allow_Cust_Pay === 1 && parseInt(this.props.productList.DA_Min_Amount)===0) //free\r\n    {\r\n      \r\n      if(isNaN(parseInt(this.props.state.dynamic_price)) || parseInt(this.props.state.dynamic_price) === 0)\r\n      {\r\n        isFree=true;\r\n      }\r\n\r\n    }\r\n    else if(this.props.DA_Allow_Cust_Pay === 1 && parseInt(this.props.productList.DA_Min_Amount) > 0) \r\n    {\r\n\r\n      if((this.props.DA_Price > 0) && this.props.DA_Price < parseInt(this.props.productList.DA_Min_Amount))\r\n      {\r\n  \r\n        this.setState({\r\n          message:'*Minimum amount required is '+this.props.DA_INR_Doller + ' '+this.props.productList.DA_Min_Amount,\r\n          msgColor:'red'\r\n        })\r\n          return false;\r\n      }\r\n      else if(this.props.DA_Price===0)\r\n      {\r\n        this.typingPrice= parseInt(this.props.productList.DA_Min_Amount) * 100;\r\n      }\r\n    }\r\n    \r\n    \r\n    //console.log(API.removeSpecialChar(this.props.state.BM_Instruction));\r\n\r\n    if(isFree===true)\r\n    {\r\n      this.freeCapture();\r\n      return false;\r\n    }\r\n    else\r\n    {\r\n      var DA_Price=0;    \r\n      //DA_Price=this.props.DA_Price * 100; \r\n      DA_Price=this.props.DA_Price > 0 ? this.props.DA_Price * 100 : this.typingPrice; \r\n\r\n          var leadPrice=parseFloat(DA_Price/100);\r\n            this.props.AddLeads(leadPrice);      \r\n          \r\n            const API_url = process.env.REACT_APP_API_URL+'admin/order';  \r\n              var flagData = {\r\n                amount:DA_Price,\r\n                currency:this.props.DA_INR_Doller,\r\n                Product_Id:this.props.state.DA_ID,\r\n                Name:this.props.state.BM_Name,\r\n                Email:this.props.state.BM_Email,\r\n                DA_Price:this.props.DA_Price,     \r\n              };   \r\n\r\n\r\n              const flag=API.encryptData(flagData);\r\n              let  JSONdata = {\r\n                  flag: flag\r\n                };\r\n        \r\n            \r\n              const response=await fetch(API_url,{\r\n                    method: 'post',\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify(JSONdata)\r\n                  });\r\n                  \r\n                  // this.setState({\r\n                  //   isloading:true,\r\n                  //   disabled:true\r\n                  // });\r\n\r\n                const data1=await response.json();              \r\n                const data=API.decryptJson(data1.flag)\r\n            \r\n\r\n                let options = {\r\n                  \"key\": process.env.REACT_APP_RAZOR_PAY_TEST_KEY,\r\n                  \"amount\":DA_Price, // 2000 paise = INR 20, amount in paisa\r\n                  \"name\": \"Expy\",\r\n                  \"description\": \"Purchase Description\",\r\n                  \"image\": \"/favicon.png\",\r\n                  \"order_id\": data.id,\r\n                  \"method\": 'wallet',\r\n                  \"wallet\": 'paypal',\r\n                  \"handler\":  response => \r\n                  {        \r\n                    //console.log(response.razorpay_payment_id);\r\n                    if(this.props.BM_Type==='D')\r\n                      this.CapturePaymentDoner(response.razorpay_payment_id,response);\r\n                    else\r\n                      this.CapturePayment(response.razorpay_payment_id,response);\r\n                  },\r\n                  \"prefill\": {\r\n                    \"name\": this.props.name,\r\n                    \"email\": this.props.email,\r\n                    \"contact\":this.props.phone\r\n                  },\r\n                  \"notes\": {\r\n                    \"address\": \"\"\r\n                  },\r\n                  \"theme\": {\r\n                    \"color\": \"#fa217c\"\r\n                  }\r\n                };\r\n\r\n                let rzp = new window.Razorpay(options);\r\n                rzp.on('payment.failed', function (response){\r\n                  // alert(response.error.code);\r\n                  console.log(response.error.description);\r\n                  // alert(response.error.source);\r\n                  // alert(response.error.step);\r\n                  // alert(response.error.reason);\r\n                  // alert(response.error.metadata.order_id);\r\n                  // alert(response.error.metadata.payment_id);\r\n                    \r\n\r\n                  //updateTrackOrder\r\n                });\r\n                rzp.open();\r\n    }\r\n  }\r\n\r\n  WaitAndReload=()=>\r\n  {\r\n    setTimeout(function() {\r\n      window.location.reload();\r\n     }, 5000);  \r\n  }\r\n\r\n  async freeCapture(){\r\n\r\n          try {\r\n            const paymentId = API.randomString(10);        \r\n            let payUrl=\"\";\r\n\r\n            if(this.props.state.DA_DA_ID===0) //gift\r\n                 payUrl = process.env.REACT_APP_API_URL+'admin/addDonerFree';      \r\n            else \r\n                 payUrl = process.env.REACT_APP_API_URL+'admin/freeCapture';   \r\n\r\n            var flagData = {\r\n              DA_ID:this.props.state.DA_ID,\r\n              BM_Instruction:this.props.state.BM_Instruction,\r\n              BM_Name:this.props.state.BM_Name,\r\n              BM_Email:this.props.state.BM_Email,\r\n              BM_Phone:this.props.state.BM_Phone,\r\n              BM_Password:this.props.state.BM_Password,\r\n              BM_Purchase_Amt:this.props.DA_Price,\r\n              paymentId:paymentId,\r\n              amount:0,\r\n              Consent:this.props.state.Consent,\r\n              JM_Name:this.props.userDetails.JM_Name,\r\n              DA_Title:this.props.state.DA_Title,\r\n              LM_ID:this.props.state.LM_ID,\r\n              JM_Email:this.props.userDetails.JM_Email,\r\n              JM_Phone:this.props.userDetails.JM_Phone,\r\n              JM_ID:this.props.userDetails.JM_ID,\r\n              DA_DA_ID:this.props.state.DA_DA_ID,\r\n            };\r\n\r\n          \r\n            const flag=API.encryptData(flagData);\r\n            var JSONdata={\r\n              flag:flag\r\n            }\r\n\r\n            document.getElementById('btn_payment').innerHTML='Processing...';\r\n            document.getElementById('btn_payment').disabled=true;\r\n\r\n            const token=API.encryptData(paymentId)\r\n            const response= await fetch(payUrl,{\r\n                method: 'post',\r\n                headers: { \"Content-Type\": \"application/json\" ,\"token\":token},\r\n                body: JSON.stringify(JSONdata)\r\n            });\r\n\r\n\r\n            const data1=await response.json();\r\n            if(data1.status === 1)\r\n            {\r\n\r\n              const data=API.decryptJson(data1.flag);\r\n\r\n              if(data.DA_DA_ID===2)\r\n              {\r\n\r\n             \r\n                document.getElementById('request').innerHTML='';\r\n                var p = document.createElement('p');\r\n                p.innerHTML= API.freeMonitizationMsg();  \r\n                p.style.color='green'\r\n                document.getElementById('request').appendChild(p);\r\n                //document.getElementsByClassName(\"back-btn\").style.display = 'none';\r\n                if(data.url.endsWith('.mp4')===false)\r\n                {\r\n                   \r\n                    if(data.url.endsWith('.pdf') || data.url.endsWith('.docx'))\r\n                    {\r\n                      var iDiv = document.createElement('div');\r\n                      iDiv.id = 'pdf_docx';\r\n                      iDiv.className = 'icon';\r\n                    \r\n                      document.getElementById('request').appendChild(iDiv); \r\n                      var a = document.createElement('a');\r\n                      a.href = data.url;\r\n                      a.setAttribute('target', '_blank');\r\n                      a.click();\r\n                    }\r\n                  else if(data.url.endsWith('.mp3') || data.url.endsWith('.ogv'))\r\n                    {\r\n                      var iDiv = document.createElement('div');\r\n                      iDiv.id = 'content';\r\n                      iDiv.className = 'icon';\r\n                    \r\n                      document.getElementById('request').appendChild(iDiv); \r\n                      var a = document.createElement('a');\r\n                      a.href = data.url;\r\n                      a.setAttribute('target', '_blank');\r\n                      a.click();\r\n                    }\r\n                  else if(data.url.endsWith('.png') || data.url.endsWith('.jpg') || data.url.endsWith('.jpeg'))//image\r\n                    {\r\n                      var iDiv = document.createElement('div');\r\n                      iDiv.id = 'image';\r\n                      iDiv.className = 'icon';\r\n                      var img = document.createElement('img');\r\n                      img.src= data.url;   \r\n                      iDiv.appendChild(img);\r\n                      document.getElementById('request').appendChild(iDiv); \r\n                      var a = document.createElement('a');\r\n                      a.href = data.url;\r\n                      a.setAttribute('target', '_blank');\r\n                      a.click();\r\n                    }\r\n                    \r\n                }  \r\n                else\r\n                {\r\n                  var iDiv = document.createElement('div');\r\n                  iDiv.id = 'image';\r\n                  iDiv.className = 'icon';\r\n                  var video = document.createElement('video');\r\n                  video.src= data.url;   \r\n                  video.controls = true;\r\n                  iDiv.appendChild(video);                  \r\n              \r\n                    document.getElementById('request').appendChild(iDiv);  \r\n                \r\n                    var a1 = document.createElement('a');\r\n                    a1.href = data.url;\r\n                    a1.setAttribute('target', '_blank');\r\n                    a1.click();\r\n                }            \r\n              \r\n              }\r\n              else if(data.DA_DA_ID===3) // for e-comm selling\r\n              {\r\n\r\n   \r\n                document.getElementById('request').innerHTML='';\r\n                var p = document.createElement('p');\r\n                p.style.color='green'\r\n                p.innerHTML= API.freeMonitizationMsg();  \r\n\r\n                document.getElementById('request').appendChild(p);\r\n                var a1 = document.createElement('a');\r\n                a1.href = data.url;\r\n                a1.innerHTML = \"Click here to download\";\r\n                a1.download = data.url;\r\n                document.getElementById('request').appendChild(a1);  \r\n              }\r\n              else if(data.DA_DA_ID===0)\r\n              {\r\n                document.getElementById('request').innerHTML='';\r\n                var p = document.createElement('p');\r\n                p.innerHTML= API.freeMonitizationMsg();  \r\n                p.style.color='green'\r\n                document.getElementById('request').appendChild(p);\r\n                this.WaitAndReload();\r\n              }\r\n              else if(data.DA_DA_ID===5)\r\n              {\r\n                document.getElementById('request').innerHTML='';\r\n                var p = document.createElement('p');\r\n                p.innerHTML=API.freeMonitizationMsg();  \r\n                p.style.color='green'\r\n                document.getElementById('request').appendChild(p);\r\n                this.WaitAndReload();\r\n              }\r\n              else if(data.DA_DA_ID===6)\r\n              {\r\n                    document.getElementById('request').innerHTML='';\r\n                    var p = document.createElement('p');\r\n                    p.innerHTML=API.freeMonitizationMsg();  \r\n                    p.style.color='green'\r\n                    document.getElementById('request').appendChild(p);\r\n                    this.WaitAndReload();\r\n              }\r\n              else\r\n              {\r\n\r\n                    document.getElementById('request').innerHTML='';\r\n                    var p = document.createElement('p');\r\n                    p.innerHTML=API.freeMonitizationMsg();  \r\n                    p.style.color='green'\r\n                    document.getElementById('request').appendChild(p);\r\n                    this.WaitAndReload();\r\n              }              \r\n          \r\n            }\r\n            else\r\n            {           \r\n                document.getElementById('request').innerHTML='';\r\n                var p = document.createElement('p');\r\n                p.innerHTML=API.freeMonitizationMsg();  \r\n                p.style.color='green'\r\n                document.getElementById('request').appendChild(p);\r\n                this.WaitAndReload();\r\n            }\r\n      } \r\n      catch (err) \r\n      {\r\n        //console.log(err);\r\n      }\r\n\r\n  }\r\n\r\n  render(){\r\n  return (\r\n    <>\r\n      <div>\r\n        {/*<input type='text' onChange={\r\n           this.changeAmount\r\n          } />*/}\r\n        {/* <button onClick={this.openCheckout}>Pay Rs. {this.state.amount/100}</button>  */}\r\n        \r\n            <button onClick={this.openCheckout} class=\"btun\" disabled={this.state.disabled} id=\"btn_payment\"> \r\n            { \r\n             this.props.productList.DA_DA_ID===999?\r\n             'Send Support' \r\n             : this.props.productList.DA_DA_ID===0?\r\n              'Send' \r\n             : this.props.productList.DA_DA_ID===6? \r\n             'Join' \r\n             : this.props.productList.DA_DA_ID===5?\r\n              'Book'               \r\n              : \r\n              this.props.productList.DA_Price > 0 || ( this.props.productList.DA_Min_Amount > 0 &&  this.props.productList.DA_Allow_Cust_Pay===1) ?\r\n              'Buy ':\r\n              'Get'\r\n             \r\n             }\r\n            \r\n\r\n\r\n\r\n                                                  {\r\n                                                     this.props.DA_Allow_Cust_Pay===0 && this.props.DA_Price > 0 ?\r\n\r\n                                                            this.props.DA_INR_Doller==='INR' ?\r\n                                                                  \" Rs.\" + this.props.DA_Price\r\n                                                            :\r\n                                                                  \" $\" + this.props.DA_Price\r\n                                                      :\r\n                                                      null\r\n\r\n                                                  }\r\n\r\n\r\n                                                  {/* {\r\n                                                    this.state.isloading?\r\n                                                      <i class=\"fa fa-spinner fa-spin\" style={{marginLeft: '20px',fontSize: '31px',float: 'right'}}></i>\r\n                                                    :\r\n                                                      null\r\n                                                  } */}\r\n                                                 \r\n                                                  </button>\r\n                                                  <span id=\"msg\" style={{color:this.state.msgColor,fontSize:'15px'}}>{this.state.message}</span>\r\n                               {/* <div class=\"spinner-grow\" style=\"width: 3rem; height: 3rem;\" role=\"status\">\r\n                                <span class=\"sr-only\">Loading...</span>\r\n                              </div> */}\r\n                                              \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n}\r\n\r\nexport default Checkout;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\SendGift.js",["2903","2904","2905"],"import React, { Component } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\r\nimport Checkout from './Checkout';\r\nimport API  from \"../services/API\";\r\nclass SendGift extends Component {\r\n    constructor(props) {\r\n      super(props)\r\n    \r\n     \r\n    this.state = {\r\n        openModel:false,\r\n        base_url: process.env.REACT_APP_API_URL,\r\n        root_url: process.env.REACT_APP_ROOT_URL,\r\n      \r\n        show:false,\r\n        open:false,\r\n        JM_ID:this.props.JM_ID,\r\n        SWM_Title:'',\r\n        SWM_Url:'',\r\n        SWM_Icon:'',\r\n        LM_Who_Will_See:1,\r\n        selectedFile: null,\r\n        linkMaster:[],\r\n       userDetails:[],\r\n       socialWidget:[],\r\n       title:'',\r\n       msg:'',\r\n       logo:'',\r\n       SWM_Icon_Position:'bottom',\r\n \r\n       Instagram:'https://www.instagram.com/',\r\n       Facebook:'https://www.facebook.com/',\r\n       YouTube:'https://www.youtube.com/',\r\n       Twitter:'https://twitter.com/',\r\n       Snapchat:'https://www.snapchat.com/',\r\n       LinkedIn:'https://www.linkedin.com/',\r\n       Twitch:'https://www.twitch.com/',\r\n       Pinterest:'https://www.pinterest.com/',\r\n       Spotify:'https://www.spotify.com/',\r\n       category_links:[],\r\n \r\n       checked:false,\r\n       request:true,\r\n       checkedRequest:true,\r\n       descript:false,\r\n       checkeddescript:false,\r\n       FanDetails:false,\r\n       checkedFanDetails:false,\r\n       DA_ID:this.props.productList.DA_ID,\r\n       DA_DA_ID:this.props.productList.DA_DA_ID,\r\n       BM_Instruction:'',\r\n       BM_Name:'',\r\n       BM_Email:'',\r\n       BM_Phone:'',\r\n       BM_Password:'12345678',\r\n       BM_Purchase_Amt:this.props.productList.DA_Price,\r\n       DA_Title:this.props.productList.DA_Title,\r\n       JM_Name:this.props.JM_Name,\r\n       dynamic_price:this.props.productList.DA_Min_Amount,\r\n       LM_ID:0,\r\n      Consent:0,\r\n     }\r\n//     console.log(this.props.productList);\r\n\r\n}\r\nModalClose=()=>{\r\n    this.setState({openModel:false,show:false});\r\n  }\r\n  ModalOpen=()=>{\r\n    this.setState({openModel:true,show:true});\r\n    this.setState({checkedRequest:true,request:true,checkedPayDetails:false,PayDetails:false,checkedFanDetails:false,FanDetails:false,checkeddescript:false,descript:false});\r\n    //console.log(this.props.productList);\r\n   // console.log(this.props.userDetails);\r\n\r\n    var JSONdata = {\r\n      Stat_Type: 'P',\r\n      Stat_ID: this.props.productList.DA_ID,\r\n      JM_ID: this.props.productList.JM_ID   \r\n    };\r\n    let data = API.doClick(JSONdata);\r\n    \r\n  }\r\n \r\n  requestClick=(e)=>{\r\n    this.setState({checkeddescript:true,checkedRequest:false,descript:true,request:false});\r\n  }\r\n  nextClick=(e)=>{\r\n    //if(this.state.BM_Instruction.length > 0)\r\n       this.setState({checkedFanDetails:true,FanDetails:true,checkeddescript:false,descript:false,checkedRequest:false,request:false\r\n      ,BM_Instruction:'NA'\r\n      });\r\n\r\n       // else\r\n    //   return false;\r\n  }\r\n  continueClick=(e)=>{\r\n    if(this.state.BM_Name.length > 0 && this.state.BM_Email.length > 0 )\r\n      {            \r\n       // this.AddLeads();\r\n        this.setState({checkedPayDetails:true,PayDetails:true,checkedFanDetails:false,FanDetails:false,checkedRequest:false,request:false});\r\n      } \r\n    else\r\n      return false;\r\n  }\r\n  AddLeads=()=>{\r\n    var flagData = {\r\n      DA_ID:this.props.productList.DA_ID,\r\n      BM_Instruction:this.state.BM_Instruction,\r\n      BM_Name:this.state.BM_Name,\r\n      BM_Email:this.state.BM_Email,\r\n      BM_Phone:this.state.BM_Phone,\r\n      BM_Purchase_Amt:this.props.productList.DA_Price,\r\n      Consent:this.state.Consent,    \r\n    };\r\n\r\n    const flag=API.encryptData(flagData);\r\n    let  JSONdata = {\r\n        flag: flag\r\n      };\r\n\r\n\r\n          const API_url = process.env.REACT_APP_API_URL + \"admin/addLeads\";\r\n          fetch(API_url,\r\n            {\r\n              method: 'post',\r\n              headers: { \"Content-Type\": \"application/json\" },\r\n              body: JSON.stringify(JSONdata)\r\n            })\r\n          .then((response) => response.json())\r\n          .then(data1 =>\r\n            {             \r\n                if(data1.status===1)\r\n                {\r\n                  const data=API.decryptJson(data1.flag);\r\n                  this.setState({\r\n                    LM_ID:data.LM_ID\r\n                  });\r\n                }\r\n                //console.log(data)\r\n          });\r\n    \r\n  }\r\n  backClick=(e)=>{\r\n      if(this.state.descript)\r\n      {\r\n        this.setState({checkeddescript:false,checkedRequest:true,descript:false,request:true});\r\n      }\r\n     else if(this.state.FanDetails)\r\n      {\r\n        this.setState({checkedFanDetails:false,FanDetails:false,checkeddescript:true,descript:true});\r\n      }\r\n    else  if(this.state.PayDetails)\r\n      {\r\n        this.setState({checkedPayDetails:false,PayDetails:false,checkedFanDetails:true,FanDetails:true,\r\n        \r\n        });\r\n      }\r\n   \r\n  }\r\n  handleChange=(e)=>{\r\n     // let val=parseFloat(e.target.value);\r\n      this.setState({[e.target.name]:e.target.value})\r\n  }\r\n\r\n  handleDynamicPrice=(e)=>{\r\n    let val=parseInt(e.target.value);\r\n    //console.log(isNaN(val))\r\n   if(isNaN(val)===true)\r\n      val=0;\r\n\r\n    this.setState({[e.target.name]:val})\r\n  }\r\n\r\n  PayNow=e=>\r\n  {\r\n    var JSONdata = {\r\n      DA_ID:this.props.productList.DA_ID,\r\n      BM_Instruction:this.state.BM_Instruction,\r\n      BM_Name:this.state.BM_Name,\r\n      BM_Email:this.state.BM_Email,\r\n      BM_Phone:this.state.BM_Phone,\r\n      BM_Password:this.state.BM_Password,\r\n      BM_Purchase_Amt:this.props.productList.DA_Price,   \r\n    };\r\n          const API_url = process.env.REACT_APP_API_URL + \"admin/addDoner\";\r\n        fetch(API_url,\r\n          {\r\n            method: 'post',\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(JSONdata)\r\n          })\r\n        .then((response) => response.json())\r\n        .then(data => {          \r\n        //  console.log(data)\r\n        });\r\n  }\r\n  openSpinner=()=>{\r\n    this.setState({\r\n      isLoading:true,\r\n      showLoading:true,\r\n      checkedPayDetails:false,\r\n      PayDetails:false,\r\n      checkedFanDetails:true,\r\n      FanDetails:false\r\n    });\r\n  }\r\n\r\n  showMessage=()=>{\r\n    this.refs.checkout.UpdateMobileView();\r\n  }\r\n\r\n  doConsent=(e)=>{\r\n    if(e.target.checked)\r\n      this.setState({\r\n        Consent:1\r\n      });\r\n\r\n  }\r\n        render() \r\n        {\r\n            const useStyles = makeStyles((theme) => ({\r\n                root: {\r\n                height: 180,\r\n                },\r\n                container: {\r\n                display: 'flex',\r\n                },\r\n                paper: {\r\n                margin: theme.spacing(1),\r\n                },\r\n                svg: {\r\n                width: 100,\r\n                height: 100,\r\n                },\r\n                polygon: {\r\n                fill: theme.palette.common.white,\r\n                stroke: theme.palette.divider,\r\n                strokeWidth: 1,\r\n                },\r\n            }));\r\n            return (\r\n            <>\r\n                <button className={this.props.className}  data={this.props.productList} style={this.props.mystyleForHightight} onClick={this.ModalOpen}>Send</button>\r\n\r\n                <Modal\r\n                    show={this.state.openModel}\r\n                    onHide={this.ModalClose}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    centered\r\n                 >\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>\r\n                    <p className=\"addnew-title\">{this.props.productList.DA_Title}</p>\r\n                </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                        \r\n                            <div className=\"request-sec\">                     \r\n                                <div className=\"request-box\">   \r\n                                            {\r\n                                            this.state.request ?\r\n                                            <Grow in={this.state.checkedRequest} >\r\n                                                <div className=\"body-part\" id=\"request\">\r\n                                                        {/* <div className=\"icon\">\r\n                                                            <img src={this.props.src} />\r\n                                                        </div> */}\r\n                                                        <div className=\"text\">\r\n                                                            {/* <h4>{this.props.productList.DA_Title}</h4> */}\r\n\r\n                                                    \r\n                                                             \r\n                                                                  <div className=\"form-box\">\r\n                                                                      <h4>Tell us about you</h4>\r\n                                                                          {/* <p>We need a few details from you to keep you upto date with your Direct Access order.</p> */}\r\n                                                                          <input type=\"text\" name={\"BM_Name\"} value={this.state.BM_Name} onChange={this.handleChange}  placeholder=\"Your Name\" className=\"form-control\"/>\r\n                                                                          <input type=\"email\" name={\"BM_Email\"} value={this.state.BM_Email} onChange={this.handleChange}  placeholder=\"Email Address\" className=\"form-control\"/>\r\n                                                                        \r\n                                                                          <input type=\"number\" name={\"BM_Phone\"} value={this.state.BM_Phone} onChange={this.handleChange}  placeholder=\"Phone Number\" className=\"form-control\"/>\r\n                                                                         \r\n                                                                          <p style={{ marginBottom:'10px',textAlign:'left'}}>\r\n                                                                              <input type=\"checkbox\" name=\"consent\" onClick={this.doConsent}/> {API.consentLebel_GiftDonation()}\r\n                                                                          </p> \r\n                                                                         \r\n                                                                         \r\n                                                                          <input type=\"text\" name={\"BM_Password\"} value={this.state.BM_Password} onChange={this.handleChange} style={{display:'none'}} placeholder=\"Choose a password\" className=\"form-control\"/>\r\n                                                                          \r\n                                                                          \r\n                                                                          \r\n                                                                          <input type=\"hidden\" name={\"price\"} value={this.props.productList.DA_Price} />\r\n                                                                          {/* <button class=\"btun\"  onClick={this.continueClick}>Next</button> */}\r\n                                                                    </div>\r\n                                                                    <p style={{textAlign:'left'}}> <h6>Your Message {this.props.productList.DA_DA_ID===2 || this.props.productList.DA_DA_ID===0? '(Optional)' : null} </h6> </p>\r\n                                                                    <div className=\"form-box\">\r\n                                                                        <textarea className=\"form-control area\" name=\"BM_Instruction\" value={this.state.BM_Instruction} onChange={this.handleChange} \r\n                                                                        placeholder=\"Hi! Thank you for what you do. I really appreciate and enjoy it, have a chai on me!\"/>\r\n                                                                        {/* <button class=\"btun\" onClick={this.nextClick}>Next</button> */}\r\n                                                                    </div>\r\n                                                               \r\n                                                                    <div className=\"form-box\">\r\n                                                                    {\r\n                                                                   this.props.productList.DA_Allow_Cust_Pay===1 ?\r\n                                                                   <>\r\n                                                                   <h4>Pay what you want</h4>\r\n                                                                    <input type=\"text\" name={\"dynamic_price\"} \r\n                                                                    onChange={this.handleDynamicPrice} \r\n                                                                    placeholder={this.props.productList.DA_Min_Amount + \"+\"} className=\"form-control\"\r\n                                                                    onKeyPress={(event) => {\r\n                                                                      if (!/[0-9]/.test(event.key)) {\r\n                                                                        event.preventDefault();\r\n                                                                      }\r\n                                                                    }}\r\n                                                                    onPaste={(e)=>{\r\n                                                                      e.preventDefault()\r\n                                                                      return false;\r\n                                                                    }} onCopy={(e)=>{\r\n                                                                      e.preventDefault()\r\n                                                                      return false;\r\n                                                                    }}\r\n                                                                    \r\n                                                                    />\r\n                                                                    {/* dynamic price */}\r\n                                                         \r\n                                                                          <Checkout ref=\"checkout\" BM_Type={'D'} DA_INR_Doller={ this.props.productList.DA_INR_Doller} DA_Price={this.state.dynamic_price}  productList={this.props.productList}\r\n                                                                          AddLeads = {this.AddLeads}  DA_Allow_Cust_Pay={ this.props.productList.DA_Allow_Cust_Pay}   name={this.state.BM_Name} email={this.state.BM_Email} DA_ID={this.props.productList.DA_ID}  phone={this.state.BM_Phone} state={this.state} userDetails={this.props.userDetails.length > 0 ? this.props.userDetails[0]: null }  JM_ID={this.props.productList.JM_ID}/>\r\n                                                                 \r\n\r\n\r\n                                                                    </>\r\n                                                                    :                                                                    \r\n                                                                          <Checkout ref=\"checkout\" BM_Type={'D'} DA_INR_Doller={ this.props.productList.DA_INR_Doller} DA_Price={this.props.productList.DA_Price}  productList={this.props.productList}\r\n                                                                          AddLeads = {this.AddLeads} DA_Allow_Cust_Pay={ this.props.productList.DA_Allow_Cust_Pay}  name={this.state.BM_Name} email={this.state.BM_Email} DA_ID={this.props.productList.DA_ID}  phone={this.state.BM_Phone} state={this.state} userDetails={this.props.userDetails.length > 0 ? this.props.userDetails[0]: null } JM_ID={this.props.productList.JM_ID}/>\r\n                                                                 \r\n\r\n                                                                }\r\n                                                                </div>\r\n                                                            {/* <p>{this.props.productList.DA_Description}</p> */}\r\n\r\n                                                            {/* <button class=\"btun\" onClick={this.requestClick}>Request- \r\n                                                            {\r\n                                                                this.props.productList.DA_INR_Doller==='INR' ?\r\n                                                                    \"Rs.\" + this.props.productList.DA_Price\r\n                                                                :\r\n                                                                    \"$\" + this.props.productList.DA_Price\r\n                                                            }\r\n                                                            \r\n                                                            </button> */}\r\n                                                        </div>\r\n                                                </div>\r\n                                            </Grow>\r\n                                            :\r\n                                            null                            \r\n                                            }    \r\n                                                \r\n                                    {\r\n                                        this.state.descript ?\r\n                                            <Grow in={this.state.checkeddescript} >\r\n                                                {/* <Paper elevation={4} className={useStyles.paper}> */}\r\n                                            \r\n                                                <div className=\"body-part\" id=\"descrip\">\r\n                                                \r\n                                                            \r\n                                                            \r\n                                                            <button className=\"back-btn\" onClick={this.backClick}><KeyboardBackspaceIcon style={{fontSize:'30px'}} /></button> \r\n                                                </div>\r\n                                            </Grow>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                    {\r\n                                        this.state.FanDetails ?\r\n                                            <Grow in={this.state.checkedFanDetails} >\r\n                                                {/* <Paper elevation={4} className={useStyles.paper}> */}\r\n                                            \r\n                                                <div className=\"body-part\" id=\"FanDetails\">\r\n                                            \r\n                                                    <div className=\"dtl-box\">                                                  \r\n                                                    <h4>{this.props.productList.DA_Title}</h4>\r\n                                                    <h3>\r\n                                                    {\r\n                                                        this.props.productList.DA_INR_Doller==='INR' ?\r\n                                                            \"Rs.\" + this.props.productList.DA_Price\r\n                                                        :\r\n                                                            \"$\" + this.props.productList.DA_Price\r\n                                                    }\r\n                                                        </h3>\r\n                                                    </div>\r\n                                                    <button className=\"back-btn\" onClick={this.backClick}><KeyboardBackspaceIcon style={{fontSize:'30px'}} /></button> \r\n                                                </div>\r\n                                            </Grow>\r\n                                        :\r\n                                        null\r\n                                    }\r\n\r\n                                    {\r\n                                        this.state.PayDetails ?\r\n                                            <Grow in={this.state.checkedPayDetails} >\r\n                                                {/* <Paper elevation={4} className={useStyles.paper}> */}\r\n                                            \r\n                                                <div className=\"body-part\" id=\"PayDetails\">\r\n                                                \r\n                                                    <div className=\"form-box\">\r\n                                                    <h4>Secure Payment</h4>\r\n                                                    {/* <p>Please enter your payment details to complete your request.</p>\r\n                                                    <input type=\"text\" placeholder=\"Card Number\" className=\"form-control\"/> */}\r\n                                                   \r\n                                                    {/* <button class=\"btun\" onClick={this.PayNow}>Pay \r\n                                                    {\r\n                                                        this.props.productList.DA_INR_Doller==='INR' ?\r\n                                                            \" Rs.\" + this.props.productList.DA_Price\r\n                                                        :\r\n                                                            \" $\" + this.props.productList.DA_Price\r\n                                                    }\r\n                                                    \r\n                                                    </button> */}\r\n                                                    {/* <p>We currently accept:</p> */}\r\n                                                    {/* <ul>\r\n                                                        <li><img src={\"images/pay-1.png\"} /></li>\r\n                                                        <li><img src={\"images/pay-2.png\"} /></li>\r\n                                                        <li><img src={\"images/pay-3.png\"} /></li>\r\n                                                        <li><img src={\"images/pay-4.png\"} /></li>\r\n                                                    </ul> */}\r\n                                                    </div>\r\n                                                \r\n                                                    <button className=\"back-btn\" onClick={this.backClick}><KeyboardBackspaceIcon style={{fontSize:'30px'}} /></button> \r\n                                                </div>\r\n                                            </Grow>\r\n                                        :\r\n                                        null\r\n                                    }\r\n\r\n                                    {\r\n                                            this.state.isLoading ?\r\n                                            <Grow in={this.state.showLoading} >\r\n                                                <div className=\"body-part\" id=\"request\">\r\n                                                    <div class=\"spinner-grow\" style=\"width: 3rem; height: 3rem;\" role=\"status\">\r\n                                                        <span class=\"sr-only\">Please Wait...</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Grow>\r\n                                            :\r\n                                            null                            \r\n                                            }    \r\n\r\n                                </div>\r\n                            </div>\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n                        \r\n            </>             \r\n                    \r\n            );\r\n        }\r\n\r\n}\r\n\r\n\r\n\r\nexport default SendGift;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\SendSupport.js",["2906","2907"],"import React, { Component } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tipping from './Tipping';\r\nimport API  from \"../services/API\";\r\nclass SendSupport extends Component {\r\n    constructor(props) {\r\n      super(props)\r\n    \r\n     \r\n    this.state = {\r\n        openModel:false,\r\n        base_url: process.env.REACT_APP_API_URL,\r\n        root_url: process.env.REACT_APP_ROOT_URL,\r\n      \r\n        show:false,\r\n        open:false,\r\n        JM_ID:this.props.JM_ID,\r\n        SWM_Title:'',\r\n        SWM_Url:'',\r\n        SWM_Icon:'',\r\n        LM_Who_Will_See:1,\r\n        selectedFile: null,\r\n        linkMaster:[],\r\n       userDetails:[],\r\n       socialWidget:[],\r\n       title:'',\r\n       msg:'',\r\n       logo:'',\r\n       SWM_Icon_Position:'bottom',\r\n \r\n       Instagram:'https://www.instagram.com/',\r\n       Facebook:'https://www.facebook.com/',\r\n       YouTube:'https://www.youtube.com/',\r\n       Twitter:'https://twitter.com/',\r\n       Snapchat:'https://www.snapchat.com/',\r\n       LinkedIn:'https://www.linkedin.com/',\r\n       Twitch:'https://www.twitch.com/',\r\n       Pinterest:'https://www.pinterest.com/',\r\n       Spotify:'https://www.spotify.com/',\r\n       category_links:[],\r\n \r\n       checked:false,\r\n       request:true,\r\n       checkedRequest:true,\r\n       descript:false,\r\n       checkeddescript:false,\r\n       FanDetails:false,\r\n       checkedFanDetails:false,\r\n       DA_ID:this.props.productList.DA_ID,\r\n       BM_Instruction:'',\r\n       BM_Name:'',\r\n       BM_Email:'',\r\n       BM_Phone:'',\r\n       BM_Password:'*******',\r\n       BM_Purchase_Amt:this.props.productList.DA_Price,\r\n       DA_Title:this.props.productList.DA_Title,\r\n       JM_Name:this.props.JM_Name,\r\n       DonarName:'',\r\n       DonarMsg:'',\r\n       DonarEmail:'',\r\n       DonarPhone:'',\r\n       DonarAmt:this.props.productList.DA_Price,\r\n       Consent:0,\r\n       LM_ID:0,\r\n     }\r\n     //console.log(this.props);\r\n\r\n}\r\nModalClose=()=>{\r\n    this.setState({openModel:false,show:false,\r\n      DonarName:'',\r\n      DonarMsg:'',\r\n      DonarEmail:'',\r\n      DonarPhone:'',\r\n      DonarAmt:this.props.productList.DA_Min_Amount\r\n    });\r\n\r\n  }\r\n  ModalOpen=()=>{\r\n    this.setState({openModel:true,show:true,\r\n       DonarName:'',\r\n       DonarMsg:'',\r\n       DonarEmail:'',\r\n       DonarPhone:'',\r\n       DonarAmt:this.props.productList.DA_Price,\r\n       Consent:0,\r\n       LM_ID:0,\r\n    \r\n    });\r\n    this.setState({checkedRequest:true,request:true,checkedPayDetails:false,PayDetails:false,checkedFanDetails:false,FanDetails:false,checkeddescript:false,descript:false});\r\n   // //console.log(this.props.productList);\r\n   // //console.log(this.props.userDetails);\r\n\r\n    var JSONdata = {\r\n      Stat_Type: 'P',\r\n      Stat_ID: this.props.productList.DA_ID,\r\n      JM_ID: this.props.productList.JM_ID   \r\n    };\r\n    let data = API.doClick(JSONdata);\r\n  }\r\n \r\n  requestClick=(e)=>{\r\n    this.setState({checkeddescript:true,checkedRequest:false,descript:true,request:false});\r\n  }\r\n  nextClick=(e)=>{\r\n    if(this.state.BM_Instruction.length > 0)\r\n       this.setState({checkedFanDetails:true,FanDetails:true,checkeddescript:false,descript:false,checkedRequest:false,request:false});\r\n    else\r\n      return false;\r\n  }\r\n  continueClick=(e)=>{\r\n    if(this.state.BM_Name.length > 0 && this.state.BM_Email.length > 0 )\r\n      {            \r\n       // this.AddLeads();\r\n        this.setState({checkedPayDetails:true,PayDetails:true,checkedFanDetails:false,FanDetails:false,checkedRequest:false,request:false});\r\n      } \r\n    else\r\n      return false;\r\n  }\r\n  AddLeads=()=>{\r\n    var flagData = {\r\n      DA_ID:this.props.productList.DA_ID,\r\n      BM_Instruction:this.state.BM_Instruction,\r\n      BM_Name:this.state.DonarName,\r\n      BM_Email:this.state.DonarEmail,\r\n      BM_Phone:this.state.DonarPhone,\r\n      BM_Purchase_Amt:this.state.DonarAmt,\r\n      Consent:this.state.Consent,\r\n    };\r\n\r\n    const flag=API.encryptData(flagData);\r\n    let  JSONdata = {\r\n        flag: flag\r\n      };\r\n\r\n\r\n\r\n\r\n          const API_url = process.env.REACT_APP_API_URL + \"admin/addLeads\";\r\n          fetch(API_url,\r\n            {\r\n              method: 'post',\r\n              headers: { \"Content-Type\": \"application/json\" },\r\n              body: JSON.stringify(JSONdata)\r\n            })\r\n          .then((response) => response.json())\r\n          .then(data1 =>\r\n            {             \r\n                if(data1.status===1)\r\n                {\r\n                  const data=API.decryptJson(data1.flag);\r\n                  this.setState({\r\n                    LM_ID:data.LM_ID\r\n                  });\r\n                }\r\n                ////console.log(data)\r\n          });\r\n    \r\n  }\r\n  backClick=(e)=>{\r\n      if(this.state.descript)\r\n      {\r\n        this.setState({checkeddescript:false,checkedRequest:true,descript:false,request:true});\r\n      }\r\n     else if(this.state.FanDetails)\r\n      {\r\n        this.setState({checkedFanDetails:false,FanDetails:false,checkeddescript:true,descript:true});\r\n      }\r\n    else  if(this.state.PayDetails)\r\n      {\r\n        this.setState({checkedPayDetails:false,PayDetails:false,checkedFanDetails:true,FanDetails:true,\r\n        \r\n        });\r\n      }\r\n   \r\n  }\r\n  handleChange=(e)=>{\r\n     // let val=parseFloat(e.target.value);\r\n      this.setState({[e.target.name]:e.target.value})\r\n  }\r\n  PayNow=e=>\r\n  {\r\n    var JSONdata = {\r\n      DA_ID:this.props.productList.DA_ID,\r\n      BM_Instruction:this.state.BM_Instruction,\r\n      BM_Name:this.state.BM_Name,\r\n      BM_Email:this.state.BM_Email,\r\n      BM_Phone:this.state.BM_Phone,\r\n      BM_Password:this.state.BM_Password,\r\n      BM_Purchase_Amt:this.props.productList.DA_Price,   \r\n    };\r\n          const API_url = process.env.REACT_APP_API_URL + \"admin/addDoner\";\r\n        fetch(API_url,\r\n          {\r\n            method: 'post',\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(JSONdata)\r\n          })\r\n        .then((response) => response.json())\r\n        .then(data => {          \r\n          //console.log(data)\r\n        });\r\n  }\r\n  openSpinner=()=>{\r\n    this.setState({\r\n      isLoading:true,\r\n      showLoading:true,\r\n      checkedPayDetails:false,\r\n      PayDetails:false,\r\n      checkedFanDetails:true,\r\n      FanDetails:false\r\n    });\r\n  }\r\n  onChangeHandlePrice=(e)=>{\r\n    var val=parseInt(e.target.value)\r\n\r\n    if(isNaN(val)) val=0;\r\n    this.setState({[e.target.name]:val});     \r\n}\r\nonChangeHandle=(e)=>{\r\n  var val=e.target.value  \r\n  this.setState({[e.target.name]:val});     \r\n}\r\n  showMessage=()=>{\r\n    this.refs.checkout.UpdateMobileView();\r\n  }\r\n  doConsent=(e)=>{\r\n    if(e.target.checked)\r\n      this.setState({\r\n        Consent:1\r\n      });\r\n\r\n  }\r\n        render() \r\n        {\r\n            const useStyles = makeStyles((theme) => ({\r\n                root: {\r\n                height: 180,\r\n                },\r\n                container: {\r\n                display: 'flex',\r\n                },\r\n                paper: {\r\n                margin: theme.spacing(1),\r\n                },\r\n                svg: {\r\n                width: 100,\r\n                height: 100,\r\n                },\r\n                polygon: {\r\n                fill: theme.palette.common.white,\r\n                stroke: theme.palette.divider,\r\n                strokeWidth: 1,\r\n                },\r\n            }));\r\n            return (\r\n            <>\r\n                <button className={this.props.className}  data={this.props.productList} style={this.props.mystyleForHightight} onClick={this.ModalOpen}>Buy</button>\r\n\r\n                <Modal\r\n                show={this.state.openModel}\r\n                onHide={this.ModalClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                centered\r\n\r\n            >\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>\r\n                    <p className=\"addnew-title\">{this.props.productList.DA_Title}</p>\r\n                </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                        \r\n                            <div className=\"request-sec\">                     \r\n                                <div className=\"request-box\">   \r\n                                       <div className=\"addnew-box\" id=\"request\">\r\n                                                <label>How much do you want to send?</label>\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter Tip Amount\"\r\n                                                    name=\"DonarAmt\" \r\n                                                    onKeyPress={(event) => {\r\n                                                      if (!/[0-9]/.test(event.key)) {\r\n                                                        event.preventDefault();\r\n                                                      }\r\n                                                    }}\r\n                                                    onPaste={(e)=>{\r\n                                                      e.preventDefault()\r\n                                                      return false;\r\n                                                    }} onCopy={(e)=>{\r\n                                                      e.preventDefault()\r\n                                                      return false;\r\n                                                    }}\r\n                                                    value={this.state.DonarAmt} onChange={this.onChangeHandlePrice}/>\r\n\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter Your Name\"\r\n                                                    name=\"DonarName\" value={this.state.DonarName} onChange={this.onChangeHandle}/>\r\n                                                   \r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter Your Email\"\r\n                                                    name=\"DonarEmail\" value={this.state.DonarEmail} onChange={this.onChangeHandle}/>\r\n                                                    \r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter Your Phone\"\r\n                                                    name=\"DonarPhone\" value={this.state.DonarPhone} onChange={this.onChangeHandle}\r\n                                                    onKeyPress={(event) => {\r\n                                                      if (!/[0-9]/.test(event.key)) {\r\n                                                        event.preventDefault();\r\n                                                      }\r\n                                                    }}\r\n\r\n                                                    onPaste={(e)=>{\r\n                                                      e.preventDefault()\r\n                                                      return false;\r\n                                                    }} onCopy={(e)=>{\r\n                                                      e.preventDefault()\r\n                                                      return false;\r\n                                                    }}\r\n                                                    \r\n                                                    />\r\n\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Tip Messsage (optional)\"\r\n                                                    name=\"DonarMsg\" value={this.state.DonarMsg} onChange={this.onChangeHandle} />\r\n\r\n                                                                          <p>\r\n                                                                              <input type=\"checkbox\" name=\"consent\" onClick={this.doConsent}/> {API.consentLebel_GiftDonation()}\r\n                                                                          </p> \r\n\r\n                                                        <div className=\"btun-box\">\r\n                                                                      <Tipping ref=\"checkout\" BM_Type={'D'}  DA_INR_Doller={'INR'} DA_Price={this.state.DonarAmt} DA_Title={this.props.productList.DA_Title}\r\n                                                                       AddLeads={this.AddLeads}   DonarName={this.state.DonarName} JM_Name={this.props.userDetails[0].JM_Name} message={this.state.DonarMsg} DA_ID={this.props.productList.DA_DA_ID}  state={this.state} userDetails={this.props.userDetails[0]}/>\r\n                                                                \r\n                                                        \r\n                                                        {/* <button className=\"btun\" onClick={this.closeSupportModal}>Cancel</button> */}\r\n                                                        </div>\r\n                                                        <p style={{color:this.state.errColor}}>{this.state.errMsg}</p>\r\n\r\n                                                    </div>   \r\n                                                                                \r\n                                  \r\n\r\n                                </div>\r\n                            </div>\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n                        \r\n            </>             \r\n                    \r\n            );\r\n        }\r\n\r\n}\r\n\r\n\r\n\r\nexport default SendSupport;","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\premium\\config.js",[],"E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\header_footer\\FooterClass_Home.js",[],"E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\RND\\Pagination.js",[],"E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\CreatorCommunity.js",["2908","2909","2910","2911","2912","2913","2914","2915"],"import React, { Component } from 'react'\r\n\r\nimport FooterClass from '../header_footer/FooterClass';\r\nimport MainHeader from '../header_footer/MainHeader';\r\nimport API  from '../services/API';\r\nimport ProfileHeader from '../header_footer/ProfileHeader';\r\nimport TestCommunity from './TestCommunity';\r\nclass CreatorCommunity extends Component\r\n{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n      \r\n        this.state = {\r\n           tab:0,\r\n           tab_item:false,\r\n           tab_people:true,\r\n           exploreData:[],\r\n           JM_ID:parseInt(localStorage.getItem('JM_ID')),\r\n           JM_Name: '',\r\n           JM_Email: '',\r\n           JM_Url: '',\r\n           JM_Profile_Pic: '',\r\n           JM_User_Profile_Url: '',\r\n           base_url: process.env.REACT_APP_API_URL,\r\n           root_url: process.env.REACT_APP_ROOT_URL,\r\n           ProfilePath: 'Profile/',\r\n           linkPath: '',\r\n           ProfileimagePath: '',\r\n           limitData:4,\r\n           isLoading:false\r\n        }\r\n      }\r\n    componentDidMount() {\r\n        this.validateSession();     \r\n           \r\n      }\r\n      validateSession()\r\n      {\r\n        var JM_ID =this.state.JM_ID;\r\n        if (isNaN(JM_ID) || JM_ID === 0 || JM_ID===null)  \r\n        {\r\n          localStorage.setItem('JM_Email', \"\");\r\n          localStorage.setItem('JM_ID', 0);\r\n          //window.location.href = '/';\r\n          this.Get_All_Users();  \r\n          return false;\r\n        }\r\n        else\r\n        {\r\n          this.Get_All_Users();  \r\n        }\r\n      \r\n      }\r\n\r\n    Get_All_Users=()=>{\r\n        this.setState({isLoading: true})  \r\n        const API_url = process.env.REACT_APP_API_URL+ \"admin/Get_Four_Users\";\r\n        let flagData = {\r\n            JM_ID: this.state.JM_ID,\r\n            limit:this.state.limitData        \r\n          };\r\n\r\n               \r\n            const flag=API.encryptData(flagData);\r\n            var JSONdata = {\r\n            flag: flag\r\n          };\r\n\r\n\r\n        fetch(API_url,\r\n            {\r\n                method: 'post',\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(JSONdata)\r\n            })\r\n        .then((response) => response.json())\r\n        .then(async data1 => {\r\n            if(data1.status===1)\r\n            {\r\n              const data=await API.decryptJson(data1.flag);\r\n              ////console.log(data.exploreData)\r\n              this.setState({exploreData:data.exploreData})\r\n              this.setState({isLoading: false})  \r\n            }           \r\n        });\r\n\r\n      }\r\n\r\n  render(){\r\n \r\n\tlet  JM_ID= parseInt(localStorage.getItem('JM_ID')) \r\n\r\n  return (\r\n    <>\r\n  \t{\r\n\t\t(JM_ID > 0) ?\r\n\t\t<ProfileHeader/>\r\n\t\t:\r\n\t\t<MainHeader/>\r\n\t} \r\n    \r\n\r\n\r\n\r\n            <div className=\"community-banner\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8 col-md-12 offset-lg-2\">\r\n                            <h2>Join the Expy Creator Tribe</h2>\r\n                        </div>\r\n                        <div className=\"col-lg-8 col-md-8 offset-lg-2 offset-md-2\">\r\n                            <h6>Expy’s Creator Tribe is a private community \r\nwhere creators connect, collaborate, learn from top \r\nglobal creators, earn through exclusive perks and\r\n rewards and 10X their online growth.</h6>\r\n                        <a href=\"/join\" class=\"btun\">Start Now</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <TestCommunity/>\r\n\r\n\r\n            <div className=\"community-last-back\">  \r\n            <div className=\"community-last right-back\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-5 col-md-4\">\r\n                            <div className=\"image\">\r\n                                <img src={\"images/community-img-1.png\"} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-7 col-md-8 cpr-0 d-flex align-items-center\">\r\n                            <div className=\"text\">\r\n                                    <div className=\"left\">\r\n                                        <h3>Expy Creator Tribe WhatsApp & Discord Group</h3>\r\n                                        <p>Engage, learn & collaborate with amazing\r\n                                             creators to grow together.\r\n                                        </p>\r\n                                        <a href=\"/join\" class=\"btun\">Join Now</a>\r\n                                    </div>\r\n                                    <div className=\"mobile\">\r\n                                        <img src={\"images/community-mobile-1.png\"} />\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"community-last left-back\">\r\n                <div className=\"container\">\r\n                    <div className=\"row mb-70\">\r\n                        <div className=\"col-lg-5 col-md-4 order-md-last\">\r\n                            <div className=\"image\">\r\n                                <img src={\"images/community-img-2.png\"} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-7 col-md-8 cpl-0 d-flex align-items-center\">\r\n                            <div className=\"left-text\">\r\n                                    <div className=\"mobile-left\">\r\n                                        <img src={\"images/community-mobile-2.png\"} />\r\n                                    </div>\r\n                                    <div className=\"right\">\r\n                                        <h3>Chai pe Charcha with the OGs</h3>\r\n                                        <p>Have fireside chats with top content \r\n                                        creators from India and the USA.\r\n                                        </p>\r\n                                        <a href=\"/join\" class=\"btun\">Join Right Now</a>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>   \r\n            </div>\r\n            <div className=\"community-last right-back\">\r\n                <div className=\"container\">\r\n                <div className=\"row\">\r\n                        <div className=\"col-lg-5 col-md-4\">\r\n                            <div className=\"image\">\r\n                                <img src={\"images/community-img-3.png\"} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-7 col-md-8  cpr-0 d-flex align-items-center\">\r\n                            <div className=\"text\">\r\n                                    <div className=\"left\">\r\n                                        <h3>Discover Opportunities </h3>\r\n                                        <p>Showcase your talent to a \r\n                                        wide group of creators with \r\n                                        creator spotlights, and get \r\n                                        featured on our newsletter \r\n                                        and website.\r\n                                        </p>\r\n                                        <a href=\"/join\" class=\"btun\">Don't Miss Out!</a>\r\n                                    </div>\r\n                                    <div className=\"mobile\">\r\n                                        <img src={\"images/community-mobile-3.png\"} />\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"community-last left-back\">\r\n                <div className=\"container\">\r\n                <div className=\"row\">\r\n                        <div className=\"col-lg-5 col-md-4 order-md-last\">\r\n                            <div className=\"image\">\r\n                                <img src={\"images/community-img-4.png\"} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-7 col-md-8 cpl-0 d-flex align-items-center\">\r\n                            <div className=\"left-text\">\r\n                                    <div className=\"mobile-left\">\r\n                                        <img src={\"images/community-mobile-4.png\"} />\r\n                                    </div>\r\n                                    <div className=\"right\">\r\n                                        <h3>Get Rewarded</h3>\r\n                                        <p>Be a part of rewarding Expy \r\n                                        contests on Twitter, IG and \r\n                                        pursue your creator dreams \r\n                                        with our Creator Fund \r\n                                        Programme.\r\n                                        </p>\r\n                                        <a href=\"/join\" class=\"btun\">Did You Join?</a>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>   \r\n            </div>\r\n        </div>\r\n       \r\n        <FooterClass/>\r\n    </>\r\n  )\r\n}\r\n}\r\nexport default CreatorCommunity\r\n","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\testCommunity.js",["2916","2917","2918"],"E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\pages\\TestCommunity.js",["2919","2920","2921"],"import React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Loader from './Loader';\r\nimport API  from '../services/API';\r\nimport OwlCarousel from 'react-owl-carousel2';\r\n class TestCommunity extends Component {\r\n     constructor(props) {\r\n       super(props)\r\n     \r\n       this.state = {\r\n          tab:0,\r\n          tab_item:false,\r\n          tab_people:true,\r\n          exploreData:[],\r\n          JM_ID:parseInt(localStorage.getItem('JM_ID')),\r\n          JM_Name: '',\r\n          JM_Email: '',\r\n          JM_Url: '',\r\n          JM_Profile_Pic: '',\r\n          JM_User_Profile_Url: '',\r\n          base_url: process.env.REACT_APP_API_URL,\r\n          root_url: process.env.REACT_APP_ROOT_URL,\r\n          ProfilePath: 'Profile/',\r\n          linkPath: '',\r\n          ProfileimagePath: '',\r\n          limitData:4,\r\n          isLoading:false\r\n       }\r\n     }\r\n     handleChange =tab=>e=> {\r\n      this.setState({tab});\r\n        if(tab===0)\r\n        {\r\n          this.setState({tab_people:true,tab_item:false});\r\n           // alert(1);           \r\n        }\r\n        if(tab===1)\r\n        {\r\n          this.setState({tab_people:false,tab_item:true});\r\n            //alert(2);\r\n        }\r\n      };\r\n      componentDidMount() {\r\n        this.validateSession();     \r\n           \r\n      }\r\n      validateSession()\r\n      {\r\n        var JM_ID =this.state.JM_ID;\r\n        if (isNaN(JM_ID) || JM_ID === 0 || JM_ID===null)  \r\n        {\r\n          localStorage.setItem('JM_Email', \"\");\r\n          localStorage.setItem('JM_ID', 0);\r\n          //window.location.href = '/';\r\n          this.Get_All_Users();  \r\n          return false;\r\n        }\r\n        else\r\n        {\r\n          this.Get_All_Users();  \r\n        }\r\n      \r\n      }\r\n      Get_All_Users=()=>{\r\n        this.setState({isLoading: true})  \r\n        const API_url = process.env.REACT_APP_API_URL+ \"admin/Get_Four_Users\";\r\n        let flagData = {\r\n            JM_ID: this.state.JM_ID,\r\n            limit:this.state.limitData        \r\n          };\r\n\r\n               \r\n            const flag=API.encryptData(flagData);\r\n            var JSONdata = {\r\n            flag: flag\r\n          };\r\n\r\n\r\n        fetch(API_url,\r\n            {\r\n                method: 'post',\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(JSONdata)\r\n            })\r\n        .then((response) => response.json())\r\n        .then(async data1 => {\r\n            if(data1.status===1)\r\n            {\r\n              const data=await API.decryptJson(data1.flag);\r\n              ////console.log(data.exploreData)\r\n              this.setState({exploreData:data.exploreData})\r\n              this.setState({isLoading: false})  \r\n            }           \r\n        });\r\n\r\n      }\r\n      seeMore=(prevState)=>{\r\n          let limitData=this.state.limitData;\r\n          limitData=limitData+2;\r\n          //this.Get_All_Users();         \r\n          this.setState({\r\n            limitData:limitData\r\n            },() => {\r\n                ////console.log(this.state.limitData);\r\n               this.Get_All_Users();\r\n            });\r\n         \r\n      }\r\n      gotoProfile=()=>{\r\n        this.props.history.push(\"/direct-access\");\r\n      }\r\n  render() {\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          flexGrow: 1,\r\n          maxWidth: 500,\r\n        },\r\n      });\r\n\r\n      let tabView=(\r\n        <Paper square className={useStyles.root}>\r\n        <Tabs\r\n            value={this.state.tab}       \r\n            variant=\"fullWidth\"\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            aria-label=\"icon label tabs example\"\r\n            centered\r\n        >\r\n           <Tab  aria-label=\"phone\" label=\"People\" onClick={this.handleChange(0)}/>\r\n            <Tab  aria-label=\"favorite\" label=\"Items\" onClick={this.handleChange(1)}/>\r\n           \r\n        </Tabs>\r\n        </Paper>\r\n      );\r\n\r\n        let root_url=process.env.REACT_APP_ROOT_URL;\r\n     let profileCard;\r\n\r\n        profileCard=this.state.exploreData.map((user,i) =>{\r\n          return (\r\n                  user.isForLandingPage===1 ?     \r\n                     <div className=\"item\">\r\n                             <a href={process.env.REACT_APP_API_URL+user.JM_User_Profile_Url} target=\"_blank\" rel=\"noreferrer\">    \r\n                                     <div className=\"profile\">\r\n                                             <div className=\"abtar\">\r\n                                             {\r\n                                             \r\n                                                 user.Landing_Image!==null && user.Landing_Image!==''?\r\n                                                 <img src={process.env.REACT_APP_UPLOAD_URL+user.Landing_Image} alt=\"\"/>\r\n                                                 :\r\n                                                 <img src={\"images/abtar.png\"} alt=\"\"/>\r\n                                             } \r\n                                              </div>\r\n                                             <div className=\"text\">\r\n                                                 <h3>{user.JM_Name}</h3>\r\n                                             </div>\r\n                                      </div>\r\n                             </a>\r\n                     </div>\r\n                  \r\n                     :\r\n                     null     \r\n \r\n              ) \r\n        })\r\n\r\n      let exploreContent=(\r\n        <div className=\"profile-sec dash\">                \r\n\r\n                <div className=\"container\"> \r\n                     <div className=\"row\">\r\n          \t\t\t    <div className=\"col-md-8 offset-md-2\">\r\n                    <div className=\"title\">\r\n                        <h3>Connect with your Favorite Creators</h3>\r\n                      </div>\r\n                      <div className=\"sub-title\">\r\n                        <p>Find and engage with your favorite people who are already using Expy.</p>\r\n                      </div>\r\n          \t\t\t</div>\r\n          \t        </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"profile-box\">                 \r\n                            {profileCard}                 \r\n                        </div>\r\n                    </div>                   \r\n                    </div>\r\n        </div>\r\n        )\r\n\r\n        const expertoptions = {\r\n          items: 5,\r\n          nav: false,\r\n          margin: 20,\r\n          navText : [\"<i class='fa fa-angle-left'></i>\",\"<i class='fa fa-angle-right'></i>\"],\r\n          rewind: true,\r\n          dots: false,\r\n          autoplay: false,\r\n          responsive: {\r\n              0: {\r\n                  items: 1,\r\n                  margin: 0,\r\n                  nav: true,\r\n                  dots: true,\r\n                  autoplay: true,\r\n              },\r\n              460: {\r\n                  items: 1,\r\n                  margin: 0,\r\n                  nav: true,\r\n                  dots: true,\r\n                  autoplay: true,\r\n              },\r\n              576: {\r\n                  items: 2,\r\n                  margin: 15,\r\n                  nav: true,\r\n                  dots: true,\r\n                  autoplay: true,\r\n              },\r\n              992: {\r\n                  items: 5,\r\n                  \r\n                  \r\n              }\r\n          }\r\n      };\r\n\r\n\r\n    return (\r\n      <>     \r\n        {\r\n            this.state.isLoading ?           \r\n            <Loader/>\r\n            : \r\n            <>\r\n               \r\n                {\r\n                 this.state.tab_people ? \r\n                  \r\n            //      <div className=\"profile-sec\">\r\n            //      <div className=\"container\">\r\n            //        <div className=\"row\">\r\n            //          <div className=\"col-md-8 offset-md-2\">\r\n            //              <div className=\"title\">\r\n            //                <h2>Who is using Expy?</h2>\r\n            //                <h6>Anyone who creates and earns on the Internet. Expy is your digital identity. From creators to educators, entrepreneurs, freelancers to communities.</h6>\r\n            //              </div>\r\n            //            </div>\r\n            //        </div>\r\n            //        <div className=\"row\">\r\n            //        <div className=\"col-md-12\">\r\n            //              <div className=\"slider\">\r\n            //                  <OwlCarousel options={expertoptions}>\r\n            //                        {profileCard}\r\n            //                  </OwlCarousel>\r\n            //              </div>\r\n            //            </div>\r\n            //        </div>\r\n            //      </div>\r\n            //    </div>\r\n               <div className=\"community-user\">\r\n               <div className=\"container\">\r\n                   <div className=\"row\">\r\n                       <div class=\"col-md-6 offset-md-3\">\r\n                           <div class=\"title\">\r\n                               <h2>Our Community</h2>\r\n                               <h6>Join today to get access to a thriving community and\r\n   grow alongside our talented list of creators.\r\n                               </h6>\r\n                           </div>\r\n                       </div>\r\n                   </div>\r\n                   <div className=\"row\">\r\n                       <div className=\"col-md-12\">\r\n                               <div className=\"slider\">\r\n                                   <OwlCarousel options={expertoptions}>\r\n                                       {profileCard}   \r\n                                   </OwlCarousel>\r\n                               </div>\r\n                               <div className=\"bigbtn\">\r\n                                   <h3>& 1000+ Creators</h3>\r\n                               </div>\r\n                           </div>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n\r\n\r\n\r\n\r\n                 :                  \r\n                    null  \r\n                }\r\n                \r\n         \r\n            </>  \r\n             \r\n        }        \r\n     \r\n    \r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default TestCommunity;\r\n","E:\\ReactProject\\Gold backup\\MS3\\pwa-expy\\src\\components\\header_footer\\ProfileHeader_MS2_B1.js",[],{"ruleId":"2922","severity":1,"message":"2923","line":2,"column":8,"nodeType":"2924","messageId":"2925","endLine":2,"endColumn":16},{"ruleId":"2922","severity":1,"message":"2926","line":7,"column":8,"nodeType":"2924","messageId":"2925","endLine":7,"endColumn":13},{"ruleId":"2922","severity":1,"message":"2927","line":75,"column":9,"nodeType":"2924","messageId":"2925","endLine":75,"endColumn":14},{"ruleId":"2922","severity":1,"message":"2928","line":2,"column":14,"nodeType":"2924","messageId":"2925","endLine":2,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2929","line":2,"column":37,"nodeType":"2924","messageId":"2925","endLine":2,"endColumn":43},{"ruleId":"2922","severity":1,"message":"2930","line":2,"column":44,"nodeType":"2924","messageId":"2925","endLine":2,"endColumn":50},{"ruleId":"2922","severity":1,"message":"2931","line":3,"column":9,"nodeType":"2924","messageId":"2925","endLine":3,"endColumn":12},{"ruleId":"2922","severity":1,"message":"2932","line":3,"column":13,"nodeType":"2924","messageId":"2925","endLine":3,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2933","line":3,"column":20,"nodeType":"2924","messageId":"2925","endLine":3,"endColumn":26},{"ruleId":"2922","severity":1,"message":"2934","line":4,"column":8,"nodeType":"2924","messageId":"2925","endLine":4,"endColumn":17},{"ruleId":"2922","severity":1,"message":"2935","line":5,"column":8,"nodeType":"2924","messageId":"2925","endLine":5,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2936","line":13,"column":5,"nodeType":"2924","messageId":"2925","endLine":13,"endColumn":14},{"ruleId":"2937","severity":1,"message":"2938","line":45,"column":25,"nodeType":"2939","endLine":45,"endColumn":58},{"ruleId":"2937","severity":1,"message":"2938","line":54,"column":49,"nodeType":"2939","endLine":54,"endColumn":81},{"ruleId":"2937","severity":1,"message":"2938","line":65,"column":49,"nodeType":"2939","endLine":65,"endColumn":83},{"ruleId":"2940","severity":1,"message":"2941","line":75,"column":29,"nodeType":"2939","endLine":75,"endColumn":53},{"ruleId":"2937","severity":1,"message":"2938","line":94,"column":21,"nodeType":"2939","endLine":94,"endColumn":54},{"ruleId":"2922","severity":1,"message":"2942","line":3,"column":10,"nodeType":"2924","messageId":"2925","endLine":3,"endColumn":23},{"ruleId":"2922","severity":1,"message":"2943","line":4,"column":10,"nodeType":"2924","messageId":"2925","endLine":4,"endColumn":24},{"ruleId":"2922","severity":1,"message":"2944","line":129,"column":13,"nodeType":"2924","messageId":"2925","endLine":129,"endColumn":21},{"ruleId":"2945","severity":1,"message":"2946","line":137,"column":25,"nodeType":"2939","endLine":137,"endColumn":85},{"ruleId":"2937","severity":1,"message":"2938","line":137,"column":88,"nodeType":"2939","endLine":137,"endColumn":156},{"ruleId":"2937","severity":1,"message":"2938","line":142,"column":59,"nodeType":"2939","endLine":142,"endColumn":95},{"ruleId":"2945","severity":1,"message":"2946","line":146,"column":25,"nodeType":"2939","endLine":146,"endColumn":85},{"ruleId":"2922","severity":1,"message":"2947","line":71,"column":13,"nodeType":"2924","messageId":"2925","endLine":71,"endColumn":18},{"ruleId":"2948","severity":1,"message":"2949","line":135,"column":9,"nodeType":"2924","messageId":"2950","endLine":135,"endColumn":17},{"ruleId":"2948","severity":1,"message":"2949","line":178,"column":9,"nodeType":"2924","messageId":"2950","endLine":178,"endColumn":17},{"ruleId":"2948","severity":1,"message":"2951","line":418,"column":19,"nodeType":"2924","messageId":"2950","endLine":418,"endColumn":25},{"ruleId":"2948","severity":1,"message":"2952","line":419,"column":19,"nodeType":"2924","messageId":"2950","endLine":419,"endColumn":25},{"ruleId":"2948","severity":1,"message":"2951","line":445,"column":21,"nodeType":"2924","messageId":"2950","endLine":445,"endColumn":27},{"ruleId":"2948","severity":1,"message":"2952","line":446,"column":21,"nodeType":"2924","messageId":"2950","endLine":446,"endColumn":27},{"ruleId":"2948","severity":1,"message":"2951","line":467,"column":21,"nodeType":"2924","messageId":"2950","endLine":467,"endColumn":27},{"ruleId":"2948","severity":1,"message":"2952","line":468,"column":21,"nodeType":"2924","messageId":"2950","endLine":468,"endColumn":27},{"ruleId":"2922","severity":1,"message":"2953","line":660,"column":9,"nodeType":"2924","messageId":"2925","endLine":660,"endColumn":27},{"ruleId":"2922","severity":1,"message":"2954","line":675,"column":11,"nodeType":"2924","messageId":"2925","endLine":675,"endColumn":18},{"ruleId":"2922","severity":1,"message":"2955","line":695,"column":9,"nodeType":"2924","messageId":"2925","endLine":695,"endColumn":16},{"ruleId":"2922","severity":1,"message":"2956","line":698,"column":8,"nodeType":"2924","messageId":"2925","endLine":698,"endColumn":14},{"ruleId":"2937","severity":1,"message":"2938","line":49,"column":15,"nodeType":"2939","endLine":49,"endColumn":53},{"ruleId":"2945","severity":1,"message":"2946","line":59,"column":29,"nodeType":"2939","endLine":60,"endColumn":81},{"ruleId":"2937","severity":1,"message":"2938","line":76,"column":15,"nodeType":"2939","endLine":76,"endColumn":47},{"ruleId":"2937","severity":1,"message":"2938","line":79,"column":15,"nodeType":"2939","endLine":79,"endColumn":46},{"ruleId":"2937","severity":1,"message":"2938","line":82,"column":15,"nodeType":"2939","endLine":82,"endColumn":48},{"ruleId":"2937","severity":1,"message":"2938","line":113,"column":24,"nodeType":"2939","endLine":113,"endColumn":54},{"ruleId":"2937","severity":1,"message":"2938","line":120,"column":49,"nodeType":"2939","endLine":120,"endColumn":87},{"ruleId":"2937","severity":1,"message":"2938","line":124,"column":49,"nodeType":"2939","endLine":124,"endColumn":87},{"ruleId":"2937","severity":1,"message":"2938","line":128,"column":49,"nodeType":"2939","endLine":128,"endColumn":87},{"ruleId":"2937","severity":1,"message":"2938","line":132,"column":49,"nodeType":"2939","endLine":132,"endColumn":87},{"ruleId":"2937","severity":1,"message":"2938","line":136,"column":49,"nodeType":"2939","endLine":136,"endColumn":87},{"ruleId":"2945","severity":1,"message":"2946","line":151,"column":16,"nodeType":"2939","endLine":151,"endColumn":96},{"ruleId":"2922","severity":1,"message":"2957","line":2,"column":8,"nodeType":"2924","messageId":"2925","endLine":2,"endColumn":17},{"ruleId":"2922","severity":1,"message":"2958","line":3,"column":10,"nodeType":"2924","messageId":"2925","endLine":3,"endColumn":14},{"ruleId":"2922","severity":1,"message":"2959","line":3,"column":15,"nodeType":"2924","messageId":"2925","endLine":3,"endColumn":22},{"ruleId":"2922","severity":1,"message":"2928","line":3,"column":24,"nodeType":"2924","messageId":"2925","endLine":3,"endColumn":29},{"ruleId":"2922","severity":1,"message":"2929","line":3,"column":48,"nodeType":"2924","messageId":"2925","endLine":3,"endColumn":54},{"ruleId":"2922","severity":1,"message":"2930","line":3,"column":56,"nodeType":"2924","messageId":"2925","endLine":3,"endColumn":62},{"ruleId":"2922","severity":1,"message":"2931","line":4,"column":10,"nodeType":"2924","messageId":"2925","endLine":4,"endColumn":13},{"ruleId":"2922","severity":1,"message":"2932","line":4,"column":15,"nodeType":"2924","messageId":"2925","endLine":4,"endColumn":21},{"ruleId":"2922","severity":1,"message":"2933","line":4,"column":23,"nodeType":"2924","messageId":"2925","endLine":4,"endColumn":29},{"ruleId":"2937","severity":1,"message":"2938","line":34,"column":27,"nodeType":"2939","endLine":34,"endColumn":67},{"ruleId":"2937","severity":1,"message":"2938","line":52,"column":27,"nodeType":"2939","endLine":52,"endColumn":62},{"ruleId":"2937","severity":1,"message":"2938","line":70,"column":27,"nodeType":"2939","endLine":70,"endColumn":61},{"ruleId":"2922","severity":1,"message":"2957","line":2,"column":8,"nodeType":"2924","messageId":"2925","endLine":2,"endColumn":17},{"ruleId":"2960","severity":1,"message":"2961","line":5,"column":5,"nodeType":"2962","messageId":"2963","endLine":8,"endColumn":6},{"ruleId":"2922","severity":1,"message":"2964","line":139,"column":9,"nodeType":"2924","messageId":"2925","endLine":139,"endColumn":14},{"ruleId":"2922","severity":1,"message":"2965","line":768,"column":13,"nodeType":"2924","messageId":"2925","endLine":768,"endColumn":17},{"ruleId":"2940","severity":1,"message":"2941","line":997,"column":37,"nodeType":"2939","endLine":997,"endColumn":40},{"ruleId":"2940","severity":1,"message":"2941","line":998,"column":37,"nodeType":"2939","endLine":998,"endColumn":40},{"ruleId":"2937","severity":1,"message":"2938","line":43,"column":37,"nodeType":"2939","endLine":43,"endColumn":72},{"ruleId":"2937","severity":1,"message":"2938","line":62,"column":37,"nodeType":"2939","endLine":62,"endColumn":72},{"ruleId":"2937","severity":1,"message":"2938","line":76,"column":39,"nodeType":"2939","endLine":76,"endColumn":73},{"ruleId":"2937","severity":1,"message":"2938","line":90,"column":37,"nodeType":"2939","endLine":90,"endColumn":75},{"ruleId":"2937","severity":1,"message":"2938","line":105,"column":37,"nodeType":"2939","endLine":105,"endColumn":76},{"ruleId":"2937","severity":1,"message":"2938","line":124,"column":37,"nodeType":"2939","endLine":124,"endColumn":72},{"ruleId":"2922","severity":1,"message":"2966","line":116,"column":13,"nodeType":"2924","messageId":"2925","endLine":116,"endColumn":24},{"ruleId":"2922","severity":1,"message":"2967","line":118,"column":12,"nodeType":"2924","messageId":"2925","endLine":118,"endColumn":17},{"ruleId":"2948","severity":1,"message":"2968","line":139,"column":17,"nodeType":"2924","messageId":"2950","endLine":139,"endColumn":19},{"ruleId":"2948","severity":1,"message":"2949","line":140,"column":17,"nodeType":"2924","messageId":"2950","endLine":140,"endColumn":25},{"ruleId":"2922","severity":1,"message":"2969","line":391,"column":19,"nodeType":"2924","messageId":"2925","endLine":391,"endColumn":27},{"ruleId":"2922","severity":1,"message":"2970","line":473,"column":23,"nodeType":"2924","messageId":"2925","endLine":473,"endColumn":31},{"ruleId":"2948","severity":1,"message":"2951","line":628,"column":29,"nodeType":"2924","messageId":"2950","endLine":628,"endColumn":35},{"ruleId":"2948","severity":1,"message":"2952","line":629,"column":29,"nodeType":"2924","messageId":"2950","endLine":629,"endColumn":35},{"ruleId":"2948","severity":1,"message":"2951","line":643,"column":29,"nodeType":"2924","messageId":"2950","endLine":643,"endColumn":35},{"ruleId":"2948","severity":1,"message":"2952","line":644,"column":29,"nodeType":"2924","messageId":"2950","endLine":644,"endColumn":35},{"ruleId":"2948","severity":1,"message":"2951","line":654,"column":29,"nodeType":"2924","messageId":"2950","endLine":654,"endColumn":35},{"ruleId":"2948","severity":1,"message":"2952","line":655,"column":29,"nodeType":"2924","messageId":"2950","endLine":655,"endColumn":35},{"ruleId":"2948","severity":1,"message":"2971","line":656,"column":29,"nodeType":"2924","messageId":"2950","endLine":656,"endColumn":32},{"ruleId":"2948","severity":1,"message":"2972","line":657,"column":29,"nodeType":"2924","messageId":"2950","endLine":657,"endColumn":32},{"ruleId":"2948","severity":1,"message":"2951","line":689,"column":29,"nodeType":"2924","messageId":"2950","endLine":689,"endColumn":35},{"ruleId":"2948","severity":1,"message":"2952","line":690,"column":29,"nodeType":"2924","messageId":"2950","endLine":690,"endColumn":35},{"ruleId":"2948","severity":1,"message":"2971","line":691,"column":29,"nodeType":"2924","messageId":"2950","endLine":691,"endColumn":32},{"ruleId":"2948","severity":1,"message":"2972","line":692,"column":29,"nodeType":"2924","messageId":"2950","endLine":692,"endColumn":32},{"ruleId":"2948","severity":1,"message":"2951","line":701,"column":29,"nodeType":"2924","messageId":"2950","endLine":701,"endColumn":35},{"ruleId":"2948","severity":1,"message":"2952","line":702,"column":29,"nodeType":"2924","messageId":"2950","endLine":702,"endColumn":35},{"ruleId":"2948","severity":1,"message":"2951","line":716,"column":29,"nodeType":"2924","messageId":"2950","endLine":716,"endColumn":35},{"ruleId":"2948","severity":1,"message":"2952","line":717,"column":29,"nodeType":"2924","messageId":"2950","endLine":717,"endColumn":35},{"ruleId":"2948","severity":1,"message":"2951","line":727,"column":29,"nodeType":"2924","messageId":"2950","endLine":727,"endColumn":35},{"ruleId":"2948","severity":1,"message":"2952","line":728,"column":29,"nodeType":"2924","messageId":"2950","endLine":728,"endColumn":35},{"ruleId":"2948","severity":1,"message":"2971","line":729,"column":29,"nodeType":"2924","messageId":"2950","endLine":729,"endColumn":32},{"ruleId":"2948","severity":1,"message":"2972","line":730,"column":29,"nodeType":"2924","messageId":"2950","endLine":730,"endColumn":32},{"ruleId":"2922","severity":1,"message":"2973","line":876,"column":15,"nodeType":"2924","messageId":"2925","endLine":876,"endColumn":19},{"ruleId":"2945","severity":1,"message":"2946","line":1034,"column":37,"nodeType":"2939","endLine":1034,"endColumn":119},{"ruleId":"2945","severity":1,"message":"2946","line":1036,"column":37,"nodeType":"2939","endLine":1036,"endColumn":167},{"ruleId":"2922","severity":1,"message":"2974","line":1138,"column":13,"nodeType":"2924","messageId":"2925","endLine":1138,"endColumn":23},{"ruleId":"2937","severity":1,"message":"2938","line":1373,"column":44,"nodeType":"2939","endLine":1373,"endColumn":98},{"ruleId":"2945","severity":1,"message":"2946","line":183,"column":43,"nodeType":"2939","endLine":183,"endColumn":185},{"ruleId":"2975","severity":1,"message":"2976","line":41,"column":12,"nodeType":"2977","messageId":"2978","endLine":41,"endColumn":17},{"ruleId":"2975","severity":1,"message":"2979","line":42,"column":12,"nodeType":"2977","messageId":"2978","endLine":42,"endColumn":15},{"ruleId":"2922","severity":1,"message":"2964","line":275,"column":13,"nodeType":"2924","messageId":"2925","endLine":275,"endColumn":18},{"ruleId":"2922","severity":1,"message":"2980","line":478,"column":23,"nodeType":"2924","messageId":"2925","endLine":478,"endColumn":34},{"ruleId":"2937","severity":1,"message":"2938","line":506,"column":57,"nodeType":"2939","endLine":506,"endColumn":92},{"ruleId":"2937","severity":1,"message":"2938","line":508,"column":57,"nodeType":"2939","endLine":508,"endColumn":95},{"ruleId":"2937","severity":1,"message":"2938","line":529,"column":57,"nodeType":"2939","endLine":529,"endColumn":92},{"ruleId":"2937","severity":1,"message":"2938","line":531,"column":57,"nodeType":"2939","endLine":531,"endColumn":95},{"ruleId":"2937","severity":1,"message":"2938","line":551,"column":57,"nodeType":"2939","endLine":551,"endColumn":92},{"ruleId":"2937","severity":1,"message":"2938","line":553,"column":57,"nodeType":"2939","endLine":553,"endColumn":95},{"ruleId":"2937","severity":1,"message":"2938","line":582,"column":65,"nodeType":"2939","endLine":582,"endColumn":100},{"ruleId":"2937","severity":1,"message":"2938","line":598,"column":65,"nodeType":"2939","endLine":598,"endColumn":100},{"ruleId":"2937","severity":1,"message":"2938","line":615,"column":65,"nodeType":"2939","endLine":615,"endColumn":100},{"ruleId":"2948","severity":1,"message":"2949","line":160,"column":14,"nodeType":"2924","messageId":"2950","endLine":160,"endColumn":22},{"ruleId":"2981","severity":1,"message":"2982","line":291,"column":34,"nodeType":"2939","endLine":291,"endColumn":55},{"ruleId":"2940","severity":1,"message":"2983","line":291,"column":34,"nodeType":"2939","endLine":291,"endColumn":55},{"ruleId":"2975","severity":1,"message":"2984","line":34,"column":7,"nodeType":"2977","messageId":"2978","endLine":34,"endColumn":15},{"ruleId":"2975","severity":1,"message":"2985","line":59,"column":7,"nodeType":"2977","messageId":"2978","endLine":59,"endColumn":26},{"ruleId":"2948","severity":1,"message":"2949","line":264,"column":11,"nodeType":"2924","messageId":"2950","endLine":264,"endColumn":19},{"ruleId":"2948","severity":1,"message":"2949","line":273,"column":11,"nodeType":"2924","messageId":"2950","endLine":273,"endColumn":19},{"ruleId":"2948","severity":1,"message":"2949","line":282,"column":11,"nodeType":"2924","messageId":"2950","endLine":282,"endColumn":19},{"ruleId":"2948","severity":1,"message":"2949","line":293,"column":11,"nodeType":"2924","messageId":"2950","endLine":293,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2986","line":623,"column":9,"nodeType":"2924","messageId":"2925","endLine":623,"endColumn":17},{"ruleId":"2922","severity":1,"message":"2987","line":816,"column":11,"nodeType":"2924","messageId":"2925","endLine":816,"endColumn":20},{"ruleId":"2922","severity":1,"message":"2988","line":829,"column":11,"nodeType":"2924","messageId":"2925","endLine":829,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2989","line":848,"column":9,"nodeType":"2924","messageId":"2925","endLine":848,"endColumn":10},{"ruleId":"2990","severity":1,"message":"2991","line":1002,"column":87,"nodeType":"2992","messageId":"2978","endLine":1002,"endColumn":89},{"ruleId":"2937","severity":1,"message":"2938","line":1008,"column":47,"nodeType":"2939","endLine":1008,"endColumn":216},{"ruleId":"2937","severity":1,"message":"2938","line":1021,"column":35,"nodeType":"2939","endLine":1021,"endColumn":115},{"ruleId":"2993","severity":1,"message":"2994","line":1268,"column":89,"nodeType":"2995","endLine":1268,"endColumn":190},{"ruleId":"2993","severity":1,"message":"2994","line":1276,"column":92,"nodeType":"2995","endLine":1276,"endColumn":196},{"ruleId":"2993","severity":1,"message":"2994","line":1284,"column":89,"nodeType":"2995","endLine":1284,"endColumn":191},{"ruleId":"2993","severity":1,"message":"2994","line":1292,"column":86,"nodeType":"2995","endLine":1292,"endColumn":185},{"ruleId":"2993","severity":1,"message":"2994","line":1300,"column":88,"nodeType":"2995","endLine":1300,"endColumn":189},{"ruleId":"2993","severity":1,"message":"2994","line":1308,"column":92,"nodeType":"2995","endLine":1308,"endColumn":197},{"ruleId":"2993","severity":1,"message":"2994","line":1316,"column":95,"nodeType":"2995","endLine":1316,"endColumn":203},{"ruleId":"2993","severity":1,"message":"2994","line":1324,"column":95,"nodeType":"2995","endLine":1324,"endColumn":203},{"ruleId":"2993","severity":1,"message":"2994","line":1332,"column":96,"nodeType":"2995","endLine":1332,"endColumn":205},{"ruleId":"2993","severity":1,"message":"2994","line":1340,"column":95,"nodeType":"2995","endLine":1340,"endColumn":203},{"ruleId":"2993","severity":1,"message":"2994","line":1846,"column":46,"nodeType":"2995","endLine":1846,"endColumn":157},{"ruleId":"2993","severity":1,"message":"2994","line":1853,"column":46,"nodeType":"2995","endLine":1853,"endColumn":159},{"ruleId":"2993","severity":1,"message":"2994","line":1861,"column":39,"nodeType":"2995","endLine":1861,"endColumn":150},{"ruleId":"2993","severity":1,"message":"2994","line":1876,"column":39,"nodeType":"2995","endLine":1876,"endColumn":147},{"ruleId":"2993","severity":1,"message":"2994","line":1883,"column":39,"nodeType":"2995","endLine":1883,"endColumn":149},{"ruleId":"2993","severity":1,"message":"2994","line":1890,"column":39,"nodeType":"2995","endLine":1890,"endColumn":147},{"ruleId":"2975","severity":1,"message":"2976","line":43,"column":12,"nodeType":"2977","messageId":"2978","endLine":43,"endColumn":17},{"ruleId":"2975","severity":1,"message":"2979","line":44,"column":12,"nodeType":"2977","messageId":"2978","endLine":44,"endColumn":15},{"ruleId":"2996","severity":1,"message":"2997","line":323,"column":73,"nodeType":"2998","messageId":"2999","endLine":323,"endColumn":74,"suggestions":"3000"},{"ruleId":"2996","severity":1,"message":"2997","line":324,"column":73,"nodeType":"2998","messageId":"2999","endLine":324,"endColumn":74,"suggestions":"3001"},{"ruleId":"2996","severity":1,"message":"2997","line":325,"column":73,"nodeType":"2998","messageId":"2999","endLine":325,"endColumn":74,"suggestions":"3002"},{"ruleId":"2922","severity":1,"message":"2980","line":484,"column":23,"nodeType":"2924","messageId":"2925","endLine":484,"endColumn":34},{"ruleId":"2937","severity":1,"message":"2938","line":512,"column":57,"nodeType":"2939","endLine":512,"endColumn":92},{"ruleId":"2937","severity":1,"message":"2938","line":514,"column":57,"nodeType":"2939","endLine":514,"endColumn":95},{"ruleId":"2937","severity":1,"message":"2938","line":533,"column":57,"nodeType":"2939","endLine":533,"endColumn":92},{"ruleId":"2937","severity":1,"message":"2938","line":535,"column":57,"nodeType":"2939","endLine":535,"endColumn":95},{"ruleId":"2937","severity":1,"message":"2938","line":554,"column":57,"nodeType":"2939","endLine":554,"endColumn":92},{"ruleId":"2937","severity":1,"message":"2938","line":556,"column":57,"nodeType":"2939","endLine":556,"endColumn":95},{"ruleId":"2937","severity":1,"message":"2938","line":585,"column":65,"nodeType":"2939","endLine":585,"endColumn":100},{"ruleId":"2937","severity":1,"message":"2938","line":601,"column":65,"nodeType":"2939","endLine":601,"endColumn":100},{"ruleId":"2937","severity":1,"message":"2938","line":617,"column":65,"nodeType":"2939","endLine":617,"endColumn":100},{"ruleId":"2922","severity":1,"message":"3003","line":258,"column":10,"nodeType":"2924","messageId":"2925","endLine":258,"endColumn":14},{"ruleId":"2922","severity":1,"message":"3003","line":277,"column":17,"nodeType":"2924","messageId":"2925","endLine":277,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3003","line":378,"column":13,"nodeType":"2924","messageId":"2925","endLine":378,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3004","line":454,"column":9,"nodeType":"2924","messageId":"2925","endLine":454,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3005","line":473,"column":11,"nodeType":"2924","messageId":"2925","endLine":473,"endColumn":27},{"ruleId":"2922","severity":1,"message":"3006","line":474,"column":11,"nodeType":"2924","messageId":"2925","endLine":474,"endColumn":28},{"ruleId":"2922","severity":1,"message":"3007","line":476,"column":9,"nodeType":"2924","messageId":"2925","endLine":476,"endColumn":16},{"ruleId":"2922","severity":1,"message":"3008","line":54,"column":15,"nodeType":"2924","messageId":"2925","endLine":54,"endColumn":23},{"ruleId":"2922","severity":1,"message":"3009","line":56,"column":13,"nodeType":"2924","messageId":"2925","endLine":56,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3010","line":76,"column":21,"nodeType":"2924","messageId":"2925","endLine":76,"endColumn":26},{"ruleId":"2937","severity":1,"message":"2938","line":234,"column":31,"nodeType":"2939","endLine":234,"endColumn":143},{"ruleId":"2993","severity":1,"message":"2994","line":257,"column":43,"nodeType":"2995","endLine":257,"endColumn":125},{"ruleId":"2993","severity":1,"message":"2994","line":263,"column":39,"nodeType":"2995","endLine":263,"endColumn":113},{"ruleId":"2993","severity":1,"message":"2994","line":268,"column":39,"nodeType":"2995","endLine":268,"endColumn":110},{"ruleId":"2993","severity":1,"message":"2994","line":273,"column":41,"nodeType":"2995","endLine":273,"endColumn":110},{"ruleId":"2993","severity":1,"message":"2994","line":277,"column":41,"nodeType":"2995","endLine":277,"endColumn":130},{"ruleId":"2993","severity":1,"message":"2994","line":282,"column":41,"nodeType":"2995","endLine":282,"endColumn":113},{"ruleId":"2993","severity":1,"message":"2994","line":288,"column":41,"nodeType":"2995","endLine":288,"endColumn":110},{"ruleId":"2993","severity":1,"message":"2994","line":292,"column":39,"nodeType":"2995","endLine":292,"endColumn":122},{"ruleId":"2993","severity":1,"message":"2994","line":296,"column":41,"nodeType":"2995","endLine":296,"endColumn":114},{"ruleId":"2993","severity":1,"message":"2994","line":300,"column":41,"nodeType":"2995","endLine":300,"endColumn":117},{"ruleId":"2937","severity":1,"message":"2938","line":315,"column":45,"nodeType":"2939","endLine":315,"endColumn":90},{"ruleId":"2922","severity":1,"message":"3011","line":274,"column":9,"nodeType":"2924","messageId":"2925","endLine":274,"endColumn":20},{"ruleId":"2996","severity":1,"message":"3012","line":315,"column":45,"nodeType":"2998","messageId":"2999","endLine":315,"endColumn":46,"suggestions":"3013"},{"ruleId":"2996","severity":1,"message":"3012","line":323,"column":49,"nodeType":"2998","messageId":"2999","endLine":323,"endColumn":50,"suggestions":"3014"},{"ruleId":"2922","severity":1,"message":"3010","line":409,"column":11,"nodeType":"2924","messageId":"2925","endLine":409,"endColumn":16},{"ruleId":"2922","severity":1,"message":"3003","line":594,"column":17,"nodeType":"2924","messageId":"2925","endLine":594,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3003","line":673,"column":15,"nodeType":"2924","messageId":"2925","endLine":673,"endColumn":19},{"ruleId":"2922","severity":1,"message":"3015","line":740,"column":11,"nodeType":"2924","messageId":"2925","endLine":740,"endColumn":16},{"ruleId":"2922","severity":1,"message":"3016","line":801,"column":11,"nodeType":"2924","messageId":"2925","endLine":801,"endColumn":13},{"ruleId":"2996","severity":1,"message":"3012","line":882,"column":49,"nodeType":"2998","messageId":"2999","endLine":882,"endColumn":50,"suggestions":"3017"},{"ruleId":"2922","severity":1,"message":"3015","line":884,"column":9,"nodeType":"2924","messageId":"2925","endLine":884,"endColumn":14},{"ruleId":"2922","severity":1,"message":"3018","line":960,"column":9,"nodeType":"2924","messageId":"2925","endLine":960,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3005","line":988,"column":11,"nodeType":"2924","messageId":"2925","endLine":988,"endColumn":27},{"ruleId":"2922","severity":1,"message":"3006","line":989,"column":11,"nodeType":"2924","messageId":"2925","endLine":989,"endColumn":28},{"ruleId":"2922","severity":1,"message":"3019","line":990,"column":9,"nodeType":"2924","messageId":"2925","endLine":990,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2957","line":3,"column":8,"nodeType":"2924","messageId":"2925","endLine":3,"endColumn":17},{"ruleId":"2922","severity":1,"message":"2928","line":4,"column":25,"nodeType":"2924","messageId":"2925","endLine":4,"endColumn":30},{"ruleId":"2922","severity":1,"message":"2929","line":4,"column":49,"nodeType":"2924","messageId":"2925","endLine":4,"endColumn":55},{"ruleId":"2922","severity":1,"message":"2930","line":4,"column":57,"nodeType":"2924","messageId":"2925","endLine":4,"endColumn":63},{"ruleId":"2922","severity":1,"message":"3020","line":4,"column":65,"nodeType":"2924","messageId":"2925","endLine":4,"endColumn":73},{"ruleId":"2922","severity":1,"message":"2931","line":5,"column":10,"nodeType":"2924","messageId":"2925","endLine":5,"endColumn":13},{"ruleId":"2922","severity":1,"message":"2932","line":5,"column":15,"nodeType":"2924","messageId":"2925","endLine":5,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3021","line":7,"column":8,"nodeType":"2924","messageId":"2925","endLine":7,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3022","line":8,"column":8,"nodeType":"2924","messageId":"2925","endLine":8,"endColumn":25},{"ruleId":"2922","severity":1,"message":"3023","line":9,"column":8,"nodeType":"2924","messageId":"2925","endLine":9,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3024","line":10,"column":8,"nodeType":"2924","messageId":"2925","endLine":10,"endColumn":22},{"ruleId":"2922","severity":1,"message":"3025","line":21,"column":8,"nodeType":"2924","messageId":"2925","endLine":21,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3026","line":25,"column":8,"nodeType":"2924","messageId":"2925","endLine":25,"endColumn":20},{"ruleId":"2922","severity":1,"message":"3027","line":27,"column":8,"nodeType":"2924","messageId":"2925","endLine":27,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3028","line":28,"column":8,"nodeType":"2924","messageId":"2925","endLine":28,"endColumn":29},{"ruleId":"2922","severity":1,"message":"3029","line":29,"column":8,"nodeType":"2924","messageId":"2925","endLine":29,"endColumn":20},{"ruleId":"2922","severity":1,"message":"3030","line":30,"column":8,"nodeType":"2924","messageId":"2925","endLine":30,"endColumn":15},{"ruleId":"2922","severity":1,"message":"3031","line":31,"column":8,"nodeType":"2924","messageId":"2925","endLine":31,"endColumn":22},{"ruleId":"2922","severity":1,"message":"3032","line":32,"column":8,"nodeType":"2924","messageId":"2925","endLine":32,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3033","line":33,"column":8,"nodeType":"2924","messageId":"2925","endLine":33,"endColumn":16},{"ruleId":"2922","severity":1,"message":"3034","line":34,"column":8,"nodeType":"2924","messageId":"2925","endLine":34,"endColumn":19},{"ruleId":"2922","severity":1,"message":"3035","line":36,"column":8,"nodeType":"2924","messageId":"2925","endLine":36,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3036","line":37,"column":8,"nodeType":"2924","messageId":"2925","endLine":37,"endColumn":28},{"ruleId":"2922","severity":1,"message":"3037","line":40,"column":8,"nodeType":"2924","messageId":"2925","endLine":40,"endColumn":20},{"ruleId":"2922","severity":1,"message":"3038","line":44,"column":8,"nodeType":"2924","messageId":"2925","endLine":44,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3039","line":45,"column":8,"nodeType":"2924","messageId":"2925","endLine":45,"endColumn":19},{"ruleId":"2922","severity":1,"message":"3040","line":46,"column":8,"nodeType":"2924","messageId":"2925","endLine":46,"endColumn":19},{"ruleId":"2922","severity":1,"message":"3041","line":49,"column":8,"nodeType":"2924","messageId":"2925","endLine":49,"endColumn":13},{"ruleId":"2922","severity":1,"message":"3042","line":51,"column":8,"nodeType":"2924","messageId":"2925","endLine":51,"endColumn":23},{"ruleId":"2922","severity":1,"message":"3043","line":52,"column":8,"nodeType":"2924","messageId":"2925","endLine":52,"endColumn":20},{"ruleId":"2922","severity":1,"message":"3044","line":53,"column":8,"nodeType":"2924","messageId":"2925","endLine":53,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3045","line":54,"column":8,"nodeType":"2924","messageId":"2925","endLine":54,"endColumn":22},{"ruleId":"2922","severity":1,"message":"3046","line":55,"column":8,"nodeType":"2924","messageId":"2925","endLine":55,"endColumn":26},{"ruleId":"2922","severity":1,"message":"3047","line":56,"column":8,"nodeType":"2924","messageId":"2925","endLine":56,"endColumn":16},{"ruleId":"2922","severity":1,"message":"3048","line":58,"column":8,"nodeType":"2924","messageId":"2925","endLine":58,"endColumn":25},{"ruleId":"2922","severity":1,"message":"3049","line":59,"column":8,"nodeType":"2924","messageId":"2925","endLine":59,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3050","line":60,"column":8,"nodeType":"2924","messageId":"2925","endLine":60,"endColumn":29},{"ruleId":"2922","severity":1,"message":"3051","line":61,"column":8,"nodeType":"2924","messageId":"2925","endLine":61,"endColumn":32},{"ruleId":"2922","severity":1,"message":"3052","line":62,"column":8,"nodeType":"2924","messageId":"2925","endLine":62,"endColumn":31},{"ruleId":"2922","severity":1,"message":"3053","line":63,"column":8,"nodeType":"2924","messageId":"2925","endLine":63,"endColumn":19},{"ruleId":"2922","severity":1,"message":"3054","line":64,"column":8,"nodeType":"2924","messageId":"2925","endLine":64,"endColumn":9},{"ruleId":"2922","severity":1,"message":"3055","line":78,"column":8,"nodeType":"2924","messageId":"2925","endLine":78,"endColumn":25},{"ruleId":"2922","severity":1,"message":"3056","line":79,"column":8,"nodeType":"2924","messageId":"2925","endLine":79,"endColumn":27},{"ruleId":"2922","severity":1,"message":"3057","line":80,"column":8,"nodeType":"2924","messageId":"2925","endLine":80,"endColumn":26},{"ruleId":"2922","severity":1,"message":"3058","line":85,"column":8,"nodeType":"2924","messageId":"2925","endLine":85,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3059","line":86,"column":8,"nodeType":"2924","messageId":"2925","endLine":86,"endColumn":16},{"ruleId":"2922","severity":1,"message":"3060","line":94,"column":3,"nodeType":"2924","messageId":"2925","endLine":94,"endColumn":14},{"ruleId":"2922","severity":1,"message":"3061","line":95,"column":3,"nodeType":"2924","messageId":"2925","endLine":95,"endColumn":14},{"ruleId":"2922","severity":1,"message":"3062","line":96,"column":3,"nodeType":"2924","messageId":"2925","endLine":96,"endColumn":12},{"ruleId":"2922","severity":1,"message":"3063","line":97,"column":3,"nodeType":"2924","messageId":"2925","endLine":97,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3064","line":98,"column":3,"nodeType":"2924","messageId":"2925","endLine":98,"endColumn":15},{"ruleId":"2922","severity":1,"message":"3065","line":99,"column":3,"nodeType":"2924","messageId":"2925","endLine":99,"endColumn":11},{"ruleId":"2922","severity":1,"message":"2936","line":100,"column":3,"nodeType":"2924","messageId":"2925","endLine":100,"endColumn":12},{"ruleId":"2922","severity":1,"message":"3066","line":101,"column":3,"nodeType":"2924","messageId":"2925","endLine":101,"endColumn":15},{"ruleId":"2922","severity":1,"message":"3067","line":102,"column":3,"nodeType":"2924","messageId":"2925","endLine":102,"endColumn":12},{"ruleId":"2922","severity":1,"message":"3068","line":105,"column":3,"nodeType":"2924","messageId":"2925","endLine":105,"endColumn":10},{"ruleId":"2922","severity":1,"message":"3069","line":106,"column":3,"nodeType":"2924","messageId":"2925","endLine":106,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3070","line":107,"column":3,"nodeType":"2924","messageId":"2925","endLine":107,"endColumn":13},{"ruleId":"2922","severity":1,"message":"3071","line":108,"column":3,"nodeType":"2924","messageId":"2925","endLine":108,"endColumn":14},{"ruleId":"2922","severity":1,"message":"3072","line":112,"column":3,"nodeType":"2924","messageId":"2925","endLine":112,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3073","line":113,"column":3,"nodeType":"2924","messageId":"2925","endLine":113,"endColumn":23},{"ruleId":"2922","severity":1,"message":"3074","line":114,"column":3,"nodeType":"2924","messageId":"2925","endLine":114,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3075","line":115,"column":3,"nodeType":"2924","messageId":"2925","endLine":115,"endColumn":22},{"ruleId":"2922","severity":1,"message":"3076","line":116,"column":3,"nodeType":"2924","messageId":"2925","endLine":116,"endColumn":15},{"ruleId":"2922","severity":1,"message":"3077","line":117,"column":3,"nodeType":"2924","messageId":"2925","endLine":117,"endColumn":15},{"ruleId":"2922","severity":1,"message":"3078","line":118,"column":3,"nodeType":"2924","messageId":"2925","endLine":118,"endColumn":19},{"ruleId":"2922","severity":1,"message":"3079","line":119,"column":3,"nodeType":"2924","messageId":"2925","endLine":119,"endColumn":19},{"ruleId":"2922","severity":1,"message":"3080","line":124,"column":3,"nodeType":"2924","messageId":"2925","endLine":124,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3081","line":130,"column":3,"nodeType":"2924","messageId":"2925","endLine":130,"endColumn":16},{"ruleId":"2922","severity":1,"message":"3082","line":131,"column":3,"nodeType":"2924","messageId":"2925","endLine":131,"endColumn":16},{"ruleId":"2922","severity":1,"message":"3083","line":133,"column":3,"nodeType":"2924","messageId":"2925","endLine":133,"endColumn":20},{"ruleId":"2922","severity":1,"message":"3084","line":134,"column":3,"nodeType":"2924","messageId":"2925","endLine":134,"endColumn":25},{"ruleId":"2922","severity":1,"message":"3085","line":135,"column":3,"nodeType":"2924","messageId":"2925","endLine":135,"endColumn":20},{"ruleId":"2922","severity":1,"message":"3086","line":136,"column":3,"nodeType":"2924","messageId":"2925","endLine":136,"endColumn":19},{"ruleId":"2922","severity":1,"message":"3087","line":137,"column":3,"nodeType":"2924","messageId":"2925","endLine":137,"endColumn":23},{"ruleId":"2922","severity":1,"message":"3088","line":146,"column":3,"nodeType":"2924","messageId":"2925","endLine":146,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3089","line":149,"column":3,"nodeType":"2924","messageId":"2925","endLine":149,"endColumn":9},{"ruleId":"2922","severity":1,"message":"3090","line":150,"column":3,"nodeType":"2924","messageId":"2925","endLine":150,"endColumn":9},{"ruleId":"2922","severity":1,"message":"3091","line":152,"column":3,"nodeType":"2924","messageId":"2925","endLine":152,"endColumn":13},{"ruleId":"2922","severity":1,"message":"3092","line":153,"column":3,"nodeType":"2924","messageId":"2925","endLine":153,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3093","line":154,"column":3,"nodeType":"2924","messageId":"2925","endLine":154,"endColumn":13},{"ruleId":"2922","severity":1,"message":"3094","line":155,"column":3,"nodeType":"2924","messageId":"2925","endLine":155,"endColumn":12},{"ruleId":"2922","severity":1,"message":"3095","line":156,"column":3,"nodeType":"2924","messageId":"2925","endLine":156,"endColumn":16},{"ruleId":"2922","severity":1,"message":"3096","line":168,"column":10,"nodeType":"2924","messageId":"2925","endLine":168,"endColumn":27},{"ruleId":"2922","severity":1,"message":"3097","line":170,"column":7,"nodeType":"2924","messageId":"2925","endLine":170,"endColumn":16},{"ruleId":"2922","severity":1,"message":"3098","line":171,"column":7,"nodeType":"2924","messageId":"2925","endLine":171,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3099","line":173,"column":7,"nodeType":"2924","messageId":"2925","endLine":173,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3100","line":174,"column":7,"nodeType":"2924","messageId":"2925","endLine":174,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3101","line":175,"column":7,"nodeType":"2924","messageId":"2925","endLine":175,"endColumn":21},{"ruleId":"2975","severity":1,"message":"2984","line":196,"column":7,"nodeType":"2977","messageId":"2978","endLine":196,"endColumn":15},{"ruleId":"2922","severity":1,"message":"3009","line":688,"column":19,"nodeType":"2924","messageId":"2925","endLine":688,"endColumn":24},{"ruleId":"3102","severity":1,"message":"3103","line":688,"column":50,"nodeType":"3104","messageId":"3105","endLine":688,"endColumn":154},{"ruleId":"2922","severity":1,"message":"3009","line":698,"column":19,"nodeType":"2924","messageId":"2925","endLine":698,"endColumn":24},{"ruleId":"3102","severity":1,"message":"3103","line":698,"column":50,"nodeType":"3104","messageId":"3105","endLine":698,"endColumn":152},{"ruleId":"2922","severity":1,"message":"3009","line":708,"column":19,"nodeType":"2924","messageId":"2925","endLine":708,"endColumn":24},{"ruleId":"3102","severity":1,"message":"3103","line":708,"column":50,"nodeType":"3104","messageId":"3105","endLine":708,"endColumn":156},{"ruleId":"2922","severity":1,"message":"3009","line":717,"column":19,"nodeType":"2924","messageId":"2925","endLine":717,"endColumn":24},{"ruleId":"3102","severity":1,"message":"3103","line":717,"column":50,"nodeType":"3104","messageId":"3105","endLine":717,"endColumn":151},{"ruleId":"2922","severity":1,"message":"3009","line":725,"column":19,"nodeType":"2924","messageId":"2925","endLine":725,"endColumn":24},{"ruleId":"3102","severity":1,"message":"3103","line":725,"column":50,"nodeType":"3104","messageId":"3105","endLine":725,"endColumn":153},{"ruleId":"2922","severity":1,"message":"3009","line":738,"column":17,"nodeType":"2924","messageId":"2925","endLine":738,"endColumn":22},{"ruleId":"3102","severity":1,"message":"3106","line":738,"column":48,"nodeType":"3104","messageId":"3105","endLine":738,"endColumn":103},{"ruleId":"2922","severity":1,"message":"3009","line":751,"column":13,"nodeType":"2924","messageId":"2925","endLine":751,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3107","line":1150,"column":7,"nodeType":"2924","messageId":"2925","endLine":1150,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3107","line":1179,"column":7,"nodeType":"2924","messageId":"2925","endLine":1179,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3108","line":1205,"column":11,"nodeType":"2924","messageId":"2925","endLine":1205,"endColumn":15},{"ruleId":"2996","severity":1,"message":"3012","line":1470,"column":49,"nodeType":"2998","messageId":"2999","endLine":1470,"endColumn":50,"suggestions":"3109"},{"ruleId":"3110","severity":1,"message":"3111","line":1760,"column":34,"nodeType":"3104","messageId":"3112","endLine":1760,"endColumn":36},{"ruleId":"2937","severity":1,"message":"2938","line":1854,"column":41,"nodeType":"2939","endLine":1854,"endColumn":104},{"ruleId":"2937","severity":1,"message":"2938","line":1856,"column":41,"nodeType":"2939","endLine":1856,"endColumn":126},{"ruleId":"2975","severity":1,"message":"3113","line":2009,"column":7,"nodeType":"2977","messageId":"2978","endLine":2009,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2980","line":2128,"column":19,"nodeType":"2924","messageId":"2925","endLine":2128,"endColumn":30},{"ruleId":"2922","severity":1,"message":"3114","line":2129,"column":9,"nodeType":"2924","messageId":"2925","endLine":2129,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3115","line":2135,"column":9,"nodeType":"2924","messageId":"2925","endLine":2135,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3116","line":2145,"column":9,"nodeType":"2924","messageId":"2925","endLine":2145,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3117","line":2152,"column":9,"nodeType":"2924","messageId":"2925","endLine":2152,"endColumn":30},{"ruleId":"2922","severity":1,"message":"3118","line":2155,"column":9,"nodeType":"2924","messageId":"2925","endLine":2155,"endColumn":29},{"ruleId":"2922","severity":1,"message":"3119","line":2190,"column":11,"nodeType":"2924","messageId":"2925","endLine":2190,"endColumn":21},{"ruleId":"2937","severity":1,"message":"2938","line":2266,"column":11,"nodeType":"2939","endLine":2266,"endColumn":43},{"ruleId":"2993","severity":1,"message":"2994","line":2277,"column":15,"nodeType":"2995","endLine":2277,"endColumn":63},{"ruleId":"2937","severity":1,"message":"2938","line":2312,"column":37,"nodeType":"2939","endLine":2312,"endColumn":126},{"ruleId":"2922","severity":1,"message":"3120","line":2337,"column":5,"nodeType":"2924","messageId":"2925","endLine":2337,"endColumn":13},{"ruleId":"2937","severity":1,"message":"2938","line":2340,"column":11,"nodeType":"2939","endLine":2340,"endColumn":43},{"ruleId":"2993","severity":1,"message":"2994","line":2351,"column":15,"nodeType":"2995","endLine":2351,"endColumn":63},{"ruleId":"2937","severity":1,"message":"2938","line":2398,"column":63,"nodeType":"2939","endLine":2398,"endColumn":99},{"ruleId":"2937","severity":1,"message":"2938","line":2404,"column":29,"nodeType":"2939","endLine":2404,"endColumn":92},{"ruleId":"2937","severity":1,"message":"2938","line":2682,"column":79,"nodeType":"2939","endLine":2682,"endColumn":142},{"ruleId":"2937","severity":1,"message":"2938","line":2684,"column":81,"nodeType":"2939","endLine":2684,"endColumn":166},{"ruleId":"2937","severity":1,"message":"2938","line":2688,"column":83,"nodeType":"2939","endLine":2688,"endColumn":146},{"ruleId":"2937","severity":1,"message":"2938","line":2732,"column":92,"nodeType":"2939","endLine":2732,"endColumn":155},{"ruleId":"2937","severity":1,"message":"2938","line":2734,"column":94,"nodeType":"2939","endLine":2734,"endColumn":179},{"ruleId":"2937","severity":1,"message":"2938","line":2738,"column":96,"nodeType":"2939","endLine":2738,"endColumn":159},{"ruleId":"2993","severity":1,"message":"2994","line":3069,"column":19,"nodeType":"2995","endLine":3069,"endColumn":198},{"ruleId":"2922","severity":1,"message":"3121","line":29,"column":8,"nodeType":"2924","messageId":"2925","endLine":29,"endColumn":23},{"ruleId":"2922","severity":1,"message":"3122","line":46,"column":8,"nodeType":"2924","messageId":"2925","endLine":46,"endColumn":15},{"ruleId":"2975","severity":1,"message":"2984","line":82,"column":7,"nodeType":"2977","messageId":"2978","endLine":82,"endColumn":15},{"ruleId":"2922","severity":1,"message":"2965","line":121,"column":11,"nodeType":"2924","messageId":"2925","endLine":121,"endColumn":15},{"ruleId":"2990","severity":1,"message":"3123","line":300,"column":23,"nodeType":"2992","messageId":"2978","endLine":300,"endColumn":25},{"ruleId":"2922","severity":1,"message":"2944","line":336,"column":9,"nodeType":"2924","messageId":"2925","endLine":336,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3116","line":349,"column":9,"nodeType":"2924","messageId":"2925","endLine":349,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3124","line":352,"column":9,"nodeType":"2924","messageId":"2925","endLine":352,"endColumn":17},{"ruleId":"2922","severity":1,"message":"2989","line":396,"column":9,"nodeType":"2924","messageId":"2925","endLine":396,"endColumn":10},{"ruleId":"2945","severity":1,"message":"2946","line":558,"column":27,"nodeType":"2939","endLine":558,"endColumn":166},{"ruleId":"2945","severity":1,"message":"2946","line":564,"column":27,"nodeType":"2939","endLine":564,"endColumn":135},{"ruleId":"2945","severity":1,"message":"2946","line":576,"column":29,"nodeType":"2939","endLine":576,"endColumn":151},{"ruleId":"2922","severity":1,"message":"3125","line":600,"column":5,"nodeType":"2924","messageId":"2925","endLine":600,"endColumn":20},{"ruleId":"2937","severity":1,"message":"2938","line":615,"column":23,"nodeType":"2939","endLine":615,"endColumn":86},{"ruleId":"2937","severity":1,"message":"2938","line":617,"column":25,"nodeType":"2939","endLine":617,"endColumn":125},{"ruleId":"2937","severity":1,"message":"2938","line":621,"column":27,"nodeType":"2939","endLine":621,"endColumn":90},{"ruleId":"2945","severity":1,"message":"2946","line":634,"column":31,"nodeType":"2939","endLine":634,"endColumn":161},{"ruleId":"2937","severity":1,"message":"2938","line":638,"column":37,"nodeType":"2939","endLine":638,"endColumn":100},{"ruleId":"2937","severity":1,"message":"2938","line":640,"column":39,"nodeType":"2939","endLine":640,"endColumn":126},{"ruleId":"2937","severity":1,"message":"2938","line":644,"column":41,"nodeType":"2939","endLine":644,"endColumn":104},{"ruleId":"2922","severity":1,"message":"3126","line":668,"column":5,"nodeType":"2924","messageId":"2925","endLine":668,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3127","line":747,"column":9,"nodeType":"2924","messageId":"2925","endLine":747,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3128","line":752,"column":11,"nodeType":"2924","messageId":"2925","endLine":752,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3129","line":755,"column":11,"nodeType":"2924","messageId":"2925","endLine":755,"endColumn":26},{"ruleId":"2937","severity":1,"message":"2938","line":805,"column":81,"nodeType":"2939","endLine":805,"endColumn":117},{"ruleId":"2945","severity":1,"message":"2946","line":833,"column":35,"nodeType":"2939","endLine":833,"endColumn":159},{"ruleId":"2937","severity":1,"message":"2938","line":837,"column":41,"nodeType":"2939","endLine":837,"endColumn":104},{"ruleId":"2937","severity":1,"message":"2938","line":839,"column":41,"nodeType":"2939","endLine":839,"endColumn":126},{"ruleId":"2937","severity":1,"message":"2938","line":843,"column":41,"nodeType":"2939","endLine":843,"endColumn":104},{"ruleId":"2937","severity":1,"message":"2938","line":862,"column":45,"nodeType":"2939","endLine":862,"endColumn":108},{"ruleId":"2937","severity":1,"message":"2938","line":864,"column":47,"nodeType":"2939","endLine":864,"endColumn":132},{"ruleId":"2937","severity":1,"message":"2938","line":868,"column":49,"nodeType":"2939","endLine":868,"endColumn":112},{"ruleId":"2945","severity":1,"message":"2946","line":880,"column":53,"nodeType":"2939","endLine":880,"endColumn":180},{"ruleId":"2937","severity":1,"message":"2938","line":884,"column":59,"nodeType":"2939","endLine":884,"endColumn":122},{"ruleId":"2937","severity":1,"message":"2938","line":886,"column":61,"nodeType":"2939","endLine":886,"endColumn":145},{"ruleId":"2937","severity":1,"message":"2938","line":890,"column":63,"nodeType":"2939","endLine":890,"endColumn":126},{"ruleId":"3130","severity":1,"message":"3131","line":916,"column":35,"nodeType":"2939","endLine":917,"endColumn":83},{"ruleId":"3130","severity":1,"message":"3131","line":925,"column":41,"nodeType":"2939","endLine":925,"endColumn":156},{"ruleId":"3130","severity":1,"message":"3131","line":931,"column":39,"nodeType":"2939","endLine":931,"endColumn":157},{"ruleId":"2945","severity":1,"message":"2946","line":1061,"column":37,"nodeType":"2939","endLine":1062,"endColumn":83},{"ruleId":"2945","severity":1,"message":"2946","line":1067,"column":39,"nodeType":"2939","endLine":1069,"endColumn":83},{"ruleId":"2945","severity":1,"message":"2946","line":1073,"column":39,"nodeType":"2939","endLine":1075,"endColumn":83},{"ruleId":"2937","severity":1,"message":"2938","line":1094,"column":43,"nodeType":"2939","endLine":1094,"endColumn":106},{"ruleId":"2993","severity":1,"message":"2994","line":1214,"column":79,"nodeType":"2995","endLine":1214,"endColumn":94},{"ruleId":"2937","severity":1,"message":"2938","line":1250,"column":23,"nodeType":"2939","endLine":1250,"endColumn":48},{"ruleId":"3132","severity":1,"message":"3133","line":1327,"column":15,"nodeType":"2939","endLine":1327,"endColumn":73},{"ruleId":"3134","severity":1,"message":"3135","line":1346,"column":1,"nodeType":"3136","messageId":"3137","endLine":1346,"endColumn":183},{"ruleId":"2922","severity":1,"message":"2944","line":122,"column":13,"nodeType":"2924","messageId":"2925","endLine":122,"endColumn":21},{"ruleId":"2945","severity":1,"message":"2946","line":130,"column":25,"nodeType":"2939","endLine":130,"endColumn":85},{"ruleId":"2937","severity":1,"message":"2938","line":130,"column":88,"nodeType":"2939","endLine":130,"endColumn":154},{"ruleId":"2937","severity":1,"message":"2938","line":135,"column":59,"nodeType":"2939","endLine":135,"endColumn":95},{"ruleId":"2945","severity":1,"message":"2946","line":140,"column":25,"nodeType":"2939","endLine":140,"endColumn":85},{"ruleId":"2975","severity":1,"message":"2984","line":114,"column":7,"nodeType":"2977","messageId":"2978","endLine":114,"endColumn":15},{"ruleId":"2922","severity":1,"message":"3009","line":605,"column":19,"nodeType":"2924","messageId":"2925","endLine":605,"endColumn":24},{"ruleId":"3102","severity":1,"message":"3103","line":605,"column":50,"nodeType":"3104","messageId":"3105","endLine":605,"endColumn":154},{"ruleId":"2922","severity":1,"message":"3009","line":615,"column":19,"nodeType":"2924","messageId":"2925","endLine":615,"endColumn":24},{"ruleId":"3102","severity":1,"message":"3103","line":615,"column":50,"nodeType":"3104","messageId":"3105","endLine":615,"endColumn":152},{"ruleId":"2922","severity":1,"message":"3009","line":625,"column":19,"nodeType":"2924","messageId":"2925","endLine":625,"endColumn":24},{"ruleId":"3102","severity":1,"message":"3103","line":625,"column":50,"nodeType":"3104","messageId":"3105","endLine":625,"endColumn":156},{"ruleId":"2922","severity":1,"message":"3009","line":634,"column":19,"nodeType":"2924","messageId":"2925","endLine":634,"endColumn":24},{"ruleId":"3102","severity":1,"message":"3103","line":634,"column":50,"nodeType":"3104","messageId":"3105","endLine":634,"endColumn":151},{"ruleId":"2922","severity":1,"message":"3009","line":642,"column":19,"nodeType":"2924","messageId":"2925","endLine":642,"endColumn":24},{"ruleId":"3102","severity":1,"message":"3103","line":642,"column":50,"nodeType":"3104","messageId":"3105","endLine":642,"endColumn":153},{"ruleId":"2922","severity":1,"message":"3009","line":655,"column":17,"nodeType":"2924","messageId":"2925","endLine":655,"endColumn":22},{"ruleId":"3102","severity":1,"message":"3106","line":655,"column":48,"nodeType":"3104","messageId":"3105","endLine":655,"endColumn":103},{"ruleId":"2922","severity":1,"message":"3107","line":1180,"column":7,"nodeType":"2924","messageId":"2925","endLine":1180,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3107","line":1209,"column":7,"nodeType":"2924","messageId":"2925","endLine":1209,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3108","line":1235,"column":11,"nodeType":"2924","messageId":"2925","endLine":1235,"endColumn":15},{"ruleId":"2996","severity":1,"message":"3012","line":1593,"column":49,"nodeType":"2998","messageId":"2999","endLine":1593,"endColumn":50,"suggestions":"3138"},{"ruleId":"3110","severity":1,"message":"3111","line":1904,"column":34,"nodeType":"3104","messageId":"3112","endLine":1904,"endColumn":36},{"ruleId":"2937","severity":1,"message":"2938","line":2007,"column":41,"nodeType":"2939","endLine":2007,"endColumn":104},{"ruleId":"2937","severity":1,"message":"2938","line":2009,"column":41,"nodeType":"2939","endLine":2009,"endColumn":126},{"ruleId":"2975","severity":1,"message":"3113","line":2160,"column":7,"nodeType":"2977","messageId":"2978","endLine":2160,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2980","line":2318,"column":19,"nodeType":"2924","messageId":"2925","endLine":2318,"endColumn":30},{"ruleId":"2922","severity":1,"message":"3115","line":2325,"column":9,"nodeType":"2924","messageId":"2925","endLine":2325,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3116","line":2335,"column":9,"nodeType":"2924","messageId":"2925","endLine":2335,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3117","line":2342,"column":9,"nodeType":"2924","messageId":"2925","endLine":2342,"endColumn":30},{"ruleId":"2922","severity":1,"message":"3118","line":2345,"column":9,"nodeType":"2924","messageId":"2925","endLine":2345,"endColumn":29},{"ruleId":"2922","severity":1,"message":"3139","line":2346,"column":9,"nodeType":"2924","messageId":"2925","endLine":2346,"endColumn":23},{"ruleId":"2937","severity":1,"message":"2938","line":2459,"column":11,"nodeType":"2939","endLine":2459,"endColumn":43},{"ruleId":"2993","severity":1,"message":"2994","line":2477,"column":15,"nodeType":"2995","endLine":2477,"endColumn":63},{"ruleId":"2937","severity":1,"message":"2938","line":2512,"column":37,"nodeType":"2939","endLine":2512,"endColumn":126},{"ruleId":"2937","severity":1,"message":"2938","line":2540,"column":41,"nodeType":"2939","endLine":2540,"endColumn":130},{"ruleId":"2922","severity":1,"message":"3120","line":2567,"column":5,"nodeType":"2924","messageId":"2925","endLine":2567,"endColumn":13},{"ruleId":"2937","severity":1,"message":"2938","line":2570,"column":11,"nodeType":"2939","endLine":2570,"endColumn":43},{"ruleId":"2993","severity":1,"message":"2994","line":2581,"column":15,"nodeType":"2995","endLine":2581,"endColumn":63},{"ruleId":"2937","severity":1,"message":"2938","line":2624,"column":63,"nodeType":"2939","endLine":2624,"endColumn":99},{"ruleId":"2937","severity":1,"message":"2938","line":2630,"column":29,"nodeType":"2939","endLine":2630,"endColumn":92},{"ruleId":"2937","severity":1,"message":"2938","line":2914,"column":79,"nodeType":"2939","endLine":2914,"endColumn":142},{"ruleId":"2937","severity":1,"message":"2938","line":2916,"column":81,"nodeType":"2939","endLine":2916,"endColumn":166},{"ruleId":"2937","severity":1,"message":"2938","line":2920,"column":83,"nodeType":"2939","endLine":2920,"endColumn":146},{"ruleId":"2937","severity":1,"message":"2938","line":2963,"column":81,"nodeType":"2939","endLine":2963,"endColumn":144},{"ruleId":"2937","severity":1,"message":"2938","line":2965,"column":83,"nodeType":"2939","endLine":2965,"endColumn":168},{"ruleId":"2937","severity":1,"message":"2938","line":2969,"column":85,"nodeType":"2939","endLine":2969,"endColumn":148},{"ruleId":"2937","severity":1,"message":"2938","line":3027,"column":99,"nodeType":"2939","endLine":3027,"endColumn":162},{"ruleId":"2937","severity":1,"message":"2938","line":3029,"column":101,"nodeType":"2939","endLine":3029,"endColumn":185},{"ruleId":"2937","severity":1,"message":"2938","line":3033,"column":103,"nodeType":"2939","endLine":3033,"endColumn":166},{"ruleId":"2937","severity":1,"message":"2938","line":3092,"column":83,"nodeType":"2939","endLine":3092,"endColumn":146},{"ruleId":"2937","severity":1,"message":"2938","line":3094,"column":83,"nodeType":"2939","endLine":3094,"endColumn":168},{"ruleId":"2993","severity":1,"message":"2994","line":3309,"column":63,"nodeType":"2995","endLine":3309,"endColumn":111},{"ruleId":"2993","severity":1,"message":"2994","line":3315,"column":65,"nodeType":"2995","endLine":3315,"endColumn":113},{"ruleId":"2993","severity":1,"message":"2994","line":3320,"column":65,"nodeType":"2995","endLine":3320,"endColumn":113},{"ruleId":"2993","severity":1,"message":"2994","line":3767,"column":19,"nodeType":"2995","endLine":3767,"endColumn":198},{"ruleId":"2922","severity":1,"message":"3140","line":46,"column":15,"nodeType":"2924","messageId":"2925","endLine":46,"endColumn":19},{"ruleId":"2922","severity":1,"message":"3141","line":87,"column":16,"nodeType":"2924","messageId":"2925","endLine":87,"endColumn":32},{"ruleId":"2922","severity":1,"message":"3142","line":88,"column":15,"nodeType":"2924","messageId":"2925","endLine":88,"endColumn":23},{"ruleId":"2922","severity":1,"message":"2987","line":94,"column":15,"nodeType":"2924","messageId":"2925","endLine":94,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3143","line":108,"column":13,"nodeType":"2924","messageId":"2925","endLine":108,"endColumn":27},{"ruleId":"2922","severity":1,"message":"3144","line":110,"column":15,"nodeType":"2924","messageId":"2925","endLine":110,"endColumn":26},{"ruleId":"2922","severity":1,"message":"3145","line":123,"column":15,"nodeType":"2924","messageId":"2925","endLine":123,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3146","line":128,"column":15,"nodeType":"2924","messageId":"2925","endLine":128,"endColumn":27},{"ruleId":"2937","severity":1,"message":"2938","line":161,"column":45,"nodeType":"2939","endLine":161,"endColumn":89},{"ruleId":"2937","severity":1,"message":"2938","line":170,"column":45,"nodeType":"2939","endLine":170,"endColumn":89},{"ruleId":"2937","severity":1,"message":"2938","line":180,"column":43,"nodeType":"2939","endLine":180,"endColumn":88},{"ruleId":"2937","severity":1,"message":"2938","line":191,"column":39,"nodeType":"2939","endLine":191,"endColumn":79},{"ruleId":"2922","severity":1,"message":"3147","line":1,"column":28,"nodeType":"2924","messageId":"2925","endLine":1,"endColumn":36},{"ruleId":"2922","severity":1,"message":"3148","line":1,"column":38,"nodeType":"2924","messageId":"2925","endLine":1,"endColumn":42},{"ruleId":"2922","severity":1,"message":"2957","line":2,"column":8,"nodeType":"2924","messageId":"2925","endLine":2,"endColumn":17},{"ruleId":"2922","severity":1,"message":"2958","line":4,"column":10,"nodeType":"2924","messageId":"2925","endLine":4,"endColumn":14},{"ruleId":"2922","severity":1,"message":"2959","line":4,"column":15,"nodeType":"2924","messageId":"2925","endLine":4,"endColumn":22},{"ruleId":"2922","severity":1,"message":"2928","line":4,"column":24,"nodeType":"2924","messageId":"2925","endLine":4,"endColumn":29},{"ruleId":"2922","severity":1,"message":"2929","line":4,"column":48,"nodeType":"2924","messageId":"2925","endLine":4,"endColumn":54},{"ruleId":"2922","severity":1,"message":"2930","line":4,"column":56,"nodeType":"2924","messageId":"2925","endLine":4,"endColumn":62},{"ruleId":"2922","severity":1,"message":"3021","line":6,"column":8,"nodeType":"2924","messageId":"2925","endLine":6,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3149","line":7,"column":10,"nodeType":"2924","messageId":"2925","endLine":7,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3150","line":7,"column":20,"nodeType":"2924","messageId":"2925","endLine":7,"endColumn":35},{"ruleId":"2922","severity":1,"message":"3151","line":38,"column":14,"nodeType":"2924","messageId":"2925","endLine":38,"endColumn":26},{"ruleId":"3102","severity":1,"message":"3152","line":201,"column":68,"nodeType":"3104","messageId":"3105","endLine":201,"endColumn":90},{"ruleId":"2922","severity":1,"message":"3153","line":263,"column":31,"nodeType":"2924","messageId":"2925","endLine":263,"endColumn":39},{"ruleId":"2922","severity":1,"message":"3154","line":436,"column":19,"nodeType":"2924","messageId":"2925","endLine":436,"endColumn":25},{"ruleId":"3155","severity":1,"message":"3156","line":519,"column":21,"nodeType":"2939","endLine":519,"endColumn":67},{"ruleId":"2922","severity":1,"message":"3157","line":64,"column":15,"nodeType":"2924","messageId":"2925","endLine":64,"endColumn":25},{"ruleId":"2922","severity":1,"message":"3158","line":75,"column":13,"nodeType":"2924","messageId":"2925","endLine":75,"endColumn":20},{"ruleId":"2922","severity":1,"message":"3159","line":76,"column":13,"nodeType":"2924","messageId":"2925","endLine":76,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3160","line":78,"column":13,"nodeType":"2924","messageId":"2925","endLine":78,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3161","line":79,"column":13,"nodeType":"2924","messageId":"2925","endLine":79,"endColumn":19},{"ruleId":"2922","severity":1,"message":"3162","line":82,"column":15,"nodeType":"2924","messageId":"2925","endLine":82,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3163","line":83,"column":15,"nodeType":"2924","messageId":"2925","endLine":83,"endColumn":22},{"ruleId":"2922","severity":1,"message":"3142","line":921,"column":15,"nodeType":"2924","messageId":"2925","endLine":921,"endColumn":23},{"ruleId":"2922","severity":1,"message":"2987","line":927,"column":15,"nodeType":"2924","messageId":"2925","endLine":927,"endColumn":24},{"ruleId":"2937","severity":1,"message":"2938","line":1018,"column":81,"nodeType":"2939","endLine":1018,"endColumn":185},{"ruleId":"2960","severity":1,"message":"2961","line":9,"column":5,"nodeType":"2962","messageId":"2963","endLine":11,"endColumn":6},{"ruleId":"2922","severity":1,"message":"2986","line":17,"column":11,"nodeType":"2924","messageId":"2925","endLine":17,"endColumn":19},{"ruleId":"3164","severity":1,"message":"3165","line":10,"column":19,"nodeType":"3166","messageId":"3167","endLine":10,"endColumn":77,"fix":"3168"},{"ruleId":"3164","severity":1,"message":"3169","line":11,"column":19,"nodeType":"3166","messageId":"3167","endLine":11,"endColumn":55,"fix":"3170"},{"ruleId":"3164","severity":1,"message":"3171","line":12,"column":19,"nodeType":"3166","messageId":"3167","endLine":12,"endColumn":77,"fix":"3172"},{"ruleId":"3164","severity":1,"message":"3173","line":13,"column":19,"nodeType":"3166","messageId":"3167","endLine":13,"endColumn":85,"fix":"3174"},{"ruleId":"3164","severity":1,"message":"3175","line":14,"column":19,"nodeType":"3166","messageId":"3167","endLine":14,"endColumn":88,"fix":"3176"},{"ruleId":"3164","severity":1,"message":"3177","line":15,"column":19,"nodeType":"3166","messageId":"3167","endLine":15,"endColumn":46,"fix":"3178"},{"ruleId":"2922","severity":1,"message":"3179","line":197,"column":7,"nodeType":"2924","messageId":"2925","endLine":197,"endColumn":22},{"ruleId":"2940","severity":1,"message":"2983","line":210,"column":15,"nodeType":"2939","endLine":210,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":211,"column":15,"nodeType":"2939","endLine":211,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":212,"column":15,"nodeType":"2939","endLine":212,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":213,"column":15,"nodeType":"2939","endLine":213,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":214,"column":15,"nodeType":"2939","endLine":214,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":215,"column":15,"nodeType":"2939","endLine":215,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":216,"column":15,"nodeType":"2939","endLine":216,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":217,"column":15,"nodeType":"2939","endLine":217,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":218,"column":15,"nodeType":"2939","endLine":218,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":219,"column":15,"nodeType":"2939","endLine":219,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":220,"column":15,"nodeType":"2939","endLine":220,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":221,"column":15,"nodeType":"2939","endLine":221,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":222,"column":15,"nodeType":"2939","endLine":222,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":223,"column":15,"nodeType":"2939","endLine":223,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":224,"column":15,"nodeType":"2939","endLine":224,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":225,"column":15,"nodeType":"2939","endLine":225,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":226,"column":15,"nodeType":"2939","endLine":226,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":227,"column":15,"nodeType":"2939","endLine":227,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":228,"column":15,"nodeType":"2939","endLine":228,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":229,"column":15,"nodeType":"2939","endLine":229,"endColumn":62},{"ruleId":"2922","severity":1,"message":"3180","line":1,"column":17,"nodeType":"2924","messageId":"2925","endLine":1,"endColumn":26},{"ruleId":"2922","severity":1,"message":"3148","line":1,"column":36,"nodeType":"2924","messageId":"2925","endLine":1,"endColumn":40},{"ruleId":"2960","severity":1,"message":"2961","line":7,"column":5,"nodeType":"2962","messageId":"2963","endLine":10,"endColumn":6},{"ruleId":"2937","severity":1,"message":"2938","line":21,"column":23,"nodeType":"2939","endLine":21,"endColumn":54},{"ruleId":"2937","severity":1,"message":"2938","line":24,"column":27,"nodeType":"2939","endLine":24,"endColumn":58},{"ruleId":"2937","severity":1,"message":"2938","line":46,"column":23,"nodeType":"2939","endLine":46,"endColumn":56},{"ruleId":"2937","severity":1,"message":"2938","line":49,"column":27,"nodeType":"2939","endLine":49,"endColumn":60},{"ruleId":"2937","severity":1,"message":"2938","line":71,"column":23,"nodeType":"2939","endLine":71,"endColumn":54},{"ruleId":"2937","severity":1,"message":"2938","line":74,"column":27,"nodeType":"2939","endLine":74,"endColumn":58},{"ruleId":"2922","severity":1,"message":"3181","line":20,"column":56,"nodeType":"2924","messageId":"2925","endLine":20,"endColumn":66},{"ruleId":"3155","severity":1,"message":"3156","line":180,"column":9,"nodeType":"2939","endLine":180,"endColumn":30},{"ruleId":"3182","replacedBy":"3183"},{"ruleId":"3184","replacedBy":"3185"},{"ruleId":"2922","severity":1,"message":"3180","line":1,"column":17,"nodeType":"2924","messageId":"2925","endLine":1,"endColumn":26},{"ruleId":"2922","severity":1,"message":"3148","line":1,"column":36,"nodeType":"2924","messageId":"2925","endLine":1,"endColumn":40},{"ruleId":"2922","severity":1,"message":"3186","line":10,"column":10,"nodeType":"2924","messageId":"2925","endLine":10,"endColumn":20},{"ruleId":"2922","severity":1,"message":"3187","line":12,"column":8,"nodeType":"2924","messageId":"2925","endLine":12,"endColumn":12},{"ruleId":"2975","severity":1,"message":"2976","line":67,"column":13,"nodeType":"2977","messageId":"2978","endLine":67,"endColumn":18},{"ruleId":"2948","severity":1,"message":"3188","line":150,"column":24,"nodeType":"2924","messageId":"2950","endLine":150,"endColumn":25},{"ruleId":"2948","severity":1,"message":"3189","line":150,"column":31,"nodeType":"2924","messageId":"2950","endLine":150,"endColumn":39},{"ruleId":"2948","severity":1,"message":"3190","line":152,"column":19,"nodeType":"2924","messageId":"2950","endLine":152,"endColumn":23},{"ruleId":"2948","severity":1,"message":"3191","line":375,"column":23,"nodeType":"2924","messageId":"2950","endLine":375,"endColumn":29},{"ruleId":"2948","severity":1,"message":"3191","line":389,"column":25,"nodeType":"2924","messageId":"2950","endLine":389,"endColumn":31},{"ruleId":"2948","severity":1,"message":"3191","line":397,"column":21,"nodeType":"2924","messageId":"2950","endLine":397,"endColumn":27},{"ruleId":"2948","severity":1,"message":"3191","line":403,"column":23,"nodeType":"2924","messageId":"2950","endLine":403,"endColumn":29},{"ruleId":"2948","severity":1,"message":"3191","line":412,"column":27,"nodeType":"2924","messageId":"2950","endLine":412,"endColumn":33},{"ruleId":"2948","severity":1,"message":"3191","line":421,"column":25,"nodeType":"2924","messageId":"2950","endLine":421,"endColumn":31},{"ruleId":"2948","severity":1,"message":"3191","line":433,"column":27,"nodeType":"2924","messageId":"2950","endLine":433,"endColumn":33},{"ruleId":"2948","severity":1,"message":"3191","line":632,"column":19,"nodeType":"2924","messageId":"2950","endLine":632,"endColumn":25},{"ruleId":"2922","severity":1,"message":"3192","line":685,"column":13,"nodeType":"2924","messageId":"2925","endLine":685,"endColumn":24},{"ruleId":"2948","severity":1,"message":"3189","line":732,"column":27,"nodeType":"2924","messageId":"2950","endLine":732,"endColumn":35},{"ruleId":"2922","severity":1,"message":"3193","line":781,"column":23,"nodeType":"2924","messageId":"2925","endLine":781,"endColumn":26},{"ruleId":"2922","severity":1,"message":"2969","line":809,"column":19,"nodeType":"2924","messageId":"2925","endLine":809,"endColumn":27},{"ruleId":"2922","severity":1,"message":"3108","line":813,"column":19,"nodeType":"2924","messageId":"2925","endLine":813,"endColumn":23},{"ruleId":"2922","severity":1,"message":"3142","line":884,"column":15,"nodeType":"2924","messageId":"2925","endLine":884,"endColumn":23},{"ruleId":"2922","severity":1,"message":"2987","line":890,"column":15,"nodeType":"2924","messageId":"2925","endLine":890,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3194","line":932,"column":15,"nodeType":"2924","messageId":"2925","endLine":932,"endColumn":25},{"ruleId":"2922","severity":1,"message":"3195","line":939,"column":11,"nodeType":"2924","messageId":"2925","endLine":939,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3196","line":965,"column":11,"nodeType":"2924","messageId":"2925","endLine":965,"endColumn":18},{"ruleId":"2937","severity":1,"message":"2938","line":1060,"column":43,"nodeType":"2939","endLine":1060,"endColumn":179},{"ruleId":"2945","severity":1,"message":"2946","line":1092,"column":43,"nodeType":"2939","endLine":1092,"endColumn":184},{"ruleId":"2945","severity":1,"message":"2946","line":1109,"column":41,"nodeType":"2939","endLine":1109,"endColumn":181},{"ruleId":"2922","severity":1,"message":"3197","line":276,"column":17,"nodeType":"2924","messageId":"2925","endLine":276,"endColumn":20},{"ruleId":"2945","severity":1,"message":"2946","line":312,"column":41,"nodeType":"2939","endLine":312,"endColumn":123},{"ruleId":"2922","severity":1,"message":"3010","line":153,"column":13,"nodeType":"2924","messageId":"2925","endLine":153,"endColumn":18},{"ruleId":"2937","severity":1,"message":"2938","line":268,"column":29,"nodeType":"2939","endLine":268,"endColumn":62},{"ruleId":"2922","severity":1,"message":"3010","line":142,"column":13,"nodeType":"2924","messageId":"2925","endLine":142,"endColumn":18},{"ruleId":"2937","severity":1,"message":"2938","line":247,"column":25,"nodeType":"2939","endLine":247,"endColumn":48},{"ruleId":"2937","severity":1,"message":"2938","line":249,"column":25,"nodeType":"2939","endLine":249,"endColumn":90},{"ruleId":"2922","severity":1,"message":"3141","line":234,"column":12,"nodeType":"2924","messageId":"2925","endLine":234,"endColumn":28},{"ruleId":"2922","severity":1,"message":"3142","line":235,"column":11,"nodeType":"2924","messageId":"2925","endLine":235,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2987","line":241,"column":11,"nodeType":"2924","messageId":"2925","endLine":241,"endColumn":20},{"ruleId":"2937","severity":1,"message":"2938","line":318,"column":20,"nodeType":"2939","endLine":318,"endColumn":48},{"ruleId":"2975","severity":1,"message":"2976","line":65,"column":13,"nodeType":"2977","messageId":"2978","endLine":65,"endColumn":18},{"ruleId":"2948","severity":1,"message":"3188","line":147,"column":24,"nodeType":"2924","messageId":"2950","endLine":147,"endColumn":25},{"ruleId":"2948","severity":1,"message":"3189","line":147,"column":31,"nodeType":"2924","messageId":"2950","endLine":147,"endColumn":39},{"ruleId":"2948","severity":1,"message":"3190","line":149,"column":19,"nodeType":"2924","messageId":"2950","endLine":149,"endColumn":23},{"ruleId":"2948","severity":1,"message":"3191","line":362,"column":21,"nodeType":"2924","messageId":"2950","endLine":362,"endColumn":27},{"ruleId":"2948","severity":1,"message":"3191","line":371,"column":25,"nodeType":"2924","messageId":"2950","endLine":371,"endColumn":31},{"ruleId":"2948","severity":1,"message":"3191","line":380,"column":23,"nodeType":"2924","messageId":"2950","endLine":380,"endColumn":29},{"ruleId":"2948","severity":1,"message":"3191","line":392,"column":25,"nodeType":"2924","messageId":"2950","endLine":392,"endColumn":31},{"ruleId":"2948","severity":1,"message":"3191","line":528,"column":19,"nodeType":"2924","messageId":"2950","endLine":528,"endColumn":25},{"ruleId":"2922","severity":1,"message":"3192","line":583,"column":13,"nodeType":"2924","messageId":"2925","endLine":583,"endColumn":24},{"ruleId":"2948","severity":1,"message":"3189","line":634,"column":27,"nodeType":"2924","messageId":"2950","endLine":634,"endColumn":35},{"ruleId":"2922","severity":1,"message":"3193","line":683,"column":23,"nodeType":"2924","messageId":"2925","endLine":683,"endColumn":26},{"ruleId":"2922","severity":1,"message":"2969","line":711,"column":19,"nodeType":"2924","messageId":"2925","endLine":711,"endColumn":27},{"ruleId":"2922","severity":1,"message":"3108","line":715,"column":19,"nodeType":"2924","messageId":"2925","endLine":715,"endColumn":23},{"ruleId":"2922","severity":1,"message":"3142","line":785,"column":15,"nodeType":"2924","messageId":"2925","endLine":785,"endColumn":23},{"ruleId":"2922","severity":1,"message":"2987","line":791,"column":15,"nodeType":"2924","messageId":"2925","endLine":791,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3194","line":833,"column":15,"nodeType":"2924","messageId":"2925","endLine":833,"endColumn":25},{"ruleId":"2922","severity":1,"message":"3195","line":840,"column":11,"nodeType":"2924","messageId":"2925","endLine":840,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3196","line":866,"column":11,"nodeType":"2924","messageId":"2925","endLine":866,"endColumn":18},{"ruleId":"2937","severity":1,"message":"2938","line":961,"column":43,"nodeType":"2939","endLine":961,"endColumn":179},{"ruleId":"2945","severity":1,"message":"2946","line":993,"column":43,"nodeType":"2939","endLine":993,"endColumn":184},{"ruleId":"2945","severity":1,"message":"2946","line":1010,"column":41,"nodeType":"2939","endLine":1010,"endColumn":181},{"ruleId":"2922","severity":1,"message":"3008","line":54,"column":15,"nodeType":"2924","messageId":"2925","endLine":54,"endColumn":23},{"ruleId":"2922","severity":1,"message":"3009","line":56,"column":13,"nodeType":"2924","messageId":"2925","endLine":56,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3010","line":76,"column":21,"nodeType":"2924","messageId":"2925","endLine":76,"endColumn":26},{"ruleId":"2993","severity":1,"message":"2994","line":250,"column":43,"nodeType":"2995","endLine":250,"endColumn":125},{"ruleId":"2993","severity":1,"message":"2994","line":256,"column":39,"nodeType":"2995","endLine":256,"endColumn":113},{"ruleId":"2993","severity":1,"message":"2994","line":261,"column":39,"nodeType":"2995","endLine":261,"endColumn":110},{"ruleId":"2993","severity":1,"message":"2994","line":266,"column":41,"nodeType":"2995","endLine":266,"endColumn":110},{"ruleId":"2993","severity":1,"message":"2994","line":270,"column":41,"nodeType":"2995","endLine":270,"endColumn":130},{"ruleId":"2993","severity":1,"message":"2994","line":275,"column":41,"nodeType":"2995","endLine":275,"endColumn":113},{"ruleId":"2993","severity":1,"message":"2994","line":281,"column":41,"nodeType":"2995","endLine":281,"endColumn":110},{"ruleId":"2993","severity":1,"message":"2994","line":285,"column":39,"nodeType":"2995","endLine":285,"endColumn":122},{"ruleId":"2993","severity":1,"message":"2994","line":289,"column":41,"nodeType":"2995","endLine":289,"endColumn":114},{"ruleId":"2993","severity":1,"message":"2994","line":293,"column":41,"nodeType":"2995","endLine":293,"endColumn":117},{"ruleId":"2993","severity":1,"message":"2994","line":299,"column":43,"nodeType":"2995","endLine":299,"endColumn":121},{"ruleId":"2993","severity":1,"message":"2994","line":303,"column":43,"nodeType":"2995","endLine":303,"endColumn":112},{"ruleId":"2993","severity":1,"message":"2994","line":307,"column":43,"nodeType":"2995","endLine":307,"endColumn":136},{"ruleId":"2993","severity":1,"message":"2994","line":312,"column":43,"nodeType":"2995","endLine":312,"endColumn":140},{"ruleId":"2993","severity":1,"message":"2994","line":317,"column":43,"nodeType":"2995","endLine":317,"endColumn":135},{"ruleId":"2993","severity":1,"message":"2994","line":326,"column":43,"nodeType":"2995","endLine":326,"endColumn":135},{"ruleId":"2993","severity":1,"message":"2994","line":332,"column":43,"nodeType":"2995","endLine":332,"endColumn":136},{"ruleId":"2993","severity":1,"message":"2994","line":337,"column":43,"nodeType":"2995","endLine":337,"endColumn":144},{"ruleId":"2993","severity":1,"message":"2994","line":342,"column":43,"nodeType":"2995","endLine":342,"endColumn":135},{"ruleId":"2993","severity":1,"message":"2994","line":347,"column":43,"nodeType":"2995","endLine":347,"endColumn":138},{"ruleId":"2937","severity":1,"message":"2938","line":364,"column":45,"nodeType":"2939","endLine":364,"endColumn":90},{"ruleId":"2975","severity":1,"message":"2984","line":43,"column":9,"nodeType":"2977","messageId":"2978","endLine":43,"endColumn":17},{"ruleId":"2922","severity":1,"message":"2986","line":123,"column":9,"nodeType":"2924","messageId":"2925","endLine":123,"endColumn":17},{"ruleId":"2922","severity":1,"message":"2944","line":135,"column":9,"nodeType":"2924","messageId":"2925","endLine":135,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3116","line":148,"column":9,"nodeType":"2924","messageId":"2925","endLine":148,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3198","line":149,"column":9,"nodeType":"2924","messageId":"2925","endLine":149,"endColumn":39},{"ruleId":"2922","severity":1,"message":"3124","line":151,"column":9,"nodeType":"2924","messageId":"2925","endLine":151,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3199","line":286,"column":11,"nodeType":"2924","messageId":"2925","endLine":286,"endColumn":22},{"ruleId":"2945","severity":1,"message":"2946","line":356,"column":29,"nodeType":"2939","endLine":356,"endColumn":149},{"ruleId":"2945","severity":1,"message":"2946","line":362,"column":29,"nodeType":"2939","endLine":362,"endColumn":118},{"ruleId":"2945","severity":1,"message":"2946","line":374,"column":31,"nodeType":"2939","endLine":374,"endColumn":133},{"ruleId":"2922","severity":1,"message":"3200","line":401,"column":11,"nodeType":"2924","messageId":"2925","endLine":401,"endColumn":22},{"ruleId":"2922","severity":1,"message":"3125","line":489,"column":9,"nodeType":"2924","messageId":"2925","endLine":489,"endColumn":24},{"ruleId":"2937","severity":1,"message":"2938","line":504,"column":60,"nodeType":"2939","endLine":504,"endColumn":123},{"ruleId":"2937","severity":1,"message":"2938","line":506,"column":61,"nodeType":"2939","endLine":506,"endColumn":146},{"ruleId":"2937","severity":1,"message":"2938","line":510,"column":61,"nodeType":"2939","endLine":510,"endColumn":124},{"ruleId":"2945","severity":1,"message":"2946","line":523,"column":51,"nodeType":"2939","endLine":523,"endColumn":181},{"ruleId":"2937","severity":1,"message":"2938","line":527,"column":59,"nodeType":"2939","endLine":527,"endColumn":122},{"ruleId":"2937","severity":1,"message":"2938","line":529,"column":61,"nodeType":"2939","endLine":529,"endColumn":145},{"ruleId":"2937","severity":1,"message":"2938","line":533,"column":61,"nodeType":"2939","endLine":533,"endColumn":124},{"ruleId":"2922","severity":1,"message":"3126","line":556,"column":8,"nodeType":"2924","messageId":"2925","endLine":556,"endColumn":21},{"ruleId":"2937","severity":1,"message":"2938","line":614,"column":79,"nodeType":"2939","endLine":614,"endColumn":115},{"ruleId":"2945","severity":1,"message":"2946","line":643,"column":53,"nodeType":"2939","endLine":643,"endColumn":196},{"ruleId":"2937","severity":1,"message":"2938","line":647,"column":60,"nodeType":"2939","endLine":647,"endColumn":123},{"ruleId":"2937","severity":1,"message":"2938","line":649,"column":62,"nodeType":"2939","endLine":649,"endColumn":147},{"ruleId":"2937","severity":1,"message":"2938","line":653,"column":61,"nodeType":"2939","endLine":653,"endColumn":124},{"ruleId":"2937","severity":1,"message":"2938","line":672,"column":69,"nodeType":"2939","endLine":672,"endColumn":132},{"ruleId":"2937","severity":1,"message":"2938","line":674,"column":71,"nodeType":"2939","endLine":674,"endColumn":156},{"ruleId":"2937","severity":1,"message":"2938","line":678,"column":71,"nodeType":"2939","endLine":678,"endColumn":134},{"ruleId":"2945","severity":1,"message":"2946","line":689,"column":72,"nodeType":"2939","endLine":689,"endColumn":202},{"ruleId":"2937","severity":1,"message":"2938","line":693,"column":83,"nodeType":"2939","endLine":693,"endColumn":146},{"ruleId":"2937","severity":1,"message":"2938","line":695,"column":85,"nodeType":"2939","endLine":695,"endColumn":169},{"ruleId":"2937","severity":1,"message":"2938","line":699,"column":85,"nodeType":"2939","endLine":699,"endColumn":148},{"ruleId":"3130","severity":1,"message":"3131","line":724,"column":61,"nodeType":"2939","endLine":725,"endColumn":109},{"ruleId":"3130","severity":1,"message":"3131","line":733,"column":65,"nodeType":"2939","endLine":733,"endColumn":167},{"ruleId":"3130","severity":1,"message":"3131","line":740,"column":65,"nodeType":"2939","endLine":740,"endColumn":208},{"ruleId":"2945","severity":1,"message":"2946","line":865,"column":55,"nodeType":"2939","endLine":865,"endColumn":198},{"ruleId":"2937","severity":1,"message":"2938","line":877,"column":59,"nodeType":"2939","endLine":877,"endColumn":122},{"ruleId":"2993","severity":1,"message":"2994","line":990,"column":99,"nodeType":"2995","endLine":990,"endColumn":114},{"ruleId":"2937","severity":1,"message":"2938","line":1019,"column":41,"nodeType":"2939","endLine":1019,"endColumn":66},{"ruleId":"2975","severity":1,"message":"2976","line":62,"column":15,"nodeType":"2977","messageId":"2978","endLine":62,"endColumn":20},{"ruleId":"2922","severity":1,"message":"3192","line":431,"column":13,"nodeType":"2924","messageId":"2925","endLine":431,"endColumn":24},{"ruleId":"2948","severity":1,"message":"3189","line":466,"column":29,"nodeType":"2924","messageId":"2950","endLine":466,"endColumn":37},{"ruleId":"2922","severity":1,"message":"3142","line":521,"column":15,"nodeType":"2924","messageId":"2925","endLine":521,"endColumn":23},{"ruleId":"2922","severity":1,"message":"2987","line":527,"column":15,"nodeType":"2924","messageId":"2925","endLine":527,"endColumn":24},{"ruleId":"2937","severity":1,"message":"2938","line":585,"column":39,"nodeType":"2939","endLine":585,"endColumn":143},{"ruleId":"2922","severity":1,"message":"3108","line":602,"column":9,"nodeType":"2924","messageId":"2925","endLine":602,"endColumn":13},{"ruleId":"2922","severity":1,"message":"3009","line":81,"column":9,"nodeType":"2924","messageId":"2925","endLine":81,"endColumn":14},{"ruleId":"2922","severity":1,"message":"3010","line":170,"column":13,"nodeType":"2924","messageId":"2925","endLine":170,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3141","line":156,"column":16,"nodeType":"2924","messageId":"2925","endLine":156,"endColumn":32},{"ruleId":"2922","severity":1,"message":"3142","line":157,"column":15,"nodeType":"2924","messageId":"2925","endLine":157,"endColumn":23},{"ruleId":"2922","severity":1,"message":"2987","line":163,"column":15,"nodeType":"2924","messageId":"2925","endLine":163,"endColumn":24},{"ruleId":"2937","severity":1,"message":"2938","line":239,"column":25,"nodeType":"2939","endLine":239,"endColumn":52},{"ruleId":"2922","severity":1,"message":"3010","line":136,"column":13,"nodeType":"2924","messageId":"2925","endLine":136,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3141","line":229,"column":12,"nodeType":"2924","messageId":"2925","endLine":229,"endColumn":28},{"ruleId":"2922","severity":1,"message":"3142","line":230,"column":11,"nodeType":"2924","messageId":"2925","endLine":230,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2987","line":236,"column":11,"nodeType":"2924","messageId":"2925","endLine":236,"endColumn":20},{"ruleId":"2937","severity":1,"message":"2938","line":313,"column":20,"nodeType":"2939","endLine":313,"endColumn":48},{"ruleId":"2922","severity":1,"message":"3009","line":86,"column":9,"nodeType":"2924","messageId":"2925","endLine":86,"endColumn":14},{"ruleId":"2922","severity":1,"message":"3010","line":172,"column":13,"nodeType":"2924","messageId":"2925","endLine":172,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3008","line":54,"column":15,"nodeType":"2924","messageId":"2925","endLine":54,"endColumn":23},{"ruleId":"2922","severity":1,"message":"3009","line":56,"column":13,"nodeType":"2924","messageId":"2925","endLine":56,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3010","line":76,"column":21,"nodeType":"2924","messageId":"2925","endLine":76,"endColumn":26},{"ruleId":"2937","severity":1,"message":"2938","line":232,"column":31,"nodeType":"2939","endLine":232,"endColumn":143},{"ruleId":"2993","severity":1,"message":"2994","line":255,"column":43,"nodeType":"2995","endLine":255,"endColumn":125},{"ruleId":"2993","severity":1,"message":"2994","line":261,"column":39,"nodeType":"2995","endLine":261,"endColumn":113},{"ruleId":"2993","severity":1,"message":"2994","line":266,"column":39,"nodeType":"2995","endLine":266,"endColumn":110},{"ruleId":"2993","severity":1,"message":"2994","line":271,"column":41,"nodeType":"2995","endLine":271,"endColumn":110},{"ruleId":"2993","severity":1,"message":"2994","line":275,"column":41,"nodeType":"2995","endLine":275,"endColumn":130},{"ruleId":"2993","severity":1,"message":"2994","line":280,"column":41,"nodeType":"2995","endLine":280,"endColumn":113},{"ruleId":"2993","severity":1,"message":"2994","line":286,"column":41,"nodeType":"2995","endLine":286,"endColumn":110},{"ruleId":"2993","severity":1,"message":"2994","line":290,"column":39,"nodeType":"2995","endLine":290,"endColumn":122},{"ruleId":"2993","severity":1,"message":"2994","line":294,"column":41,"nodeType":"2995","endLine":294,"endColumn":114},{"ruleId":"2993","severity":1,"message":"2994","line":298,"column":41,"nodeType":"2995","endLine":298,"endColumn":117},{"ruleId":"2993","severity":1,"message":"2994","line":304,"column":43,"nodeType":"2995","endLine":304,"endColumn":121},{"ruleId":"2993","severity":1,"message":"2994","line":308,"column":43,"nodeType":"2995","endLine":308,"endColumn":112},{"ruleId":"2993","severity":1,"message":"2994","line":312,"column":43,"nodeType":"2995","endLine":312,"endColumn":136},{"ruleId":"2993","severity":1,"message":"2994","line":317,"column":43,"nodeType":"2995","endLine":317,"endColumn":140},{"ruleId":"2993","severity":1,"message":"2994","line":322,"column":43,"nodeType":"2995","endLine":322,"endColumn":135},{"ruleId":"2993","severity":1,"message":"2994","line":331,"column":43,"nodeType":"2995","endLine":331,"endColumn":135},{"ruleId":"2993","severity":1,"message":"2994","line":337,"column":43,"nodeType":"2995","endLine":337,"endColumn":136},{"ruleId":"2993","severity":1,"message":"2994","line":342,"column":43,"nodeType":"2995","endLine":342,"endColumn":144},{"ruleId":"2993","severity":1,"message":"2994","line":347,"column":43,"nodeType":"2995","endLine":347,"endColumn":135},{"ruleId":"2993","severity":1,"message":"2994","line":352,"column":43,"nodeType":"2995","endLine":352,"endColumn":138},{"ruleId":"2937","severity":1,"message":"2938","line":368,"column":45,"nodeType":"2939","endLine":368,"endColumn":90},{"ruleId":"2922","severity":1,"message":"3201","line":4,"column":10,"nodeType":"2924","messageId":"2925","endLine":4,"endColumn":14},{"ruleId":"2922","severity":1,"message":"3202","line":5,"column":10,"nodeType":"2924","messageId":"2925","endLine":5,"endColumn":25},{"ruleId":"2922","severity":1,"message":"3203","line":33,"column":5,"nodeType":"2924","messageId":"2925","endLine":33,"endColumn":11},{"ruleId":"2948","severity":1,"message":"3204","line":161,"column":15,"nodeType":"2924","messageId":"2950","endLine":161,"endColumn":16},{"ruleId":"2922","severity":1,"message":"2989","line":161,"column":15,"nodeType":"2924","messageId":"2925","endLine":161,"endColumn":16},{"ruleId":"2948","severity":1,"message":"3205","line":162,"column":15,"nodeType":"2924","messageId":"2950","endLine":162,"endColumn":16},{"ruleId":"2922","severity":1,"message":"3124","line":180,"column":7,"nodeType":"2924","messageId":"2925","endLine":180,"endColumn":15},{"ruleId":"2922","severity":1,"message":"3206","line":193,"column":7,"nodeType":"2924","messageId":"2925","endLine":193,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2989","line":195,"column":7,"nodeType":"2924","messageId":"2925","endLine":195,"endColumn":8},{"ruleId":"2922","severity":1,"message":"2965","line":246,"column":21,"nodeType":"2924","messageId":"2925","endLine":246,"endColumn":25},{"ruleId":"2996","severity":1,"message":"3207","line":367,"column":17,"nodeType":"2998","messageId":"2999","endLine":367,"endColumn":18,"suggestions":"3208"},{"ruleId":"2996","severity":1,"message":"3209","line":367,"column":41,"nodeType":"2998","messageId":"2999","endLine":367,"endColumn":42,"suggestions":"3210"},{"ruleId":"2996","severity":1,"message":"3209","line":367,"column":57,"nodeType":"2998","messageId":"2999","endLine":367,"endColumn":58,"suggestions":"3211"},{"ruleId":"2948","severity":1,"message":"3212","line":545,"column":11,"nodeType":"2924","messageId":"2950","endLine":545,"endColumn":19},{"ruleId":"2948","severity":1,"message":"3213","line":546,"column":11,"nodeType":"2924","messageId":"2950","endLine":546,"endColumn":19},{"ruleId":"2990","severity":1,"message":"3123","line":549,"column":17,"nodeType":"2992","messageId":"2978","endLine":549,"endColumn":19},{"ruleId":"2996","severity":1,"message":"2997","line":564,"column":57,"nodeType":"2998","messageId":"2999","endLine":564,"endColumn":58,"suggestions":"3214"},{"ruleId":"2948","severity":1,"message":"3215","line":918,"column":23,"nodeType":"2924","messageId":"2950","endLine":918,"endColumn":26},{"ruleId":"2948","severity":1,"message":"3215","line":933,"column":23,"nodeType":"2924","messageId":"2950","endLine":933,"endColumn":26},{"ruleId":"2948","severity":1,"message":"3215","line":949,"column":19,"nodeType":"2924","messageId":"2950","endLine":949,"endColumn":22},{"ruleId":"3132","severity":1,"message":"3216","line":36,"column":25,"nodeType":"2939","endLine":36,"endColumn":43},{"ruleId":"3132","severity":1,"message":"3216","line":60,"column":26,"nodeType":"2939","endLine":60,"endColumn":44},{"ruleId":"2975","severity":1,"message":"2976","line":66,"column":13,"nodeType":"2977","messageId":"2978","endLine":66,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3193","line":341,"column":31,"nodeType":"2924","messageId":"2925","endLine":341,"endColumn":34},{"ruleId":"2922","severity":1,"message":"3217","line":343,"column":31,"nodeType":"2924","messageId":"2925","endLine":343,"endColumn":34},{"ruleId":"2922","severity":1,"message":"3192","line":463,"column":13,"nodeType":"2924","messageId":"2925","endLine":463,"endColumn":24},{"ruleId":"2948","severity":1,"message":"3189","line":515,"column":29,"nodeType":"2924","messageId":"2950","endLine":515,"endColumn":37},{"ruleId":"2922","severity":1,"message":"3193","line":565,"column":23,"nodeType":"2924","messageId":"2925","endLine":565,"endColumn":26},{"ruleId":"2922","severity":1,"message":"2969","line":591,"column":19,"nodeType":"2924","messageId":"2925","endLine":591,"endColumn":27},{"ruleId":"2922","severity":1,"message":"3108","line":595,"column":19,"nodeType":"2924","messageId":"2925","endLine":595,"endColumn":23},{"ruleId":"2922","severity":1,"message":"3142","line":668,"column":15,"nodeType":"2924","messageId":"2925","endLine":668,"endColumn":23},{"ruleId":"2922","severity":1,"message":"2987","line":674,"column":15,"nodeType":"2924","messageId":"2925","endLine":674,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3195","line":719,"column":11,"nodeType":"2924","messageId":"2925","endLine":719,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3196","line":745,"column":11,"nodeType":"2924","messageId":"2925","endLine":745,"endColumn":18},{"ruleId":"2937","severity":1,"message":"2938","line":846,"column":41,"nodeType":"2939","endLine":846,"endColumn":58},{"ruleId":"2975","severity":1,"message":"2976","line":61,"column":13,"nodeType":"2977","messageId":"2978","endLine":61,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3192","line":409,"column":13,"nodeType":"2924","messageId":"2925","endLine":409,"endColumn":24},{"ruleId":"2948","severity":1,"message":"3189","line":446,"column":29,"nodeType":"2924","messageId":"2950","endLine":446,"endColumn":37},{"ruleId":"2922","severity":1,"message":"3142","line":473,"column":15,"nodeType":"2924","messageId":"2925","endLine":473,"endColumn":23},{"ruleId":"2922","severity":1,"message":"2987","line":479,"column":15,"nodeType":"2924","messageId":"2925","endLine":479,"endColumn":24},{"ruleId":"2937","severity":1,"message":"2938","line":546,"column":37,"nodeType":"2939","endLine":546,"endColumn":141},{"ruleId":"2922","severity":1,"message":"2957","line":2,"column":8,"nodeType":"2924","messageId":"2925","endLine":2,"endColumn":17},{"ruleId":"3218","severity":1,"message":"3219","line":34,"column":21,"nodeType":"2939","endLine":34,"endColumn":30},{"ruleId":"2940","severity":1,"message":"2983","line":102,"column":10,"nodeType":"2939","endLine":102,"endColumn":48},{"ruleId":"2937","severity":1,"message":"2938","line":29,"column":25,"nodeType":"2939","endLine":29,"endColumn":56},{"ruleId":"2937","severity":1,"message":"2938","line":42,"column":25,"nodeType":"2939","endLine":42,"endColumn":58},{"ruleId":"2937","severity":1,"message":"2938","line":54,"column":25,"nodeType":"2939","endLine":54,"endColumn":56},{"ruleId":"2937","severity":1,"message":"2938","line":66,"column":25,"nodeType":"2939","endLine":66,"endColumn":58},{"ruleId":"2937","severity":1,"message":"2938","line":78,"column":25,"nodeType":"2939","endLine":78,"endColumn":56},{"ruleId":"2937","severity":1,"message":"2938","line":90,"column":25,"nodeType":"2939","endLine":90,"endColumn":58},{"ruleId":"2937","severity":1,"message":"2938","line":102,"column":25,"nodeType":"2939","endLine":102,"endColumn":56},{"ruleId":"2937","severity":1,"message":"2938","line":114,"column":25,"nodeType":"2939","endLine":114,"endColumn":58},{"ruleId":"2937","severity":1,"message":"2938","line":126,"column":25,"nodeType":"2939","endLine":126,"endColumn":56},{"ruleId":"2937","severity":1,"message":"2938","line":138,"column":25,"nodeType":"2939","endLine":138,"endColumn":58},{"ruleId":"2960","severity":1,"message":"2961","line":5,"column":5,"nodeType":"2962","messageId":"2963","endLine":8,"endColumn":6},{"ruleId":"2975","severity":1,"message":"2976","line":66,"column":13,"nodeType":"2977","messageId":"2978","endLine":66,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3193","line":334,"column":31,"nodeType":"2924","messageId":"2925","endLine":334,"endColumn":34},{"ruleId":"2922","severity":1,"message":"3217","line":336,"column":31,"nodeType":"2924","messageId":"2925","endLine":336,"endColumn":34},{"ruleId":"2922","severity":1,"message":"3192","line":452,"column":13,"nodeType":"2924","messageId":"2925","endLine":452,"endColumn":24},{"ruleId":"2948","severity":1,"message":"3189","line":501,"column":29,"nodeType":"2924","messageId":"2950","endLine":501,"endColumn":37},{"ruleId":"2922","severity":1,"message":"3193","line":554,"column":23,"nodeType":"2924","messageId":"2925","endLine":554,"endColumn":26},{"ruleId":"2922","severity":1,"message":"2969","line":585,"column":19,"nodeType":"2924","messageId":"2925","endLine":585,"endColumn":27},{"ruleId":"2922","severity":1,"message":"3108","line":589,"column":19,"nodeType":"2924","messageId":"2925","endLine":589,"endColumn":23},{"ruleId":"2990","severity":1,"message":"3123","line":664,"column":22,"nodeType":"2992","messageId":"2978","endLine":664,"endColumn":24},{"ruleId":"2990","severity":1,"message":"3123","line":664,"column":40,"nodeType":"2992","messageId":"2978","endLine":664,"endColumn":42},{"ruleId":"2990","severity":1,"message":"3123","line":664,"column":59,"nodeType":"2992","messageId":"2978","endLine":664,"endColumn":61},{"ruleId":"2922","severity":1,"message":"3142","line":672,"column":15,"nodeType":"2924","messageId":"2925","endLine":672,"endColumn":23},{"ruleId":"2922","severity":1,"message":"2987","line":678,"column":15,"nodeType":"2924","messageId":"2925","endLine":678,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3195","line":723,"column":11,"nodeType":"2924","messageId":"2925","endLine":723,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3196","line":749,"column":11,"nodeType":"2924","messageId":"2925","endLine":749,"endColumn":18},{"ruleId":"2937","severity":1,"message":"2938","line":850,"column":41,"nodeType":"2939","endLine":850,"endColumn":58},{"ruleId":"2922","severity":1,"message":"3010","line":169,"column":13,"nodeType":"2924","messageId":"2925","endLine":169,"endColumn":18},{"ruleId":"2993","severity":1,"message":"2994","line":356,"column":29,"nodeType":"2995","endLine":356,"endColumn":111},{"ruleId":"2993","severity":1,"message":"2994","line":360,"column":25,"nodeType":"2995","endLine":360,"endColumn":99},{"ruleId":"2993","severity":1,"message":"2994","line":365,"column":25,"nodeType":"2995","endLine":365,"endColumn":96},{"ruleId":"2993","severity":1,"message":"2994","line":370,"column":27,"nodeType":"2995","endLine":370,"endColumn":96},{"ruleId":"2993","severity":1,"message":"2994","line":374,"column":27,"nodeType":"2995","endLine":374,"endColumn":116},{"ruleId":"2993","severity":1,"message":"2994","line":379,"column":27,"nodeType":"2995","endLine":379,"endColumn":99},{"ruleId":"2993","severity":1,"message":"2994","line":385,"column":27,"nodeType":"2995","endLine":385,"endColumn":96},{"ruleId":"2993","severity":1,"message":"2994","line":389,"column":25,"nodeType":"2995","endLine":389,"endColumn":108},{"ruleId":"2993","severity":1,"message":"2994","line":393,"column":27,"nodeType":"2995","endLine":393,"endColumn":100},{"ruleId":"2993","severity":1,"message":"2994","line":397,"column":27,"nodeType":"2995","endLine":397,"endColumn":103},{"ruleId":"2993","severity":1,"message":"2994","line":404,"column":25,"nodeType":"2995","endLine":404,"endColumn":103},{"ruleId":"2993","severity":1,"message":"2994","line":408,"column":25,"nodeType":"2995","endLine":408,"endColumn":94},{"ruleId":"2993","severity":1,"message":"2994","line":412,"column":25,"nodeType":"2995","endLine":412,"endColumn":118},{"ruleId":"2993","severity":1,"message":"2994","line":417,"column":25,"nodeType":"2995","endLine":417,"endColumn":122},{"ruleId":"2993","severity":1,"message":"2994","line":422,"column":25,"nodeType":"2995","endLine":422,"endColumn":117},{"ruleId":"2993","severity":1,"message":"2994","line":431,"column":25,"nodeType":"2995","endLine":431,"endColumn":117},{"ruleId":"2993","severity":1,"message":"2994","line":437,"column":25,"nodeType":"2995","endLine":437,"endColumn":118},{"ruleId":"2993","severity":1,"message":"2994","line":442,"column":25,"nodeType":"2995","endLine":442,"endColumn":126},{"ruleId":"2993","severity":1,"message":"2994","line":447,"column":25,"nodeType":"2995","endLine":447,"endColumn":117},{"ruleId":"2993","severity":1,"message":"2994","line":452,"column":25,"nodeType":"2995","endLine":452,"endColumn":120},{"ruleId":"2937","severity":1,"message":"2938","line":474,"column":27,"nodeType":"2939","endLine":474,"endColumn":50},{"ruleId":"2937","severity":1,"message":"2938","line":476,"column":27,"nodeType":"2939","endLine":476,"endColumn":60},{"ruleId":"2922","severity":1,"message":"3192","line":480,"column":13,"nodeType":"2924","messageId":"2925","endLine":480,"endColumn":24},{"ruleId":"2948","severity":1,"message":"3189","line":516,"column":29,"nodeType":"2924","messageId":"2950","endLine":516,"endColumn":37},{"ruleId":"2922","severity":1,"message":"3142","line":566,"column":15,"nodeType":"2924","messageId":"2925","endLine":566,"endColumn":23},{"ruleId":"2922","severity":1,"message":"2987","line":572,"column":15,"nodeType":"2924","messageId":"2925","endLine":572,"endColumn":24},{"ruleId":"2937","severity":1,"message":"2938","line":639,"column":37,"nodeType":"2939","endLine":639,"endColumn":141},{"ruleId":"2922","severity":1,"message":"3141","line":164,"column":12,"nodeType":"2924","messageId":"2925","endLine":164,"endColumn":28},{"ruleId":"2922","severity":1,"message":"3142","line":165,"column":11,"nodeType":"2924","messageId":"2925","endLine":165,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2987","line":171,"column":11,"nodeType":"2924","messageId":"2925","endLine":171,"endColumn":20},{"ruleId":"2937","severity":1,"message":"2938","line":246,"column":20,"nodeType":"2939","endLine":246,"endColumn":48},{"ruleId":"2922","severity":1,"message":"3141","line":171,"column":13,"nodeType":"2924","messageId":"2925","endLine":171,"endColumn":29},{"ruleId":"2922","severity":1,"message":"3142","line":172,"column":11,"nodeType":"2924","messageId":"2925","endLine":172,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2987","line":178,"column":11,"nodeType":"2924","messageId":"2925","endLine":178,"endColumn":20},{"ruleId":"2937","severity":1,"message":"2938","line":254,"column":21,"nodeType":"2939","endLine":254,"endColumn":49},{"ruleId":"2975","severity":1,"message":"2976","line":65,"column":13,"nodeType":"2977","messageId":"2978","endLine":65,"endColumn":18},{"ruleId":"2948","severity":1,"message":"3188","line":142,"column":24,"nodeType":"2924","messageId":"2950","endLine":142,"endColumn":25},{"ruleId":"2948","severity":1,"message":"3189","line":142,"column":31,"nodeType":"2924","messageId":"2950","endLine":142,"endColumn":39},{"ruleId":"2948","severity":1,"message":"3190","line":144,"column":19,"nodeType":"2924","messageId":"2950","endLine":144,"endColumn":23},{"ruleId":"2922","severity":1,"message":"3192","line":564,"column":13,"nodeType":"2924","messageId":"2925","endLine":564,"endColumn":24},{"ruleId":"2948","severity":1,"message":"3189","line":603,"column":27,"nodeType":"2924","messageId":"2950","endLine":603,"endColumn":35},{"ruleId":"2922","severity":1,"message":"3193","line":652,"column":23,"nodeType":"2924","messageId":"2925","endLine":652,"endColumn":26},{"ruleId":"2922","severity":1,"message":"2969","line":670,"column":19,"nodeType":"2924","messageId":"2925","endLine":670,"endColumn":27},{"ruleId":"2922","severity":1,"message":"3108","line":674,"column":19,"nodeType":"2924","messageId":"2925","endLine":674,"endColumn":23},{"ruleId":"2922","severity":1,"message":"3142","line":711,"column":15,"nodeType":"2924","messageId":"2925","endLine":711,"endColumn":23},{"ruleId":"2922","severity":1,"message":"2987","line":717,"column":15,"nodeType":"2924","messageId":"2925","endLine":717,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3194","line":757,"column":15,"nodeType":"2924","messageId":"2925","endLine":757,"endColumn":25},{"ruleId":"2922","severity":1,"message":"3195","line":764,"column":11,"nodeType":"2924","messageId":"2925","endLine":764,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3196","line":790,"column":11,"nodeType":"2924","messageId":"2925","endLine":790,"endColumn":18},{"ruleId":"2937","severity":1,"message":"2938","line":885,"column":43,"nodeType":"2939","endLine":885,"endColumn":179},{"ruleId":"2945","severity":1,"message":"2946","line":917,"column":43,"nodeType":"2939","endLine":917,"endColumn":184},{"ruleId":"2945","severity":1,"message":"2946","line":934,"column":41,"nodeType":"2939","endLine":934,"endColumn":181},{"ruleId":"2922","severity":1,"message":"3010","line":80,"column":13,"nodeType":"2924","messageId":"2925","endLine":80,"endColumn":18},{"ruleId":"2937","severity":1,"message":"2938","line":183,"column":25,"nodeType":"2939","endLine":183,"endColumn":48},{"ruleId":"2937","severity":1,"message":"2938","line":185,"column":25,"nodeType":"2939","endLine":185,"endColumn":90},{"ruleId":"2922","severity":1,"message":"3010","line":69,"column":13,"nodeType":"2924","messageId":"2925","endLine":69,"endColumn":18},{"ruleId":"2937","severity":1,"message":"2938","line":181,"column":29,"nodeType":"2939","endLine":181,"endColumn":62},{"ruleId":"2975","severity":1,"message":"2976","line":62,"column":15,"nodeType":"2977","messageId":"2978","endLine":62,"endColumn":20},{"ruleId":"2922","severity":1,"message":"3192","line":359,"column":13,"nodeType":"2924","messageId":"2925","endLine":359,"endColumn":24},{"ruleId":"2948","severity":1,"message":"3189","line":396,"column":29,"nodeType":"2924","messageId":"2950","endLine":396,"endColumn":37},{"ruleId":"2922","severity":1,"message":"3142","line":452,"column":15,"nodeType":"2924","messageId":"2925","endLine":452,"endColumn":23},{"ruleId":"2922","severity":1,"message":"2987","line":458,"column":15,"nodeType":"2924","messageId":"2925","endLine":458,"endColumn":24},{"ruleId":"2937","severity":1,"message":"2938","line":514,"column":37,"nodeType":"2939","endLine":514,"endColumn":141},{"ruleId":"2922","severity":1,"message":"3108","line":531,"column":9,"nodeType":"2924","messageId":"2925","endLine":531,"endColumn":13},{"ruleId":"2922","severity":1,"message":"3008","line":53,"column":15,"nodeType":"2924","messageId":"2925","endLine":53,"endColumn":23},{"ruleId":"2922","severity":1,"message":"3009","line":55,"column":13,"nodeType":"2924","messageId":"2925","endLine":55,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3010","line":75,"column":21,"nodeType":"2924","messageId":"2925","endLine":75,"endColumn":26},{"ruleId":"2993","severity":1,"message":"2994","line":253,"column":43,"nodeType":"2995","endLine":253,"endColumn":125},{"ruleId":"2993","severity":1,"message":"2994","line":259,"column":39,"nodeType":"2995","endLine":259,"endColumn":113},{"ruleId":"2993","severity":1,"message":"2994","line":264,"column":39,"nodeType":"2995","endLine":264,"endColumn":110},{"ruleId":"2993","severity":1,"message":"2994","line":269,"column":41,"nodeType":"2995","endLine":269,"endColumn":110},{"ruleId":"2993","severity":1,"message":"2994","line":273,"column":41,"nodeType":"2995","endLine":273,"endColumn":130},{"ruleId":"2993","severity":1,"message":"2994","line":278,"column":41,"nodeType":"2995","endLine":278,"endColumn":113},{"ruleId":"2993","severity":1,"message":"2994","line":284,"column":41,"nodeType":"2995","endLine":284,"endColumn":110},{"ruleId":"2993","severity":1,"message":"2994","line":288,"column":39,"nodeType":"2995","endLine":288,"endColumn":122},{"ruleId":"2993","severity":1,"message":"2994","line":292,"column":41,"nodeType":"2995","endLine":292,"endColumn":114},{"ruleId":"2993","severity":1,"message":"2994","line":296,"column":41,"nodeType":"2995","endLine":296,"endColumn":117},{"ruleId":"2937","severity":1,"message":"2938","line":312,"column":45,"nodeType":"2939","endLine":312,"endColumn":90},{"ruleId":"2975","severity":1,"message":"2984","line":33,"column":9,"nodeType":"2977","messageId":"2978","endLine":33,"endColumn":17},{"ruleId":"2922","severity":1,"message":"2944","line":110,"column":9,"nodeType":"2924","messageId":"2925","endLine":110,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3116","line":122,"column":9,"nodeType":"2924","messageId":"2925","endLine":122,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3198","line":123,"column":9,"nodeType":"2924","messageId":"2925","endLine":123,"endColumn":39},{"ruleId":"2922","severity":1,"message":"3124","line":125,"column":9,"nodeType":"2924","messageId":"2925","endLine":125,"endColumn":17},{"ruleId":"2937","severity":1,"message":"2938","line":195,"column":32,"nodeType":"2939","endLine":195,"endColumn":91},{"ruleId":"2937","severity":1,"message":"2938","line":199,"column":31,"nodeType":"2939","endLine":199,"endColumn":90},{"ruleId":"2993","severity":1,"message":"2994","line":308,"column":92,"nodeType":"2995","endLine":308,"endColumn":125},{"ruleId":"2937","severity":1,"message":"2938","line":312,"column":60,"nodeType":"2939","endLine":312,"endColumn":123},{"ruleId":"2937","severity":1,"message":"2938","line":314,"column":61,"nodeType":"2939","endLine":314,"endColumn":161},{"ruleId":"2937","severity":1,"message":"2938","line":318,"column":61,"nodeType":"2939","endLine":318,"endColumn":124},{"ruleId":"2945","severity":1,"message":"2946","line":329,"column":51,"nodeType":"2939","endLine":329,"endColumn":164},{"ruleId":"2937","severity":1,"message":"2938","line":333,"column":58,"nodeType":"2939","endLine":333,"endColumn":121},{"ruleId":"2937","severity":1,"message":"2938","line":335,"column":59,"nodeType":"2939","endLine":335,"endColumn":146},{"ruleId":"2937","severity":1,"message":"2938","line":339,"column":59,"nodeType":"2939","endLine":339,"endColumn":122},{"ruleId":"2937","severity":1,"message":"2938","line":411,"column":79,"nodeType":"2939","endLine":411,"endColumn":115},{"ruleId":"2945","severity":1,"message":"2946","line":431,"column":53,"nodeType":"2939","endLine":431,"endColumn":179},{"ruleId":"2937","severity":1,"message":"2938","line":435,"column":63,"nodeType":"2939","endLine":435,"endColumn":126},{"ruleId":"2937","severity":1,"message":"2938","line":437,"column":65,"nodeType":"2939","endLine":437,"endColumn":153},{"ruleId":"2937","severity":1,"message":"2938","line":441,"column":64,"nodeType":"2939","endLine":441,"endColumn":127},{"ruleId":"2937","severity":1,"message":"2938","line":488,"column":41,"nodeType":"2939","endLine":488,"endColumn":72},{"ruleId":"2922","severity":1,"message":"3009","line":66,"column":9,"nodeType":"2924","messageId":"2925","endLine":66,"endColumn":14},{"ruleId":"2922","severity":1,"message":"3010","line":111,"column":13,"nodeType":"2924","messageId":"2925","endLine":111,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3009","line":88,"column":9,"nodeType":"2924","messageId":"2925","endLine":88,"endColumn":14},{"ruleId":"2922","severity":1,"message":"3010","line":176,"column":13,"nodeType":"2924","messageId":"2925","endLine":176,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3010","line":97,"column":13,"nodeType":"2924","messageId":"2925","endLine":97,"endColumn":18},{"ruleId":"2993","severity":1,"message":"2994","line":236,"column":29,"nodeType":"2995","endLine":236,"endColumn":111},{"ruleId":"2993","severity":1,"message":"2994","line":242,"column":25,"nodeType":"2995","endLine":242,"endColumn":99},{"ruleId":"2993","severity":1,"message":"2994","line":247,"column":25,"nodeType":"2995","endLine":247,"endColumn":96},{"ruleId":"2993","severity":1,"message":"2994","line":252,"column":27,"nodeType":"2995","endLine":252,"endColumn":96},{"ruleId":"2993","severity":1,"message":"2994","line":256,"column":27,"nodeType":"2995","endLine":256,"endColumn":116},{"ruleId":"2993","severity":1,"message":"2994","line":261,"column":27,"nodeType":"2995","endLine":261,"endColumn":99},{"ruleId":"2993","severity":1,"message":"2994","line":267,"column":27,"nodeType":"2995","endLine":267,"endColumn":96},{"ruleId":"2993","severity":1,"message":"2994","line":271,"column":25,"nodeType":"2995","endLine":271,"endColumn":108},{"ruleId":"2993","severity":1,"message":"2994","line":275,"column":27,"nodeType":"2995","endLine":275,"endColumn":100},{"ruleId":"2993","severity":1,"message":"2994","line":279,"column":27,"nodeType":"2995","endLine":279,"endColumn":103},{"ruleId":"2937","severity":1,"message":"2938","line":298,"column":27,"nodeType":"2939","endLine":298,"endColumn":50},{"ruleId":"2937","severity":1,"message":"2938","line":300,"column":27,"nodeType":"2939","endLine":300,"endColumn":60},{"ruleId":"2922","severity":1,"message":"3010","line":107,"column":13,"nodeType":"2924","messageId":"2925","endLine":107,"endColumn":18},{"ruleId":"2993","severity":1,"message":"2994","line":293,"column":23,"nodeType":"2995","endLine":293,"endColumn":97},{"ruleId":"2922","severity":1,"message":"3220","line":95,"column":27,"nodeType":"2924","messageId":"2925","endLine":95,"endColumn":31},{"ruleId":"2948","severity":1,"message":"3221","line":182,"column":13,"nodeType":"2924","messageId":"2950","endLine":182,"endColumn":14},{"ruleId":"2922","severity":1,"message":"3220","line":195,"column":17,"nodeType":"2924","messageId":"2925","endLine":195,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3222","line":367,"column":25,"nodeType":"2924","messageId":"2925","endLine":367,"endColumn":33},{"ruleId":"2922","severity":1,"message":"2958","line":2,"column":9,"nodeType":"2924","messageId":"2925","endLine":2,"endColumn":13},{"ruleId":"2922","severity":1,"message":"2928","line":2,"column":14,"nodeType":"2924","messageId":"2925","endLine":2,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2929","line":2,"column":37,"nodeType":"2924","messageId":"2925","endLine":2,"endColumn":43},{"ruleId":"2922","severity":1,"message":"2930","line":2,"column":44,"nodeType":"2924","messageId":"2925","endLine":2,"endColumn":50},{"ruleId":"2922","severity":1,"message":"2931","line":3,"column":9,"nodeType":"2924","messageId":"2925","endLine":3,"endColumn":12},{"ruleId":"2922","severity":1,"message":"2932","line":3,"column":13,"nodeType":"2924","messageId":"2925","endLine":3,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2933","line":3,"column":20,"nodeType":"2924","messageId":"2925","endLine":3,"endColumn":26},{"ruleId":"2922","severity":1,"message":"2934","line":4,"column":8,"nodeType":"2924","messageId":"2925","endLine":4,"endColumn":17},{"ruleId":"2922","severity":1,"message":"2935","line":5,"column":8,"nodeType":"2924","messageId":"2925","endLine":5,"endColumn":19},{"ruleId":"2922","severity":1,"message":"3047","line":6,"column":8,"nodeType":"2924","messageId":"2925","endLine":6,"endColumn":16},{"ruleId":"2922","severity":1,"message":"3223","line":7,"column":8,"nodeType":"2924","messageId":"2925","endLine":7,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3028","line":8,"column":8,"nodeType":"2924","messageId":"2925","endLine":8,"endColumn":29},{"ruleId":"2922","severity":1,"message":"3224","line":10,"column":8,"nodeType":"2924","messageId":"2925","endLine":10,"endColumn":19},{"ruleId":"2922","severity":1,"message":"3062","line":15,"column":5,"nodeType":"2924","messageId":"2925","endLine":15,"endColumn":14},{"ruleId":"2922","severity":1,"message":"3225","line":16,"column":5,"nodeType":"2924","messageId":"2925","endLine":16,"endColumn":15},{"ruleId":"2922","severity":1,"message":"2936","line":17,"column":5,"nodeType":"2924","messageId":"2925","endLine":17,"endColumn":14},{"ruleId":"2922","severity":1,"message":"3060","line":18,"column":5,"nodeType":"2924","messageId":"2925","endLine":18,"endColumn":16},{"ruleId":"2922","severity":1,"message":"3226","line":20,"column":8,"nodeType":"2924","messageId":"2925","endLine":20,"endColumn":11},{"ruleId":"2922","severity":1,"message":"3227","line":22,"column":8,"nodeType":"2924","messageId":"2925","endLine":22,"endColumn":17},{"ruleId":"2922","severity":1,"message":"2944","line":77,"column":9,"nodeType":"2924","messageId":"2925","endLine":77,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3116","line":91,"column":9,"nodeType":"2924","messageId":"2925","endLine":91,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3198","line":92,"column":9,"nodeType":"2924","messageId":"2925","endLine":92,"endColumn":39},{"ruleId":"2922","severity":1,"message":"3124","line":95,"column":9,"nodeType":"2924","messageId":"2925","endLine":95,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3228","line":99,"column":9,"nodeType":"2924","messageId":"2925","endLine":99,"endColumn":22},{"ruleId":"2922","severity":1,"message":"3229","line":120,"column":9,"nodeType":"2924","messageId":"2925","endLine":120,"endColumn":23},{"ruleId":"2922","severity":1,"message":"3230","line":123,"column":9,"nodeType":"2924","messageId":"2925","endLine":123,"endColumn":19},{"ruleId":"2922","severity":1,"message":"3231","line":125,"column":10,"nodeType":"2924","messageId":"2925","endLine":125,"endColumn":22},{"ruleId":"2922","severity":1,"message":"3232","line":127,"column":10,"nodeType":"2924","messageId":"2925","endLine":127,"endColumn":27},{"ruleId":"2922","severity":1,"message":"3233","line":129,"column":10,"nodeType":"2924","messageId":"2925","endLine":129,"endColumn":33},{"ruleId":"2922","severity":1,"message":"2989","line":135,"column":8,"nodeType":"2924","messageId":"2925","endLine":135,"endColumn":9},{"ruleId":"2922","severity":1,"message":"3234","line":143,"column":6,"nodeType":"2924","messageId":"2925","endLine":143,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3235","line":170,"column":11,"nodeType":"2924","messageId":"2925","endLine":170,"endColumn":18},{"ruleId":"2945","severity":1,"message":"2946","line":202,"column":28,"nodeType":"2939","endLine":202,"endColumn":106},{"ruleId":"2945","severity":1,"message":"2946","line":209,"column":28,"nodeType":"2939","endLine":209,"endColumn":117},{"ruleId":"2945","severity":1,"message":"2946","line":221,"column":30,"nodeType":"2939","endLine":221,"endColumn":132},{"ruleId":"2937","severity":1,"message":"2938","line":245,"column":18,"nodeType":"2939","endLine":245,"endColumn":83},{"ruleId":"2937","severity":1,"message":"2938","line":311,"column":25,"nodeType":"2939","endLine":311,"endColumn":48},{"ruleId":"2937","severity":1,"message":"2938","line":318,"column":79,"nodeType":"2939","endLine":318,"endColumn":115},{"ruleId":"2937","severity":1,"message":"2938","line":409,"column":34,"nodeType":"2939","endLine":409,"endColumn":107},{"ruleId":"2922","severity":1,"message":"2965","line":130,"column":13,"nodeType":"2924","messageId":"2925","endLine":130,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3236","line":143,"column":13,"nodeType":"2924","messageId":"2925","endLine":143,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3153","line":342,"column":17,"nodeType":"2924","messageId":"2925","endLine":342,"endColumn":25},{"ruleId":"2922","severity":1,"message":"3237","line":464,"column":13,"nodeType":"2924","messageId":"2925","endLine":464,"endColumn":22},{"ruleId":"2922","severity":1,"message":"3238","line":465,"column":13,"nodeType":"2924","messageId":"2925","endLine":465,"endColumn":22},{"ruleId":"2922","severity":1,"message":"3239","line":604,"column":13,"nodeType":"2924","messageId":"2925","endLine":604,"endColumn":25},{"ruleId":"2922","severity":1,"message":"2986","line":632,"column":20,"nodeType":"2924","messageId":"2925","endLine":632,"endColumn":28},{"ruleId":"2922","severity":1,"message":"3240","line":751,"column":11,"nodeType":"2924","messageId":"2925","endLine":751,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3240","line":957,"column":11,"nodeType":"2924","messageId":"2925","endLine":957,"endColumn":17},{"ruleId":"2922","severity":1,"message":"2986","line":1205,"column":20,"nodeType":"2924","messageId":"2925","endLine":1205,"endColumn":28},{"ruleId":"2922","severity":1,"message":"3220","line":1283,"column":38,"nodeType":"2924","messageId":"2925","endLine":1283,"endColumn":42},{"ruleId":"2922","severity":1,"message":"3241","line":1326,"column":7,"nodeType":"2924","messageId":"2925","endLine":1326,"endColumn":10},{"ruleId":"2922","severity":1,"message":"2987","line":1341,"column":15,"nodeType":"2924","messageId":"2925","endLine":1341,"endColumn":24},{"ruleId":"3132","severity":1,"message":"3242","line":1706,"column":43,"nodeType":"2939","endLine":1712,"endColumn":109},{"ruleId":"2922","severity":1,"message":"2965","line":113,"column":13,"nodeType":"2924","messageId":"2925","endLine":113,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3236","line":137,"column":13,"nodeType":"2924","messageId":"2925","endLine":137,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3243","line":622,"column":12,"nodeType":"2924","messageId":"2925","endLine":622,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3244","line":623,"column":12,"nodeType":"2924","messageId":"2925","endLine":623,"endColumn":15},{"ruleId":"2922","severity":1,"message":"3241","line":648,"column":7,"nodeType":"2924","messageId":"2925","endLine":648,"endColumn":10},{"ruleId":"2922","severity":1,"message":"2987","line":673,"column":15,"nodeType":"2924","messageId":"2925","endLine":673,"endColumn":24},{"ruleId":"3245","severity":1,"message":"3246","line":1043,"column":75,"nodeType":"2995","endLine":1043,"endColumn":109},{"ruleId":"3132","severity":1,"message":"3242","line":1185,"column":79,"nodeType":"2939","endLine":1193,"endColumn":85},{"ruleId":"3132","severity":1,"message":"3242","line":1200,"column":83,"nodeType":"2939","endLine":1208,"endColumn":85},{"ruleId":"2922","severity":1,"message":"2957","line":2,"column":8,"nodeType":"2924","messageId":"2925","endLine":2,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3011","line":31,"column":15,"nodeType":"2924","messageId":"2925","endLine":31,"endColumn":26},{"ruleId":"2996","severity":1,"message":"3209","line":74,"column":28,"nodeType":"2998","messageId":"2999","endLine":74,"endColumn":29,"suggestions":"3247"},{"ruleId":"2996","severity":1,"message":"3209","line":74,"column":44,"nodeType":"2998","messageId":"2999","endLine":74,"endColumn":45,"suggestions":"3248"},{"ruleId":"2940","severity":1,"message":"2941","line":90,"column":16,"nodeType":"2939","endLine":90,"endColumn":44},{"ruleId":"2922","severity":1,"message":"2957","line":2,"column":8,"nodeType":"2924","messageId":"2925","endLine":2,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3217","line":151,"column":17,"nodeType":"2924","messageId":"2925","endLine":151,"endColumn":20},{"ruleId":"2922","severity":1,"message":"3192","line":219,"column":8,"nodeType":"2924","messageId":"2925","endLine":219,"endColumn":19},{"ruleId":"2948","severity":1,"message":"3189","line":247,"column":21,"nodeType":"2924","messageId":"2950","endLine":247,"endColumn":29},{"ruleId":"2922","severity":1,"message":"3193","line":268,"column":9,"nodeType":"2924","messageId":"2925","endLine":268,"endColumn":12},{"ruleId":"2937","severity":1,"message":"2938","line":388,"column":41,"nodeType":"2939","endLine":388,"endColumn":58},{"ruleId":"2922","severity":1,"message":"3142","line":404,"column":11,"nodeType":"2924","messageId":"2925","endLine":404,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2987","line":410,"column":7,"nodeType":"2924","messageId":"2925","endLine":410,"endColumn":16},{"ruleId":"2922","severity":1,"message":"2957","line":2,"column":8,"nodeType":"2924","messageId":"2925","endLine":2,"endColumn":17},{"ruleId":"2922","severity":1,"message":"2958","line":6,"column":9,"nodeType":"2924","messageId":"2925","endLine":6,"endColumn":13},{"ruleId":"2922","severity":1,"message":"2928","line":6,"column":14,"nodeType":"2924","messageId":"2925","endLine":6,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2929","line":6,"column":37,"nodeType":"2924","messageId":"2925","endLine":6,"endColumn":43},{"ruleId":"2922","severity":1,"message":"2930","line":6,"column":44,"nodeType":"2924","messageId":"2925","endLine":6,"endColumn":50},{"ruleId":"2922","severity":1,"message":"2931","line":7,"column":9,"nodeType":"2924","messageId":"2925","endLine":7,"endColumn":12},{"ruleId":"2922","severity":1,"message":"2932","line":7,"column":13,"nodeType":"2924","messageId":"2925","endLine":7,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2934","line":8,"column":8,"nodeType":"2924","messageId":"2925","endLine":8,"endColumn":17},{"ruleId":"2922","severity":1,"message":"2935","line":9,"column":8,"nodeType":"2924","messageId":"2925","endLine":9,"endColumn":19},{"ruleId":"2922","severity":1,"message":"3223","line":10,"column":8,"nodeType":"2924","messageId":"2925","endLine":10,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3028","line":11,"column":8,"nodeType":"2924","messageId":"2925","endLine":11,"endColumn":29},{"ruleId":"2922","severity":1,"message":"3202","line":13,"column":10,"nodeType":"2924","messageId":"2925","endLine":13,"endColumn":25},{"ruleId":"2922","severity":1,"message":"3062","line":15,"column":5,"nodeType":"2924","messageId":"2925","endLine":15,"endColumn":14},{"ruleId":"2922","severity":1,"message":"3225","line":16,"column":5,"nodeType":"2924","messageId":"2925","endLine":16,"endColumn":15},{"ruleId":"2922","severity":1,"message":"2936","line":17,"column":5,"nodeType":"2924","messageId":"2925","endLine":17,"endColumn":14},{"ruleId":"2922","severity":1,"message":"3060","line":18,"column":5,"nodeType":"2924","messageId":"2925","endLine":18,"endColumn":16},{"ruleId":"3249","severity":1,"message":"3250","line":68,"column":41,"nodeType":"2939","endLine":68,"endColumn":131},{"ruleId":"2937","severity":1,"message":"2938","line":88,"column":53,"nodeType":"2939","endLine":88,"endColumn":102},{"ruleId":"2975","severity":1,"message":"2976","line":54,"column":13,"nodeType":"2977","messageId":"2978","endLine":54,"endColumn":18},{"ruleId":"2948","severity":1,"message":"3189","line":484,"column":29,"nodeType":"2924","messageId":"2950","endLine":484,"endColumn":37},{"ruleId":"2922","severity":1,"message":"3142","line":533,"column":15,"nodeType":"2924","messageId":"2925","endLine":533,"endColumn":23},{"ruleId":"2922","severity":1,"message":"2987","line":539,"column":15,"nodeType":"2924","messageId":"2925","endLine":539,"endColumn":24},{"ruleId":"2937","severity":1,"message":"2938","line":606,"column":37,"nodeType":"2939","endLine":606,"endColumn":141},{"ruleId":"2922","severity":1,"message":"3220","line":115,"column":22,"nodeType":"2924","messageId":"2925","endLine":115,"endColumn":26},{"ruleId":"2948","severity":1,"message":"3221","line":446,"column":13,"nodeType":"2924","messageId":"2950","endLine":446,"endColumn":14},{"ruleId":"2948","severity":1,"message":"3251","line":107,"column":27,"nodeType":"2924","messageId":"2950","endLine":107,"endColumn":31},{"ruleId":"2948","severity":1,"message":"3252","line":112,"column":27,"nodeType":"2924","messageId":"2950","endLine":112,"endColumn":28},{"ruleId":"2948","severity":1,"message":"3251","line":119,"column":27,"nodeType":"2924","messageId":"2950","endLine":119,"endColumn":31},{"ruleId":"2948","severity":1,"message":"3252","line":126,"column":27,"nodeType":"2924","messageId":"2950","endLine":126,"endColumn":28},{"ruleId":"2948","severity":1,"message":"3251","line":135,"column":23,"nodeType":"2924","messageId":"2950","endLine":135,"endColumn":27},{"ruleId":"2948","severity":1,"message":"3221","line":157,"column":21,"nodeType":"2924","messageId":"2950","endLine":157,"endColumn":22},{"ruleId":"2948","severity":1,"message":"3253","line":162,"column":21,"nodeType":"2924","messageId":"2950","endLine":162,"endColumn":23},{"ruleId":"2948","severity":1,"message":"3221","line":174,"column":21,"nodeType":"2924","messageId":"2950","endLine":174,"endColumn":22},{"ruleId":"2922","severity":1,"message":"3220","line":199,"column":22,"nodeType":"2924","messageId":"2925","endLine":199,"endColumn":26},{"ruleId":"2922","severity":1,"message":"3220","line":282,"column":17,"nodeType":"2924","messageId":"2925","endLine":282,"endColumn":21},{"ruleId":"2948","severity":1,"message":"3251","line":598,"column":27,"nodeType":"2924","messageId":"2950","endLine":598,"endColumn":31},{"ruleId":"2948","severity":1,"message":"3252","line":603,"column":27,"nodeType":"2924","messageId":"2950","endLine":603,"endColumn":28},{"ruleId":"2948","severity":1,"message":"3251","line":610,"column":27,"nodeType":"2924","messageId":"2950","endLine":610,"endColumn":31},{"ruleId":"2948","severity":1,"message":"3252","line":617,"column":27,"nodeType":"2924","messageId":"2950","endLine":617,"endColumn":28},{"ruleId":"2948","severity":1,"message":"3251","line":626,"column":23,"nodeType":"2924","messageId":"2950","endLine":626,"endColumn":27},{"ruleId":"2948","severity":1,"message":"3221","line":648,"column":21,"nodeType":"2924","messageId":"2950","endLine":648,"endColumn":22},{"ruleId":"2948","severity":1,"message":"3253","line":653,"column":21,"nodeType":"2924","messageId":"2950","endLine":653,"endColumn":23},{"ruleId":"2948","severity":1,"message":"3221","line":662,"column":21,"nodeType":"2924","messageId":"2950","endLine":662,"endColumn":22},{"ruleId":"2948","severity":1,"message":"3221","line":671,"column":21,"nodeType":"2924","messageId":"2950","endLine":671,"endColumn":22},{"ruleId":"2948","severity":1,"message":"3221","line":680,"column":25,"nodeType":"2924","messageId":"2950","endLine":680,"endColumn":26},{"ruleId":"2948","severity":1,"message":"3221","line":690,"column":25,"nodeType":"2924","messageId":"2950","endLine":690,"endColumn":26},{"ruleId":"2948","severity":1,"message":"3221","line":701,"column":21,"nodeType":"2924","messageId":"2950","endLine":701,"endColumn":22},{"ruleId":"2922","severity":1,"message":"2965","line":100,"column":9,"nodeType":"2924","messageId":"2925","endLine":100,"endColumn":13},{"ruleId":"2922","severity":1,"message":"2987","line":237,"column":19,"nodeType":"2924","messageId":"2925","endLine":237,"endColumn":28},{"ruleId":"2922","severity":1,"message":"2965","line":83,"column":9,"nodeType":"2924","messageId":"2925","endLine":83,"endColumn":13},{"ruleId":"2922","severity":1,"message":"2987","line":224,"column":19,"nodeType":"2924","messageId":"2925","endLine":224,"endColumn":28},{"ruleId":"3245","severity":1,"message":"3246","line":439,"column":79,"nodeType":"2995","endLine":439,"endColumn":113},{"ruleId":"2922","severity":1,"message":"3254","line":128,"column":11,"nodeType":"2924","messageId":"2925","endLine":128,"endColumn":18},{"ruleId":"2922","severity":1,"message":"2944","line":144,"column":13,"nodeType":"2924","messageId":"2925","endLine":144,"endColumn":21},{"ruleId":"2945","severity":1,"message":"2946","line":153,"column":29,"nodeType":"2939","endLine":153,"endColumn":89},{"ruleId":"2937","severity":1,"message":"2938","line":156,"column":34,"nodeType":"2939","endLine":156,"endColumn":100},{"ruleId":"2937","severity":1,"message":"2938","line":158,"column":34,"nodeType":"2939","endLine":158,"endColumn":95},{"ruleId":"2937","severity":1,"message":"2938","line":166,"column":63,"nodeType":"2939","endLine":166,"endColumn":99},{"ruleId":"2945","severity":1,"message":"2946","line":172,"column":29,"nodeType":"2939","endLine":172,"endColumn":89},{"ruleId":"2960","severity":1,"message":"2961","line":4,"column":5,"nodeType":"2962","messageId":"2963","endLine":7,"endColumn":6},{"ruleId":"2937","severity":1,"message":"2938","line":9,"column":19,"nodeType":"2939","endLine":9,"endColumn":83},{"ruleId":"2922","severity":1,"message":"2923","line":2,"column":8,"nodeType":"2924","messageId":"2925","endLine":2,"endColumn":16},{"ruleId":"2922","severity":1,"message":"2926","line":7,"column":8,"nodeType":"2924","messageId":"2925","endLine":7,"endColumn":13},{"ruleId":"3182","replacedBy":"3255"},{"ruleId":"3184","replacedBy":"3256"},{"ruleId":"2922","severity":1,"message":"2927","line":77,"column":9,"nodeType":"2924","messageId":"2925","endLine":77,"endColumn":14},{"ruleId":"2922","severity":1,"message":"3003","line":287,"column":10,"nodeType":"2924","messageId":"2925","endLine":287,"endColumn":14},{"ruleId":"2922","severity":1,"message":"3003","line":306,"column":17,"nodeType":"2924","messageId":"2925","endLine":306,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3003","line":407,"column":13,"nodeType":"2924","messageId":"2925","endLine":407,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3004","line":494,"column":9,"nodeType":"2924","messageId":"2925","endLine":494,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3005","line":513,"column":11,"nodeType":"2924","messageId":"2925","endLine":513,"endColumn":27},{"ruleId":"2922","severity":1,"message":"3006","line":514,"column":11,"nodeType":"2924","messageId":"2925","endLine":514,"endColumn":28},{"ruleId":"2922","severity":1,"message":"3007","line":516,"column":9,"nodeType":"2924","messageId":"2925","endLine":516,"endColumn":16},{"ruleId":"2922","severity":1,"message":"2944","line":129,"column":13,"nodeType":"2924","messageId":"2925","endLine":129,"endColumn":21},{"ruleId":"2945","severity":1,"message":"2946","line":137,"column":25,"nodeType":"2939","endLine":137,"endColumn":85},{"ruleId":"2937","severity":1,"message":"2938","line":137,"column":88,"nodeType":"2939","endLine":137,"endColumn":156},{"ruleId":"2937","severity":1,"message":"2938","line":142,"column":59,"nodeType":"2939","endLine":142,"endColumn":95},{"ruleId":"2945","severity":1,"message":"2946","line":146,"column":25,"nodeType":"2939","endLine":146,"endColumn":85},{"ruleId":"2922","severity":1,"message":"3257","line":15,"column":8,"nodeType":"2924","messageId":"2925","endLine":15,"endColumn":20},{"ruleId":"2922","severity":1,"message":"2964","line":151,"column":9,"nodeType":"2924","messageId":"2925","endLine":151,"endColumn":14},{"ruleId":"2922","severity":1,"message":"2965","line":891,"column":13,"nodeType":"2924","messageId":"2925","endLine":891,"endColumn":17},{"ruleId":"2940","severity":1,"message":"2941","line":1189,"column":37,"nodeType":"2939","endLine":1189,"endColumn":40},{"ruleId":"2940","severity":1,"message":"2941","line":1190,"column":37,"nodeType":"2939","endLine":1190,"endColumn":40},{"ruleId":"2922","severity":1,"message":"3011","line":280,"column":9,"nodeType":"2924","messageId":"2925","endLine":280,"endColumn":20},{"ruleId":"2996","severity":1,"message":"3012","line":331,"column":45,"nodeType":"2998","messageId":"2999","endLine":331,"endColumn":46,"suggestions":"3258"},{"ruleId":"2996","severity":1,"message":"3012","line":339,"column":49,"nodeType":"2998","messageId":"2999","endLine":339,"endColumn":50,"suggestions":"3259"},{"ruleId":"2922","severity":1,"message":"3010","line":448,"column":11,"nodeType":"2924","messageId":"2925","endLine":448,"endColumn":16},{"ruleId":"2922","severity":1,"message":"3003","line":659,"column":17,"nodeType":"2924","messageId":"2925","endLine":659,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3003","line":738,"column":15,"nodeType":"2924","messageId":"2925","endLine":738,"endColumn":19},{"ruleId":"2922","severity":1,"message":"3015","line":784,"column":9,"nodeType":"2924","messageId":"2925","endLine":784,"endColumn":14},{"ruleId":"2922","severity":1,"message":"3016","line":877,"column":11,"nodeType":"2924","messageId":"2925","endLine":877,"endColumn":13},{"ruleId":"2996","severity":1,"message":"3012","line":960,"column":49,"nodeType":"2998","messageId":"2999","endLine":960,"endColumn":50,"suggestions":"3260"},{"ruleId":"2922","severity":1,"message":"3015","line":962,"column":9,"nodeType":"2924","messageId":"2925","endLine":962,"endColumn":14},{"ruleId":"2922","severity":1,"message":"3018","line":1038,"column":9,"nodeType":"2924","messageId":"2925","endLine":1038,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3005","line":1066,"column":11,"nodeType":"2924","messageId":"2925","endLine":1066,"endColumn":27},{"ruleId":"2922","severity":1,"message":"3006","line":1067,"column":11,"nodeType":"2924","messageId":"2925","endLine":1067,"endColumn":28},{"ruleId":"2922","severity":1,"message":"3019","line":1068,"column":9,"nodeType":"2924","messageId":"2925","endLine":1068,"endColumn":19},{"ruleId":"2922","severity":1,"message":"3008","line":54,"column":15,"nodeType":"2924","messageId":"2925","endLine":54,"endColumn":23},{"ruleId":"2922","severity":1,"message":"3009","line":56,"column":13,"nodeType":"2924","messageId":"2925","endLine":56,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3010","line":76,"column":21,"nodeType":"2924","messageId":"2925","endLine":76,"endColumn":26},{"ruleId":"2937","severity":1,"message":"2938","line":234,"column":31,"nodeType":"2939","endLine":234,"endColumn":143},{"ruleId":"2993","severity":1,"message":"2994","line":257,"column":43,"nodeType":"2995","endLine":257,"endColumn":125},{"ruleId":"2993","severity":1,"message":"2994","line":263,"column":39,"nodeType":"2995","endLine":263,"endColumn":113},{"ruleId":"2993","severity":1,"message":"2994","line":268,"column":39,"nodeType":"2995","endLine":268,"endColumn":110},{"ruleId":"2993","severity":1,"message":"2994","line":273,"column":41,"nodeType":"2995","endLine":273,"endColumn":110},{"ruleId":"2993","severity":1,"message":"2994","line":277,"column":41,"nodeType":"2995","endLine":277,"endColumn":130},{"ruleId":"2993","severity":1,"message":"2994","line":282,"column":41,"nodeType":"2995","endLine":282,"endColumn":113},{"ruleId":"2993","severity":1,"message":"2994","line":288,"column":41,"nodeType":"2995","endLine":288,"endColumn":110},{"ruleId":"2993","severity":1,"message":"2994","line":292,"column":39,"nodeType":"2995","endLine":292,"endColumn":122},{"ruleId":"2993","severity":1,"message":"2994","line":296,"column":41,"nodeType":"2995","endLine":296,"endColumn":114},{"ruleId":"2993","severity":1,"message":"2994","line":300,"column":41,"nodeType":"2995","endLine":300,"endColumn":117},{"ruleId":"2937","severity":1,"message":"2938","line":315,"column":45,"nodeType":"2939","endLine":315,"endColumn":90},{"ruleId":"2922","severity":1,"message":"2947","line":71,"column":13,"nodeType":"2924","messageId":"2925","endLine":71,"endColumn":18},{"ruleId":"2948","severity":1,"message":"2949","line":135,"column":9,"nodeType":"2924","messageId":"2950","endLine":135,"endColumn":17},{"ruleId":"2948","severity":1,"message":"2949","line":178,"column":9,"nodeType":"2924","messageId":"2950","endLine":178,"endColumn":17},{"ruleId":"2948","severity":1,"message":"2951","line":418,"column":19,"nodeType":"2924","messageId":"2950","endLine":418,"endColumn":25},{"ruleId":"2948","severity":1,"message":"2952","line":419,"column":19,"nodeType":"2924","messageId":"2950","endLine":419,"endColumn":25},{"ruleId":"2948","severity":1,"message":"2951","line":445,"column":21,"nodeType":"2924","messageId":"2950","endLine":445,"endColumn":27},{"ruleId":"2948","severity":1,"message":"2952","line":446,"column":21,"nodeType":"2924","messageId":"2950","endLine":446,"endColumn":27},{"ruleId":"2948","severity":1,"message":"2951","line":467,"column":21,"nodeType":"2924","messageId":"2950","endLine":467,"endColumn":27},{"ruleId":"2948","severity":1,"message":"2952","line":468,"column":21,"nodeType":"2924","messageId":"2950","endLine":468,"endColumn":27},{"ruleId":"2922","severity":1,"message":"2953","line":660,"column":9,"nodeType":"2924","messageId":"2925","endLine":660,"endColumn":27},{"ruleId":"2922","severity":1,"message":"2954","line":675,"column":11,"nodeType":"2924","messageId":"2925","endLine":675,"endColumn":18},{"ruleId":"2922","severity":1,"message":"2955","line":695,"column":9,"nodeType":"2924","messageId":"2925","endLine":695,"endColumn":16},{"ruleId":"2922","severity":1,"message":"2956","line":698,"column":8,"nodeType":"2924","messageId":"2925","endLine":698,"endColumn":14},{"ruleId":"2922","severity":1,"message":"2957","line":2,"column":8,"nodeType":"2924","messageId":"2925","endLine":2,"endColumn":17},{"ruleId":"2960","severity":1,"message":"2961","line":5,"column":5,"nodeType":"2962","messageId":"2963","endLine":8,"endColumn":6},{"ruleId":"2975","severity":1,"message":"2984","line":34,"column":7,"nodeType":"2977","messageId":"2978","endLine":34,"endColumn":15},{"ruleId":"2975","severity":1,"message":"2985","line":59,"column":7,"nodeType":"2977","messageId":"2978","endLine":59,"endColumn":26},{"ruleId":"2948","severity":1,"message":"2949","line":264,"column":11,"nodeType":"2924","messageId":"2950","endLine":264,"endColumn":19},{"ruleId":"2948","severity":1,"message":"2949","line":273,"column":11,"nodeType":"2924","messageId":"2950","endLine":273,"endColumn":19},{"ruleId":"2948","severity":1,"message":"2949","line":282,"column":11,"nodeType":"2924","messageId":"2950","endLine":282,"endColumn":19},{"ruleId":"2948","severity":1,"message":"2949","line":293,"column":11,"nodeType":"2924","messageId":"2950","endLine":293,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2986","line":623,"column":9,"nodeType":"2924","messageId":"2925","endLine":623,"endColumn":17},{"ruleId":"2922","severity":1,"message":"2987","line":816,"column":11,"nodeType":"2924","messageId":"2925","endLine":816,"endColumn":20},{"ruleId":"2922","severity":1,"message":"2988","line":829,"column":11,"nodeType":"2924","messageId":"2925","endLine":829,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2989","line":848,"column":9,"nodeType":"2924","messageId":"2925","endLine":848,"endColumn":10},{"ruleId":"2990","severity":1,"message":"2991","line":1002,"column":87,"nodeType":"2992","messageId":"2978","endLine":1002,"endColumn":89},{"ruleId":"2937","severity":1,"message":"2938","line":1008,"column":47,"nodeType":"2939","endLine":1008,"endColumn":216},{"ruleId":"2937","severity":1,"message":"2938","line":1021,"column":35,"nodeType":"2939","endLine":1021,"endColumn":115},{"ruleId":"2993","severity":1,"message":"2994","line":1268,"column":89,"nodeType":"2995","endLine":1268,"endColumn":190},{"ruleId":"2993","severity":1,"message":"2994","line":1276,"column":92,"nodeType":"2995","endLine":1276,"endColumn":196},{"ruleId":"2993","severity":1,"message":"2994","line":1284,"column":89,"nodeType":"2995","endLine":1284,"endColumn":191},{"ruleId":"2993","severity":1,"message":"2994","line":1292,"column":86,"nodeType":"2995","endLine":1292,"endColumn":185},{"ruleId":"2993","severity":1,"message":"2994","line":1300,"column":88,"nodeType":"2995","endLine":1300,"endColumn":189},{"ruleId":"2993","severity":1,"message":"2994","line":1308,"column":92,"nodeType":"2995","endLine":1308,"endColumn":197},{"ruleId":"2993","severity":1,"message":"2994","line":1316,"column":95,"nodeType":"2995","endLine":1316,"endColumn":203},{"ruleId":"2993","severity":1,"message":"2994","line":1324,"column":95,"nodeType":"2995","endLine":1324,"endColumn":203},{"ruleId":"2993","severity":1,"message":"2994","line":1332,"column":96,"nodeType":"2995","endLine":1332,"endColumn":205},{"ruleId":"2993","severity":1,"message":"2994","line":1340,"column":95,"nodeType":"2995","endLine":1340,"endColumn":203},{"ruleId":"2993","severity":1,"message":"2994","line":1846,"column":46,"nodeType":"2995","endLine":1846,"endColumn":157},{"ruleId":"2993","severity":1,"message":"2994","line":1853,"column":46,"nodeType":"2995","endLine":1853,"endColumn":159},{"ruleId":"2993","severity":1,"message":"2994","line":1861,"column":39,"nodeType":"2995","endLine":1861,"endColumn":150},{"ruleId":"2993","severity":1,"message":"2994","line":1876,"column":39,"nodeType":"2995","endLine":1876,"endColumn":147},{"ruleId":"2993","severity":1,"message":"2994","line":1883,"column":39,"nodeType":"2995","endLine":1883,"endColumn":149},{"ruleId":"2993","severity":1,"message":"2994","line":1890,"column":39,"nodeType":"2995","endLine":1890,"endColumn":147},{"ruleId":"2937","severity":1,"message":"2938","line":43,"column":37,"nodeType":"2939","endLine":43,"endColumn":72},{"ruleId":"2937","severity":1,"message":"2938","line":62,"column":37,"nodeType":"2939","endLine":62,"endColumn":72},{"ruleId":"2937","severity":1,"message":"2938","line":76,"column":39,"nodeType":"2939","endLine":76,"endColumn":73},{"ruleId":"2937","severity":1,"message":"2938","line":90,"column":37,"nodeType":"2939","endLine":90,"endColumn":75},{"ruleId":"2937","severity":1,"message":"2938","line":105,"column":37,"nodeType":"2939","endLine":105,"endColumn":76},{"ruleId":"2937","severity":1,"message":"2938","line":126,"column":37,"nodeType":"2939","endLine":126,"endColumn":72},{"ruleId":"2945","severity":1,"message":"2946","line":187,"column":43,"nodeType":"2939","endLine":187,"endColumn":185},{"ruleId":"2922","severity":1,"message":"2944","line":122,"column":13,"nodeType":"2924","messageId":"2925","endLine":122,"endColumn":21},{"ruleId":"2945","severity":1,"message":"2946","line":130,"column":25,"nodeType":"2939","endLine":130,"endColumn":85},{"ruleId":"2937","severity":1,"message":"2938","line":130,"column":88,"nodeType":"2939","endLine":130,"endColumn":154},{"ruleId":"2937","severity":1,"message":"2938","line":135,"column":59,"nodeType":"2939","endLine":135,"endColumn":95},{"ruleId":"2945","severity":1,"message":"2946","line":140,"column":25,"nodeType":"2939","endLine":140,"endColumn":85},{"ruleId":"2975","severity":1,"message":"2976","line":41,"column":12,"nodeType":"2977","messageId":"2978","endLine":41,"endColumn":17},{"ruleId":"2975","severity":1,"message":"2979","line":42,"column":12,"nodeType":"2977","messageId":"2978","endLine":42,"endColumn":15},{"ruleId":"2922","severity":1,"message":"2964","line":275,"column":13,"nodeType":"2924","messageId":"2925","endLine":275,"endColumn":18},{"ruleId":"2922","severity":1,"message":"2980","line":478,"column":23,"nodeType":"2924","messageId":"2925","endLine":478,"endColumn":34},{"ruleId":"2937","severity":1,"message":"2938","line":506,"column":57,"nodeType":"2939","endLine":506,"endColumn":92},{"ruleId":"2937","severity":1,"message":"2938","line":508,"column":57,"nodeType":"2939","endLine":508,"endColumn":95},{"ruleId":"2937","severity":1,"message":"2938","line":529,"column":57,"nodeType":"2939","endLine":529,"endColumn":92},{"ruleId":"2937","severity":1,"message":"2938","line":531,"column":57,"nodeType":"2939","endLine":531,"endColumn":95},{"ruleId":"2937","severity":1,"message":"2938","line":551,"column":57,"nodeType":"2939","endLine":551,"endColumn":92},{"ruleId":"2937","severity":1,"message":"2938","line":553,"column":57,"nodeType":"2939","endLine":553,"endColumn":95},{"ruleId":"2937","severity":1,"message":"2938","line":582,"column":65,"nodeType":"2939","endLine":582,"endColumn":100},{"ruleId":"2937","severity":1,"message":"2938","line":598,"column":65,"nodeType":"2939","endLine":598,"endColumn":100},{"ruleId":"2937","severity":1,"message":"2938","line":615,"column":65,"nodeType":"2939","endLine":615,"endColumn":100},{"ruleId":"2975","severity":1,"message":"2976","line":43,"column":12,"nodeType":"2977","messageId":"2978","endLine":43,"endColumn":17},{"ruleId":"2975","severity":1,"message":"2979","line":44,"column":12,"nodeType":"2977","messageId":"2978","endLine":44,"endColumn":15},{"ruleId":"2996","severity":1,"message":"2997","line":323,"column":73,"nodeType":"2998","messageId":"2999","endLine":323,"endColumn":74,"suggestions":"3261"},{"ruleId":"2996","severity":1,"message":"2997","line":324,"column":73,"nodeType":"2998","messageId":"2999","endLine":324,"endColumn":74,"suggestions":"3262"},{"ruleId":"2996","severity":1,"message":"2997","line":325,"column":73,"nodeType":"2998","messageId":"2999","endLine":325,"endColumn":74,"suggestions":"3263"},{"ruleId":"2922","severity":1,"message":"2980","line":484,"column":23,"nodeType":"2924","messageId":"2925","endLine":484,"endColumn":34},{"ruleId":"2937","severity":1,"message":"2938","line":512,"column":57,"nodeType":"2939","endLine":512,"endColumn":92},{"ruleId":"2937","severity":1,"message":"2938","line":514,"column":57,"nodeType":"2939","endLine":514,"endColumn":95},{"ruleId":"2937","severity":1,"message":"2938","line":533,"column":57,"nodeType":"2939","endLine":533,"endColumn":92},{"ruleId":"2937","severity":1,"message":"2938","line":535,"column":57,"nodeType":"2939","endLine":535,"endColumn":95},{"ruleId":"2937","severity":1,"message":"2938","line":554,"column":57,"nodeType":"2939","endLine":554,"endColumn":92},{"ruleId":"2937","severity":1,"message":"2938","line":556,"column":57,"nodeType":"2939","endLine":556,"endColumn":95},{"ruleId":"2937","severity":1,"message":"2938","line":585,"column":65,"nodeType":"2939","endLine":585,"endColumn":100},{"ruleId":"2937","severity":1,"message":"2938","line":601,"column":65,"nodeType":"2939","endLine":601,"endColumn":100},{"ruleId":"2937","severity":1,"message":"2938","line":617,"column":65,"nodeType":"2939","endLine":617,"endColumn":100},{"ruleId":"2922","severity":1,"message":"2966","line":132,"column":9,"nodeType":"2924","messageId":"2925","endLine":132,"endColumn":20},{"ruleId":"2922","severity":1,"message":"2967","line":134,"column":10,"nodeType":"2924","messageId":"2925","endLine":134,"endColumn":15},{"ruleId":"2922","severity":1,"message":"2969","line":409,"column":15,"nodeType":"2924","messageId":"2925","endLine":409,"endColumn":23},{"ruleId":"2922","severity":1,"message":"2970","line":505,"column":11,"nodeType":"2924","messageId":"2925","endLine":505,"endColumn":19},{"ruleId":"2948","severity":1,"message":"2951","line":645,"column":13,"nodeType":"2924","messageId":"2950","endLine":645,"endColumn":19},{"ruleId":"2948","severity":1,"message":"2952","line":646,"column":13,"nodeType":"2924","messageId":"2950","endLine":646,"endColumn":19},{"ruleId":"2948","severity":1,"message":"2951","line":660,"column":13,"nodeType":"2924","messageId":"2950","endLine":660,"endColumn":19},{"ruleId":"2948","severity":1,"message":"2952","line":661,"column":13,"nodeType":"2924","messageId":"2950","endLine":661,"endColumn":19},{"ruleId":"2948","severity":1,"message":"2951","line":671,"column":13,"nodeType":"2924","messageId":"2950","endLine":671,"endColumn":19},{"ruleId":"2948","severity":1,"message":"2952","line":672,"column":13,"nodeType":"2924","messageId":"2950","endLine":672,"endColumn":19},{"ruleId":"2948","severity":1,"message":"2971","line":673,"column":13,"nodeType":"2924","messageId":"2950","endLine":673,"endColumn":16},{"ruleId":"2948","severity":1,"message":"2972","line":674,"column":13,"nodeType":"2924","messageId":"2950","endLine":674,"endColumn":16},{"ruleId":"2948","severity":1,"message":"2951","line":706,"column":13,"nodeType":"2924","messageId":"2950","endLine":706,"endColumn":19},{"ruleId":"2948","severity":1,"message":"2952","line":707,"column":13,"nodeType":"2924","messageId":"2950","endLine":707,"endColumn":19},{"ruleId":"2948","severity":1,"message":"2971","line":708,"column":13,"nodeType":"2924","messageId":"2950","endLine":708,"endColumn":16},{"ruleId":"2948","severity":1,"message":"2972","line":709,"column":13,"nodeType":"2924","messageId":"2950","endLine":709,"endColumn":16},{"ruleId":"2948","severity":1,"message":"2951","line":718,"column":13,"nodeType":"2924","messageId":"2950","endLine":718,"endColumn":19},{"ruleId":"2948","severity":1,"message":"2952","line":719,"column":13,"nodeType":"2924","messageId":"2950","endLine":719,"endColumn":19},{"ruleId":"2948","severity":1,"message":"2951","line":733,"column":13,"nodeType":"2924","messageId":"2950","endLine":733,"endColumn":19},{"ruleId":"2948","severity":1,"message":"2952","line":734,"column":13,"nodeType":"2924","messageId":"2950","endLine":734,"endColumn":19},{"ruleId":"2948","severity":1,"message":"2951","line":744,"column":13,"nodeType":"2924","messageId":"2950","endLine":744,"endColumn":19},{"ruleId":"2948","severity":1,"message":"2952","line":745,"column":13,"nodeType":"2924","messageId":"2950","endLine":745,"endColumn":19},{"ruleId":"2948","severity":1,"message":"2971","line":746,"column":13,"nodeType":"2924","messageId":"2950","endLine":746,"endColumn":16},{"ruleId":"2948","severity":1,"message":"2972","line":747,"column":13,"nodeType":"2924","messageId":"2950","endLine":747,"endColumn":16},{"ruleId":"2922","severity":1,"message":"2973","line":899,"column":9,"nodeType":"2924","messageId":"2925","endLine":899,"endColumn":13},{"ruleId":"2922","severity":1,"message":"3108","line":931,"column":15,"nodeType":"2924","messageId":"2925","endLine":931,"endColumn":19},{"ruleId":"2922","severity":1,"message":"3121","line":29,"column":8,"nodeType":"2924","messageId":"2925","endLine":29,"endColumn":23},{"ruleId":"2922","severity":1,"message":"3122","line":46,"column":8,"nodeType":"2924","messageId":"2925","endLine":46,"endColumn":15},{"ruleId":"2975","severity":1,"message":"2984","line":82,"column":7,"nodeType":"2977","messageId":"2978","endLine":82,"endColumn":15},{"ruleId":"2922","severity":1,"message":"2965","line":121,"column":11,"nodeType":"2924","messageId":"2925","endLine":121,"endColumn":15},{"ruleId":"2990","severity":1,"message":"3123","line":300,"column":23,"nodeType":"2992","messageId":"2978","endLine":300,"endColumn":25},{"ruleId":"2922","severity":1,"message":"2944","line":336,"column":9,"nodeType":"2924","messageId":"2925","endLine":336,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3116","line":349,"column":9,"nodeType":"2924","messageId":"2925","endLine":349,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3124","line":352,"column":9,"nodeType":"2924","messageId":"2925","endLine":352,"endColumn":17},{"ruleId":"2922","severity":1,"message":"2989","line":396,"column":9,"nodeType":"2924","messageId":"2925","endLine":396,"endColumn":10},{"ruleId":"2945","severity":1,"message":"2946","line":558,"column":27,"nodeType":"2939","endLine":558,"endColumn":166},{"ruleId":"2945","severity":1,"message":"2946","line":564,"column":27,"nodeType":"2939","endLine":564,"endColumn":135},{"ruleId":"2945","severity":1,"message":"2946","line":576,"column":29,"nodeType":"2939","endLine":576,"endColumn":151},{"ruleId":"2922","severity":1,"message":"3125","line":600,"column":5,"nodeType":"2924","messageId":"2925","endLine":600,"endColumn":20},{"ruleId":"2937","severity":1,"message":"2938","line":615,"column":23,"nodeType":"2939","endLine":615,"endColumn":86},{"ruleId":"2937","severity":1,"message":"2938","line":617,"column":25,"nodeType":"2939","endLine":617,"endColumn":125},{"ruleId":"2937","severity":1,"message":"2938","line":621,"column":27,"nodeType":"2939","endLine":621,"endColumn":90},{"ruleId":"2945","severity":1,"message":"2946","line":634,"column":31,"nodeType":"2939","endLine":634,"endColumn":161},{"ruleId":"2937","severity":1,"message":"2938","line":638,"column":37,"nodeType":"2939","endLine":638,"endColumn":100},{"ruleId":"2937","severity":1,"message":"2938","line":640,"column":39,"nodeType":"2939","endLine":640,"endColumn":126},{"ruleId":"2937","severity":1,"message":"2938","line":644,"column":41,"nodeType":"2939","endLine":644,"endColumn":104},{"ruleId":"2922","severity":1,"message":"3126","line":668,"column":5,"nodeType":"2924","messageId":"2925","endLine":668,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3127","line":747,"column":9,"nodeType":"2924","messageId":"2925","endLine":747,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3128","line":752,"column":11,"nodeType":"2924","messageId":"2925","endLine":752,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3129","line":755,"column":11,"nodeType":"2924","messageId":"2925","endLine":755,"endColumn":26},{"ruleId":"2937","severity":1,"message":"2938","line":805,"column":81,"nodeType":"2939","endLine":805,"endColumn":117},{"ruleId":"2945","severity":1,"message":"2946","line":833,"column":35,"nodeType":"2939","endLine":833,"endColumn":159},{"ruleId":"2937","severity":1,"message":"2938","line":837,"column":41,"nodeType":"2939","endLine":837,"endColumn":104},{"ruleId":"2937","severity":1,"message":"2938","line":839,"column":41,"nodeType":"2939","endLine":839,"endColumn":126},{"ruleId":"2937","severity":1,"message":"2938","line":843,"column":41,"nodeType":"2939","endLine":843,"endColumn":104},{"ruleId":"2937","severity":1,"message":"2938","line":862,"column":45,"nodeType":"2939","endLine":862,"endColumn":108},{"ruleId":"2937","severity":1,"message":"2938","line":864,"column":47,"nodeType":"2939","endLine":864,"endColumn":132},{"ruleId":"2937","severity":1,"message":"2938","line":868,"column":49,"nodeType":"2939","endLine":868,"endColumn":112},{"ruleId":"2945","severity":1,"message":"2946","line":880,"column":53,"nodeType":"2939","endLine":880,"endColumn":180},{"ruleId":"2937","severity":1,"message":"2938","line":884,"column":59,"nodeType":"2939","endLine":884,"endColumn":122},{"ruleId":"2937","severity":1,"message":"2938","line":886,"column":61,"nodeType":"2939","endLine":886,"endColumn":145},{"ruleId":"2937","severity":1,"message":"2938","line":890,"column":63,"nodeType":"2939","endLine":890,"endColumn":126},{"ruleId":"3130","severity":1,"message":"3131","line":916,"column":35,"nodeType":"2939","endLine":917,"endColumn":83},{"ruleId":"3130","severity":1,"message":"3131","line":925,"column":41,"nodeType":"2939","endLine":925,"endColumn":156},{"ruleId":"3130","severity":1,"message":"3131","line":931,"column":39,"nodeType":"2939","endLine":931,"endColumn":157},{"ruleId":"2945","severity":1,"message":"2946","line":1061,"column":37,"nodeType":"2939","endLine":1062,"endColumn":83},{"ruleId":"2945","severity":1,"message":"2946","line":1067,"column":39,"nodeType":"2939","endLine":1069,"endColumn":83},{"ruleId":"2945","severity":1,"message":"2946","line":1073,"column":39,"nodeType":"2939","endLine":1075,"endColumn":83},{"ruleId":"2937","severity":1,"message":"2938","line":1094,"column":43,"nodeType":"2939","endLine":1094,"endColumn":106},{"ruleId":"2993","severity":1,"message":"2994","line":1214,"column":79,"nodeType":"2995","endLine":1214,"endColumn":94},{"ruleId":"2937","severity":1,"message":"2938","line":1250,"column":23,"nodeType":"2939","endLine":1250,"endColumn":48},{"ruleId":"3132","severity":1,"message":"3133","line":1327,"column":15,"nodeType":"2939","endLine":1327,"endColumn":73},{"ruleId":"3134","severity":1,"message":"3135","line":1346,"column":1,"nodeType":"3136","messageId":"3137","endLine":1346,"endColumn":183},{"ruleId":"2922","severity":1,"message":"3009","line":604,"column":19,"nodeType":"2924","messageId":"2925","endLine":604,"endColumn":24},{"ruleId":"3102","severity":1,"message":"3103","line":604,"column":50,"nodeType":"3104","messageId":"3105","endLine":604,"endColumn":154},{"ruleId":"2922","severity":1,"message":"3009","line":614,"column":19,"nodeType":"2924","messageId":"2925","endLine":614,"endColumn":24},{"ruleId":"3102","severity":1,"message":"3103","line":614,"column":50,"nodeType":"3104","messageId":"3105","endLine":614,"endColumn":152},{"ruleId":"2922","severity":1,"message":"3009","line":624,"column":19,"nodeType":"2924","messageId":"2925","endLine":624,"endColumn":24},{"ruleId":"3102","severity":1,"message":"3103","line":624,"column":50,"nodeType":"3104","messageId":"3105","endLine":624,"endColumn":156},{"ruleId":"2922","severity":1,"message":"3009","line":633,"column":19,"nodeType":"2924","messageId":"2925","endLine":633,"endColumn":24},{"ruleId":"3102","severity":1,"message":"3103","line":633,"column":50,"nodeType":"3104","messageId":"3105","endLine":633,"endColumn":151},{"ruleId":"2922","severity":1,"message":"3009","line":641,"column":19,"nodeType":"2924","messageId":"2925","endLine":641,"endColumn":24},{"ruleId":"3102","severity":1,"message":"3103","line":641,"column":50,"nodeType":"3104","messageId":"3105","endLine":641,"endColumn":153},{"ruleId":"2922","severity":1,"message":"3009","line":654,"column":17,"nodeType":"2924","messageId":"2925","endLine":654,"endColumn":22},{"ruleId":"3102","severity":1,"message":"3106","line":654,"column":48,"nodeType":"3104","messageId":"3105","endLine":654,"endColumn":103},{"ruleId":"2922","severity":1,"message":"3107","line":1179,"column":7,"nodeType":"2924","messageId":"2925","endLine":1179,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3107","line":1208,"column":7,"nodeType":"2924","messageId":"2925","endLine":1208,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3108","line":1234,"column":11,"nodeType":"2924","messageId":"2925","endLine":1234,"endColumn":15},{"ruleId":"2996","severity":1,"message":"3012","line":1592,"column":49,"nodeType":"2998","messageId":"2999","endLine":1592,"endColumn":50,"suggestions":"3264"},{"ruleId":"3110","severity":1,"message":"3111","line":1903,"column":34,"nodeType":"3104","messageId":"3112","endLine":1903,"endColumn":36},{"ruleId":"2937","severity":1,"message":"2938","line":2006,"column":41,"nodeType":"2939","endLine":2006,"endColumn":104},{"ruleId":"2937","severity":1,"message":"2938","line":2008,"column":41,"nodeType":"2939","endLine":2008,"endColumn":126},{"ruleId":"2975","severity":1,"message":"3113","line":2159,"column":7,"nodeType":"2977","messageId":"2978","endLine":2159,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2980","line":2317,"column":19,"nodeType":"2924","messageId":"2925","endLine":2317,"endColumn":30},{"ruleId":"2922","severity":1,"message":"3115","line":2324,"column":9,"nodeType":"2924","messageId":"2925","endLine":2324,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3116","line":2334,"column":9,"nodeType":"2924","messageId":"2925","endLine":2334,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3117","line":2341,"column":9,"nodeType":"2924","messageId":"2925","endLine":2341,"endColumn":30},{"ruleId":"2922","severity":1,"message":"3118","line":2344,"column":9,"nodeType":"2924","messageId":"2925","endLine":2344,"endColumn":29},{"ruleId":"2922","severity":1,"message":"3139","line":2345,"column":9,"nodeType":"2924","messageId":"2925","endLine":2345,"endColumn":23},{"ruleId":"2937","severity":1,"message":"2938","line":2458,"column":11,"nodeType":"2939","endLine":2458,"endColumn":43},{"ruleId":"2993","severity":1,"message":"2994","line":2476,"column":15,"nodeType":"2995","endLine":2476,"endColumn":63},{"ruleId":"2937","severity":1,"message":"2938","line":2511,"column":37,"nodeType":"2939","endLine":2511,"endColumn":126},{"ruleId":"2937","severity":1,"message":"2938","line":2539,"column":41,"nodeType":"2939","endLine":2539,"endColumn":130},{"ruleId":"2922","severity":1,"message":"3120","line":2566,"column":5,"nodeType":"2924","messageId":"2925","endLine":2566,"endColumn":13},{"ruleId":"2937","severity":1,"message":"2938","line":2569,"column":11,"nodeType":"2939","endLine":2569,"endColumn":43},{"ruleId":"2993","severity":1,"message":"2994","line":2580,"column":15,"nodeType":"2995","endLine":2580,"endColumn":63},{"ruleId":"2937","severity":1,"message":"2938","line":2623,"column":63,"nodeType":"2939","endLine":2623,"endColumn":99},{"ruleId":"2937","severity":1,"message":"2938","line":2629,"column":29,"nodeType":"2939","endLine":2629,"endColumn":92},{"ruleId":"2937","severity":1,"message":"2938","line":2913,"column":79,"nodeType":"2939","endLine":2913,"endColumn":142},{"ruleId":"2937","severity":1,"message":"2938","line":2915,"column":81,"nodeType":"2939","endLine":2915,"endColumn":166},{"ruleId":"2937","severity":1,"message":"2938","line":2919,"column":83,"nodeType":"2939","endLine":2919,"endColumn":146},{"ruleId":"2937","severity":1,"message":"2938","line":2962,"column":81,"nodeType":"2939","endLine":2962,"endColumn":144},{"ruleId":"2937","severity":1,"message":"2938","line":2964,"column":83,"nodeType":"2939","endLine":2964,"endColumn":168},{"ruleId":"2937","severity":1,"message":"2938","line":2968,"column":85,"nodeType":"2939","endLine":2968,"endColumn":148},{"ruleId":"2937","severity":1,"message":"2938","line":3026,"column":99,"nodeType":"2939","endLine":3026,"endColumn":162},{"ruleId":"2937","severity":1,"message":"2938","line":3028,"column":101,"nodeType":"2939","endLine":3028,"endColumn":185},{"ruleId":"2937","severity":1,"message":"2938","line":3032,"column":103,"nodeType":"2939","endLine":3032,"endColumn":166},{"ruleId":"2937","severity":1,"message":"2938","line":3091,"column":83,"nodeType":"2939","endLine":3091,"endColumn":146},{"ruleId":"2937","severity":1,"message":"2938","line":3093,"column":83,"nodeType":"2939","endLine":3093,"endColumn":168},{"ruleId":"2993","severity":1,"message":"2994","line":3308,"column":63,"nodeType":"2995","endLine":3308,"endColumn":111},{"ruleId":"2993","severity":1,"message":"2994","line":3314,"column":65,"nodeType":"2995","endLine":3314,"endColumn":113},{"ruleId":"2993","severity":1,"message":"2994","line":3319,"column":65,"nodeType":"2995","endLine":3319,"endColumn":113},{"ruleId":"2993","severity":1,"message":"2994","line":3766,"column":19,"nodeType":"2995","endLine":3766,"endColumn":198},{"ruleId":"2922","severity":1,"message":"3147","line":1,"column":28,"nodeType":"2924","messageId":"2925","endLine":1,"endColumn":36},{"ruleId":"2922","severity":1,"message":"3148","line":1,"column":38,"nodeType":"2924","messageId":"2925","endLine":1,"endColumn":42},{"ruleId":"2922","severity":1,"message":"2957","line":2,"column":8,"nodeType":"2924","messageId":"2925","endLine":2,"endColumn":17},{"ruleId":"2922","severity":1,"message":"2958","line":4,"column":10,"nodeType":"2924","messageId":"2925","endLine":4,"endColumn":14},{"ruleId":"2922","severity":1,"message":"2959","line":4,"column":15,"nodeType":"2924","messageId":"2925","endLine":4,"endColumn":22},{"ruleId":"2922","severity":1,"message":"2928","line":4,"column":24,"nodeType":"2924","messageId":"2925","endLine":4,"endColumn":29},{"ruleId":"2922","severity":1,"message":"2929","line":4,"column":48,"nodeType":"2924","messageId":"2925","endLine":4,"endColumn":54},{"ruleId":"2922","severity":1,"message":"2930","line":4,"column":56,"nodeType":"2924","messageId":"2925","endLine":4,"endColumn":62},{"ruleId":"2922","severity":1,"message":"3021","line":6,"column":8,"nodeType":"2924","messageId":"2925","endLine":6,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3149","line":7,"column":10,"nodeType":"2924","messageId":"2925","endLine":7,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3150","line":7,"column":20,"nodeType":"2924","messageId":"2925","endLine":7,"endColumn":35},{"ruleId":"2922","severity":1,"message":"3151","line":38,"column":14,"nodeType":"2924","messageId":"2925","endLine":38,"endColumn":26},{"ruleId":"3102","severity":1,"message":"3152","line":201,"column":68,"nodeType":"3104","messageId":"3105","endLine":201,"endColumn":90},{"ruleId":"2922","severity":1,"message":"3153","line":263,"column":31,"nodeType":"2924","messageId":"2925","endLine":263,"endColumn":39},{"ruleId":"2922","severity":1,"message":"3154","line":436,"column":19,"nodeType":"2924","messageId":"2925","endLine":436,"endColumn":25},{"ruleId":"3155","severity":1,"message":"3156","line":519,"column":21,"nodeType":"2939","endLine":519,"endColumn":67},{"ruleId":"2922","severity":1,"message":"2957","line":3,"column":8,"nodeType":"2924","messageId":"2925","endLine":3,"endColumn":17},{"ruleId":"2922","severity":1,"message":"2928","line":4,"column":25,"nodeType":"2924","messageId":"2925","endLine":4,"endColumn":30},{"ruleId":"2922","severity":1,"message":"2929","line":4,"column":49,"nodeType":"2924","messageId":"2925","endLine":4,"endColumn":55},{"ruleId":"2922","severity":1,"message":"2930","line":4,"column":57,"nodeType":"2924","messageId":"2925","endLine":4,"endColumn":63},{"ruleId":"2922","severity":1,"message":"3020","line":4,"column":65,"nodeType":"2924","messageId":"2925","endLine":4,"endColumn":73},{"ruleId":"2922","severity":1,"message":"2931","line":5,"column":10,"nodeType":"2924","messageId":"2925","endLine":5,"endColumn":13},{"ruleId":"2922","severity":1,"message":"2932","line":5,"column":15,"nodeType":"2924","messageId":"2925","endLine":5,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3021","line":7,"column":8,"nodeType":"2924","messageId":"2925","endLine":7,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3022","line":8,"column":8,"nodeType":"2924","messageId":"2925","endLine":8,"endColumn":25},{"ruleId":"2922","severity":1,"message":"3023","line":9,"column":8,"nodeType":"2924","messageId":"2925","endLine":9,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3024","line":10,"column":8,"nodeType":"2924","messageId":"2925","endLine":10,"endColumn":22},{"ruleId":"2922","severity":1,"message":"3025","line":21,"column":8,"nodeType":"2924","messageId":"2925","endLine":21,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3026","line":25,"column":8,"nodeType":"2924","messageId":"2925","endLine":25,"endColumn":20},{"ruleId":"2922","severity":1,"message":"3027","line":27,"column":8,"nodeType":"2924","messageId":"2925","endLine":27,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3028","line":28,"column":8,"nodeType":"2924","messageId":"2925","endLine":28,"endColumn":29},{"ruleId":"2922","severity":1,"message":"3029","line":29,"column":8,"nodeType":"2924","messageId":"2925","endLine":29,"endColumn":20},{"ruleId":"2922","severity":1,"message":"3030","line":30,"column":8,"nodeType":"2924","messageId":"2925","endLine":30,"endColumn":15},{"ruleId":"2922","severity":1,"message":"3031","line":31,"column":8,"nodeType":"2924","messageId":"2925","endLine":31,"endColumn":22},{"ruleId":"2922","severity":1,"message":"3032","line":32,"column":8,"nodeType":"2924","messageId":"2925","endLine":32,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3033","line":33,"column":8,"nodeType":"2924","messageId":"2925","endLine":33,"endColumn":16},{"ruleId":"2922","severity":1,"message":"3034","line":34,"column":8,"nodeType":"2924","messageId":"2925","endLine":34,"endColumn":19},{"ruleId":"2922","severity":1,"message":"3035","line":36,"column":8,"nodeType":"2924","messageId":"2925","endLine":36,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3036","line":37,"column":8,"nodeType":"2924","messageId":"2925","endLine":37,"endColumn":28},{"ruleId":"2922","severity":1,"message":"3037","line":40,"column":8,"nodeType":"2924","messageId":"2925","endLine":40,"endColumn":20},{"ruleId":"2922","severity":1,"message":"3038","line":44,"column":8,"nodeType":"2924","messageId":"2925","endLine":44,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3039","line":45,"column":8,"nodeType":"2924","messageId":"2925","endLine":45,"endColumn":19},{"ruleId":"2922","severity":1,"message":"3040","line":46,"column":8,"nodeType":"2924","messageId":"2925","endLine":46,"endColumn":19},{"ruleId":"2922","severity":1,"message":"3041","line":49,"column":8,"nodeType":"2924","messageId":"2925","endLine":49,"endColumn":13},{"ruleId":"2922","severity":1,"message":"3042","line":51,"column":8,"nodeType":"2924","messageId":"2925","endLine":51,"endColumn":23},{"ruleId":"2922","severity":1,"message":"3043","line":52,"column":8,"nodeType":"2924","messageId":"2925","endLine":52,"endColumn":20},{"ruleId":"2922","severity":1,"message":"3044","line":53,"column":8,"nodeType":"2924","messageId":"2925","endLine":53,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3045","line":54,"column":8,"nodeType":"2924","messageId":"2925","endLine":54,"endColumn":22},{"ruleId":"2922","severity":1,"message":"3046","line":55,"column":8,"nodeType":"2924","messageId":"2925","endLine":55,"endColumn":26},{"ruleId":"2922","severity":1,"message":"3047","line":56,"column":8,"nodeType":"2924","messageId":"2925","endLine":56,"endColumn":16},{"ruleId":"2922","severity":1,"message":"3048","line":58,"column":8,"nodeType":"2924","messageId":"2925","endLine":58,"endColumn":25},{"ruleId":"2922","severity":1,"message":"3049","line":59,"column":8,"nodeType":"2924","messageId":"2925","endLine":59,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3050","line":60,"column":8,"nodeType":"2924","messageId":"2925","endLine":60,"endColumn":29},{"ruleId":"2922","severity":1,"message":"3051","line":61,"column":8,"nodeType":"2924","messageId":"2925","endLine":61,"endColumn":32},{"ruleId":"2922","severity":1,"message":"3052","line":62,"column":8,"nodeType":"2924","messageId":"2925","endLine":62,"endColumn":31},{"ruleId":"2922","severity":1,"message":"3053","line":63,"column":8,"nodeType":"2924","messageId":"2925","endLine":63,"endColumn":19},{"ruleId":"2922","severity":1,"message":"3054","line":64,"column":8,"nodeType":"2924","messageId":"2925","endLine":64,"endColumn":9},{"ruleId":"2922","severity":1,"message":"3055","line":78,"column":8,"nodeType":"2924","messageId":"2925","endLine":78,"endColumn":25},{"ruleId":"2922","severity":1,"message":"3056","line":79,"column":8,"nodeType":"2924","messageId":"2925","endLine":79,"endColumn":27},{"ruleId":"2922","severity":1,"message":"3057","line":80,"column":8,"nodeType":"2924","messageId":"2925","endLine":80,"endColumn":26},{"ruleId":"2922","severity":1,"message":"3058","line":85,"column":8,"nodeType":"2924","messageId":"2925","endLine":85,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3059","line":86,"column":8,"nodeType":"2924","messageId":"2925","endLine":86,"endColumn":16},{"ruleId":"2922","severity":1,"message":"3060","line":94,"column":3,"nodeType":"2924","messageId":"2925","endLine":94,"endColumn":14},{"ruleId":"2922","severity":1,"message":"3061","line":95,"column":3,"nodeType":"2924","messageId":"2925","endLine":95,"endColumn":14},{"ruleId":"2922","severity":1,"message":"3062","line":96,"column":3,"nodeType":"2924","messageId":"2925","endLine":96,"endColumn":12},{"ruleId":"2922","severity":1,"message":"3063","line":97,"column":3,"nodeType":"2924","messageId":"2925","endLine":97,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3064","line":98,"column":3,"nodeType":"2924","messageId":"2925","endLine":98,"endColumn":15},{"ruleId":"2922","severity":1,"message":"3065","line":99,"column":3,"nodeType":"2924","messageId":"2925","endLine":99,"endColumn":11},{"ruleId":"2922","severity":1,"message":"2936","line":100,"column":3,"nodeType":"2924","messageId":"2925","endLine":100,"endColumn":12},{"ruleId":"2922","severity":1,"message":"3066","line":101,"column":3,"nodeType":"2924","messageId":"2925","endLine":101,"endColumn":15},{"ruleId":"2922","severity":1,"message":"3067","line":102,"column":3,"nodeType":"2924","messageId":"2925","endLine":102,"endColumn":12},{"ruleId":"2922","severity":1,"message":"3068","line":105,"column":3,"nodeType":"2924","messageId":"2925","endLine":105,"endColumn":10},{"ruleId":"2922","severity":1,"message":"3069","line":106,"column":3,"nodeType":"2924","messageId":"2925","endLine":106,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3070","line":107,"column":3,"nodeType":"2924","messageId":"2925","endLine":107,"endColumn":13},{"ruleId":"2922","severity":1,"message":"3071","line":108,"column":3,"nodeType":"2924","messageId":"2925","endLine":108,"endColumn":14},{"ruleId":"2922","severity":1,"message":"3072","line":112,"column":3,"nodeType":"2924","messageId":"2925","endLine":112,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3073","line":113,"column":3,"nodeType":"2924","messageId":"2925","endLine":113,"endColumn":23},{"ruleId":"2922","severity":1,"message":"3074","line":114,"column":3,"nodeType":"2924","messageId":"2925","endLine":114,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3075","line":115,"column":3,"nodeType":"2924","messageId":"2925","endLine":115,"endColumn":22},{"ruleId":"2922","severity":1,"message":"3076","line":116,"column":3,"nodeType":"2924","messageId":"2925","endLine":116,"endColumn":15},{"ruleId":"2922","severity":1,"message":"3077","line":117,"column":3,"nodeType":"2924","messageId":"2925","endLine":117,"endColumn":15},{"ruleId":"2922","severity":1,"message":"3078","line":118,"column":3,"nodeType":"2924","messageId":"2925","endLine":118,"endColumn":19},{"ruleId":"2922","severity":1,"message":"3079","line":119,"column":3,"nodeType":"2924","messageId":"2925","endLine":119,"endColumn":19},{"ruleId":"2922","severity":1,"message":"3080","line":124,"column":3,"nodeType":"2924","messageId":"2925","endLine":124,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3081","line":130,"column":3,"nodeType":"2924","messageId":"2925","endLine":130,"endColumn":16},{"ruleId":"2922","severity":1,"message":"3082","line":131,"column":3,"nodeType":"2924","messageId":"2925","endLine":131,"endColumn":16},{"ruleId":"2922","severity":1,"message":"3083","line":133,"column":3,"nodeType":"2924","messageId":"2925","endLine":133,"endColumn":20},{"ruleId":"2922","severity":1,"message":"3084","line":134,"column":3,"nodeType":"2924","messageId":"2925","endLine":134,"endColumn":25},{"ruleId":"2922","severity":1,"message":"3085","line":135,"column":3,"nodeType":"2924","messageId":"2925","endLine":135,"endColumn":20},{"ruleId":"2922","severity":1,"message":"3086","line":136,"column":3,"nodeType":"2924","messageId":"2925","endLine":136,"endColumn":19},{"ruleId":"2922","severity":1,"message":"3087","line":137,"column":3,"nodeType":"2924","messageId":"2925","endLine":137,"endColumn":23},{"ruleId":"2922","severity":1,"message":"3088","line":146,"column":3,"nodeType":"2924","messageId":"2925","endLine":146,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3089","line":149,"column":3,"nodeType":"2924","messageId":"2925","endLine":149,"endColumn":9},{"ruleId":"2922","severity":1,"message":"3090","line":150,"column":3,"nodeType":"2924","messageId":"2925","endLine":150,"endColumn":9},{"ruleId":"2922","severity":1,"message":"3091","line":152,"column":3,"nodeType":"2924","messageId":"2925","endLine":152,"endColumn":13},{"ruleId":"2922","severity":1,"message":"3092","line":153,"column":3,"nodeType":"2924","messageId":"2925","endLine":153,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3093","line":154,"column":3,"nodeType":"2924","messageId":"2925","endLine":154,"endColumn":13},{"ruleId":"2922","severity":1,"message":"3094","line":155,"column":3,"nodeType":"2924","messageId":"2925","endLine":155,"endColumn":12},{"ruleId":"2922","severity":1,"message":"3095","line":156,"column":3,"nodeType":"2924","messageId":"2925","endLine":156,"endColumn":16},{"ruleId":"2922","severity":1,"message":"3096","line":168,"column":10,"nodeType":"2924","messageId":"2925","endLine":168,"endColumn":27},{"ruleId":"2922","severity":1,"message":"3097","line":170,"column":7,"nodeType":"2924","messageId":"2925","endLine":170,"endColumn":16},{"ruleId":"2922","severity":1,"message":"3098","line":171,"column":7,"nodeType":"2924","messageId":"2925","endLine":171,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3099","line":173,"column":7,"nodeType":"2924","messageId":"2925","endLine":173,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3100","line":174,"column":7,"nodeType":"2924","messageId":"2925","endLine":174,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3101","line":175,"column":7,"nodeType":"2924","messageId":"2925","endLine":175,"endColumn":21},{"ruleId":"2975","severity":1,"message":"2984","line":196,"column":7,"nodeType":"2977","messageId":"2978","endLine":196,"endColumn":15},{"ruleId":"2922","severity":1,"message":"3009","line":688,"column":19,"nodeType":"2924","messageId":"2925","endLine":688,"endColumn":24},{"ruleId":"3102","severity":1,"message":"3103","line":688,"column":50,"nodeType":"3104","messageId":"3105","endLine":688,"endColumn":154},{"ruleId":"2922","severity":1,"message":"3009","line":698,"column":19,"nodeType":"2924","messageId":"2925","endLine":698,"endColumn":24},{"ruleId":"3102","severity":1,"message":"3103","line":698,"column":50,"nodeType":"3104","messageId":"3105","endLine":698,"endColumn":152},{"ruleId":"2922","severity":1,"message":"3009","line":708,"column":19,"nodeType":"2924","messageId":"2925","endLine":708,"endColumn":24},{"ruleId":"3102","severity":1,"message":"3103","line":708,"column":50,"nodeType":"3104","messageId":"3105","endLine":708,"endColumn":156},{"ruleId":"2922","severity":1,"message":"3009","line":717,"column":19,"nodeType":"2924","messageId":"2925","endLine":717,"endColumn":24},{"ruleId":"3102","severity":1,"message":"3103","line":717,"column":50,"nodeType":"3104","messageId":"3105","endLine":717,"endColumn":151},{"ruleId":"2922","severity":1,"message":"3009","line":725,"column":19,"nodeType":"2924","messageId":"2925","endLine":725,"endColumn":24},{"ruleId":"3102","severity":1,"message":"3103","line":725,"column":50,"nodeType":"3104","messageId":"3105","endLine":725,"endColumn":153},{"ruleId":"2922","severity":1,"message":"3009","line":738,"column":17,"nodeType":"2924","messageId":"2925","endLine":738,"endColumn":22},{"ruleId":"3102","severity":1,"message":"3106","line":738,"column":48,"nodeType":"3104","messageId":"3105","endLine":738,"endColumn":103},{"ruleId":"2922","severity":1,"message":"3009","line":751,"column":13,"nodeType":"2924","messageId":"2925","endLine":751,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3107","line":1150,"column":7,"nodeType":"2924","messageId":"2925","endLine":1150,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3107","line":1179,"column":7,"nodeType":"2924","messageId":"2925","endLine":1179,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3108","line":1205,"column":11,"nodeType":"2924","messageId":"2925","endLine":1205,"endColumn":15},{"ruleId":"2996","severity":1,"message":"3012","line":1470,"column":49,"nodeType":"2998","messageId":"2999","endLine":1470,"endColumn":50,"suggestions":"3265"},{"ruleId":"3110","severity":1,"message":"3111","line":1760,"column":34,"nodeType":"3104","messageId":"3112","endLine":1760,"endColumn":36},{"ruleId":"2937","severity":1,"message":"2938","line":1854,"column":41,"nodeType":"2939","endLine":1854,"endColumn":104},{"ruleId":"2937","severity":1,"message":"2938","line":1856,"column":41,"nodeType":"2939","endLine":1856,"endColumn":126},{"ruleId":"2975","severity":1,"message":"3113","line":2009,"column":7,"nodeType":"2977","messageId":"2978","endLine":2009,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2980","line":2128,"column":19,"nodeType":"2924","messageId":"2925","endLine":2128,"endColumn":30},{"ruleId":"2922","severity":1,"message":"3114","line":2129,"column":9,"nodeType":"2924","messageId":"2925","endLine":2129,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3115","line":2135,"column":9,"nodeType":"2924","messageId":"2925","endLine":2135,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3116","line":2145,"column":9,"nodeType":"2924","messageId":"2925","endLine":2145,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3117","line":2152,"column":9,"nodeType":"2924","messageId":"2925","endLine":2152,"endColumn":30},{"ruleId":"2922","severity":1,"message":"3118","line":2155,"column":9,"nodeType":"2924","messageId":"2925","endLine":2155,"endColumn":29},{"ruleId":"2922","severity":1,"message":"3119","line":2190,"column":11,"nodeType":"2924","messageId":"2925","endLine":2190,"endColumn":21},{"ruleId":"2937","severity":1,"message":"2938","line":2266,"column":11,"nodeType":"2939","endLine":2266,"endColumn":43},{"ruleId":"2993","severity":1,"message":"2994","line":2277,"column":15,"nodeType":"2995","endLine":2277,"endColumn":63},{"ruleId":"2937","severity":1,"message":"2938","line":2312,"column":37,"nodeType":"2939","endLine":2312,"endColumn":126},{"ruleId":"2922","severity":1,"message":"3120","line":2337,"column":5,"nodeType":"2924","messageId":"2925","endLine":2337,"endColumn":13},{"ruleId":"2937","severity":1,"message":"2938","line":2340,"column":11,"nodeType":"2939","endLine":2340,"endColumn":43},{"ruleId":"2993","severity":1,"message":"2994","line":2351,"column":15,"nodeType":"2995","endLine":2351,"endColumn":63},{"ruleId":"2937","severity":1,"message":"2938","line":2398,"column":63,"nodeType":"2939","endLine":2398,"endColumn":99},{"ruleId":"2937","severity":1,"message":"2938","line":2404,"column":29,"nodeType":"2939","endLine":2404,"endColumn":92},{"ruleId":"2937","severity":1,"message":"2938","line":2682,"column":79,"nodeType":"2939","endLine":2682,"endColumn":142},{"ruleId":"2937","severity":1,"message":"2938","line":2684,"column":81,"nodeType":"2939","endLine":2684,"endColumn":166},{"ruleId":"2937","severity":1,"message":"2938","line":2688,"column":83,"nodeType":"2939","endLine":2688,"endColumn":146},{"ruleId":"2937","severity":1,"message":"2938","line":2732,"column":92,"nodeType":"2939","endLine":2732,"endColumn":155},{"ruleId":"2937","severity":1,"message":"2938","line":2734,"column":94,"nodeType":"2939","endLine":2734,"endColumn":179},{"ruleId":"2937","severity":1,"message":"2938","line":2738,"column":96,"nodeType":"2939","endLine":2738,"endColumn":159},{"ruleId":"2993","severity":1,"message":"2994","line":3069,"column":19,"nodeType":"2995","endLine":3069,"endColumn":198},{"ruleId":"2922","severity":1,"message":"2928","line":2,"column":14,"nodeType":"2924","messageId":"2925","endLine":2,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2929","line":2,"column":37,"nodeType":"2924","messageId":"2925","endLine":2,"endColumn":43},{"ruleId":"2922","severity":1,"message":"2930","line":2,"column":44,"nodeType":"2924","messageId":"2925","endLine":2,"endColumn":50},{"ruleId":"2922","severity":1,"message":"2931","line":3,"column":9,"nodeType":"2924","messageId":"2925","endLine":3,"endColumn":12},{"ruleId":"2922","severity":1,"message":"2932","line":3,"column":13,"nodeType":"2924","messageId":"2925","endLine":3,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2933","line":3,"column":20,"nodeType":"2924","messageId":"2925","endLine":3,"endColumn":26},{"ruleId":"2922","severity":1,"message":"2934","line":4,"column":8,"nodeType":"2924","messageId":"2925","endLine":4,"endColumn":17},{"ruleId":"2922","severity":1,"message":"2935","line":5,"column":8,"nodeType":"2924","messageId":"2925","endLine":5,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2936","line":13,"column":5,"nodeType":"2924","messageId":"2925","endLine":13,"endColumn":14},{"ruleId":"2937","severity":1,"message":"2938","line":45,"column":25,"nodeType":"2939","endLine":45,"endColumn":58},{"ruleId":"2937","severity":1,"message":"2938","line":54,"column":49,"nodeType":"2939","endLine":54,"endColumn":81},{"ruleId":"2937","severity":1,"message":"2938","line":65,"column":49,"nodeType":"2939","endLine":65,"endColumn":83},{"ruleId":"2940","severity":1,"message":"2941","line":75,"column":29,"nodeType":"2939","endLine":75,"endColumn":53},{"ruleId":"2937","severity":1,"message":"2938","line":94,"column":21,"nodeType":"2939","endLine":94,"endColumn":54},{"ruleId":"2948","severity":1,"message":"2949","line":160,"column":14,"nodeType":"2924","messageId":"2950","endLine":160,"endColumn":22},{"ruleId":"2981","severity":1,"message":"2982","line":291,"column":34,"nodeType":"2939","endLine":291,"endColumn":55},{"ruleId":"2940","severity":1,"message":"2983","line":291,"column":34,"nodeType":"2939","endLine":291,"endColumn":55},{"ruleId":"2922","severity":1,"message":"3157","line":64,"column":15,"nodeType":"2924","messageId":"2925","endLine":64,"endColumn":25},{"ruleId":"2922","severity":1,"message":"3158","line":75,"column":13,"nodeType":"2924","messageId":"2925","endLine":75,"endColumn":20},{"ruleId":"2922","severity":1,"message":"3159","line":76,"column":13,"nodeType":"2924","messageId":"2925","endLine":76,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3160","line":78,"column":13,"nodeType":"2924","messageId":"2925","endLine":78,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3161","line":79,"column":13,"nodeType":"2924","messageId":"2925","endLine":79,"endColumn":19},{"ruleId":"2922","severity":1,"message":"3162","line":82,"column":15,"nodeType":"2924","messageId":"2925","endLine":82,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3163","line":83,"column":15,"nodeType":"2924","messageId":"2925","endLine":83,"endColumn":22},{"ruleId":"2922","severity":1,"message":"3142","line":932,"column":15,"nodeType":"2924","messageId":"2925","endLine":932,"endColumn":23},{"ruleId":"2922","severity":1,"message":"2987","line":938,"column":15,"nodeType":"2924","messageId":"2925","endLine":938,"endColumn":24},{"ruleId":"2937","severity":1,"message":"2938","line":1031,"column":81,"nodeType":"2939","endLine":1031,"endColumn":185},{"ruleId":"2922","severity":1,"message":"3140","line":46,"column":15,"nodeType":"2924","messageId":"2925","endLine":46,"endColumn":19},{"ruleId":"2922","severity":1,"message":"3141","line":87,"column":16,"nodeType":"2924","messageId":"2925","endLine":87,"endColumn":32},{"ruleId":"2922","severity":1,"message":"3142","line":88,"column":15,"nodeType":"2924","messageId":"2925","endLine":88,"endColumn":23},{"ruleId":"2922","severity":1,"message":"2987","line":94,"column":15,"nodeType":"2924","messageId":"2925","endLine":94,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3143","line":108,"column":13,"nodeType":"2924","messageId":"2925","endLine":108,"endColumn":27},{"ruleId":"2922","severity":1,"message":"3144","line":110,"column":15,"nodeType":"2924","messageId":"2925","endLine":110,"endColumn":26},{"ruleId":"2922","severity":1,"message":"3145","line":123,"column":15,"nodeType":"2924","messageId":"2925","endLine":123,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3146","line":128,"column":15,"nodeType":"2924","messageId":"2925","endLine":128,"endColumn":27},{"ruleId":"2937","severity":1,"message":"2938","line":161,"column":45,"nodeType":"2939","endLine":161,"endColumn":89},{"ruleId":"2937","severity":1,"message":"2938","line":170,"column":45,"nodeType":"2939","endLine":170,"endColumn":89},{"ruleId":"2937","severity":1,"message":"2938","line":180,"column":43,"nodeType":"2939","endLine":180,"endColumn":88},{"ruleId":"2937","severity":1,"message":"2938","line":191,"column":39,"nodeType":"2939","endLine":191,"endColumn":79},{"ruleId":"2937","severity":1,"message":"2938","line":9,"column":19,"nodeType":"2939","endLine":9,"endColumn":83},{"ruleId":"2960","severity":1,"message":"2961","line":9,"column":5,"nodeType":"2962","messageId":"2963","endLine":11,"endColumn":6},{"ruleId":"2922","severity":1,"message":"2986","line":17,"column":11,"nodeType":"2924","messageId":"2925","endLine":17,"endColumn":19},{"ruleId":"2922","severity":1,"message":"3254","line":123,"column":11,"nodeType":"2924","messageId":"2925","endLine":123,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3266","line":178,"column":11,"nodeType":"2924","messageId":"2925","endLine":178,"endColumn":25},{"ruleId":"2940","severity":1,"message":"2983","line":102,"column":10,"nodeType":"2939","endLine":102,"endColumn":48},{"ruleId":"3164","severity":1,"message":"3165","line":10,"column":19,"nodeType":"3166","messageId":"3167","endLine":10,"endColumn":77,"fix":"3267"},{"ruleId":"3164","severity":1,"message":"3169","line":11,"column":19,"nodeType":"3166","messageId":"3167","endLine":11,"endColumn":55,"fix":"3268"},{"ruleId":"3164","severity":1,"message":"3171","line":12,"column":19,"nodeType":"3166","messageId":"3167","endLine":12,"endColumn":77,"fix":"3269"},{"ruleId":"3164","severity":1,"message":"3173","line":13,"column":19,"nodeType":"3166","messageId":"3167","endLine":13,"endColumn":85,"fix":"3270"},{"ruleId":"3164","severity":1,"message":"3175","line":14,"column":19,"nodeType":"3166","messageId":"3167","endLine":14,"endColumn":88,"fix":"3271"},{"ruleId":"3164","severity":1,"message":"3177","line":15,"column":19,"nodeType":"3166","messageId":"3167","endLine":15,"endColumn":46,"fix":"3272"},{"ruleId":"2922","severity":1,"message":"3179","line":197,"column":7,"nodeType":"2924","messageId":"2925","endLine":197,"endColumn":22},{"ruleId":"2940","severity":1,"message":"2983","line":210,"column":15,"nodeType":"2939","endLine":210,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":211,"column":15,"nodeType":"2939","endLine":211,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":212,"column":15,"nodeType":"2939","endLine":212,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":213,"column":15,"nodeType":"2939","endLine":213,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":214,"column":15,"nodeType":"2939","endLine":214,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":215,"column":15,"nodeType":"2939","endLine":215,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":216,"column":15,"nodeType":"2939","endLine":216,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":217,"column":15,"nodeType":"2939","endLine":217,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":218,"column":15,"nodeType":"2939","endLine":218,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":219,"column":15,"nodeType":"2939","endLine":219,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":220,"column":15,"nodeType":"2939","endLine":220,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":221,"column":15,"nodeType":"2939","endLine":221,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":222,"column":15,"nodeType":"2939","endLine":222,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":223,"column":15,"nodeType":"2939","endLine":223,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":224,"column":15,"nodeType":"2939","endLine":224,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":225,"column":15,"nodeType":"2939","endLine":225,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":226,"column":15,"nodeType":"2939","endLine":226,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":227,"column":15,"nodeType":"2939","endLine":227,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":228,"column":15,"nodeType":"2939","endLine":228,"endColumn":62},{"ruleId":"2940","severity":1,"message":"2983","line":229,"column":15,"nodeType":"2939","endLine":229,"endColumn":62},{"ruleId":"2960","severity":1,"message":"2961","line":7,"column":5,"nodeType":"2962","messageId":"2963","endLine":10,"endColumn":6},{"ruleId":"2937","severity":1,"message":"2938","line":21,"column":23,"nodeType":"2939","endLine":21,"endColumn":54},{"ruleId":"2937","severity":1,"message":"2938","line":24,"column":27,"nodeType":"2939","endLine":24,"endColumn":58},{"ruleId":"2937","severity":1,"message":"2938","line":46,"column":23,"nodeType":"2939","endLine":46,"endColumn":56},{"ruleId":"2937","severity":1,"message":"2938","line":49,"column":27,"nodeType":"2939","endLine":49,"endColumn":60},{"ruleId":"2937","severity":1,"message":"2938","line":71,"column":23,"nodeType":"2939","endLine":71,"endColumn":54},{"ruleId":"2937","severity":1,"message":"2938","line":74,"column":27,"nodeType":"2939","endLine":74,"endColumn":58},{"ruleId":"2922","severity":1,"message":"3180","line":1,"column":17,"nodeType":"2924","messageId":"2925","endLine":1,"endColumn":26},{"ruleId":"2922","severity":1,"message":"3148","line":1,"column":36,"nodeType":"2924","messageId":"2925","endLine":1,"endColumn":40},{"ruleId":"2922","severity":1,"message":"3180","line":1,"column":17,"nodeType":"2924","messageId":"2925","endLine":1,"endColumn":26},{"ruleId":"2922","severity":1,"message":"3148","line":1,"column":36,"nodeType":"2924","messageId":"2925","endLine":1,"endColumn":40},{"ruleId":"2922","severity":1,"message":"3186","line":10,"column":10,"nodeType":"2924","messageId":"2925","endLine":10,"endColumn":20},{"ruleId":"2922","severity":1,"message":"3187","line":12,"column":8,"nodeType":"2924","messageId":"2925","endLine":12,"endColumn":12},{"ruleId":"2922","severity":1,"message":"3141","line":156,"column":16,"nodeType":"2924","messageId":"2925","endLine":156,"endColumn":32},{"ruleId":"2922","severity":1,"message":"3142","line":157,"column":15,"nodeType":"2924","messageId":"2925","endLine":157,"endColumn":23},{"ruleId":"2922","severity":1,"message":"2987","line":163,"column":15,"nodeType":"2924","messageId":"2925","endLine":163,"endColumn":24},{"ruleId":"2937","severity":1,"message":"2938","line":239,"column":25,"nodeType":"2939","endLine":239,"endColumn":52},{"ruleId":"2922","severity":1,"message":"3141","line":234,"column":12,"nodeType":"2924","messageId":"2925","endLine":234,"endColumn":28},{"ruleId":"2922","severity":1,"message":"3142","line":235,"column":11,"nodeType":"2924","messageId":"2925","endLine":235,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2987","line":241,"column":11,"nodeType":"2924","messageId":"2925","endLine":241,"endColumn":20},{"ruleId":"2937","severity":1,"message":"2938","line":318,"column":20,"nodeType":"2939","endLine":318,"endColumn":48},{"ruleId":"2975","severity":1,"message":"2976","line":65,"column":13,"nodeType":"2977","messageId":"2978","endLine":65,"endColumn":18},{"ruleId":"2948","severity":1,"message":"3188","line":147,"column":24,"nodeType":"2924","messageId":"2950","endLine":147,"endColumn":25},{"ruleId":"2948","severity":1,"message":"3189","line":147,"column":31,"nodeType":"2924","messageId":"2950","endLine":147,"endColumn":39},{"ruleId":"2948","severity":1,"message":"3190","line":149,"column":19,"nodeType":"2924","messageId":"2950","endLine":149,"endColumn":23},{"ruleId":"2948","severity":1,"message":"3191","line":362,"column":21,"nodeType":"2924","messageId":"2950","endLine":362,"endColumn":27},{"ruleId":"2948","severity":1,"message":"3191","line":371,"column":25,"nodeType":"2924","messageId":"2950","endLine":371,"endColumn":31},{"ruleId":"2948","severity":1,"message":"3191","line":380,"column":23,"nodeType":"2924","messageId":"2950","endLine":380,"endColumn":29},{"ruleId":"2948","severity":1,"message":"3191","line":392,"column":25,"nodeType":"2924","messageId":"2950","endLine":392,"endColumn":31},{"ruleId":"2948","severity":1,"message":"3191","line":528,"column":19,"nodeType":"2924","messageId":"2950","endLine":528,"endColumn":25},{"ruleId":"2922","severity":1,"message":"3192","line":583,"column":13,"nodeType":"2924","messageId":"2925","endLine":583,"endColumn":24},{"ruleId":"2948","severity":1,"message":"3189","line":634,"column":27,"nodeType":"2924","messageId":"2950","endLine":634,"endColumn":35},{"ruleId":"2922","severity":1,"message":"3193","line":683,"column":23,"nodeType":"2924","messageId":"2925","endLine":683,"endColumn":26},{"ruleId":"2922","severity":1,"message":"2969","line":711,"column":19,"nodeType":"2924","messageId":"2925","endLine":711,"endColumn":27},{"ruleId":"2922","severity":1,"message":"3108","line":715,"column":19,"nodeType":"2924","messageId":"2925","endLine":715,"endColumn":23},{"ruleId":"2922","severity":1,"message":"3142","line":785,"column":15,"nodeType":"2924","messageId":"2925","endLine":785,"endColumn":23},{"ruleId":"2922","severity":1,"message":"2987","line":791,"column":15,"nodeType":"2924","messageId":"2925","endLine":791,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3194","line":833,"column":15,"nodeType":"2924","messageId":"2925","endLine":833,"endColumn":25},{"ruleId":"2922","severity":1,"message":"3195","line":840,"column":11,"nodeType":"2924","messageId":"2925","endLine":840,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3196","line":866,"column":11,"nodeType":"2924","messageId":"2925","endLine":866,"endColumn":18},{"ruleId":"2937","severity":1,"message":"2938","line":961,"column":43,"nodeType":"2939","endLine":961,"endColumn":179},{"ruleId":"2945","severity":1,"message":"2946","line":993,"column":43,"nodeType":"2939","endLine":993,"endColumn":184},{"ruleId":"2945","severity":1,"message":"2946","line":1010,"column":41,"nodeType":"2939","endLine":1010,"endColumn":181},{"ruleId":"2922","severity":1,"message":"3141","line":171,"column":13,"nodeType":"2924","messageId":"2925","endLine":171,"endColumn":29},{"ruleId":"2922","severity":1,"message":"3142","line":172,"column":11,"nodeType":"2924","messageId":"2925","endLine":172,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2987","line":178,"column":11,"nodeType":"2924","messageId":"2925","endLine":178,"endColumn":20},{"ruleId":"2937","severity":1,"message":"2938","line":254,"column":21,"nodeType":"2939","endLine":254,"endColumn":49},{"ruleId":"3132","severity":1,"message":"3216","line":36,"column":25,"nodeType":"2939","endLine":36,"endColumn":43},{"ruleId":"3132","severity":1,"message":"3216","line":60,"column":26,"nodeType":"2939","endLine":60,"endColumn":44},{"ruleId":"2948","severity":1,"message":"3204","line":159,"column":15,"nodeType":"2924","messageId":"2950","endLine":159,"endColumn":16},{"ruleId":"2922","severity":1,"message":"2989","line":159,"column":15,"nodeType":"2924","messageId":"2925","endLine":159,"endColumn":16},{"ruleId":"2948","severity":1,"message":"3205","line":160,"column":15,"nodeType":"2924","messageId":"2950","endLine":160,"endColumn":16},{"ruleId":"2922","severity":1,"message":"3124","line":178,"column":7,"nodeType":"2924","messageId":"2925","endLine":178,"endColumn":15},{"ruleId":"2922","severity":1,"message":"3206","line":191,"column":7,"nodeType":"2924","messageId":"2925","endLine":191,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2989","line":193,"column":7,"nodeType":"2924","messageId":"2925","endLine":193,"endColumn":8},{"ruleId":"2922","severity":1,"message":"2965","line":244,"column":21,"nodeType":"2924","messageId":"2925","endLine":244,"endColumn":25},{"ruleId":"2996","severity":1,"message":"3207","line":365,"column":17,"nodeType":"2998","messageId":"2999","endLine":365,"endColumn":18,"suggestions":"3273"},{"ruleId":"2996","severity":1,"message":"3209","line":365,"column":41,"nodeType":"2998","messageId":"2999","endLine":365,"endColumn":42,"suggestions":"3274"},{"ruleId":"2996","severity":1,"message":"3209","line":365,"column":57,"nodeType":"2998","messageId":"2999","endLine":365,"endColumn":58,"suggestions":"3275"},{"ruleId":"2948","severity":1,"message":"3212","line":543,"column":11,"nodeType":"2924","messageId":"2950","endLine":543,"endColumn":19},{"ruleId":"2948","severity":1,"message":"3213","line":544,"column":11,"nodeType":"2924","messageId":"2950","endLine":544,"endColumn":19},{"ruleId":"2990","severity":1,"message":"3123","line":547,"column":17,"nodeType":"2992","messageId":"2978","endLine":547,"endColumn":19},{"ruleId":"2996","severity":1,"message":"2997","line":562,"column":57,"nodeType":"2998","messageId":"2999","endLine":562,"endColumn":58,"suggestions":"3276"},{"ruleId":"2948","severity":1,"message":"3215","line":916,"column":23,"nodeType":"2924","messageId":"2950","endLine":916,"endColumn":26},{"ruleId":"2948","severity":1,"message":"3215","line":931,"column":23,"nodeType":"2924","messageId":"2950","endLine":931,"endColumn":26},{"ruleId":"2948","severity":1,"message":"3215","line":947,"column":19,"nodeType":"2924","messageId":"2950","endLine":947,"endColumn":22},{"ruleId":"2975","severity":1,"message":"2976","line":62,"column":15,"nodeType":"2977","messageId":"2978","endLine":62,"endColumn":20},{"ruleId":"2922","severity":1,"message":"3192","line":431,"column":13,"nodeType":"2924","messageId":"2925","endLine":431,"endColumn":24},{"ruleId":"2948","severity":1,"message":"3189","line":466,"column":29,"nodeType":"2924","messageId":"2950","endLine":466,"endColumn":37},{"ruleId":"2922","severity":1,"message":"3142","line":521,"column":15,"nodeType":"2924","messageId":"2925","endLine":521,"endColumn":23},{"ruleId":"2922","severity":1,"message":"2987","line":527,"column":15,"nodeType":"2924","messageId":"2925","endLine":527,"endColumn":24},{"ruleId":"2937","severity":1,"message":"2938","line":585,"column":39,"nodeType":"2939","endLine":585,"endColumn":143},{"ruleId":"2922","severity":1,"message":"3108","line":602,"column":9,"nodeType":"2924","messageId":"2925","endLine":602,"endColumn":13},{"ruleId":"2922","severity":1,"message":"3010","line":142,"column":13,"nodeType":"2924","messageId":"2925","endLine":142,"endColumn":18},{"ruleId":"2937","severity":1,"message":"2938","line":247,"column":25,"nodeType":"2939","endLine":247,"endColumn":48},{"ruleId":"2937","severity":1,"message":"2938","line":249,"column":25,"nodeType":"2939","endLine":249,"endColumn":90},{"ruleId":"2922","severity":1,"message":"3010","line":153,"column":13,"nodeType":"2924","messageId":"2925","endLine":153,"endColumn":18},{"ruleId":"2937","severity":1,"message":"2938","line":268,"column":29,"nodeType":"2939","endLine":268,"endColumn":62},{"ruleId":"2922","severity":1,"message":"3008","line":54,"column":15,"nodeType":"2924","messageId":"2925","endLine":54,"endColumn":23},{"ruleId":"2922","severity":1,"message":"3009","line":56,"column":13,"nodeType":"2924","messageId":"2925","endLine":56,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3010","line":76,"column":21,"nodeType":"2924","messageId":"2925","endLine":76,"endColumn":26},{"ruleId":"2993","severity":1,"message":"2994","line":250,"column":43,"nodeType":"2995","endLine":250,"endColumn":125},{"ruleId":"2993","severity":1,"message":"2994","line":256,"column":39,"nodeType":"2995","endLine":256,"endColumn":113},{"ruleId":"2993","severity":1,"message":"2994","line":261,"column":39,"nodeType":"2995","endLine":261,"endColumn":110},{"ruleId":"2993","severity":1,"message":"2994","line":266,"column":41,"nodeType":"2995","endLine":266,"endColumn":110},{"ruleId":"2993","severity":1,"message":"2994","line":270,"column":41,"nodeType":"2995","endLine":270,"endColumn":130},{"ruleId":"2993","severity":1,"message":"2994","line":275,"column":41,"nodeType":"2995","endLine":275,"endColumn":113},{"ruleId":"2993","severity":1,"message":"2994","line":281,"column":41,"nodeType":"2995","endLine":281,"endColumn":110},{"ruleId":"2993","severity":1,"message":"2994","line":285,"column":39,"nodeType":"2995","endLine":285,"endColumn":122},{"ruleId":"2993","severity":1,"message":"2994","line":289,"column":41,"nodeType":"2995","endLine":289,"endColumn":114},{"ruleId":"2993","severity":1,"message":"2994","line":293,"column":41,"nodeType":"2995","endLine":293,"endColumn":117},{"ruleId":"2993","severity":1,"message":"2994","line":299,"column":43,"nodeType":"2995","endLine":299,"endColumn":121},{"ruleId":"2993","severity":1,"message":"2994","line":303,"column":43,"nodeType":"2995","endLine":303,"endColumn":112},{"ruleId":"2993","severity":1,"message":"2994","line":307,"column":43,"nodeType":"2995","endLine":307,"endColumn":136},{"ruleId":"2993","severity":1,"message":"2994","line":312,"column":43,"nodeType":"2995","endLine":312,"endColumn":140},{"ruleId":"2993","severity":1,"message":"2994","line":317,"column":43,"nodeType":"2995","endLine":317,"endColumn":135},{"ruleId":"2993","severity":1,"message":"2994","line":326,"column":43,"nodeType":"2995","endLine":326,"endColumn":135},{"ruleId":"2993","severity":1,"message":"2994","line":332,"column":43,"nodeType":"2995","endLine":332,"endColumn":136},{"ruleId":"2993","severity":1,"message":"2994","line":337,"column":43,"nodeType":"2995","endLine":337,"endColumn":144},{"ruleId":"2993","severity":1,"message":"2994","line":342,"column":43,"nodeType":"2995","endLine":342,"endColumn":135},{"ruleId":"2993","severity":1,"message":"2994","line":347,"column":43,"nodeType":"2995","endLine":347,"endColumn":138},{"ruleId":"2937","severity":1,"message":"2938","line":364,"column":45,"nodeType":"2939","endLine":364,"endColumn":90},{"ruleId":"2922","severity":1,"message":"3009","line":81,"column":9,"nodeType":"2924","messageId":"2925","endLine":81,"endColumn":14},{"ruleId":"2922","severity":1,"message":"3010","line":170,"column":13,"nodeType":"2924","messageId":"2925","endLine":170,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3008","line":54,"column":15,"nodeType":"2924","messageId":"2925","endLine":54,"endColumn":23},{"ruleId":"2922","severity":1,"message":"3009","line":56,"column":13,"nodeType":"2924","messageId":"2925","endLine":56,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3010","line":76,"column":21,"nodeType":"2924","messageId":"2925","endLine":76,"endColumn":26},{"ruleId":"2937","severity":1,"message":"2938","line":232,"column":31,"nodeType":"2939","endLine":232,"endColumn":143},{"ruleId":"2993","severity":1,"message":"2994","line":255,"column":43,"nodeType":"2995","endLine":255,"endColumn":125},{"ruleId":"2993","severity":1,"message":"2994","line":261,"column":39,"nodeType":"2995","endLine":261,"endColumn":113},{"ruleId":"2993","severity":1,"message":"2994","line":266,"column":39,"nodeType":"2995","endLine":266,"endColumn":110},{"ruleId":"2993","severity":1,"message":"2994","line":271,"column":41,"nodeType":"2995","endLine":271,"endColumn":110},{"ruleId":"2993","severity":1,"message":"2994","line":275,"column":41,"nodeType":"2995","endLine":275,"endColumn":130},{"ruleId":"2993","severity":1,"message":"2994","line":280,"column":41,"nodeType":"2995","endLine":280,"endColumn":113},{"ruleId":"2993","severity":1,"message":"2994","line":286,"column":41,"nodeType":"2995","endLine":286,"endColumn":110},{"ruleId":"2993","severity":1,"message":"2994","line":290,"column":39,"nodeType":"2995","endLine":290,"endColumn":122},{"ruleId":"2993","severity":1,"message":"2994","line":294,"column":41,"nodeType":"2995","endLine":294,"endColumn":114},{"ruleId":"2993","severity":1,"message":"2994","line":298,"column":41,"nodeType":"2995","endLine":298,"endColumn":117},{"ruleId":"2993","severity":1,"message":"2994","line":304,"column":43,"nodeType":"2995","endLine":304,"endColumn":121},{"ruleId":"2993","severity":1,"message":"2994","line":308,"column":43,"nodeType":"2995","endLine":308,"endColumn":112},{"ruleId":"2993","severity":1,"message":"2994","line":312,"column":43,"nodeType":"2995","endLine":312,"endColumn":136},{"ruleId":"2993","severity":1,"message":"2994","line":317,"column":43,"nodeType":"2995","endLine":317,"endColumn":140},{"ruleId":"2993","severity":1,"message":"2994","line":322,"column":43,"nodeType":"2995","endLine":322,"endColumn":135},{"ruleId":"2993","severity":1,"message":"2994","line":331,"column":43,"nodeType":"2995","endLine":331,"endColumn":135},{"ruleId":"2993","severity":1,"message":"2994","line":337,"column":43,"nodeType":"2995","endLine":337,"endColumn":136},{"ruleId":"2993","severity":1,"message":"2994","line":342,"column":43,"nodeType":"2995","endLine":342,"endColumn":144},{"ruleId":"2993","severity":1,"message":"2994","line":347,"column":43,"nodeType":"2995","endLine":347,"endColumn":135},{"ruleId":"2993","severity":1,"message":"2994","line":352,"column":43,"nodeType":"2995","endLine":352,"endColumn":138},{"ruleId":"2937","severity":1,"message":"2938","line":368,"column":45,"nodeType":"2939","endLine":368,"endColumn":90},{"ruleId":"2922","severity":1,"message":"3010","line":136,"column":13,"nodeType":"2924","messageId":"2925","endLine":136,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3009","line":86,"column":9,"nodeType":"2924","messageId":"2925","endLine":86,"endColumn":14},{"ruleId":"2922","severity":1,"message":"3010","line":172,"column":13,"nodeType":"2924","messageId":"2925","endLine":172,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3116","line":141,"column":9,"nodeType":"2924","messageId":"2925","endLine":141,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3198","line":142,"column":9,"nodeType":"2924","messageId":"2925","endLine":142,"endColumn":39},{"ruleId":"2922","severity":1,"message":"3124","line":144,"column":9,"nodeType":"2924","messageId":"2925","endLine":144,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3199","line":279,"column":11,"nodeType":"2924","messageId":"2925","endLine":279,"endColumn":22},{"ruleId":"2922","severity":1,"message":"3200","line":394,"column":11,"nodeType":"2924","messageId":"2925","endLine":394,"endColumn":22},{"ruleId":"2937","severity":1,"message":"2938","line":515,"column":79,"nodeType":"2939","endLine":515,"endColumn":115},{"ruleId":"2937","severity":1,"message":"2938","line":573,"column":69,"nodeType":"2939","endLine":573,"endColumn":132},{"ruleId":"2937","severity":1,"message":"2938","line":575,"column":71,"nodeType":"2939","endLine":575,"endColumn":156},{"ruleId":"2937","severity":1,"message":"2938","line":579,"column":71,"nodeType":"2939","endLine":579,"endColumn":134},{"ruleId":"2945","severity":1,"message":"2946","line":590,"column":72,"nodeType":"2939","endLine":590,"endColumn":202},{"ruleId":"2937","severity":1,"message":"2938","line":594,"column":83,"nodeType":"2939","endLine":594,"endColumn":146},{"ruleId":"2937","severity":1,"message":"2938","line":596,"column":85,"nodeType":"2939","endLine":596,"endColumn":169},{"ruleId":"2937","severity":1,"message":"2938","line":600,"column":85,"nodeType":"2939","endLine":600,"endColumn":148},{"ruleId":"3130","severity":1,"message":"3131","line":625,"column":61,"nodeType":"2939","endLine":626,"endColumn":109},{"ruleId":"3130","severity":1,"message":"3131","line":634,"column":65,"nodeType":"2939","endLine":634,"endColumn":167},{"ruleId":"3130","severity":1,"message":"3131","line":641,"column":65,"nodeType":"2939","endLine":641,"endColumn":208},{"ruleId":"2945","severity":1,"message":"2946","line":766,"column":55,"nodeType":"2939","endLine":766,"endColumn":198},{"ruleId":"2937","severity":1,"message":"2938","line":778,"column":59,"nodeType":"2939","endLine":778,"endColumn":122},{"ruleId":"2993","severity":1,"message":"2994","line":891,"column":99,"nodeType":"2995","endLine":891,"endColumn":114},{"ruleId":"2937","severity":1,"message":"2938","line":920,"column":41,"nodeType":"2939","endLine":920,"endColumn":66},{"ruleId":"2922","severity":1,"message":"3010","line":169,"column":13,"nodeType":"2924","messageId":"2925","endLine":169,"endColumn":18},{"ruleId":"2993","severity":1,"message":"2994","line":356,"column":29,"nodeType":"2995","endLine":356,"endColumn":111},{"ruleId":"2993","severity":1,"message":"2994","line":360,"column":25,"nodeType":"2995","endLine":360,"endColumn":99},{"ruleId":"2993","severity":1,"message":"2994","line":365,"column":25,"nodeType":"2995","endLine":365,"endColumn":96},{"ruleId":"2993","severity":1,"message":"2994","line":370,"column":27,"nodeType":"2995","endLine":370,"endColumn":96},{"ruleId":"2993","severity":1,"message":"2994","line":374,"column":27,"nodeType":"2995","endLine":374,"endColumn":116},{"ruleId":"2993","severity":1,"message":"2994","line":379,"column":27,"nodeType":"2995","endLine":379,"endColumn":99},{"ruleId":"2993","severity":1,"message":"2994","line":385,"column":27,"nodeType":"2995","endLine":385,"endColumn":96},{"ruleId":"2993","severity":1,"message":"2994","line":389,"column":25,"nodeType":"2995","endLine":389,"endColumn":108},{"ruleId":"2993","severity":1,"message":"2994","line":393,"column":27,"nodeType":"2995","endLine":393,"endColumn":100},{"ruleId":"2993","severity":1,"message":"2994","line":397,"column":27,"nodeType":"2995","endLine":397,"endColumn":103},{"ruleId":"2993","severity":1,"message":"2994","line":404,"column":25,"nodeType":"2995","endLine":404,"endColumn":103},{"ruleId":"2993","severity":1,"message":"2994","line":408,"column":25,"nodeType":"2995","endLine":408,"endColumn":94},{"ruleId":"2993","severity":1,"message":"2994","line":412,"column":25,"nodeType":"2995","endLine":412,"endColumn":118},{"ruleId":"2993","severity":1,"message":"2994","line":417,"column":25,"nodeType":"2995","endLine":417,"endColumn":122},{"ruleId":"2993","severity":1,"message":"2994","line":422,"column":25,"nodeType":"2995","endLine":422,"endColumn":117},{"ruleId":"2993","severity":1,"message":"2994","line":431,"column":25,"nodeType":"2995","endLine":431,"endColumn":117},{"ruleId":"2993","severity":1,"message":"2994","line":437,"column":25,"nodeType":"2995","endLine":437,"endColumn":118},{"ruleId":"2993","severity":1,"message":"2994","line":442,"column":25,"nodeType":"2995","endLine":442,"endColumn":126},{"ruleId":"2993","severity":1,"message":"2994","line":447,"column":25,"nodeType":"2995","endLine":447,"endColumn":117},{"ruleId":"2993","severity":1,"message":"2994","line":452,"column":25,"nodeType":"2995","endLine":452,"endColumn":120},{"ruleId":"2937","severity":1,"message":"2938","line":474,"column":27,"nodeType":"2939","endLine":474,"endColumn":50},{"ruleId":"2937","severity":1,"message":"2938","line":476,"column":27,"nodeType":"2939","endLine":476,"endColumn":60},{"ruleId":"2922","severity":1,"message":"2957","line":2,"column":8,"nodeType":"2924","messageId":"2925","endLine":2,"endColumn":17},{"ruleId":"3218","severity":1,"message":"3219","line":34,"column":21,"nodeType":"2939","endLine":34,"endColumn":30},{"ruleId":"2960","severity":1,"message":"2961","line":5,"column":5,"nodeType":"2962","messageId":"2963","endLine":8,"endColumn":6},{"ruleId":"2922","severity":1,"message":"3141","line":164,"column":12,"nodeType":"2924","messageId":"2925","endLine":164,"endColumn":28},{"ruleId":"2922","severity":1,"message":"3142","line":165,"column":11,"nodeType":"2924","messageId":"2925","endLine":165,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2987","line":171,"column":11,"nodeType":"2924","messageId":"2925","endLine":171,"endColumn":20},{"ruleId":"2937","severity":1,"message":"2938","line":246,"column":20,"nodeType":"2939","endLine":246,"endColumn":48},{"ruleId":"2975","severity":1,"message":"2976","line":65,"column":13,"nodeType":"2977","messageId":"2978","endLine":65,"endColumn":18},{"ruleId":"2948","severity":1,"message":"3188","line":142,"column":24,"nodeType":"2924","messageId":"2950","endLine":142,"endColumn":25},{"ruleId":"2948","severity":1,"message":"3189","line":142,"column":31,"nodeType":"2924","messageId":"2950","endLine":142,"endColumn":39},{"ruleId":"2948","severity":1,"message":"3190","line":144,"column":19,"nodeType":"2924","messageId":"2950","endLine":144,"endColumn":23},{"ruleId":"2922","severity":1,"message":"3192","line":564,"column":13,"nodeType":"2924","messageId":"2925","endLine":564,"endColumn":24},{"ruleId":"2948","severity":1,"message":"3189","line":603,"column":27,"nodeType":"2924","messageId":"2950","endLine":603,"endColumn":35},{"ruleId":"2922","severity":1,"message":"3193","line":652,"column":23,"nodeType":"2924","messageId":"2925","endLine":652,"endColumn":26},{"ruleId":"2922","severity":1,"message":"2969","line":670,"column":19,"nodeType":"2924","messageId":"2925","endLine":670,"endColumn":27},{"ruleId":"2922","severity":1,"message":"3108","line":674,"column":19,"nodeType":"2924","messageId":"2925","endLine":674,"endColumn":23},{"ruleId":"2922","severity":1,"message":"3142","line":711,"column":15,"nodeType":"2924","messageId":"2925","endLine":711,"endColumn":23},{"ruleId":"2922","severity":1,"message":"2987","line":717,"column":15,"nodeType":"2924","messageId":"2925","endLine":717,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3194","line":757,"column":15,"nodeType":"2924","messageId":"2925","endLine":757,"endColumn":25},{"ruleId":"2922","severity":1,"message":"3195","line":764,"column":11,"nodeType":"2924","messageId":"2925","endLine":764,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3196","line":790,"column":11,"nodeType":"2924","messageId":"2925","endLine":790,"endColumn":18},{"ruleId":"2937","severity":1,"message":"2938","line":885,"column":43,"nodeType":"2939","endLine":885,"endColumn":179},{"ruleId":"2945","severity":1,"message":"2946","line":917,"column":43,"nodeType":"2939","endLine":917,"endColumn":184},{"ruleId":"2945","severity":1,"message":"2946","line":934,"column":41,"nodeType":"2939","endLine":934,"endColumn":181},{"ruleId":"2922","severity":1,"message":"3010","line":80,"column":13,"nodeType":"2924","messageId":"2925","endLine":80,"endColumn":18},{"ruleId":"2937","severity":1,"message":"2938","line":183,"column":25,"nodeType":"2939","endLine":183,"endColumn":48},{"ruleId":"2937","severity":1,"message":"2938","line":185,"column":25,"nodeType":"2939","endLine":185,"endColumn":90},{"ruleId":"2922","severity":1,"message":"3008","line":53,"column":15,"nodeType":"2924","messageId":"2925","endLine":53,"endColumn":23},{"ruleId":"2922","severity":1,"message":"3009","line":55,"column":13,"nodeType":"2924","messageId":"2925","endLine":55,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3010","line":75,"column":21,"nodeType":"2924","messageId":"2925","endLine":75,"endColumn":26},{"ruleId":"2993","severity":1,"message":"2994","line":253,"column":43,"nodeType":"2995","endLine":253,"endColumn":125},{"ruleId":"2993","severity":1,"message":"2994","line":259,"column":39,"nodeType":"2995","endLine":259,"endColumn":113},{"ruleId":"2993","severity":1,"message":"2994","line":264,"column":39,"nodeType":"2995","endLine":264,"endColumn":110},{"ruleId":"2993","severity":1,"message":"2994","line":269,"column":41,"nodeType":"2995","endLine":269,"endColumn":110},{"ruleId":"2993","severity":1,"message":"2994","line":273,"column":41,"nodeType":"2995","endLine":273,"endColumn":130},{"ruleId":"2993","severity":1,"message":"2994","line":278,"column":41,"nodeType":"2995","endLine":278,"endColumn":113},{"ruleId":"2993","severity":1,"message":"2994","line":284,"column":41,"nodeType":"2995","endLine":284,"endColumn":110},{"ruleId":"2993","severity":1,"message":"2994","line":288,"column":39,"nodeType":"2995","endLine":288,"endColumn":122},{"ruleId":"2993","severity":1,"message":"2994","line":292,"column":41,"nodeType":"2995","endLine":292,"endColumn":114},{"ruleId":"2993","severity":1,"message":"2994","line":296,"column":41,"nodeType":"2995","endLine":296,"endColumn":117},{"ruleId":"2937","severity":1,"message":"2938","line":312,"column":45,"nodeType":"2939","endLine":312,"endColumn":90},{"ruleId":"2922","severity":1,"message":"3010","line":69,"column":13,"nodeType":"2924","messageId":"2925","endLine":69,"endColumn":18},{"ruleId":"2937","severity":1,"message":"2938","line":181,"column":29,"nodeType":"2939","endLine":181,"endColumn":62},{"ruleId":"2975","severity":1,"message":"2976","line":62,"column":15,"nodeType":"2977","messageId":"2978","endLine":62,"endColumn":20},{"ruleId":"2922","severity":1,"message":"3192","line":359,"column":13,"nodeType":"2924","messageId":"2925","endLine":359,"endColumn":24},{"ruleId":"2948","severity":1,"message":"3189","line":396,"column":29,"nodeType":"2924","messageId":"2950","endLine":396,"endColumn":37},{"ruleId":"2922","severity":1,"message":"3142","line":452,"column":15,"nodeType":"2924","messageId":"2925","endLine":452,"endColumn":23},{"ruleId":"2922","severity":1,"message":"2987","line":458,"column":15,"nodeType":"2924","messageId":"2925","endLine":458,"endColumn":24},{"ruleId":"2937","severity":1,"message":"2938","line":514,"column":37,"nodeType":"2939","endLine":514,"endColumn":141},{"ruleId":"2922","severity":1,"message":"3108","line":531,"column":9,"nodeType":"2924","messageId":"2925","endLine":531,"endColumn":13},{"ruleId":"2975","severity":1,"message":"2984","line":33,"column":9,"nodeType":"2977","messageId":"2978","endLine":33,"endColumn":17},{"ruleId":"2922","severity":1,"message":"2944","line":110,"column":9,"nodeType":"2924","messageId":"2925","endLine":110,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3116","line":122,"column":9,"nodeType":"2924","messageId":"2925","endLine":122,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3198","line":123,"column":9,"nodeType":"2924","messageId":"2925","endLine":123,"endColumn":39},{"ruleId":"2922","severity":1,"message":"3124","line":125,"column":9,"nodeType":"2924","messageId":"2925","endLine":125,"endColumn":17},{"ruleId":"2937","severity":1,"message":"2938","line":195,"column":32,"nodeType":"2939","endLine":195,"endColumn":91},{"ruleId":"2937","severity":1,"message":"2938","line":199,"column":31,"nodeType":"2939","endLine":199,"endColumn":90},{"ruleId":"2993","severity":1,"message":"2994","line":308,"column":92,"nodeType":"2995","endLine":308,"endColumn":125},{"ruleId":"2937","severity":1,"message":"2938","line":312,"column":60,"nodeType":"2939","endLine":312,"endColumn":123},{"ruleId":"2937","severity":1,"message":"2938","line":314,"column":61,"nodeType":"2939","endLine":314,"endColumn":161},{"ruleId":"2937","severity":1,"message":"2938","line":318,"column":61,"nodeType":"2939","endLine":318,"endColumn":124},{"ruleId":"2945","severity":1,"message":"2946","line":329,"column":51,"nodeType":"2939","endLine":329,"endColumn":164},{"ruleId":"2937","severity":1,"message":"2938","line":333,"column":58,"nodeType":"2939","endLine":333,"endColumn":121},{"ruleId":"2937","severity":1,"message":"2938","line":335,"column":59,"nodeType":"2939","endLine":335,"endColumn":146},{"ruleId":"2937","severity":1,"message":"2938","line":339,"column":59,"nodeType":"2939","endLine":339,"endColumn":122},{"ruleId":"2937","severity":1,"message":"2938","line":411,"column":79,"nodeType":"2939","endLine":411,"endColumn":115},{"ruleId":"2945","severity":1,"message":"2946","line":431,"column":53,"nodeType":"2939","endLine":431,"endColumn":179},{"ruleId":"2937","severity":1,"message":"2938","line":435,"column":63,"nodeType":"2939","endLine":435,"endColumn":126},{"ruleId":"2937","severity":1,"message":"2938","line":437,"column":65,"nodeType":"2939","endLine":437,"endColumn":153},{"ruleId":"2937","severity":1,"message":"2938","line":441,"column":64,"nodeType":"2939","endLine":441,"endColumn":127},{"ruleId":"2937","severity":1,"message":"2938","line":488,"column":41,"nodeType":"2939","endLine":488,"endColumn":72},{"ruleId":"2922","severity":1,"message":"3009","line":88,"column":9,"nodeType":"2924","messageId":"2925","endLine":88,"endColumn":14},{"ruleId":"2922","severity":1,"message":"3010","line":176,"column":13,"nodeType":"2924","messageId":"2925","endLine":176,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3009","line":66,"column":9,"nodeType":"2924","messageId":"2925","endLine":66,"endColumn":14},{"ruleId":"2922","severity":1,"message":"3010","line":111,"column":13,"nodeType":"2924","messageId":"2925","endLine":111,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3010","line":107,"column":13,"nodeType":"2924","messageId":"2925","endLine":107,"endColumn":18},{"ruleId":"2993","severity":1,"message":"2994","line":293,"column":23,"nodeType":"2995","endLine":293,"endColumn":97},{"ruleId":"2922","severity":1,"message":"3010","line":97,"column":13,"nodeType":"2924","messageId":"2925","endLine":97,"endColumn":18},{"ruleId":"2993","severity":1,"message":"2994","line":236,"column":29,"nodeType":"2995","endLine":236,"endColumn":111},{"ruleId":"2993","severity":1,"message":"2994","line":242,"column":25,"nodeType":"2995","endLine":242,"endColumn":99},{"ruleId":"2993","severity":1,"message":"2994","line":247,"column":25,"nodeType":"2995","endLine":247,"endColumn":96},{"ruleId":"2993","severity":1,"message":"2994","line":252,"column":27,"nodeType":"2995","endLine":252,"endColumn":96},{"ruleId":"2993","severity":1,"message":"2994","line":256,"column":27,"nodeType":"2995","endLine":256,"endColumn":116},{"ruleId":"2993","severity":1,"message":"2994","line":261,"column":27,"nodeType":"2995","endLine":261,"endColumn":99},{"ruleId":"2993","severity":1,"message":"2994","line":267,"column":27,"nodeType":"2995","endLine":267,"endColumn":96},{"ruleId":"2993","severity":1,"message":"2994","line":271,"column":25,"nodeType":"2995","endLine":271,"endColumn":108},{"ruleId":"2993","severity":1,"message":"2994","line":275,"column":27,"nodeType":"2995","endLine":275,"endColumn":100},{"ruleId":"2993","severity":1,"message":"2994","line":279,"column":27,"nodeType":"2995","endLine":279,"endColumn":103},{"ruleId":"2937","severity":1,"message":"2938","line":298,"column":27,"nodeType":"2939","endLine":298,"endColumn":50},{"ruleId":"2937","severity":1,"message":"2938","line":300,"column":27,"nodeType":"2939","endLine":300,"endColumn":60},{"ruleId":"2922","severity":1,"message":"3197","line":276,"column":17,"nodeType":"2924","messageId":"2925","endLine":276,"endColumn":20},{"ruleId":"2945","severity":1,"message":"2946","line":312,"column":41,"nodeType":"2939","endLine":312,"endColumn":123},{"ruleId":"2975","severity":1,"message":"2976","line":67,"column":13,"nodeType":"2977","messageId":"2978","endLine":67,"endColumn":18},{"ruleId":"2948","severity":1,"message":"3188","line":150,"column":24,"nodeType":"2924","messageId":"2950","endLine":150,"endColumn":25},{"ruleId":"2948","severity":1,"message":"3189","line":150,"column":31,"nodeType":"2924","messageId":"2950","endLine":150,"endColumn":39},{"ruleId":"2948","severity":1,"message":"3190","line":152,"column":19,"nodeType":"2924","messageId":"2950","endLine":152,"endColumn":23},{"ruleId":"2948","severity":1,"message":"3191","line":375,"column":23,"nodeType":"2924","messageId":"2950","endLine":375,"endColumn":29},{"ruleId":"2948","severity":1,"message":"3191","line":389,"column":25,"nodeType":"2924","messageId":"2950","endLine":389,"endColumn":31},{"ruleId":"2948","severity":1,"message":"3191","line":397,"column":21,"nodeType":"2924","messageId":"2950","endLine":397,"endColumn":27},{"ruleId":"2948","severity":1,"message":"3191","line":403,"column":23,"nodeType":"2924","messageId":"2950","endLine":403,"endColumn":29},{"ruleId":"2948","severity":1,"message":"3191","line":412,"column":27,"nodeType":"2924","messageId":"2950","endLine":412,"endColumn":33},{"ruleId":"2948","severity":1,"message":"3191","line":421,"column":25,"nodeType":"2924","messageId":"2950","endLine":421,"endColumn":31},{"ruleId":"2948","severity":1,"message":"3191","line":433,"column":27,"nodeType":"2924","messageId":"2950","endLine":433,"endColumn":33},{"ruleId":"2948","severity":1,"message":"3191","line":632,"column":19,"nodeType":"2924","messageId":"2950","endLine":632,"endColumn":25},{"ruleId":"2922","severity":1,"message":"3192","line":685,"column":13,"nodeType":"2924","messageId":"2925","endLine":685,"endColumn":24},{"ruleId":"2948","severity":1,"message":"3189","line":732,"column":27,"nodeType":"2924","messageId":"2950","endLine":732,"endColumn":35},{"ruleId":"2922","severity":1,"message":"3193","line":781,"column":23,"nodeType":"2924","messageId":"2925","endLine":781,"endColumn":26},{"ruleId":"2922","severity":1,"message":"2969","line":809,"column":19,"nodeType":"2924","messageId":"2925","endLine":809,"endColumn":27},{"ruleId":"2922","severity":1,"message":"3108","line":813,"column":19,"nodeType":"2924","messageId":"2925","endLine":813,"endColumn":23},{"ruleId":"2922","severity":1,"message":"3142","line":884,"column":15,"nodeType":"2924","messageId":"2925","endLine":884,"endColumn":23},{"ruleId":"2922","severity":1,"message":"2987","line":890,"column":15,"nodeType":"2924","messageId":"2925","endLine":890,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3194","line":932,"column":15,"nodeType":"2924","messageId":"2925","endLine":932,"endColumn":25},{"ruleId":"2922","severity":1,"message":"3195","line":939,"column":11,"nodeType":"2924","messageId":"2925","endLine":939,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3196","line":965,"column":11,"nodeType":"2924","messageId":"2925","endLine":965,"endColumn":18},{"ruleId":"2937","severity":1,"message":"2938","line":1060,"column":43,"nodeType":"2939","endLine":1060,"endColumn":179},{"ruleId":"2945","severity":1,"message":"2946","line":1092,"column":43,"nodeType":"2939","endLine":1092,"endColumn":184},{"ruleId":"2945","severity":1,"message":"2946","line":1109,"column":41,"nodeType":"2939","endLine":1109,"endColumn":181},{"ruleId":"2922","severity":1,"message":"3141","line":229,"column":12,"nodeType":"2924","messageId":"2925","endLine":229,"endColumn":28},{"ruleId":"2922","severity":1,"message":"3142","line":230,"column":11,"nodeType":"2924","messageId":"2925","endLine":230,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2987","line":236,"column":11,"nodeType":"2924","messageId":"2925","endLine":236,"endColumn":20},{"ruleId":"2937","severity":1,"message":"2938","line":313,"column":20,"nodeType":"2939","endLine":313,"endColumn":48},{"ruleId":"2922","severity":1,"message":"3220","line":95,"column":27,"nodeType":"2924","messageId":"2925","endLine":95,"endColumn":31},{"ruleId":"2948","severity":1,"message":"3221","line":182,"column":13,"nodeType":"2924","messageId":"2950","endLine":182,"endColumn":14},{"ruleId":"2922","severity":1,"message":"3220","line":195,"column":17,"nodeType":"2924","messageId":"2925","endLine":195,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3222","line":367,"column":25,"nodeType":"2924","messageId":"2925","endLine":367,"endColumn":33},{"ruleId":"2922","severity":1,"message":"2965","line":113,"column":13,"nodeType":"2924","messageId":"2925","endLine":113,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3236","line":137,"column":13,"nodeType":"2924","messageId":"2925","endLine":137,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3243","line":622,"column":12,"nodeType":"2924","messageId":"2925","endLine":622,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3244","line":623,"column":12,"nodeType":"2924","messageId":"2925","endLine":623,"endColumn":15},{"ruleId":"2922","severity":1,"message":"3241","line":648,"column":7,"nodeType":"2924","messageId":"2925","endLine":648,"endColumn":10},{"ruleId":"2922","severity":1,"message":"2987","line":673,"column":15,"nodeType":"2924","messageId":"2925","endLine":673,"endColumn":24},{"ruleId":"3245","severity":1,"message":"3246","line":1043,"column":75,"nodeType":"2995","endLine":1043,"endColumn":109},{"ruleId":"3132","severity":1,"message":"3242","line":1185,"column":79,"nodeType":"2939","endLine":1193,"endColumn":85},{"ruleId":"3132","severity":1,"message":"3242","line":1200,"column":83,"nodeType":"2939","endLine":1208,"endColumn":85},{"ruleId":"2922","severity":1,"message":"2965","line":130,"column":13,"nodeType":"2924","messageId":"2925","endLine":130,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3236","line":143,"column":13,"nodeType":"2924","messageId":"2925","endLine":143,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3153","line":342,"column":17,"nodeType":"2924","messageId":"2925","endLine":342,"endColumn":25},{"ruleId":"2922","severity":1,"message":"3237","line":464,"column":13,"nodeType":"2924","messageId":"2925","endLine":464,"endColumn":22},{"ruleId":"2922","severity":1,"message":"3238","line":465,"column":13,"nodeType":"2924","messageId":"2925","endLine":465,"endColumn":22},{"ruleId":"2922","severity":1,"message":"3239","line":604,"column":13,"nodeType":"2924","messageId":"2925","endLine":604,"endColumn":25},{"ruleId":"2922","severity":1,"message":"2986","line":632,"column":20,"nodeType":"2924","messageId":"2925","endLine":632,"endColumn":28},{"ruleId":"2922","severity":1,"message":"3240","line":751,"column":11,"nodeType":"2924","messageId":"2925","endLine":751,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3240","line":957,"column":11,"nodeType":"2924","messageId":"2925","endLine":957,"endColumn":17},{"ruleId":"2922","severity":1,"message":"2986","line":1205,"column":20,"nodeType":"2924","messageId":"2925","endLine":1205,"endColumn":28},{"ruleId":"2922","severity":1,"message":"3220","line":1283,"column":38,"nodeType":"2924","messageId":"2925","endLine":1283,"endColumn":42},{"ruleId":"2922","severity":1,"message":"3241","line":1326,"column":7,"nodeType":"2924","messageId":"2925","endLine":1326,"endColumn":10},{"ruleId":"2922","severity":1,"message":"2987","line":1341,"column":15,"nodeType":"2924","messageId":"2925","endLine":1341,"endColumn":24},{"ruleId":"3132","severity":1,"message":"3242","line":1706,"column":43,"nodeType":"2939","endLine":1712,"endColumn":109},{"ruleId":"2922","severity":1,"message":"2958","line":2,"column":9,"nodeType":"2924","messageId":"2925","endLine":2,"endColumn":13},{"ruleId":"2922","severity":1,"message":"2928","line":2,"column":14,"nodeType":"2924","messageId":"2925","endLine":2,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2929","line":2,"column":37,"nodeType":"2924","messageId":"2925","endLine":2,"endColumn":43},{"ruleId":"2922","severity":1,"message":"2930","line":2,"column":44,"nodeType":"2924","messageId":"2925","endLine":2,"endColumn":50},{"ruleId":"2922","severity":1,"message":"2931","line":3,"column":9,"nodeType":"2924","messageId":"2925","endLine":3,"endColumn":12},{"ruleId":"2922","severity":1,"message":"2932","line":3,"column":13,"nodeType":"2924","messageId":"2925","endLine":3,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2933","line":3,"column":20,"nodeType":"2924","messageId":"2925","endLine":3,"endColumn":26},{"ruleId":"2922","severity":1,"message":"2934","line":4,"column":8,"nodeType":"2924","messageId":"2925","endLine":4,"endColumn":17},{"ruleId":"2922","severity":1,"message":"2935","line":5,"column":8,"nodeType":"2924","messageId":"2925","endLine":5,"endColumn":19},{"ruleId":"2922","severity":1,"message":"3047","line":6,"column":8,"nodeType":"2924","messageId":"2925","endLine":6,"endColumn":16},{"ruleId":"2922","severity":1,"message":"3223","line":7,"column":8,"nodeType":"2924","messageId":"2925","endLine":7,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3028","line":8,"column":8,"nodeType":"2924","messageId":"2925","endLine":8,"endColumn":29},{"ruleId":"2922","severity":1,"message":"3224","line":10,"column":8,"nodeType":"2924","messageId":"2925","endLine":10,"endColumn":19},{"ruleId":"2922","severity":1,"message":"3062","line":15,"column":5,"nodeType":"2924","messageId":"2925","endLine":15,"endColumn":14},{"ruleId":"2922","severity":1,"message":"3225","line":16,"column":5,"nodeType":"2924","messageId":"2925","endLine":16,"endColumn":15},{"ruleId":"2922","severity":1,"message":"2936","line":17,"column":5,"nodeType":"2924","messageId":"2925","endLine":17,"endColumn":14},{"ruleId":"2922","severity":1,"message":"3060","line":18,"column":5,"nodeType":"2924","messageId":"2925","endLine":18,"endColumn":16},{"ruleId":"2922","severity":1,"message":"3226","line":20,"column":8,"nodeType":"2924","messageId":"2925","endLine":20,"endColumn":11},{"ruleId":"2922","severity":1,"message":"3227","line":22,"column":8,"nodeType":"2924","messageId":"2925","endLine":22,"endColumn":17},{"ruleId":"2922","severity":1,"message":"2944","line":77,"column":9,"nodeType":"2924","messageId":"2925","endLine":77,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3116","line":91,"column":9,"nodeType":"2924","messageId":"2925","endLine":91,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3198","line":92,"column":9,"nodeType":"2924","messageId":"2925","endLine":92,"endColumn":39},{"ruleId":"2922","severity":1,"message":"3124","line":95,"column":9,"nodeType":"2924","messageId":"2925","endLine":95,"endColumn":17},{"ruleId":"2922","severity":1,"message":"3228","line":99,"column":9,"nodeType":"2924","messageId":"2925","endLine":99,"endColumn":22},{"ruleId":"2922","severity":1,"message":"3229","line":120,"column":9,"nodeType":"2924","messageId":"2925","endLine":120,"endColumn":23},{"ruleId":"2922","severity":1,"message":"3230","line":123,"column":9,"nodeType":"2924","messageId":"2925","endLine":123,"endColumn":19},{"ruleId":"2922","severity":1,"message":"3231","line":125,"column":10,"nodeType":"2924","messageId":"2925","endLine":125,"endColumn":22},{"ruleId":"2922","severity":1,"message":"3232","line":127,"column":10,"nodeType":"2924","messageId":"2925","endLine":127,"endColumn":27},{"ruleId":"2922","severity":1,"message":"3233","line":129,"column":10,"nodeType":"2924","messageId":"2925","endLine":129,"endColumn":33},{"ruleId":"2922","severity":1,"message":"2989","line":135,"column":8,"nodeType":"2924","messageId":"2925","endLine":135,"endColumn":9},{"ruleId":"2922","severity":1,"message":"3234","line":143,"column":6,"nodeType":"2924","messageId":"2925","endLine":143,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3235","line":170,"column":11,"nodeType":"2924","messageId":"2925","endLine":170,"endColumn":18},{"ruleId":"2945","severity":1,"message":"2946","line":202,"column":28,"nodeType":"2939","endLine":202,"endColumn":106},{"ruleId":"2945","severity":1,"message":"2946","line":209,"column":28,"nodeType":"2939","endLine":209,"endColumn":117},{"ruleId":"2945","severity":1,"message":"2946","line":221,"column":30,"nodeType":"2939","endLine":221,"endColumn":132},{"ruleId":"2937","severity":1,"message":"2938","line":245,"column":18,"nodeType":"2939","endLine":245,"endColumn":83},{"ruleId":"2937","severity":1,"message":"2938","line":311,"column":25,"nodeType":"2939","endLine":311,"endColumn":48},{"ruleId":"2937","severity":1,"message":"2938","line":318,"column":79,"nodeType":"2939","endLine":318,"endColumn":115},{"ruleId":"2937","severity":1,"message":"2938","line":409,"column":34,"nodeType":"2939","endLine":409,"endColumn":107},{"ruleId":"2975","severity":1,"message":"2976","line":54,"column":13,"nodeType":"2977","messageId":"2978","endLine":54,"endColumn":18},{"ruleId":"2948","severity":1,"message":"3189","line":484,"column":29,"nodeType":"2924","messageId":"2950","endLine":484,"endColumn":37},{"ruleId":"2922","severity":1,"message":"3142","line":533,"column":15,"nodeType":"2924","messageId":"2925","endLine":533,"endColumn":23},{"ruleId":"2922","severity":1,"message":"2987","line":539,"column":15,"nodeType":"2924","messageId":"2925","endLine":539,"endColumn":24},{"ruleId":"2937","severity":1,"message":"2938","line":606,"column":37,"nodeType":"2939","endLine":606,"endColumn":141},{"ruleId":"2975","severity":1,"message":"2976","line":66,"column":13,"nodeType":"2977","messageId":"2978","endLine":66,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3193","line":341,"column":31,"nodeType":"2924","messageId":"2925","endLine":341,"endColumn":34},{"ruleId":"2922","severity":1,"message":"3217","line":343,"column":31,"nodeType":"2924","messageId":"2925","endLine":343,"endColumn":34},{"ruleId":"2922","severity":1,"message":"3192","line":463,"column":13,"nodeType":"2924","messageId":"2925","endLine":463,"endColumn":24},{"ruleId":"2948","severity":1,"message":"3189","line":515,"column":29,"nodeType":"2924","messageId":"2950","endLine":515,"endColumn":37},{"ruleId":"2922","severity":1,"message":"3193","line":565,"column":23,"nodeType":"2924","messageId":"2925","endLine":565,"endColumn":26},{"ruleId":"2922","severity":1,"message":"2969","line":591,"column":19,"nodeType":"2924","messageId":"2925","endLine":591,"endColumn":27},{"ruleId":"2922","severity":1,"message":"3108","line":595,"column":19,"nodeType":"2924","messageId":"2925","endLine":595,"endColumn":23},{"ruleId":"2922","severity":1,"message":"3142","line":668,"column":15,"nodeType":"2924","messageId":"2925","endLine":668,"endColumn":23},{"ruleId":"2922","severity":1,"message":"2987","line":674,"column":15,"nodeType":"2924","messageId":"2925","endLine":674,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3195","line":719,"column":11,"nodeType":"2924","messageId":"2925","endLine":719,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3196","line":745,"column":11,"nodeType":"2924","messageId":"2925","endLine":745,"endColumn":18},{"ruleId":"2937","severity":1,"message":"2938","line":846,"column":41,"nodeType":"2939","endLine":846,"endColumn":58},{"ruleId":"2922","severity":1,"message":"3217","line":151,"column":17,"nodeType":"2924","messageId":"2925","endLine":151,"endColumn":20},{"ruleId":"2922","severity":1,"message":"3192","line":219,"column":8,"nodeType":"2924","messageId":"2925","endLine":219,"endColumn":19},{"ruleId":"2948","severity":1,"message":"3189","line":247,"column":21,"nodeType":"2924","messageId":"2950","endLine":247,"endColumn":29},{"ruleId":"2922","severity":1,"message":"3193","line":268,"column":9,"nodeType":"2924","messageId":"2925","endLine":268,"endColumn":12},{"ruleId":"2937","severity":1,"message":"2938","line":388,"column":41,"nodeType":"2939","endLine":388,"endColumn":58},{"ruleId":"2922","severity":1,"message":"3142","line":404,"column":11,"nodeType":"2924","messageId":"2925","endLine":404,"endColumn":19},{"ruleId":"2922","severity":1,"message":"2987","line":410,"column":7,"nodeType":"2924","messageId":"2925","endLine":410,"endColumn":16},{"ruleId":"2975","severity":1,"message":"2976","line":66,"column":13,"nodeType":"2977","messageId":"2978","endLine":66,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3193","line":334,"column":31,"nodeType":"2924","messageId":"2925","endLine":334,"endColumn":34},{"ruleId":"2922","severity":1,"message":"3217","line":336,"column":31,"nodeType":"2924","messageId":"2925","endLine":336,"endColumn":34},{"ruleId":"2922","severity":1,"message":"3192","line":452,"column":13,"nodeType":"2924","messageId":"2925","endLine":452,"endColumn":24},{"ruleId":"2948","severity":1,"message":"3189","line":501,"column":29,"nodeType":"2924","messageId":"2950","endLine":501,"endColumn":37},{"ruleId":"2922","severity":1,"message":"3193","line":554,"column":23,"nodeType":"2924","messageId":"2925","endLine":554,"endColumn":26},{"ruleId":"2922","severity":1,"message":"2969","line":585,"column":19,"nodeType":"2924","messageId":"2925","endLine":585,"endColumn":27},{"ruleId":"2922","severity":1,"message":"3108","line":589,"column":19,"nodeType":"2924","messageId":"2925","endLine":589,"endColumn":23},{"ruleId":"2990","severity":1,"message":"3123","line":664,"column":22,"nodeType":"2992","messageId":"2978","endLine":664,"endColumn":24},{"ruleId":"2990","severity":1,"message":"3123","line":664,"column":40,"nodeType":"2992","messageId":"2978","endLine":664,"endColumn":42},{"ruleId":"2990","severity":1,"message":"3123","line":664,"column":59,"nodeType":"2992","messageId":"2978","endLine":664,"endColumn":61},{"ruleId":"2922","severity":1,"message":"3142","line":672,"column":15,"nodeType":"2924","messageId":"2925","endLine":672,"endColumn":23},{"ruleId":"2922","severity":1,"message":"2987","line":678,"column":15,"nodeType":"2924","messageId":"2925","endLine":678,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3195","line":723,"column":11,"nodeType":"2924","messageId":"2925","endLine":723,"endColumn":24},{"ruleId":"2922","severity":1,"message":"3196","line":749,"column":11,"nodeType":"2924","messageId":"2925","endLine":749,"endColumn":18},{"ruleId":"2937","severity":1,"message":"2938","line":850,"column":41,"nodeType":"2939","endLine":850,"endColumn":58},{"ruleId":"2960","severity":1,"message":"2961","line":4,"column":5,"nodeType":"2962","messageId":"2963","endLine":7,"endColumn":6},{"ruleId":"2922","severity":1,"message":"3181","line":20,"column":56,"nodeType":"2924","messageId":"2925","endLine":20,"endColumn":66},{"ruleId":"3155","severity":1,"message":"3156","line":180,"column":9,"nodeType":"2939","endLine":180,"endColumn":30},{"ruleId":"2922","severity":1,"message":"3192","line":480,"column":13,"nodeType":"2924","messageId":"2925","endLine":480,"endColumn":24},{"ruleId":"2948","severity":1,"message":"3189","line":516,"column":29,"nodeType":"2924","messageId":"2950","endLine":516,"endColumn":37},{"ruleId":"2922","severity":1,"message":"3142","line":566,"column":15,"nodeType":"2924","messageId":"2925","endLine":566,"endColumn":23},{"ruleId":"2922","severity":1,"message":"2987","line":572,"column":15,"nodeType":"2924","messageId":"2925","endLine":572,"endColumn":24},{"ruleId":"2937","severity":1,"message":"2938","line":639,"column":37,"nodeType":"2939","endLine":639,"endColumn":141},{"ruleId":"2922","severity":1,"message":"3220","line":115,"column":22,"nodeType":"2924","messageId":"2925","endLine":115,"endColumn":26},{"ruleId":"2948","severity":1,"message":"3221","line":446,"column":13,"nodeType":"2924","messageId":"2950","endLine":446,"endColumn":14},{"ruleId":"2948","severity":1,"message":"3251","line":107,"column":27,"nodeType":"2924","messageId":"2950","endLine":107,"endColumn":31},{"ruleId":"2948","severity":1,"message":"3252","line":112,"column":27,"nodeType":"2924","messageId":"2950","endLine":112,"endColumn":28},{"ruleId":"2948","severity":1,"message":"3251","line":119,"column":27,"nodeType":"2924","messageId":"2950","endLine":119,"endColumn":31},{"ruleId":"2948","severity":1,"message":"3252","line":126,"column":27,"nodeType":"2924","messageId":"2950","endLine":126,"endColumn":28},{"ruleId":"2948","severity":1,"message":"3251","line":135,"column":23,"nodeType":"2924","messageId":"2950","endLine":135,"endColumn":27},{"ruleId":"2948","severity":1,"message":"3221","line":157,"column":21,"nodeType":"2924","messageId":"2950","endLine":157,"endColumn":22},{"ruleId":"2948","severity":1,"message":"3253","line":162,"column":21,"nodeType":"2924","messageId":"2950","endLine":162,"endColumn":23},{"ruleId":"2948","severity":1,"message":"3221","line":174,"column":21,"nodeType":"2924","messageId":"2950","endLine":174,"endColumn":22},{"ruleId":"2922","severity":1,"message":"3220","line":199,"column":22,"nodeType":"2924","messageId":"2925","endLine":199,"endColumn":26},{"ruleId":"2922","severity":1,"message":"3220","line":282,"column":17,"nodeType":"2924","messageId":"2925","endLine":282,"endColumn":21},{"ruleId":"2948","severity":1,"message":"3251","line":598,"column":27,"nodeType":"2924","messageId":"2950","endLine":598,"endColumn":31},{"ruleId":"2948","severity":1,"message":"3252","line":603,"column":27,"nodeType":"2924","messageId":"2950","endLine":603,"endColumn":28},{"ruleId":"2948","severity":1,"message":"3251","line":610,"column":27,"nodeType":"2924","messageId":"2950","endLine":610,"endColumn":31},{"ruleId":"2948","severity":1,"message":"3252","line":617,"column":27,"nodeType":"2924","messageId":"2950","endLine":617,"endColumn":28},{"ruleId":"2948","severity":1,"message":"3251","line":626,"column":23,"nodeType":"2924","messageId":"2950","endLine":626,"endColumn":27},{"ruleId":"2948","severity":1,"message":"3221","line":648,"column":21,"nodeType":"2924","messageId":"2950","endLine":648,"endColumn":22},{"ruleId":"2948","severity":1,"message":"3253","line":653,"column":21,"nodeType":"2924","messageId":"2950","endLine":653,"endColumn":23},{"ruleId":"2948","severity":1,"message":"3221","line":662,"column":21,"nodeType":"2924","messageId":"2950","endLine":662,"endColumn":22},{"ruleId":"2948","severity":1,"message":"3221","line":671,"column":21,"nodeType":"2924","messageId":"2950","endLine":671,"endColumn":22},{"ruleId":"2948","severity":1,"message":"3221","line":680,"column":25,"nodeType":"2924","messageId":"2950","endLine":680,"endColumn":26},{"ruleId":"2948","severity":1,"message":"3221","line":690,"column":25,"nodeType":"2924","messageId":"2950","endLine":690,"endColumn":26},{"ruleId":"2948","severity":1,"message":"3221","line":701,"column":21,"nodeType":"2924","messageId":"2950","endLine":701,"endColumn":22},{"ruleId":"2922","severity":1,"message":"2965","line":83,"column":9,"nodeType":"2924","messageId":"2925","endLine":83,"endColumn":13},{"ruleId":"2922","severity":1,"message":"2987","line":224,"column":19,"nodeType":"2924","messageId":"2925","endLine":224,"endColumn":28},{"ruleId":"3245","severity":1,"message":"3246","line":439,"column":79,"nodeType":"2995","endLine":439,"endColumn":113},{"ruleId":"2922","severity":1,"message":"2965","line":100,"column":9,"nodeType":"2924","messageId":"2925","endLine":100,"endColumn":13},{"ruleId":"2922","severity":1,"message":"2987","line":237,"column":19,"nodeType":"2924","messageId":"2925","endLine":237,"endColumn":28},{"ruleId":"2937","severity":1,"message":"2938","line":132,"column":33,"nodeType":"2939","endLine":132,"endColumn":75},{"ruleId":"2937","severity":1,"message":"2938","line":145,"column":41,"nodeType":"2939","endLine":145,"endColumn":86},{"ruleId":"2937","severity":1,"message":"2938","line":157,"column":33,"nodeType":"2939","endLine":157,"endColumn":75},{"ruleId":"2937","severity":1,"message":"2938","line":163,"column":41,"nodeType":"2939","endLine":163,"endColumn":86},{"ruleId":"2937","severity":1,"message":"2938","line":182,"column":33,"nodeType":"2939","endLine":182,"endColumn":75},{"ruleId":"2937","severity":1,"message":"2938","line":198,"column":41,"nodeType":"2939","endLine":198,"endColumn":86},{"ruleId":"2937","severity":1,"message":"2938","line":210,"column":33,"nodeType":"2939","endLine":210,"endColumn":75},{"ruleId":"2937","severity":1,"message":"2938","line":216,"column":41,"nodeType":"2939","endLine":216,"endColumn":86},{"ruleId":"2922","severity":1,"message":"3254","line":123,"column":11,"nodeType":"2924","messageId":"2925","endLine":123,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3277","line":140,"column":13,"nodeType":"2924","messageId":"2925","endLine":140,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3266","line":171,"column":11,"nodeType":"2924","messageId":"2925","endLine":171,"endColumn":25},{"ruleId":"2922","severity":1,"message":"3254","line":123,"column":11,"nodeType":"2924","messageId":"2925","endLine":123,"endColumn":18},{"ruleId":"2922","severity":1,"message":"3277","line":140,"column":13,"nodeType":"2924","messageId":"2925","endLine":140,"endColumn":21},{"ruleId":"2922","severity":1,"message":"3266","line":171,"column":11,"nodeType":"2924","messageId":"2925","endLine":171,"endColumn":25},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'swDev' is defined but never used.","'email' is assigned a value but never used.","'Route' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Nav' is defined but never used.","'Navbar' is defined but never used.","'Button' is defined but never used.","'JoinModal' is defined but never used.","'SignInModal' is defined but never used.","'faTwitter' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'FacebookLogin' is defined but never used.","'InstagramLogin' is defined but never used.","'base_url' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'token' is assigned a value but never used.","no-redeclare","'JSONdata' is already defined.","redeclared","'xValue' is already defined.","'yValue' is already defined.","'InAppPurchaseTable' is assigned a value but never used.","'columns' is assigned a value but never used.","'charges' is assigned a value but never used.","'Wallet' is assigned a value but never used.","'PropTypes' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'value' is assigned a value but never used.","'data' is assigned a value but never used.","'isDataTable' is assigned a value but never used.","'table' is assigned a value but never used.","'id' is already defined.","'fileName' is assigned a value but never used.","'formData' is assigned a value but never used.","'dt1' is already defined.","'dt2' is already defined.","'date' is assigned a value but never used.","'dummyTable' is assigned a value but never used.","no-dupe-keys","Duplicate key 'title'.","ObjectExpression","unexpected","Duplicate key 'msg'.","'profile_pic' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Duplicate key 'JM_Email'.","Duplicate key 'JM_User_Profile_Url'.","'JSONdata' is assigned a value but never used.","'useStyles' is assigned a value but never used.","'CssAlert' is assigned a value but never used.","'h' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-useless-escape","Unnecessary escape character: \\'.","Literal","unnecessaryEscape",["3278","3279"],["3280","3281"],["3282","3283"],"'name' is assigned a value but never used.","'redirect_uri' is assigned a value but never used.","'facebookLoginUrl' is assigned a value but never used.","'instagramLoginUrl' is assigned a value but never used.","'checked' is assigned a value but never used.","'titleVal' is assigned a value but never used.","'index' is assigned a value but never used.","'files' is assigned a value but never used.","'inserted_id' is assigned a value but never used.","Unnecessary escape character: \\_.",["3284","3285"],["3286","3287"],"'valid' is assigned a value but never used.","'id' is assigned a value but never used.",["3288","3289"],"'isNumber' is assigned a value but never used.","'Validation' is assigned a value but never used.","'Redirect' is defined but never used.","'MainHeader' is defined but never used.","'PersonOutlineIcon' is defined but never used.","'ColorLensIcon' is defined but never used.","'TrendingUpIcon' is defined but never used.","'AddNewLink' is defined but never used.","'DirectAccess' is defined but never used.","'VideoLibraryIcon' is defined but never used.","'PlayCircleOutlineIcon' is defined but never used.","'VideocamIcon' is defined but never used.","'DuoIcon' is defined but never used.","'PhotoAlbumIcon' is defined but never used.","'VideoCallIcon' is defined but never used.","'CallIcon' is defined but never used.","'MessageIcon' is defined but never used.","'CardGiftcardIcon' is defined but never used.","'PlayCircleFilledIcon' is defined but never used.","'SocialWidget' is defined but never used.","'EditSocialWidget' is defined but never used.","'StackedLink' is defined but never used.","'LivePreview' is defined but never used.","'Radio' is defined but never used.","'EditStackedLink' is defined but never used.","'EmbedContent' is defined but never used.","'EditEmbedContent' is defined but never used.","'AudiotrackIcon' is defined but never used.","'EditPremiumFeature' is defined but never used.","'DoneIcon' is defined but never used.","'EditUnlockContent' is defined but never used.","'CameraAltIcon' is defined but never used.","'CameraAltOutlinedIcon' is defined but never used.","'PictureAsPdfOutlinedIcon' is defined but never used.","'DescriptionOutlinedIcon' is defined but never used.","'EditPopGift' is defined but never used.","'$' is defined but never used.","'EditEmbedContent2' is defined but never used.","'EditPremiumFeature2' is defined but never used.","'EditUnlockContent2' is defined but never used.","'RBCarousel' is defined but never used.","'Carousel' is defined but never used.","'faInstagram' is defined but never used.","'faFacebookF' is defined but never used.","'faYoutube' is defined but never used.","'faSnapchatGhost' is defined but never used.","'faLinkedinIn' is defined but never used.","'faTwitch' is defined but never used.","'faPinterestP' is defined but never used.","'faSpotify' is defined but never used.","'faGlobe' is defined but never used.","'faShoppingCart' is defined but never used.","'faEnvelope' is defined but never used.","'faHandPaper' is defined but never used.","'FacebookShareCount' is defined but never used.","'GooglePlusShareCount' is defined but never used.","'LinkedinShareCount' is defined but never used.","'PinterestShareCount' is defined but never used.","'VKShareCount' is defined but never used.","'OKShareCount' is defined but never used.","'RedditShareCount' is defined but never used.","'TumblrShareCount' is defined but never used.","'GooglePlusShareButton' is defined but never used.","'VKShareButton' is defined but never used.","'OKShareButton' is defined but never used.","'TumblrShareButton' is defined but never used.","'LivejournalShareButton' is defined but never used.","'MailruShareButton' is defined but never used.","'ViberShareButton' is defined but never used.","'WorkplaceShareButton' is defined but never used.","'GooglePlusIcon' is defined but never used.","'VKIcon' is defined but never used.","'OKIcon' is defined but never used.","'TumblrIcon' is defined but never used.","'LivejournalIcon' is defined but never used.","'MailruIcon' is defined but never used.","'ViberIcon' is defined but never used.","'WorkplaceIcon' is defined but never used.","'AddIcCallOutlined' is defined but never used.","'icon_left' is assigned a value but never used.","'icon_right' is assigned a value but never used.","'default_image1' is assigned a value but never used.","'default_image2' is assigned a value but never used.","'default_image3' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'j'.","ArrowFunctionExpression","unsafeRefs","Function declared in a loop contains unsafe references to variable(s) 'k'.","'JM_Referral' is assigned a value but never used.","'type' is assigned a value but never used.",["3290","3291"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","Duplicate key 'TM_Bio_Color'.","'timeInterval' is assigned a value but never used.","'imagePath' is assigned a value but never used.","'linkPath' is assigned a value but never used.","'isRequestForChangeUrl' is assigned a value but never used.","'JM_NewsLetter_Active' is assigned a value but never used.","'messageBar' is assigned a value but never used.","'carousel' is assigned a value but never used.","'AttachMoneyIcon' is defined but never used.","'Popover' is defined but never used.","Expected '===' and instead saw '=='.","'JM_Email' is assigned a value but never used.","'category_master' is assigned a value but never used.","'embed_content' is assigned a value but never used.","'products' is assigned a value but never used.","'style_noImage' is assigned a value but never used.","'style_withImage' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","react/jsx-pascal-case","Imported JSX component Profile_Gift must be in PascalCase or SCREAMING_SNAKE_CASE","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["3292","3293"],"'JM_Gift_Active' is assigned a value but never used.","'code' is assigned a value but never used.","'uploadPercentage' is assigned a value but never used.","'longText' is assigned a value but never used.","'chargesMessage' is assigned a value but never used.","'HtmlTooltip' is assigned a value but never used.","'iconStyle' is assigned a value but never used.","'chargesStyle' is assigned a value but never used.","'useState' is defined but never used.","'Form' is defined but never used.","'Calendar' is defined but never used.","'momentLocalizer' is defined but never used.","'monthAndYear' is assigned a value but never used.","Function declared in a loop contains unsafe references to variable(s) 'date'.","'dropdown' is assigned a value but never used.","'events' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'stringTime' is assigned a value but never used.","'startHr' is assigned a value but never used.","'startMin' is assigned a value but never used.","'endHr' is assigned a value but never used.","'endMin' is assigned a value but never used.","'startTime' is assigned a value but never used.","'endTime' is assigned a value but never used.","no-useless-rename","Destructuring assignment wrapperSelector unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"3294","text":"3295"},"Destructuring assignment selector unnecessarily renamed.",{"range":"3296","text":"3297"},"Destructuring assignment contentSelector unnecessarily renamed.",{"range":"3298","text":"3299"},"Destructuring assignment buttonLeftSelector unnecessarily renamed.",{"range":"3300","text":"3301"},"Destructuring assignment buttonRightSelector unnecessarily renamed.",{"range":"3302","text":"3303"},"Destructuring assignment scrollStep unnecessarily renamed.",{"range":"3304","text":"3305"},"'navScrollerTest' is assigned a value but never used.","'Component' is defined but never used.","'lebelsView' is assigned a value but never used.","no-native-reassign",["3306"],"no-negated-in-lhs",["3307"],"'makeStyles' is defined but never used.","'Icon' is defined but never used.","'i' is already defined.","'numFiles' is already defined.","'file' is already defined.","'errMsg' is already defined.","'chargesInfo' is assigned a value but never used.","'ins' is assigned a value but never used.","'radioStyle' is assigned a value but never used.","'typeOfProduct' is assigned a value but never used.","'popover' is assigned a value but never used.","'len' is assigned a value but never used.","'JM_User_Profile_Url_plus_JM_ID' is assigned a value but never used.","'mystyleGift' is assigned a value but never used.","'productList' is assigned a value but never used.","'data' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'apiKey' is assigned a value but never used.","'h' is already defined.","'w' is already defined.","'scrollHeight' is assigned a value but never used.","Unnecessary escape character: \\+.",["3308","3309"],"Unnecessary escape character: \\..",["3310","3311"],["3312","3313"],"'newhours' is already defined.","'meridiem' is already defined.",["3314","3315"],"'arr' is already defined.","Imported JSX component Header_Updation must be in PascalCase or SCREAMING_SNAKE_CASE","'arr' is assigned a value but never used.","jsx-a11y/no-distracting-elements","Do not use <marquee> elements as they can create visual accessibility issues and are deprecated.","'resp' is assigned a value but never used.","'p' is already defined.","'data_Dum' is assigned a value but never used.","'ChatOutlinedIcon' is defined but never used.","'ReactPlayer' is defined but never used.","'faFacebook' is defined but never used.","'Buy' is defined but never used.","'ContactUs' is defined but never used.","'JM_Gift_Title' is assigned a value but never used.","'highlightColor' is assigned a value but never used.","'item_style' is assigned a value but never used.","'TM_Bio_Color' is assigned a value but never used.","'item_border_color' is assigned a value but never used.","'TM_Thumbnail_Icon_Color' is assigned a value but never used.","'TM_Footer_Color' is assigned a value but never used.","'mystyle' is assigned a value but never used.","'data1' is assigned a value but never used.","'file_name' is assigned a value but never used.","'file_type' is assigned a value but never used.","'responseData' is assigned a value but never used.","'isFree' is assigned a value but never used.","'src' is assigned a value but never used.","Imported JSX component Checkout_videoSession must be in PascalCase or SCREAMING_SNAKE_CASE","'start' is assigned a value but never used.","'end' is assigned a value but never used.","react/style-prop-object","Style prop value must be an object",["3316","3317"],["3318","3319"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'iDiv' is already defined.","'a' is already defined.","'a1' is already defined.","'tabView' is assigned a value but never used.",["3306"],["3307"],"'GoogleLogout' is defined but never used.",["3320","3321"],["3322","3323"],["3324","3325"],["3326","3327"],["3328","3329"],["3330","3331"],["3332","3333"],["3334","3335"],"'exploreContent' is assigned a value but never used.",{"range":"3336","text":"3295"},{"range":"3337","text":"3297"},{"range":"3338","text":"3299"},{"range":"3339","text":"3301"},{"range":"3340","text":"3303"},{"range":"3341","text":"3305"},["3342","3343"],["3344","3345"],["3346","3347"],["3348","3349"],"'root_url' is assigned a value but never used.",{"messageId":"3350","fix":"3351","desc":"3352"},{"messageId":"3353","fix":"3354","desc":"3355"},{"messageId":"3350","fix":"3356","desc":"3352"},{"messageId":"3353","fix":"3357","desc":"3355"},{"messageId":"3350","fix":"3358","desc":"3352"},{"messageId":"3353","fix":"3359","desc":"3355"},{"messageId":"3350","fix":"3360","desc":"3352"},{"messageId":"3353","fix":"3361","desc":"3355"},{"messageId":"3350","fix":"3362","desc":"3352"},{"messageId":"3353","fix":"3363","desc":"3355"},{"messageId":"3350","fix":"3364","desc":"3352"},{"messageId":"3353","fix":"3365","desc":"3355"},{"messageId":"3350","fix":"3366","desc":"3352"},{"messageId":"3353","fix":"3367","desc":"3355"},{"messageId":"3350","fix":"3368","desc":"3352"},{"messageId":"3353","fix":"3369","desc":"3355"},[314,372],"wrapperSelector = \".nav-scroller-wrapper\"",[393,429],"selector = \".nav-scroller\"",[450,508],"contentSelector = \".nav-scroller-content\"",[529,595],"buttonLeftSelector = \".nav-scroller-btn--left\"",[616,685],"buttonRightSelector = \".nav-scroller-btn--right\"",[706,733],"scrollStep = 75","no-global-assign","no-unsafe-negation",{"messageId":"3350","fix":"3370","desc":"3352"},{"messageId":"3353","fix":"3371","desc":"3355"},{"messageId":"3350","fix":"3372","desc":"3352"},{"messageId":"3353","fix":"3373","desc":"3355"},{"messageId":"3350","fix":"3374","desc":"3352"},{"messageId":"3353","fix":"3375","desc":"3355"},{"messageId":"3350","fix":"3376","desc":"3352"},{"messageId":"3353","fix":"3377","desc":"3355"},{"messageId":"3350","fix":"3378","desc":"3352"},{"messageId":"3353","fix":"3379","desc":"3355"},{"messageId":"3350","fix":"3380","desc":"3352"},{"messageId":"3353","fix":"3381","desc":"3355"},{"messageId":"3350","fix":"3382","desc":"3352"},{"messageId":"3353","fix":"3383","desc":"3355"},{"messageId":"3350","fix":"3384","desc":"3352"},{"messageId":"3353","fix":"3385","desc":"3355"},{"messageId":"3350","fix":"3386","desc":"3352"},{"messageId":"3353","fix":"3387","desc":"3355"},{"messageId":"3350","fix":"3388","desc":"3352"},{"messageId":"3353","fix":"3389","desc":"3355"},{"messageId":"3350","fix":"3390","desc":"3352"},{"messageId":"3353","fix":"3391","desc":"3355"},{"messageId":"3350","fix":"3392","desc":"3352"},{"messageId":"3353","fix":"3393","desc":"3355"},{"messageId":"3350","fix":"3394","desc":"3352"},{"messageId":"3353","fix":"3395","desc":"3355"},{"messageId":"3350","fix":"3396","desc":"3352"},{"messageId":"3353","fix":"3397","desc":"3355"},[314,372],[393,429],[450,508],[529,595],[616,685],[706,733],{"messageId":"3350","fix":"3398","desc":"3352"},{"messageId":"3353","fix":"3399","desc":"3355"},{"messageId":"3350","fix":"3400","desc":"3352"},{"messageId":"3353","fix":"3401","desc":"3355"},{"messageId":"3350","fix":"3402","desc":"3352"},{"messageId":"3353","fix":"3403","desc":"3355"},{"messageId":"3350","fix":"3404","desc":"3352"},{"messageId":"3353","fix":"3405","desc":"3355"},"removeEscape",{"range":"3406","text":"3407"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"3408","text":"3409"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"3410","text":"3407"},{"range":"3411","text":"3409"},{"range":"3412","text":"3407"},{"range":"3413","text":"3409"},{"range":"3414","text":"3407"},{"range":"3415","text":"3409"},{"range":"3416","text":"3407"},{"range":"3417","text":"3409"},{"range":"3418","text":"3407"},{"range":"3419","text":"3409"},{"range":"3420","text":"3407"},{"range":"3421","text":"3409"},{"range":"3422","text":"3407"},{"range":"3423","text":"3409"},{"range":"3424","text":"3407"},{"range":"3425","text":"3409"},{"range":"3426","text":"3407"},{"range":"3427","text":"3409"},{"range":"3428","text":"3407"},{"range":"3429","text":"3409"},{"range":"3430","text":"3407"},{"range":"3431","text":"3409"},{"range":"3432","text":"3407"},{"range":"3433","text":"3409"},{"range":"3434","text":"3407"},{"range":"3435","text":"3409"},{"range":"3436","text":"3407"},{"range":"3437","text":"3409"},{"range":"3438","text":"3407"},{"range":"3439","text":"3409"},{"range":"3440","text":"3407"},{"range":"3441","text":"3409"},{"range":"3442","text":"3407"},{"range":"3443","text":"3409"},{"range":"3444","text":"3407"},{"range":"3445","text":"3409"},{"range":"3446","text":"3407"},{"range":"3447","text":"3409"},{"range":"3448","text":"3407"},{"range":"3449","text":"3409"},{"range":"3450","text":"3407"},{"range":"3451","text":"3409"},{"range":"3452","text":"3407"},{"range":"3453","text":"3409"},{"range":"3454","text":"3407"},{"range":"3455","text":"3409"},{"range":"3456","text":"3407"},{"range":"3457","text":"3409"},{"range":"3458","text":"3407"},{"range":"3459","text":"3409"},[9546,9547],"",[9546,9546],"\\",[9636,9637],[9636,9636],[9726,9727],[9726,9726],[9804,9805],[9804,9804],[10108,10109],[10108,10108],[29208,29209],[29208,29208],[45194,45195],[45194,45194],[49077,49078],[49077,49077],[11341,11342],[11341,11341],[11365,11366],[11365,11365],[11381,11382],[11381,11381],[16795,16796],[16795,16795],[2232,2233],[2232,2232],[2248,2249],[2248,2248],[10214,10215],[10214,10214],[10520,10521],[10520,10520],[31178,31179],[31178,31178],[9546,9547],[9546,9546],[9636,9637],[9636,9636],[9726,9727],[9726,9726],[49056,49057],[49056,49056],[45194,45195],[45194,45194],[11215,11216],[11215,11215],[11239,11240],[11239,11239],[11255,11256],[11255,11255],[16669,16670],[16669,16669]]